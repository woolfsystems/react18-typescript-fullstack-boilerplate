{"/home/wintermute/workspace/quickdash/playwright.config.ts":{"path":"/home/wintermute/workspace/quickdash/playwright.config.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":12},"end":{"line":8,"column":39}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"4":{"start":{"line":16,"column":24},"end":{"line":19,"column":1}},"5":{"start":{"line":21,"column":13},"end":{"line":21,"column":55}},"6":{"start":{"line":21,"column":20},"end":{"line":21,"column":55}},"7":{"start":{"line":23,"column":26},"end":{"line":23,"column":89}},"8":{"start":{"line":28,"column":15},"end":{"line":127,"column":1}},"9":{"start":{"line":128,"column":15},"end":{"line":128,"column":21}},"10":{"start":{"line":129,"column":0},"end":{"line":129,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":13},"end":{"line":21,"column":14}},"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":55}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":48,"column":11},"end":{"line":48,"column":33}},"type":"cond-expr","locations":[{"start":{"line":48,"column":28},"end":{"line":48,"column":29}},{"start":{"line":48,"column":32},"end":{"line":48,"column":33}}],"line":48},"1":{"loc":{"start":{"line":51,"column":11},"end":{"line":51,"column":41}},"type":"cond-expr","locations":[{"start":{"line":51,"column":28},"end":{"line":51,"column":29}},{"start":{"line":51,"column":32},"end":{"line":51,"column":41}}],"line":51}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1},"b":{"0":[0,1],"1":[0,1]},"inputSourceMap":{"version":3,"names":["require","config","httpCredentials","username","process","env","USER_NAME","password","USER_PASS","btoa","str","Buffer","from","toString","credentialsBase64","testDir","timeout","expect","fullyParallel","forbidOnly","CI","retries","workers","undefined","reporter","use","actionTimeout","baseURL","extraHTTPHeaders","trace","screenshot","projects","name","devices","webServer","command","port"],"sources":["playwright.config.ts"],"sourcesContent":["import type { PlaywrightTestConfig } from '@playwright/test';\nimport { devices } from '@playwright/test';\n\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\nrequire('dotenv').config();\nconst httpCredentials = {\n  username: process.env.USER_NAME,\n  password: process.env.USER_PASS,\n};\n\nconst btoa = (str: string) => Buffer.from(str).toString('base64');\nconst credentialsBase64 = btoa(`${httpCredentials.username}:${httpCredentials.password}`);\n\n/**\n * See https://playwright.dev/docs/test-configuration.\n */\nconst config: PlaywrightTestConfig = {\n  testDir: './tests',\n  /* Maximum time one test can run for. */\n  timeout: 30 * 1000,\n  expect: {\n    /**\n     * Maximum time expect() should wait for the condition to be met.\n     * For example in `await expect(locator).toHaveText();`\n     */\n    timeout: 10_000\n  },\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: 'html',\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Maximum time each action such as `click()` can take. Defaults to 0 (no limit). */\n    actionTimeout: 0,\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    baseURL: 'http://localhost:3000',\n    extraHTTPHeaders: {\n      'Authorization': `Basic ${credentialsBase64}`\n    },\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: 'on-first-retry',\n    screenshot: 'only-on-failure'\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    {\n      name: 'chromium',\n      use: {\n        ...devices['Desktop Chrome'],\n      },\n    },\n\n    // {\n    //   name: 'firefox',\n    //   use: {\n    //     ...devices['Desktop Firefox'],\n    //   },\n    // },\n\n    // {\n    //   name: 'webkit',\n    //   use: {\n    //     ...devices['Desktop Safari'],\n    //   },\n    // },\n\n    /* Test against mobile viewports. */\n    // {\n    //   name: 'Mobile Chrome',\n    //   use: {\n    //     ...devices['Pixel 5'],\n    //   },\n    // },\n    // {\n    //   name: 'Mobile Safari',\n    //   use: {\n    //     ...devices['iPhone 12'],\n    //   },\n    // },\n\n    /* Test against branded browsers. */\n    // {\n    //   name: 'Microsoft Edge',\n    //   use: {\n    //     channel: 'msedge',\n    //   },\n    // },\n    // {\n    //   name: 'Google Chrome',\n    //   use: {\n    //     channel: 'chrome',\n    //   },\n    // },\n  ],\n\n  /* Folder for test artifacts such as screenshots, videos, traces, etc. */\n  // outputDir: 'test-results/',\n\n  /* Run your local dev server before starting the tests */\n  webServer: {\n    command: 'npm run start',\n    port: 3000,\n  },\n};\n\nexport default config;\n"],"mappings":";;;;;;;AACA;;AAEA;AACA;AACA;AACA;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,eAAe,GAAG;EACtBC,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADA;EAEtBC,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFA,CAAxB;;AAKA,MAAMC,IAAI,GAAIC,GAAD,IAAiBC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,QAAjB,CAA0B,QAA1B,CAA9B;;AACA,MAAMC,iBAAiB,GAAGL,IAAI,CAAE,GAAEP,eAAe,CAACC,QAAS,IAAGD,eAAe,CAACK,QAAS,EAAzD,CAA9B;AAEA;AACA;AACA;;AACA,MAAMN,MAA4B,GAAG;EACnCc,OAAO,EAAE,SAD0B;;EAEnC;EACAC,OAAO,EAAE,KAAK,IAHqB;EAInCC,MAAM,EAAE;IACN;AACJ;AACA;AACA;IACID,OAAO,EAAE;EALH,CAJ2B;;EAWnC;EACAE,aAAa,EAAE,IAZoB;;EAanC;EACAC,UAAU,EAAE,CAAC,CAACf,OAAO,CAACC,GAAR,CAAYe,EAdS;;EAenC;EACAC,OAAO,EAAEjB,OAAO,CAACC,GAAR,CAAYe,EAAZ,GAAiB,CAAjB,GAAqB,CAhBK;;EAiBnC;EACAE,OAAO,EAAElB,OAAO,CAACC,GAAR,CAAYe,EAAZ,GAAiB,CAAjB,GAAqBG,SAlBK;;EAmBnC;EACAC,QAAQ,EAAE,MApByB;;EAqBnC;EACAC,GAAG,EAAE;IACH;IACAC,aAAa,EAAE,CAFZ;;IAGH;IACAC,OAAO,EAAE,uBAJN;IAKHC,gBAAgB,EAAE;MAChB,iBAAkB,SAAQd,iBAAkB;IAD5B,CALf;;IAQH;IACAe,KAAK,EAAE,gBATJ;IAUHC,UAAU,EAAE;EAVT,CAtB8B;;EAmCnC;EACAC,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,UADR;IAEEP,GAAG,EAAE,EACH,GAAGQ,aAAA,CAAQ,gBAAR;IADA;EAFP,CADQ,CAQR;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAhDQ,CApCyB;;EAuFnC;EACA;;EAEA;EACAC,SAAS,EAAE;IACTC,OAAO,EAAE,eADA;IAETC,IAAI,EAAE;EAFG;AA3FwB,CAArC;eAiGenC,M"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fa336c193a35973a3edec4e775f4a6ff2238b85e","contentHash":"c1323112707d62c3cd105e3335a86af95320aa54503e3c2b5bf93a0371e1a5ba"}}