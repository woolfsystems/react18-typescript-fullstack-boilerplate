(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb2, mod) => function __require() {
    return mod || (0, cb2[__getOwnPropNames(cb2)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to2, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to2, key) && key !== except)
          __defProp(to2, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to2;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // node_modules/react/cjs/react.development.js
  var require_react_development = __commonJS({
    "node_modules/react/cjs/react.development.js"(exports, module) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
          }
          var ReactVersion = "18.2.0";
          var REACT_ELEMENT_TYPE = Symbol.for("react.element");
          var REACT_PORTAL_TYPE = Symbol.for("react.portal");
          var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
          var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
          var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
          var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
          var REACT_CONTEXT_TYPE = Symbol.for("react.context");
          var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
          var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
          var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
          var REACT_MEMO_TYPE = Symbol.for("react.memo");
          var REACT_LAZY_TYPE = Symbol.for("react.lazy");
          var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
          var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var ReactCurrentDispatcher = {
            current: null
          };
          var ReactCurrentBatchConfig = {
            transition: null
          };
          var ReactCurrentActQueue = {
            current: null,
            isBatchingLegacy: false,
            didScheduleLegacyUpdate: false
          };
          var ReactCurrentOwner = {
            current: null
          };
          var ReactDebugCurrentFrame = {};
          var currentExtraStackFrame = null;
          function setExtraStackFrame(stack) {
            {
              currentExtraStackFrame = stack;
            }
          }
          {
            ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
              {
                currentExtraStackFrame = stack;
              }
            };
            ReactDebugCurrentFrame.getCurrentStack = null;
            ReactDebugCurrentFrame.getStackAddendum = function() {
              var stack = "";
              if (currentExtraStackFrame) {
                stack += currentExtraStackFrame;
              }
              var impl = ReactDebugCurrentFrame.getCurrentStack;
              if (impl) {
                stack += impl() || "";
              }
              return stack;
            };
          }
          var enableScopeAPI = false;
          var enableCacheElement = false;
          var enableTransitionTracing = false;
          var enableLegacyHidden = false;
          var enableDebugTracing = false;
          var ReactSharedInternals = {
            ReactCurrentDispatcher,
            ReactCurrentBatchConfig,
            ReactCurrentOwner
          };
          {
            ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
            ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
          }
          function warn(format) {
            {
              {
                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  args[_key - 1] = arguments[_key];
                }
                printWarning("warn", format, args);
              }
            }
          }
          function error(format) {
            {
              {
                for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                  args[_key2 - 1] = arguments[_key2];
                }
                printWarning("error", format, args);
              }
            }
          }
          function printWarning(level, format, args) {
            {
              var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame2.getStackAddendum();
              if (stack !== "") {
                format += "%s";
                args = args.concat([stack]);
              }
              var argsWithFormat = args.map(function(item) {
                return String(item);
              });
              argsWithFormat.unshift("Warning: " + format);
              Function.prototype.apply.call(console[level], console, argsWithFormat);
            }
          }
          var didWarnStateUpdateForUnmountedComponent = {};
          function warnNoop(publicInstance, callerName) {
            {
              var _constructor = publicInstance.constructor;
              var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
              var warningKey = componentName + "." + callerName;
              if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
                return;
              }
              error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
              didWarnStateUpdateForUnmountedComponent[warningKey] = true;
            }
          }
          var ReactNoopUpdateQueue = {
            isMounted: function(publicInstance) {
              return false;
            },
            enqueueForceUpdate: function(publicInstance, callback, callerName) {
              warnNoop(publicInstance, "forceUpdate");
            },
            enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
              warnNoop(publicInstance, "replaceState");
            },
            enqueueSetState: function(publicInstance, partialState, callback, callerName) {
              warnNoop(publicInstance, "setState");
            }
          };
          var assign = Object.assign;
          var emptyObject = {};
          {
            Object.freeze(emptyObject);
          }
          function Component(props, context, updater) {
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;
          }
          Component.prototype.isReactComponent = {};
          Component.prototype.setState = function(partialState, callback) {
            if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
              throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
            }
            this.updater.enqueueSetState(this, partialState, callback, "setState");
          };
          Component.prototype.forceUpdate = function(callback) {
            this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
          };
          {
            var deprecatedAPIs = {
              isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
              replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
            };
            var defineDeprecationWarning = function(methodName, info) {
              Object.defineProperty(Component.prototype, methodName, {
                get: function() {
                  warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                  return void 0;
                }
              });
            };
            for (var fnName in deprecatedAPIs) {
              if (deprecatedAPIs.hasOwnProperty(fnName)) {
                defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
              }
            }
          }
          function ComponentDummy() {
          }
          ComponentDummy.prototype = Component.prototype;
          function PureComponent(props, context, updater) {
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;
          }
          var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
          pureComponentPrototype.constructor = PureComponent;
          assign(pureComponentPrototype, Component.prototype);
          pureComponentPrototype.isPureReactComponent = true;
          function createRef() {
            var refObject = {
              current: null
            };
            {
              Object.seal(refObject);
            }
            return refObject;
          }
          var isArrayImpl = Array.isArray;
          function isArray(a2) {
            return isArrayImpl(a2);
          }
          function typeName(value) {
            {
              var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
              var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
              return type;
            }
          }
          function willCoercionThrow(value) {
            {
              try {
                testStringCoercion(value);
                return false;
              } catch (e27) {
                return true;
              }
            }
          }
          function testStringCoercion(value) {
            return "" + value;
          }
          function checkKeyStringCoercion(value) {
            {
              if (willCoercionThrow(value)) {
                error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
                return testStringCoercion(value);
              }
            }
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var displayName = outerType.displayName;
            if (displayName) {
              return displayName;
            }
            var functionName = innerType.displayName || innerType.name || "";
            return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
          }
          function getContextName(type) {
            return type.displayName || "Context";
          }
          function getComponentNameFromType(type) {
            if (type == null) {
              return null;
            }
            {
              if (typeof type.tag === "number") {
                error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type === "function") {
              return type.displayName || type.name || null;
            }
            if (typeof type === "string") {
              return type;
            }
            switch (type) {
              case REACT_FRAGMENT_TYPE:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case REACT_PROFILER_TYPE:
                return "Profiler";
              case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
              case REACT_SUSPENSE_TYPE:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  var context = type;
                  return getContextName(context) + ".Consumer";
                case REACT_PROVIDER_TYPE:
                  var provider = type;
                  return getContextName(provider._context) + ".Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type, type.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  var outerName = type.displayName || null;
                  if (outerName !== null) {
                    return outerName;
                  }
                  return getComponentNameFromType(type.type) || "Memo";
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return getComponentNameFromType(init(payload));
                  } catch (x2) {
                    return null;
                  }
                }
              }
            }
            return null;
          }
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var RESERVED_PROPS = {
            key: true,
            ref: true,
            __self: true,
            __source: true
          };
          var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
          {
            didWarnAboutStringRefs = {};
          }
          function hasValidRef(config) {
            {
              if (hasOwnProperty.call(config, "ref")) {
                var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.ref !== void 0;
          }
          function hasValidKey(config) {
            {
              if (hasOwnProperty.call(config, "key")) {
                var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.key !== void 0;
          }
          function defineKeyPropWarningGetter(props, displayName) {
            var warnAboutAccessingKey = function() {
              {
                if (!specialPropKeyWarningShown) {
                  specialPropKeyWarningShown = true;
                  error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
          function defineRefPropWarningGetter(props, displayName) {
            var warnAboutAccessingRef = function() {
              {
                if (!specialPropRefWarningShown) {
                  specialPropRefWarningShown = true;
                  error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
          function warnIfStringRefCannotBeAutoConverted(config) {
            {
              if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
                var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
                if (!didWarnAboutStringRefs[componentName]) {
                  error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
          }
          var ReactElement = function(type, key, ref, self2, source, owner, props) {
            var element = {
              $$typeof: REACT_ELEMENT_TYPE,
              type,
              key,
              ref,
              props,
              _owner: owner
            };
            {
              element._store = {};
              Object.defineProperty(element._store, "validated", {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false
              });
              Object.defineProperty(element, "_self", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self2
              });
              Object.defineProperty(element, "_source", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source
              });
              if (Object.freeze) {
                Object.freeze(element.props);
                Object.freeze(element);
              }
            }
            return element;
          };
          function createElement2(type, config, children) {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            var self2 = null;
            var source = null;
            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
                {
                  warnIfStringRefCannotBeAutoConverted(config);
                }
              }
              if (hasValidKey(config)) {
                {
                  checkKeyStringCoercion(config.key);
                }
                key = "" + config.key;
              }
              self2 = config.__self === void 0 ? null : config.__self;
              source = config.__source === void 0 ? null : config.__source;
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  props[propName] = config[propName];
                }
              }
            }
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i2 = 0; i2 < childrenLength; i2++) {
                childArray[i2] = arguments[i2 + 2];
              }
              {
                if (Object.freeze) {
                  Object.freeze(childArray);
                }
              }
              props.children = childArray;
            }
            if (type && type.defaultProps) {
              var defaultProps = type.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            {
              if (key || ref) {
                var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
            }
            return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
          }
          function cloneAndReplaceKey(oldElement, newKey) {
            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
            return newElement;
          }
          function cloneElement(element, config, children) {
            if (element === null || element === void 0) {
              throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
            }
            var propName;
            var props = assign({}, element.props);
            var key = element.key;
            var ref = element.ref;
            var self2 = element._self;
            var source = element._source;
            var owner = element._owner;
            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
                owner = ReactCurrentOwner.current;
              }
              if (hasValidKey(config)) {
                {
                  checkKeyStringCoercion(config.key);
                }
                key = "" + config.key;
              }
              var defaultProps;
              if (element.type && element.type.defaultProps) {
                defaultProps = element.type.defaultProps;
              }
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  if (config[propName] === void 0 && defaultProps !== void 0) {
                    props[propName] = defaultProps[propName];
                  } else {
                    props[propName] = config[propName];
                  }
                }
              }
            }
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i2 = 0; i2 < childrenLength; i2++) {
                childArray[i2] = arguments[i2 + 2];
              }
              props.children = childArray;
            }
            return ReactElement(element.type, key, ref, self2, source, owner, props);
          }
          function isValidElement(object) {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          var SEPARATOR = ".";
          var SUBSEPARATOR = ":";
          function escape(key) {
            var escapeRegex = /[=:]/g;
            var escaperLookup = {
              "=": "=0",
              ":": "=2"
            };
            var escapedString = key.replace(escapeRegex, function(match) {
              return escaperLookup[match];
            });
            return "$" + escapedString;
          }
          var didWarnAboutMaps = false;
          var userProvidedKeyEscapeRegex = /\/+/g;
          function escapeUserProvidedKey(text) {
            return text.replace(userProvidedKeyEscapeRegex, "$&/");
          }
          function getElementKey(element, index) {
            if (typeof element === "object" && element !== null && element.key != null) {
              {
                checkKeyStringCoercion(element.key);
              }
              return escape("" + element.key);
            }
            return index.toString(36);
          }
          function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
            var type = typeof children;
            if (type === "undefined" || type === "boolean") {
              children = null;
            }
            var invokeCallback = false;
            if (children === null) {
              invokeCallback = true;
            } else {
              switch (type) {
                case "string":
                case "number":
                  invokeCallback = true;
                  break;
                case "object":
                  switch (children.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                      invokeCallback = true;
                  }
              }
            }
            if (invokeCallback) {
              var _child = children;
              var mappedChild = callback(_child);
              var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
              if (isArray(mappedChild)) {
                var escapedChildKey = "";
                if (childKey != null) {
                  escapedChildKey = escapeUserProvidedKey(childKey) + "/";
                }
                mapIntoArray(mappedChild, array, escapedChildKey, "", function(c2) {
                  return c2;
                });
              } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                  {
                    if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                      checkKeyStringCoercion(mappedChild.key);
                    }
                  }
                  mappedChild = cloneAndReplaceKey(
                    mappedChild,
                    escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey
                  );
                }
                array.push(mappedChild);
              }
              return 1;
            }
            var child;
            var nextName;
            var subtreeCount = 0;
            var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
            if (isArray(children)) {
              for (var i2 = 0; i2 < children.length; i2++) {
                child = children[i2];
                nextName = nextNamePrefix + getElementKey(child, i2);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
              }
            } else {
              var iteratorFn = getIteratorFn(children);
              if (typeof iteratorFn === "function") {
                var iterableChildren = children;
                {
                  if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) {
                      warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    }
                    didWarnAboutMaps = true;
                  }
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii2 = 0;
                while (!(step = iterator.next()).done) {
                  child = step.value;
                  nextName = nextNamePrefix + getElementKey(child, ii2++);
                  subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
              } else if (type === "object") {
                var childrenString = String(children);
                throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
              }
            }
            return subtreeCount;
          }
          function mapChildren(children, func, context) {
            if (children == null) {
              return children;
            }
            var result = [];
            var count = 0;
            mapIntoArray(children, result, "", "", function(child) {
              return func.call(context, child, count++);
            });
            return result;
          }
          function countChildren(children) {
            var n2 = 0;
            mapChildren(children, function() {
              n2++;
            });
            return n2;
          }
          function forEachChildren(children, forEachFunc, forEachContext) {
            mapChildren(children, function() {
              forEachFunc.apply(this, arguments);
            }, forEachContext);
          }
          function toArray(children) {
            return mapChildren(children, function(child) {
              return child;
            }) || [];
          }
          function onlyChild(children) {
            if (!isValidElement(children)) {
              throw new Error("React.Children.only expected to receive a single React element child.");
            }
            return children;
          }
          function createContext(defaultValue) {
            var context = {
              $$typeof: REACT_CONTEXT_TYPE,
              _currentValue: defaultValue,
              _currentValue2: defaultValue,
              _threadCount: 0,
              Provider: null,
              Consumer: null,
              _defaultValue: null,
              _globalName: null
            };
            context.Provider = {
              $$typeof: REACT_PROVIDER_TYPE,
              _context: context
            };
            var hasWarnedAboutUsingNestedContextConsumers = false;
            var hasWarnedAboutUsingConsumerProvider = false;
            var hasWarnedAboutDisplayNameOnConsumer = false;
            {
              var Consumer = {
                $$typeof: REACT_CONTEXT_TYPE,
                _context: context
              };
              Object.defineProperties(Consumer, {
                Provider: {
                  get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                      hasWarnedAboutUsingConsumerProvider = true;
                      error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                  },
                  set: function(_Provider) {
                    context.Provider = _Provider;
                  }
                },
                _currentValue: {
                  get: function() {
                    return context._currentValue;
                  },
                  set: function(_currentValue) {
                    context._currentValue = _currentValue;
                  }
                },
                _currentValue2: {
                  get: function() {
                    return context._currentValue2;
                  },
                  set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                  }
                },
                _threadCount: {
                  get: function() {
                    return context._threadCount;
                  },
                  set: function(_threadCount) {
                    context._threadCount = _threadCount;
                  }
                },
                Consumer: {
                  get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                      hasWarnedAboutUsingNestedContextConsumers = true;
                      error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                  }
                },
                displayName: {
                  get: function() {
                    return context.displayName;
                  },
                  set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                      warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                      hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                  }
                }
              });
              context.Consumer = Consumer;
            }
            {
              context._currentRenderer = null;
              context._currentRenderer2 = null;
            }
            return context;
          }
          var Uninitialized = -1;
          var Pending = 0;
          var Resolved = 1;
          var Rejected = 2;
          function lazyInitializer(payload) {
            if (payload._status === Uninitialized) {
              var ctor = payload._result;
              var thenable = ctor();
              thenable.then(function(moduleObject2) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                  var resolved = payload;
                  resolved._status = Resolved;
                  resolved._result = moduleObject2;
                }
              }, function(error2) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                  var rejected = payload;
                  rejected._status = Rejected;
                  rejected._result = error2;
                }
              });
              if (payload._status === Uninitialized) {
                var pending = payload;
                pending._status = Pending;
                pending._result = thenable;
              }
            }
            if (payload._status === Resolved) {
              var moduleObject = payload._result;
              {
                if (moduleObject === void 0) {
                  error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
                }
              }
              {
                if (!("default" in moduleObject)) {
                  error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                }
              }
              return moduleObject.default;
            } else {
              throw payload._result;
            }
          }
          function lazy(ctor) {
            var payload = {
              _status: Uninitialized,
              _result: ctor
            };
            var lazyType = {
              $$typeof: REACT_LAZY_TYPE,
              _payload: payload,
              _init: lazyInitializer
            };
            {
              var defaultProps;
              var propTypes;
              Object.defineProperties(lazyType, {
                defaultProps: {
                  configurable: true,
                  get: function() {
                    return defaultProps;
                  },
                  set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps;
                    Object.defineProperty(lazyType, "defaultProps", {
                      enumerable: true
                    });
                  }
                },
                propTypes: {
                  configurable: true,
                  get: function() {
                    return propTypes;
                  },
                  set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes;
                    Object.defineProperty(lazyType, "propTypes", {
                      enumerable: true
                    });
                  }
                }
              });
            }
            return lazyType;
          }
          function forwardRef(render) {
            {
              if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
                error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
              } else if (typeof render !== "function") {
                error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
              } else {
                if (render.length !== 0 && render.length !== 2) {
                  error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
                }
              }
              if (render != null) {
                if (render.defaultProps != null || render.propTypes != null) {
                  error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
                }
              }
            }
            var elementType = {
              $$typeof: REACT_FORWARD_REF_TYPE,
              render
            };
            {
              var ownName;
              Object.defineProperty(elementType, "displayName", {
                enumerable: false,
                configurable: true,
                get: function() {
                  return ownName;
                },
                set: function(name) {
                  ownName = name;
                  if (!render.name && !render.displayName) {
                    render.displayName = name;
                  }
                }
              });
            }
            return elementType;
          }
          var REACT_MODULE_REFERENCE;
          {
            REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
          }
          function isValidElementType(type) {
            if (typeof type === "string" || typeof type === "function") {
              return true;
            }
            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
              return true;
            }
            if (typeof type === "object" && type !== null) {
              if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
                return true;
              }
            }
            return false;
          }
          function memo(type, compare) {
            {
              if (!isValidElementType(type)) {
                error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
              }
            }
            var elementType = {
              $$typeof: REACT_MEMO_TYPE,
              type,
              compare: compare === void 0 ? null : compare
            };
            {
              var ownName;
              Object.defineProperty(elementType, "displayName", {
                enumerable: false,
                configurable: true,
                get: function() {
                  return ownName;
                },
                set: function(name) {
                  ownName = name;
                  if (!type.name && !type.displayName) {
                    type.displayName = name;
                  }
                }
              });
            }
            return elementType;
          }
          function resolveDispatcher() {
            var dispatcher = ReactCurrentDispatcher.current;
            {
              if (dispatcher === null) {
                error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
              }
            }
            return dispatcher;
          }
          function useContext(Context) {
            var dispatcher = resolveDispatcher();
            {
              if (Context._context !== void 0) {
                var realContext = Context._context;
                if (realContext.Consumer === Context) {
                  error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
                } else if (realContext.Provider === Context) {
                  error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
                }
              }
            }
            return dispatcher.useContext(Context);
          }
          function useState(initialState) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useState(initialState);
          }
          function useReducer(reducer, initialArg, init) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useReducer(reducer, initialArg, init);
          }
          function useRef(initialValue) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useRef(initialValue);
          }
          function useEffect(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useEffect(create, deps);
          }
          function useInsertionEffect(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useInsertionEffect(create, deps);
          }
          function useLayoutEffect(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useLayoutEffect(create, deps);
          }
          function useCallback(callback, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useCallback(callback, deps);
          }
          function useMemo(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useMemo(create, deps);
          }
          function useImperativeHandle(ref, create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useImperativeHandle(ref, create, deps);
          }
          function useDebugValue(value, formatterFn) {
            {
              var dispatcher = resolveDispatcher();
              return dispatcher.useDebugValue(value, formatterFn);
            }
          }
          function useTransition() {
            var dispatcher = resolveDispatcher();
            return dispatcher.useTransition();
          }
          function useDeferredValue(value) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDeferredValue(value);
          }
          function useId() {
            var dispatcher = resolveDispatcher();
            return dispatcher.useId();
          }
          function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
          }
          var disabledDepth = 0;
          var prevLog;
          var prevInfo;
          var prevWarn;
          var prevError;
          var prevGroup;
          var prevGroupCollapsed;
          var prevGroupEnd;
          function disabledLog() {
          }
          disabledLog.__reactDisabledLog = true;
          function disableLogs() {
            {
              if (disabledDepth === 0) {
                prevLog = console.log;
                prevInfo = console.info;
                prevWarn = console.warn;
                prevError = console.error;
                prevGroup = console.group;
                prevGroupCollapsed = console.groupCollapsed;
                prevGroupEnd = console.groupEnd;
                var props = {
                  configurable: true,
                  enumerable: true,
                  value: disabledLog,
                  writable: true
                };
                Object.defineProperties(console, {
                  info: props,
                  log: props,
                  warn: props,
                  error: props,
                  group: props,
                  groupCollapsed: props,
                  groupEnd: props
                });
              }
              disabledDepth++;
            }
          }
          function reenableLogs() {
            {
              disabledDepth--;
              if (disabledDepth === 0) {
                var props = {
                  configurable: true,
                  enumerable: true,
                  writable: true
                };
                Object.defineProperties(console, {
                  log: assign({}, props, {
                    value: prevLog
                  }),
                  info: assign({}, props, {
                    value: prevInfo
                  }),
                  warn: assign({}, props, {
                    value: prevWarn
                  }),
                  error: assign({}, props, {
                    value: prevError
                  }),
                  group: assign({}, props, {
                    value: prevGroup
                  }),
                  groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                  }),
                  groupEnd: assign({}, props, {
                    value: prevGroupEnd
                  })
                });
              }
              if (disabledDepth < 0) {
                error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
              }
            }
          }
          var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
          var prefix;
          function describeBuiltInComponentFrame(name, source, ownerFn) {
            {
              if (prefix === void 0) {
                try {
                  throw Error();
                } catch (x2) {
                  var match = x2.stack.trim().match(/\n( *(at )?)/);
                  prefix = match && match[1] || "";
                }
              }
              return "\n" + prefix + name;
            }
          }
          var reentry = false;
          var componentFrameCache;
          {
            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
            componentFrameCache = new PossiblyWeakMap();
          }
          function describeNativeComponentFrame(fn2, construct) {
            if (!fn2 || reentry) {
              return "";
            }
            {
              var frame = componentFrameCache.get(fn2);
              if (frame !== void 0) {
                return frame;
              }
            }
            var control;
            reentry = true;
            var previousPrepareStackTrace = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            var previousDispatcher;
            {
              previousDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = null;
              disableLogs();
            }
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x2) {
                    control = x2;
                  }
                  Reflect.construct(fn2, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x2) {
                    control = x2;
                  }
                  fn2.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x2) {
                  control = x2;
                }
                fn2();
              }
            } catch (sample) {
              if (sample && control && typeof sample.stack === "string") {
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s2 = sampleLines.length - 1;
                var c2 = controlLines.length - 1;
                while (s2 >= 1 && c2 >= 0 && sampleLines[s2] !== controlLines[c2]) {
                  c2--;
                }
                for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                  if (sampleLines[s2] !== controlLines[c2]) {
                    if (s2 !== 1 || c2 !== 1) {
                      do {
                        s2--;
                        c2--;
                        if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                          var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                          if (fn2.displayName && _frame.includes("<anonymous>")) {
                            _frame = _frame.replace("<anonymous>", fn2.displayName);
                          }
                          {
                            if (typeof fn2 === "function") {
                              componentFrameCache.set(fn2, _frame);
                            }
                          }
                          return _frame;
                        }
                      } while (s2 >= 1 && c2 >= 0);
                    }
                    break;
                  }
                }
              }
            } finally {
              reentry = false;
              {
                ReactCurrentDispatcher$1.current = previousDispatcher;
                reenableLogs();
              }
              Error.prepareStackTrace = previousPrepareStackTrace;
            }
            var name = fn2 ? fn2.displayName || fn2.name : "";
            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
            {
              if (typeof fn2 === "function") {
                componentFrameCache.set(fn2, syntheticFrame);
              }
            }
            return syntheticFrame;
          }
          function describeFunctionComponentFrame(fn2, source, ownerFn) {
            {
              return describeNativeComponentFrame(fn2, false);
            }
          }
          function shouldConstruct(Component2) {
            var prototype = Component2.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
            if (type == null) {
              return "";
            }
            if (typeof type === "function") {
              {
                return describeNativeComponentFrame(type, shouldConstruct(type));
              }
            }
            if (typeof type === "string") {
              return describeBuiltInComponentFrame(type);
            }
            switch (type) {
              case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
              case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_FORWARD_REF_TYPE:
                  return describeFunctionComponentFrame(type.render);
                case REACT_MEMO_TYPE:
                  return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                  } catch (x2) {
                  }
                }
              }
            }
            return "";
          }
          var loggedTypeFailures = {};
          var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame$1.setExtraStackFrame(null);
              }
            }
          }
          function checkPropTypes(typeSpecs, values, location, componentName, element) {
            {
              var has = Function.call.bind(hasOwnProperty);
              for (var typeSpecName in typeSpecs) {
                if (has(typeSpecs, typeSpecName)) {
                  var error$1 = void 0;
                  try {
                    if (typeof typeSpecs[typeSpecName] !== "function") {
                      var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                      err.name = "Invariant Violation";
                      throw err;
                    }
                    error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                  } catch (ex2) {
                    error$1 = ex2;
                  }
                  if (error$1 && !(error$1 instanceof Error)) {
                    setCurrentlyValidatingElement(element);
                    error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                    setCurrentlyValidatingElement(null);
                  }
                  if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                    loggedTypeFailures[error$1.message] = true;
                    setCurrentlyValidatingElement(element);
                    error("Failed %s type: %s", location, error$1.message);
                    setCurrentlyValidatingElement(null);
                  }
                }
              }
            }
          }
          function setCurrentlyValidatingElement$1(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                setExtraStackFrame(stack);
              } else {
                setExtraStackFrame(null);
              }
            }
          }
          var propTypesMisspellWarningShown;
          {
            propTypesMisspellWarningShown = false;
          }
          function getDeclarationErrorAddendum() {
            if (ReactCurrentOwner.current) {
              var name = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
          function getSourceInfoErrorAddendum(source) {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
          function getSourceInfoErrorAddendumForProps(elementProps) {
            if (elementProps !== null && elementProps !== void 0) {
              return getSourceInfoErrorAddendum(elementProps.__source);
            }
            return "";
          }
          var ownerHasKeyUseWarning = {};
          function getCurrentComponentErrorInfo(parentType) {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
          function validateExplicitKey(element, parentType) {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
              childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
            }
            {
              setCurrentlyValidatingElement$1(element);
              error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
              setCurrentlyValidatingElement$1(null);
            }
          }
          function validateChildKeys(node, parentType) {
            if (typeof node !== "object") {
              return;
            }
            if (isArray(node)) {
              for (var i2 = 0; i2 < node.length; i2++) {
                var child = node[i2];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
          function validatePropTypes(element) {
            {
              var type = element.type;
              if (type === null || type === void 0 || typeof type === "string") {
                return;
              }
              var propTypes;
              if (typeof type === "function") {
                propTypes = type.propTypes;
              } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
                propTypes = type.propTypes;
              } else {
                return;
              }
              if (propTypes) {
                var name = getComponentNameFromType(type);
                checkPropTypes(propTypes, element.props, "prop", name, element);
              } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
                propTypesMisspellWarningShown = true;
                var _name = getComponentNameFromType(type);
                error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
              }
              if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
                error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
              }
            }
          }
          function validateFragmentProps(fragment) {
            {
              var keys = Object.keys(fragment.props);
              for (var i2 = 0; i2 < keys.length; i2++) {
                var key = keys[i2];
                if (key !== "children" && key !== "key") {
                  setCurrentlyValidatingElement$1(fragment);
                  error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                  setCurrentlyValidatingElement$1(null);
                  break;
                }
              }
              if (fragment.ref !== null) {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid attribute `ref` supplied to `React.Fragment`.");
                setCurrentlyValidatingElement$1(null);
              }
            }
          }
          function createElementWithValidation(type, props, children) {
            var validType = isValidElementType(type);
            if (!validType) {
              var info = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendumForProps(props);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              {
                error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
              }
            }
            var element = createElement2.apply(this, arguments);
            if (element == null) {
              return element;
            }
            if (validType) {
              for (var i2 = 2; i2 < arguments.length; i2++) {
                validateChildKeys(arguments[i2], type);
              }
            }
            if (type === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
          var didWarnAboutDeprecatedCreateFactory = false;
          function createFactoryWithValidation(type) {
            var validatedFactory = createElementWithValidation.bind(null, type);
            validatedFactory.type = type;
            {
              if (!didWarnAboutDeprecatedCreateFactory) {
                didWarnAboutDeprecatedCreateFactory = true;
                warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
              }
              Object.defineProperty(validatedFactory, "type", {
                enumerable: false,
                get: function() {
                  warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                  Object.defineProperty(this, "type", {
                    value: type
                  });
                  return type;
                }
              });
            }
            return validatedFactory;
          }
          function cloneElementWithValidation(element, props, children) {
            var newElement = cloneElement.apply(this, arguments);
            for (var i2 = 2; i2 < arguments.length; i2++) {
              validateChildKeys(arguments[i2], newElement.type);
            }
            validatePropTypes(newElement);
            return newElement;
          }
          function startTransition(scope, options) {
            var prevTransition = ReactCurrentBatchConfig.transition;
            ReactCurrentBatchConfig.transition = {};
            var currentTransition = ReactCurrentBatchConfig.transition;
            {
              ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
            }
            try {
              scope();
            } finally {
              ReactCurrentBatchConfig.transition = prevTransition;
              {
                if (prevTransition === null && currentTransition._updatedFibers) {
                  var updatedFibersCount = currentTransition._updatedFibers.size;
                  if (updatedFibersCount > 10) {
                    warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                  }
                  currentTransition._updatedFibers.clear();
                }
              }
            }
          }
          var didWarnAboutMessageChannel = false;
          var enqueueTaskImpl = null;
          function enqueueTask(task) {
            if (enqueueTaskImpl === null) {
              try {
                var requireString = ("require" + Math.random()).slice(0, 7);
                var nodeRequire = module && module[requireString];
                enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
              } catch (_err) {
                enqueueTaskImpl = function(callback) {
                  {
                    if (didWarnAboutMessageChannel === false) {
                      didWarnAboutMessageChannel = true;
                      if (typeof MessageChannel === "undefined") {
                        error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                      }
                    }
                  }
                  var channel = new MessageChannel();
                  channel.port1.onmessage = callback;
                  channel.port2.postMessage(void 0);
                };
              }
            }
            return enqueueTaskImpl(task);
          }
          var actScopeDepth = 0;
          var didWarnNoAwaitAct = false;
          function act(callback) {
            {
              var prevActScopeDepth = actScopeDepth;
              actScopeDepth++;
              if (ReactCurrentActQueue.current === null) {
                ReactCurrentActQueue.current = [];
              }
              var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
              var result;
              try {
                ReactCurrentActQueue.isBatchingLegacy = true;
                result = callback();
                if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                  var queue = ReactCurrentActQueue.current;
                  if (queue !== null) {
                    ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                    flushActQueue(queue);
                  }
                }
              } catch (error2) {
                popActScope(prevActScopeDepth);
                throw error2;
              } finally {
                ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
              }
              if (result !== null && typeof result === "object" && typeof result.then === "function") {
                var thenableResult = result;
                var wasAwaited = false;
                var thenable = {
                  then: function(resolve, reject) {
                    wasAwaited = true;
                    thenableResult.then(function(returnValue2) {
                      popActScope(prevActScopeDepth);
                      if (actScopeDepth === 0) {
                        recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                      } else {
                        resolve(returnValue2);
                      }
                    }, function(error2) {
                      popActScope(prevActScopeDepth);
                      reject(error2);
                    });
                  }
                };
                {
                  if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                    Promise.resolve().then(function() {
                    }).then(function() {
                      if (!wasAwaited) {
                        didWarnNoAwaitAct = true;
                        error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                      }
                    });
                  }
                }
                return thenable;
              } else {
                var returnValue = result;
                popActScope(prevActScopeDepth);
                if (actScopeDepth === 0) {
                  var _queue = ReactCurrentActQueue.current;
                  if (_queue !== null) {
                    flushActQueue(_queue);
                    ReactCurrentActQueue.current = null;
                  }
                  var _thenable = {
                    then: function(resolve, reject) {
                      if (ReactCurrentActQueue.current === null) {
                        ReactCurrentActQueue.current = [];
                        recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                      } else {
                        resolve(returnValue);
                      }
                    }
                  };
                  return _thenable;
                } else {
                  var _thenable2 = {
                    then: function(resolve, reject) {
                      resolve(returnValue);
                    }
                  };
                  return _thenable2;
                }
              }
            }
          }
          function popActScope(prevActScopeDepth) {
            {
              if (prevActScopeDepth !== actScopeDepth - 1) {
                error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
              }
              actScopeDepth = prevActScopeDepth;
            }
          }
          function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
            {
              var queue = ReactCurrentActQueue.current;
              if (queue !== null) {
                try {
                  flushActQueue(queue);
                  enqueueTask(function() {
                    if (queue.length === 0) {
                      ReactCurrentActQueue.current = null;
                      resolve(returnValue);
                    } else {
                      recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                    }
                  });
                } catch (error2) {
                  reject(error2);
                }
              } else {
                resolve(returnValue);
              }
            }
          }
          var isFlushing = false;
          function flushActQueue(queue) {
            {
              if (!isFlushing) {
                isFlushing = true;
                var i2 = 0;
                try {
                  for (; i2 < queue.length; i2++) {
                    var callback = queue[i2];
                    do {
                      callback = callback(true);
                    } while (callback !== null);
                  }
                  queue.length = 0;
                } catch (error2) {
                  queue = queue.slice(i2 + 1);
                  throw error2;
                } finally {
                  isFlushing = false;
                }
              }
            }
          }
          var createElement$1 = createElementWithValidation;
          var cloneElement$1 = cloneElementWithValidation;
          var createFactory = createFactoryWithValidation;
          var Children = {
            map: mapChildren,
            forEach: forEachChildren,
            count: countChildren,
            toArray,
            only: onlyChild
          };
          exports.Children = Children;
          exports.Component = Component;
          exports.Fragment = REACT_FRAGMENT_TYPE;
          exports.Profiler = REACT_PROFILER_TYPE;
          exports.PureComponent = PureComponent;
          exports.StrictMode = REACT_STRICT_MODE_TYPE;
          exports.Suspense = REACT_SUSPENSE_TYPE;
          exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
          exports.cloneElement = cloneElement$1;
          exports.createContext = createContext;
          exports.createElement = createElement$1;
          exports.createFactory = createFactory;
          exports.createRef = createRef;
          exports.forwardRef = forwardRef;
          exports.isValidElement = isValidElement;
          exports.lazy = lazy;
          exports.memo = memo;
          exports.startTransition = startTransition;
          exports.unstable_act = act;
          exports.useCallback = useCallback;
          exports.useContext = useContext;
          exports.useDebugValue = useDebugValue;
          exports.useDeferredValue = useDeferredValue;
          exports.useEffect = useEffect;
          exports.useId = useId;
          exports.useImperativeHandle = useImperativeHandle;
          exports.useInsertionEffect = useInsertionEffect;
          exports.useLayoutEffect = useLayoutEffect;
          exports.useMemo = useMemo;
          exports.useReducer = useReducer;
          exports.useRef = useRef;
          exports.useState = useState;
          exports.useSyncExternalStore = useSyncExternalStore;
          exports.useTransition = useTransition;
          exports.version = ReactVersion;
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
          }
        })();
      }
    }
  });

  // node_modules/react/index.js
  var require_react = __commonJS({
    "node_modules/react/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_react_development();
      }
    }
  });

  // node_modules/scheduler/cjs/scheduler.development.js
  var require_scheduler_development = __commonJS({
    "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
          }
          var enableSchedulerDebugging = false;
          var enableProfiling = false;
          var frameYieldMs = 5;
          function push(heap, node) {
            var index = heap.length;
            heap.push(node);
            siftUp(heap, node, index);
          }
          function peek(heap) {
            return heap.length === 0 ? null : heap[0];
          }
          function pop(heap) {
            if (heap.length === 0) {
              return null;
            }
            var first = heap[0];
            var last = heap.pop();
            if (last !== first) {
              heap[0] = last;
              siftDown(heap, last, 0);
            }
            return first;
          }
          function siftUp(heap, node, i2) {
            var index = i2;
            while (index > 0) {
              var parentIndex = index - 1 >>> 1;
              var parent = heap[parentIndex];
              if (compare(parent, node) > 0) {
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
              } else {
                return;
              }
            }
          }
          function siftDown(heap, node, i2) {
            var index = i2;
            var length = heap.length;
            var halfLength = length >>> 1;
            while (index < halfLength) {
              var leftIndex = (index + 1) * 2 - 1;
              var left = heap[leftIndex];
              var rightIndex = leftIndex + 1;
              var right = heap[rightIndex];
              if (compare(left, node) < 0) {
                if (rightIndex < length && compare(right, left) < 0) {
                  heap[index] = right;
                  heap[rightIndex] = node;
                  index = rightIndex;
                } else {
                  heap[index] = left;
                  heap[leftIndex] = node;
                  index = leftIndex;
                }
              } else if (rightIndex < length && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                return;
              }
            }
          }
          function compare(a2, b2) {
            var diff = a2.sortIndex - b2.sortIndex;
            return diff !== 0 ? diff : a2.id - b2.id;
          }
          var ImmediatePriority = 1;
          var UserBlockingPriority = 2;
          var NormalPriority = 3;
          var LowPriority = 4;
          var IdlePriority = 5;
          function markTaskErrored(task, ms2) {
          }
          var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
          if (hasPerformanceNow) {
            var localPerformance = performance;
            exports.unstable_now = function() {
              return localPerformance.now();
            };
          } else {
            var localDate = Date;
            var initialTime = localDate.now();
            exports.unstable_now = function() {
              return localDate.now() - initialTime;
            };
          }
          var maxSigned31BitInt = 1073741823;
          var IMMEDIATE_PRIORITY_TIMEOUT = -1;
          var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
          var NORMAL_PRIORITY_TIMEOUT = 5e3;
          var LOW_PRIORITY_TIMEOUT = 1e4;
          var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
          var taskQueue = [];
          var timerQueue = [];
          var taskIdCounter = 1;
          var currentTask = null;
          var currentPriorityLevel = NormalPriority;
          var isPerformingWork = false;
          var isHostCallbackScheduled = false;
          var isHostTimeoutScheduled = false;
          var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
          var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
          var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
          var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
          function advanceTimers(currentTime) {
            var timer = peek(timerQueue);
            while (timer !== null) {
              if (timer.callback === null) {
                pop(timerQueue);
              } else if (timer.startTime <= currentTime) {
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
              } else {
                return;
              }
              timer = peek(timerQueue);
            }
          }
          function handleTimeout(currentTime) {
            isHostTimeoutScheduled = false;
            advanceTimers(currentTime);
            if (!isHostCallbackScheduled) {
              if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
              } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) {
                  requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                }
              }
            }
          }
          function flushWork(hasTimeRemaining, initialTime2) {
            isHostCallbackScheduled = false;
            if (isHostTimeoutScheduled) {
              isHostTimeoutScheduled = false;
              cancelHostTimeout();
            }
            isPerformingWork = true;
            var previousPriorityLevel = currentPriorityLevel;
            try {
              if (enableProfiling) {
                try {
                  return workLoop(hasTimeRemaining, initialTime2);
                } catch (error) {
                  if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                  }
                  throw error;
                }
              } else {
                return workLoop(hasTimeRemaining, initialTime2);
              }
            } finally {
              currentTask = null;
              currentPriorityLevel = previousPriorityLevel;
              isPerformingWork = false;
            }
          }
          function workLoop(hasTimeRemaining, initialTime2) {
            var currentTime = initialTime2;
            advanceTimers(currentTime);
            currentTask = peek(taskQueue);
            while (currentTask !== null && !enableSchedulerDebugging) {
              if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
                break;
              }
              var callback = currentTask.callback;
              if (typeof callback === "function") {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === "function") {
                  currentTask.callback = continuationCallback;
                } else {
                  if (currentTask === peek(taskQueue)) {
                    pop(taskQueue);
                  }
                }
                advanceTimers(currentTime);
              } else {
                pop(taskQueue);
              }
              currentTask = peek(taskQueue);
            }
            if (currentTask !== null) {
              return true;
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
              return false;
            }
          }
          function unstable_runWithPriority(priorityLevel, eventHandler) {
            switch (priorityLevel) {
              case ImmediatePriority:
              case UserBlockingPriority:
              case NormalPriority:
              case LowPriority:
              case IdlePriority:
                break;
              default:
                priorityLevel = NormalPriority;
            }
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = priorityLevel;
            try {
              return eventHandler();
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          }
          function unstable_next(eventHandler) {
            var priorityLevel;
            switch (currentPriorityLevel) {
              case ImmediatePriority:
              case UserBlockingPriority:
              case NormalPriority:
                priorityLevel = NormalPriority;
                break;
              default:
                priorityLevel = currentPriorityLevel;
                break;
            }
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = priorityLevel;
            try {
              return eventHandler();
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          }
          function unstable_wrapCallback(callback) {
            var parentPriorityLevel = currentPriorityLevel;
            return function() {
              var previousPriorityLevel = currentPriorityLevel;
              currentPriorityLevel = parentPriorityLevel;
              try {
                return callback.apply(this, arguments);
              } finally {
                currentPriorityLevel = previousPriorityLevel;
              }
            };
          }
          function unstable_scheduleCallback(priorityLevel, callback, options) {
            var currentTime = exports.unstable_now();
            var startTime2;
            if (typeof options === "object" && options !== null) {
              var delay = options.delay;
              if (typeof delay === "number" && delay > 0) {
                startTime2 = currentTime + delay;
              } else {
                startTime2 = currentTime;
              }
            } else {
              startTime2 = currentTime;
            }
            var timeout;
            switch (priorityLevel) {
              case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
              case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
              case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
              case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
              case NormalPriority:
              default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
            }
            var expirationTime = startTime2 + timeout;
            var newTask = {
              id: taskIdCounter++,
              callback,
              priorityLevel,
              startTime: startTime2,
              expirationTime,
              sortIndex: -1
            };
            if (startTime2 > currentTime) {
              newTask.sortIndex = startTime2;
              push(timerQueue, newTask);
              if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                if (isHostTimeoutScheduled) {
                  cancelHostTimeout();
                } else {
                  isHostTimeoutScheduled = true;
                }
                requestHostTimeout(handleTimeout, startTime2 - currentTime);
              }
            } else {
              newTask.sortIndex = expirationTime;
              push(taskQueue, newTask);
              if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
              }
            }
            return newTask;
          }
          function unstable_pauseExecution() {
          }
          function unstable_continueExecution() {
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          function unstable_getFirstCallbackNode() {
            return peek(taskQueue);
          }
          function unstable_cancelCallback(task) {
            task.callback = null;
          }
          function unstable_getCurrentPriorityLevel() {
            return currentPriorityLevel;
          }
          var isMessageLoopRunning = false;
          var scheduledHostCallback = null;
          var taskTimeoutID = -1;
          var frameInterval = frameYieldMs;
          var startTime = -1;
          function shouldYieldToHost() {
            var timeElapsed = exports.unstable_now() - startTime;
            if (timeElapsed < frameInterval) {
              return false;
            }
            return true;
          }
          function requestPaint() {
          }
          function forceFrameRate(fps) {
            if (fps < 0 || fps > 125) {
              console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
              return;
            }
            if (fps > 0) {
              frameInterval = Math.floor(1e3 / fps);
            } else {
              frameInterval = frameYieldMs;
            }
          }
          var performWorkUntilDeadline = function() {
            if (scheduledHostCallback !== null) {
              var currentTime = exports.unstable_now();
              startTime = currentTime;
              var hasTimeRemaining = true;
              var hasMoreWork = true;
              try {
                hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
              } finally {
                if (hasMoreWork) {
                  schedulePerformWorkUntilDeadline();
                } else {
                  isMessageLoopRunning = false;
                  scheduledHostCallback = null;
                }
              }
            } else {
              isMessageLoopRunning = false;
            }
          };
          var schedulePerformWorkUntilDeadline;
          if (typeof localSetImmediate === "function") {
            schedulePerformWorkUntilDeadline = function() {
              localSetImmediate(performWorkUntilDeadline);
            };
          } else if (typeof MessageChannel !== "undefined") {
            var channel = new MessageChannel();
            var port = channel.port2;
            channel.port1.onmessage = performWorkUntilDeadline;
            schedulePerformWorkUntilDeadline = function() {
              port.postMessage(null);
            };
          } else {
            schedulePerformWorkUntilDeadline = function() {
              localSetTimeout(performWorkUntilDeadline, 0);
            };
          }
          function requestHostCallback(callback) {
            scheduledHostCallback = callback;
            if (!isMessageLoopRunning) {
              isMessageLoopRunning = true;
              schedulePerformWorkUntilDeadline();
            }
          }
          function requestHostTimeout(callback, ms2) {
            taskTimeoutID = localSetTimeout(function() {
              callback(exports.unstable_now());
            }, ms2);
          }
          function cancelHostTimeout() {
            localClearTimeout(taskTimeoutID);
            taskTimeoutID = -1;
          }
          var unstable_requestPaint = requestPaint;
          var unstable_Profiling = null;
          exports.unstable_IdlePriority = IdlePriority;
          exports.unstable_ImmediatePriority = ImmediatePriority;
          exports.unstable_LowPriority = LowPriority;
          exports.unstable_NormalPriority = NormalPriority;
          exports.unstable_Profiling = unstable_Profiling;
          exports.unstable_UserBlockingPriority = UserBlockingPriority;
          exports.unstable_cancelCallback = unstable_cancelCallback;
          exports.unstable_continueExecution = unstable_continueExecution;
          exports.unstable_forceFrameRate = forceFrameRate;
          exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
          exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
          exports.unstable_next = unstable_next;
          exports.unstable_pauseExecution = unstable_pauseExecution;
          exports.unstable_requestPaint = unstable_requestPaint;
          exports.unstable_runWithPriority = unstable_runWithPriority;
          exports.unstable_scheduleCallback = unstable_scheduleCallback;
          exports.unstable_shouldYield = shouldYieldToHost;
          exports.unstable_wrapCallback = unstable_wrapCallback;
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
          }
        })();
      }
    }
  });

  // node_modules/scheduler/index.js
  var require_scheduler = __commonJS({
    "node_modules/scheduler/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_scheduler_development();
      }
    }
  });

  // node_modules/react-dom/cjs/react-dom.development.js
  var require_react_dom_development = __commonJS({
    "node_modules/react-dom/cjs/react-dom.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
          }
          var React6 = require_react();
          var Scheduler = require_scheduler();
          var ReactSharedInternals = React6.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
          var suppressWarning = false;
          function setSuppressWarning(newSuppressWarning) {
            {
              suppressWarning = newSuppressWarning;
            }
          }
          function warn(format) {
            {
              if (!suppressWarning) {
                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  args[_key - 1] = arguments[_key];
                }
                printWarning("warn", format, args);
              }
            }
          }
          function error(format) {
            {
              if (!suppressWarning) {
                for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                  args[_key2 - 1] = arguments[_key2];
                }
                printWarning("error", format, args);
              }
            }
          }
          function printWarning(level, format, args) {
            {
              var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame2.getStackAddendum();
              if (stack !== "") {
                format += "%s";
                args = args.concat([stack]);
              }
              var argsWithFormat = args.map(function(item) {
                return String(item);
              });
              argsWithFormat.unshift("Warning: " + format);
              Function.prototype.apply.call(console[level], console, argsWithFormat);
            }
          }
          var FunctionComponent = 0;
          var ClassComponent = 1;
          var IndeterminateComponent = 2;
          var HostRoot = 3;
          var HostPortal = 4;
          var HostComponent = 5;
          var HostText = 6;
          var Fragment = 7;
          var Mode = 8;
          var ContextConsumer = 9;
          var ContextProvider = 10;
          var ForwardRef = 11;
          var Profiler = 12;
          var SuspenseComponent = 13;
          var MemoComponent = 14;
          var SimpleMemoComponent = 15;
          var LazyComponent = 16;
          var IncompleteClassComponent = 17;
          var DehydratedFragment = 18;
          var SuspenseListComponent = 19;
          var ScopeComponent = 21;
          var OffscreenComponent = 22;
          var LegacyHiddenComponent = 23;
          var CacheComponent = 24;
          var TracingMarkerComponent = 25;
          var enableClientRenderFallbackOnTextMismatch = true;
          var enableNewReconciler = false;
          var enableLazyContextPropagation = false;
          var enableLegacyHidden = false;
          var enableSuspenseAvoidThisFallback = false;
          var disableCommentsAsDOMContainers = true;
          var enableCustomElementPropertySupport = false;
          var warnAboutStringRefs = false;
          var enableSchedulingProfiler = true;
          var enableProfilerTimer = true;
          var enableProfilerCommitHooks = true;
          var allNativeEvents = /* @__PURE__ */ new Set();
          var registrationNameDependencies = {};
          var possibleRegistrationNames = {};
          function registerTwoPhaseEvent(registrationName, dependencies) {
            registerDirectEvent(registrationName, dependencies);
            registerDirectEvent(registrationName + "Capture", dependencies);
          }
          function registerDirectEvent(registrationName, dependencies) {
            {
              if (registrationNameDependencies[registrationName]) {
                error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
              }
            }
            registrationNameDependencies[registrationName] = dependencies;
            {
              var lowerCasedName = registrationName.toLowerCase();
              possibleRegistrationNames[lowerCasedName] = registrationName;
              if (registrationName === "onDoubleClick") {
                possibleRegistrationNames.ondblclick = registrationName;
              }
            }
            for (var i2 = 0; i2 < dependencies.length; i2++) {
              allNativeEvents.add(dependencies[i2]);
            }
          }
          var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          function typeName(value) {
            {
              var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
              var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
              return type;
            }
          }
          function willCoercionThrow(value) {
            {
              try {
                testStringCoercion(value);
                return false;
              } catch (e27) {
                return true;
              }
            }
          }
          function testStringCoercion(value) {
            return "" + value;
          }
          function checkAttributeStringCoercion(value, attributeName) {
            {
              if (willCoercionThrow(value)) {
                error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
                return testStringCoercion(value);
              }
            }
          }
          function checkKeyStringCoercion(value) {
            {
              if (willCoercionThrow(value)) {
                error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
                return testStringCoercion(value);
              }
            }
          }
          function checkPropStringCoercion(value, propName) {
            {
              if (willCoercionThrow(value)) {
                error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
                return testStringCoercion(value);
              }
            }
          }
          function checkCSSPropertyStringCoercion(value, propName) {
            {
              if (willCoercionThrow(value)) {
                error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
                return testStringCoercion(value);
              }
            }
          }
          function checkHtmlStringCoercion(value) {
            {
              if (willCoercionThrow(value)) {
                error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
                return testStringCoercion(value);
              }
            }
          }
          function checkFormFieldValueStringCoercion(value) {
            {
              if (willCoercionThrow(value)) {
                error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
                return testStringCoercion(value);
              }
            }
          }
          var RESERVED = 0;
          var STRING = 1;
          var BOOLEANISH_STRING = 2;
          var BOOLEAN = 3;
          var OVERLOADED_BOOLEAN = 4;
          var NUMERIC = 5;
          var POSITIVE_NUMERIC = 6;
          var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
          var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
          var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
          var illegalAttributeNameCache = {};
          var validatedAttributeNameCache = {};
          function isAttributeNameSafe(attributeName) {
            if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
              return true;
            }
            if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
              return false;
            }
            if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
              validatedAttributeNameCache[attributeName] = true;
              return true;
            }
            illegalAttributeNameCache[attributeName] = true;
            {
              error("Invalid attribute name: `%s`", attributeName);
            }
            return false;
          }
          function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
            if (propertyInfo !== null) {
              return propertyInfo.type === RESERVED;
            }
            if (isCustomComponentTag) {
              return false;
            }
            if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
              return true;
            }
            return false;
          }
          function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
            if (propertyInfo !== null && propertyInfo.type === RESERVED) {
              return false;
            }
            switch (typeof value) {
              case "function":
              case "symbol":
                return true;
              case "boolean": {
                if (isCustomComponentTag) {
                  return false;
                }
                if (propertyInfo !== null) {
                  return !propertyInfo.acceptsBooleans;
                } else {
                  var prefix2 = name.toLowerCase().slice(0, 5);
                  return prefix2 !== "data-" && prefix2 !== "aria-";
                }
              }
              default:
                return false;
            }
          }
          function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
            if (value === null || typeof value === "undefined") {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
              return true;
            }
            if (isCustomComponentTag) {
              return false;
            }
            if (propertyInfo !== null) {
              switch (propertyInfo.type) {
                case BOOLEAN:
                  return !value;
                case OVERLOADED_BOOLEAN:
                  return value === false;
                case NUMERIC:
                  return isNaN(value);
                case POSITIVE_NUMERIC:
                  return isNaN(value) || value < 1;
              }
            }
            return false;
          }
          function getPropertyInfo(name) {
            return properties.hasOwnProperty(name) ? properties[name] : null;
          }
          function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
            this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
            this.attributeName = attributeName;
            this.attributeNamespace = attributeNamespace;
            this.mustUseProperty = mustUseProperty;
            this.propertyName = name;
            this.type = type;
            this.sanitizeURL = sanitizeURL2;
            this.removeEmptyString = removeEmptyString;
          }
          var properties = {};
          var reservedProps = [
            "children",
            "dangerouslySetInnerHTML",
            "defaultValue",
            "defaultChecked",
            "innerHTML",
            "suppressContentEditableWarning",
            "suppressHydrationWarning",
            "style"
          ];
          reservedProps.forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              RESERVED,
              false,
              name,
              null,
              false,
              false
            );
          });
          [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
            var name = _ref[0], attributeName = _ref[1];
            properties[name] = new PropertyInfoRecord(
              name,
              STRING,
              false,
              attributeName,
              null,
              false,
              false
            );
          });
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              BOOLEANISH_STRING,
              false,
              name.toLowerCase(),
              null,
              false,
              false
            );
          });
          ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              BOOLEANISH_STRING,
              false,
              name,
              null,
              false,
              false
            );
          });
          [
            "allowFullScreen",
            "async",
            "autoFocus",
            "autoPlay",
            "controls",
            "default",
            "defer",
            "disabled",
            "disablePictureInPicture",
            "disableRemotePlayback",
            "formNoValidate",
            "hidden",
            "loop",
            "noModule",
            "noValidate",
            "open",
            "playsInline",
            "readOnly",
            "required",
            "reversed",
            "scoped",
            "seamless",
            "itemScope"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              BOOLEAN,
              false,
              name.toLowerCase(),
              null,
              false,
              false
            );
          });
          [
            "checked",
            "multiple",
            "muted",
            "selected"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              BOOLEAN,
              true,
              name,
              null,
              false,
              false
            );
          });
          [
            "capture",
            "download"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              OVERLOADED_BOOLEAN,
              false,
              name,
              null,
              false,
              false
            );
          });
          [
            "cols",
            "rows",
            "size",
            "span"
          ].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              POSITIVE_NUMERIC,
              false,
              name,
              null,
              false,
              false
            );
          });
          ["rowSpan", "start"].forEach(function(name) {
            properties[name] = new PropertyInfoRecord(
              name,
              NUMERIC,
              false,
              name.toLowerCase(),
              null,
              false,
              false
            );
          });
          var CAMELIZE = /[\-\:]([a-z])/g;
          var capitalize = function(token) {
            return token[1].toUpperCase();
          };
          [
            "accent-height",
            "alignment-baseline",
            "arabic-form",
            "baseline-shift",
            "cap-height",
            "clip-path",
            "clip-rule",
            "color-interpolation",
            "color-interpolation-filters",
            "color-profile",
            "color-rendering",
            "dominant-baseline",
            "enable-background",
            "fill-opacity",
            "fill-rule",
            "flood-color",
            "flood-opacity",
            "font-family",
            "font-size",
            "font-size-adjust",
            "font-stretch",
            "font-style",
            "font-variant",
            "font-weight",
            "glyph-name",
            "glyph-orientation-horizontal",
            "glyph-orientation-vertical",
            "horiz-adv-x",
            "horiz-origin-x",
            "image-rendering",
            "letter-spacing",
            "lighting-color",
            "marker-end",
            "marker-mid",
            "marker-start",
            "overline-position",
            "overline-thickness",
            "paint-order",
            "panose-1",
            "pointer-events",
            "rendering-intent",
            "shape-rendering",
            "stop-color",
            "stop-opacity",
            "strikethrough-position",
            "strikethrough-thickness",
            "stroke-dasharray",
            "stroke-dashoffset",
            "stroke-linecap",
            "stroke-linejoin",
            "stroke-miterlimit",
            "stroke-opacity",
            "stroke-width",
            "text-anchor",
            "text-decoration",
            "text-rendering",
            "underline-position",
            "underline-thickness",
            "unicode-bidi",
            "unicode-range",
            "units-per-em",
            "v-alphabetic",
            "v-hanging",
            "v-ideographic",
            "v-mathematical",
            "vector-effect",
            "vert-adv-y",
            "vert-origin-x",
            "vert-origin-y",
            "word-spacing",
            "writing-mode",
            "xmlns:xlink",
            "x-height"
          ].forEach(function(attributeName) {
            var name = attributeName.replace(CAMELIZE, capitalize);
            properties[name] = new PropertyInfoRecord(
              name,
              STRING,
              false,
              attributeName,
              null,
              false,
              false
            );
          });
          [
            "xlink:actuate",
            "xlink:arcrole",
            "xlink:role",
            "xlink:show",
            "xlink:title",
            "xlink:type"
          ].forEach(function(attributeName) {
            var name = attributeName.replace(CAMELIZE, capitalize);
            properties[name] = new PropertyInfoRecord(
              name,
              STRING,
              false,
              attributeName,
              "http://www.w3.org/1999/xlink",
              false,
              false
            );
          });
          [
            "xml:base",
            "xml:lang",
            "xml:space"
          ].forEach(function(attributeName) {
            var name = attributeName.replace(CAMELIZE, capitalize);
            properties[name] = new PropertyInfoRecord(
              name,
              STRING,
              false,
              attributeName,
              "http://www.w3.org/XML/1998/namespace",
              false,
              false
            );
          });
          ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
            properties[attributeName] = new PropertyInfoRecord(
              attributeName,
              STRING,
              false,
              attributeName.toLowerCase(),
              null,
              false,
              false
            );
          });
          var xlinkHref = "xlinkHref";
          properties[xlinkHref] = new PropertyInfoRecord(
            "xlinkHref",
            STRING,
            false,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            true,
            false
          );
          ["src", "href", "action", "formAction"].forEach(function(attributeName) {
            properties[attributeName] = new PropertyInfoRecord(
              attributeName,
              STRING,
              false,
              attributeName.toLowerCase(),
              null,
              true,
              true
            );
          });
          var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
          var didWarn = false;
          function sanitizeURL(url) {
            {
              if (!didWarn && isJavaScriptProtocol.test(url)) {
                didWarn = true;
                error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
              }
            }
          }
          function getValueForProperty(node, name, expected, propertyInfo) {
            {
              if (propertyInfo.mustUseProperty) {
                var propertyName = propertyInfo.propertyName;
                return node[propertyName];
              } else {
                {
                  checkAttributeStringCoercion(expected, name);
                }
                if (propertyInfo.sanitizeURL) {
                  sanitizeURL("" + expected);
                }
                var attributeName = propertyInfo.attributeName;
                var stringValue = null;
                if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                  if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === "") {
                      return true;
                    }
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                      return value;
                    }
                    if (value === "" + expected) {
                      return expected;
                    }
                    return value;
                  }
                } else if (node.hasAttribute(attributeName)) {
                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                    return node.getAttribute(attributeName);
                  }
                  if (propertyInfo.type === BOOLEAN) {
                    return expected;
                  }
                  stringValue = node.getAttribute(attributeName);
                }
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                  return stringValue === null ? expected : stringValue;
                } else if (stringValue === "" + expected) {
                  return expected;
                } else {
                  return stringValue;
                }
              }
            }
          }
          function getValueForAttribute(node, name, expected, isCustomComponentTag) {
            {
              if (!isAttributeNameSafe(name)) {
                return;
              }
              if (!node.hasAttribute(name)) {
                return expected === void 0 ? void 0 : null;
              }
              var value = node.getAttribute(name);
              {
                checkAttributeStringCoercion(expected, name);
              }
              if (value === "" + expected) {
                return expected;
              }
              return value;
            }
          }
          function setValueForProperty(node, name, value, isCustomComponentTag) {
            var propertyInfo = getPropertyInfo(name);
            if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
              return;
            }
            if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
              value = null;
            }
            if (isCustomComponentTag || propertyInfo === null) {
              if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) {
                  node.removeAttribute(_attributeName);
                } else {
                  {
                    checkAttributeStringCoercion(value, name);
                  }
                  node.setAttribute(_attributeName, "" + value);
                }
              }
              return;
            }
            var mustUseProperty = propertyInfo.mustUseProperty;
            if (mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : "";
              } else {
                node[propertyName] = value;
              }
              return;
            }
            var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
            if (value === null) {
              node.removeAttribute(attributeName);
            } else {
              var _type = propertyInfo.type;
              var attributeValue;
              if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
                attributeValue = "";
              } else {
                {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  attributeValue = "" + value;
                }
                if (propertyInfo.sanitizeURL) {
                  sanitizeURL(attributeValue.toString());
                }
              }
              if (attributeNamespace) {
                node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
              } else {
                node.setAttribute(attributeName, attributeValue);
              }
            }
          }
          var REACT_ELEMENT_TYPE = Symbol.for("react.element");
          var REACT_PORTAL_TYPE = Symbol.for("react.portal");
          var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
          var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
          var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
          var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
          var REACT_CONTEXT_TYPE = Symbol.for("react.context");
          var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
          var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
          var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
          var REACT_MEMO_TYPE = Symbol.for("react.memo");
          var REACT_LAZY_TYPE = Symbol.for("react.lazy");
          var REACT_SCOPE_TYPE = Symbol.for("react.scope");
          var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
          var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
          var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
          var REACT_CACHE_TYPE = Symbol.for("react.cache");
          var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
          var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var assign = Object.assign;
          var disabledDepth = 0;
          var prevLog;
          var prevInfo;
          var prevWarn;
          var prevError;
          var prevGroup;
          var prevGroupCollapsed;
          var prevGroupEnd;
          function disabledLog() {
          }
          disabledLog.__reactDisabledLog = true;
          function disableLogs() {
            {
              if (disabledDepth === 0) {
                prevLog = console.log;
                prevInfo = console.info;
                prevWarn = console.warn;
                prevError = console.error;
                prevGroup = console.group;
                prevGroupCollapsed = console.groupCollapsed;
                prevGroupEnd = console.groupEnd;
                var props = {
                  configurable: true,
                  enumerable: true,
                  value: disabledLog,
                  writable: true
                };
                Object.defineProperties(console, {
                  info: props,
                  log: props,
                  warn: props,
                  error: props,
                  group: props,
                  groupCollapsed: props,
                  groupEnd: props
                });
              }
              disabledDepth++;
            }
          }
          function reenableLogs() {
            {
              disabledDepth--;
              if (disabledDepth === 0) {
                var props = {
                  configurable: true,
                  enumerable: true,
                  writable: true
                };
                Object.defineProperties(console, {
                  log: assign({}, props, {
                    value: prevLog
                  }),
                  info: assign({}, props, {
                    value: prevInfo
                  }),
                  warn: assign({}, props, {
                    value: prevWarn
                  }),
                  error: assign({}, props, {
                    value: prevError
                  }),
                  group: assign({}, props, {
                    value: prevGroup
                  }),
                  groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                  }),
                  groupEnd: assign({}, props, {
                    value: prevGroupEnd
                  })
                });
              }
              if (disabledDepth < 0) {
                error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
              }
            }
          }
          var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
          var prefix;
          function describeBuiltInComponentFrame(name, source, ownerFn) {
            {
              if (prefix === void 0) {
                try {
                  throw Error();
                } catch (x2) {
                  var match = x2.stack.trim().match(/\n( *(at )?)/);
                  prefix = match && match[1] || "";
                }
              }
              return "\n" + prefix + name;
            }
          }
          var reentry = false;
          var componentFrameCache;
          {
            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
            componentFrameCache = new PossiblyWeakMap();
          }
          function describeNativeComponentFrame(fn2, construct) {
            if (!fn2 || reentry) {
              return "";
            }
            {
              var frame = componentFrameCache.get(fn2);
              if (frame !== void 0) {
                return frame;
              }
            }
            var control;
            reentry = true;
            var previousPrepareStackTrace = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            var previousDispatcher;
            {
              previousDispatcher = ReactCurrentDispatcher.current;
              ReactCurrentDispatcher.current = null;
              disableLogs();
            }
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x2) {
                    control = x2;
                  }
                  Reflect.construct(fn2, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x2) {
                    control = x2;
                  }
                  fn2.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x2) {
                  control = x2;
                }
                fn2();
              }
            } catch (sample) {
              if (sample && control && typeof sample.stack === "string") {
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s2 = sampleLines.length - 1;
                var c2 = controlLines.length - 1;
                while (s2 >= 1 && c2 >= 0 && sampleLines[s2] !== controlLines[c2]) {
                  c2--;
                }
                for (; s2 >= 1 && c2 >= 0; s2--, c2--) {
                  if (sampleLines[s2] !== controlLines[c2]) {
                    if (s2 !== 1 || c2 !== 1) {
                      do {
                        s2--;
                        c2--;
                        if (c2 < 0 || sampleLines[s2] !== controlLines[c2]) {
                          var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                          if (fn2.displayName && _frame.includes("<anonymous>")) {
                            _frame = _frame.replace("<anonymous>", fn2.displayName);
                          }
                          {
                            if (typeof fn2 === "function") {
                              componentFrameCache.set(fn2, _frame);
                            }
                          }
                          return _frame;
                        }
                      } while (s2 >= 1 && c2 >= 0);
                    }
                    break;
                  }
                }
              }
            } finally {
              reentry = false;
              {
                ReactCurrentDispatcher.current = previousDispatcher;
                reenableLogs();
              }
              Error.prepareStackTrace = previousPrepareStackTrace;
            }
            var name = fn2 ? fn2.displayName || fn2.name : "";
            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
            {
              if (typeof fn2 === "function") {
                componentFrameCache.set(fn2, syntheticFrame);
              }
            }
            return syntheticFrame;
          }
          function describeClassComponentFrame(ctor, source, ownerFn) {
            {
              return describeNativeComponentFrame(ctor, true);
            }
          }
          function describeFunctionComponentFrame(fn2, source, ownerFn) {
            {
              return describeNativeComponentFrame(fn2, false);
            }
          }
          function shouldConstruct(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
            if (type == null) {
              return "";
            }
            if (typeof type === "function") {
              {
                return describeNativeComponentFrame(type, shouldConstruct(type));
              }
            }
            if (typeof type === "string") {
              return describeBuiltInComponentFrame(type);
            }
            switch (type) {
              case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
              case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_FORWARD_REF_TYPE:
                  return describeFunctionComponentFrame(type.render);
                case REACT_MEMO_TYPE:
                  return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                  } catch (x2) {
                  }
                }
              }
            }
            return "";
          }
          function describeFiber(fiber) {
            var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
            var source = fiber._debugSource;
            switch (fiber.tag) {
              case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
              case LazyComponent:
                return describeBuiltInComponentFrame("Lazy");
              case SuspenseComponent:
                return describeBuiltInComponentFrame("Suspense");
              case SuspenseListComponent:
                return describeBuiltInComponentFrame("SuspenseList");
              case FunctionComponent:
              case IndeterminateComponent:
              case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
              case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
              case ClassComponent:
                return describeClassComponentFrame(fiber.type);
              default:
                return "";
            }
          }
          function getStackByFiberInDevAndProd(workInProgress2) {
            try {
              var info = "";
              var node = workInProgress2;
              do {
                info += describeFiber(node);
                node = node.return;
              } while (node);
              return info;
            } catch (x2) {
              return "\nError generating stack: " + x2.message + "\n" + x2.stack;
            }
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var displayName = outerType.displayName;
            if (displayName) {
              return displayName;
            }
            var functionName = innerType.displayName || innerType.name || "";
            return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
          }
          function getContextName(type) {
            return type.displayName || "Context";
          }
          function getComponentNameFromType(type) {
            if (type == null) {
              return null;
            }
            {
              if (typeof type.tag === "number") {
                error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type === "function") {
              return type.displayName || type.name || null;
            }
            if (typeof type === "string") {
              return type;
            }
            switch (type) {
              case REACT_FRAGMENT_TYPE:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case REACT_PROFILER_TYPE:
                return "Profiler";
              case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
              case REACT_SUSPENSE_TYPE:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  var context = type;
                  return getContextName(context) + ".Consumer";
                case REACT_PROVIDER_TYPE:
                  var provider = type;
                  return getContextName(provider._context) + ".Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type, type.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  var outerName = type.displayName || null;
                  if (outerName !== null) {
                    return outerName;
                  }
                  return getComponentNameFromType(type.type) || "Memo";
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return getComponentNameFromType(init(payload));
                  } catch (x2) {
                    return null;
                  }
                }
              }
            }
            return null;
          }
          function getWrappedName$1(outerType, innerType, wrapperName) {
            var functionName = innerType.displayName || innerType.name || "";
            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
          }
          function getContextName$1(type) {
            return type.displayName || "Context";
          }
          function getComponentNameFromFiber(fiber) {
            var tag = fiber.tag, type = fiber.type;
            switch (tag) {
              case CacheComponent:
                return "Cache";
              case ContextConsumer:
                var context = type;
                return getContextName$1(context) + ".Consumer";
              case ContextProvider:
                var provider = type;
                return getContextName$1(provider._context) + ".Provider";
              case DehydratedFragment:
                return "DehydratedFragment";
              case ForwardRef:
                return getWrappedName$1(type, type.render, "ForwardRef");
              case Fragment:
                return "Fragment";
              case HostComponent:
                return type;
              case HostPortal:
                return "Portal";
              case HostRoot:
                return "Root";
              case HostText:
                return "Text";
              case LazyComponent:
                return getComponentNameFromType(type);
              case Mode:
                if (type === REACT_STRICT_MODE_TYPE) {
                  return "StrictMode";
                }
                return "Mode";
              case OffscreenComponent:
                return "Offscreen";
              case Profiler:
                return "Profiler";
              case ScopeComponent:
                return "Scope";
              case SuspenseComponent:
                return "Suspense";
              case SuspenseListComponent:
                return "SuspenseList";
              case TracingMarkerComponent:
                return "TracingMarker";
              case ClassComponent:
              case FunctionComponent:
              case IncompleteClassComponent:
              case IndeterminateComponent:
              case MemoComponent:
              case SimpleMemoComponent:
                if (typeof type === "function") {
                  return type.displayName || type.name || null;
                }
                if (typeof type === "string") {
                  return type;
                }
                break;
            }
            return null;
          }
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
          var current = null;
          var isRendering = false;
          function getCurrentFiberOwnerNameInDevOrNull() {
            {
              if (current === null) {
                return null;
              }
              var owner = current._debugOwner;
              if (owner !== null && typeof owner !== "undefined") {
                return getComponentNameFromFiber(owner);
              }
            }
            return null;
          }
          function getCurrentFiberStackInDev() {
            {
              if (current === null) {
                return "";
              }
              return getStackByFiberInDevAndProd(current);
            }
          }
          function resetCurrentFiber() {
            {
              ReactDebugCurrentFrame.getCurrentStack = null;
              current = null;
              isRendering = false;
            }
          }
          function setCurrentFiber(fiber) {
            {
              ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
              current = fiber;
              isRendering = false;
            }
          }
          function getCurrentFiber() {
            {
              return current;
            }
          }
          function setIsRendering(rendering) {
            {
              isRendering = rendering;
            }
          }
          function toString(value) {
            return "" + value;
          }
          function getToStringValue(value) {
            switch (typeof value) {
              case "boolean":
              case "number":
              case "string":
              case "undefined":
                return value;
              case "object":
                {
                  checkFormFieldValueStringCoercion(value);
                }
                return value;
              default:
                return "";
            }
          }
          var hasReadOnlyValue = {
            button: true,
            checkbox: true,
            image: true,
            hidden: true,
            radio: true,
            reset: true,
            submit: true
          };
          function checkControlledValueProps(tagName, props) {
            {
              if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
                error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
              }
              if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
                error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
              }
            }
          }
          function isCheckable(elem) {
            var type = elem.type;
            var nodeName = elem.nodeName;
            return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
          }
          function getTracker(node) {
            return node._valueTracker;
          }
          function detachTracker(node) {
            node._valueTracker = null;
          }
          function getValueFromNode(node) {
            var value = "";
            if (!node) {
              return value;
            }
            if (isCheckable(node)) {
              value = node.checked ? "true" : "false";
            } else {
              value = node.value;
            }
            return value;
          }
          function trackValueOnNode(node) {
            var valueField = isCheckable(node) ? "checked" : "value";
            var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
            {
              checkFormFieldValueStringCoercion(node[valueField]);
            }
            var currentValue = "" + node[valueField];
            if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
              return;
            }
            var get2 = descriptor.get, set2 = descriptor.set;
            Object.defineProperty(node, valueField, {
              configurable: true,
              get: function() {
                return get2.call(this);
              },
              set: function(value) {
                {
                  checkFormFieldValueStringCoercion(value);
                }
                currentValue = "" + value;
                set2.call(this, value);
              }
            });
            Object.defineProperty(node, valueField, {
              enumerable: descriptor.enumerable
            });
            var tracker = {
              getValue: function() {
                return currentValue;
              },
              setValue: function(value) {
                {
                  checkFormFieldValueStringCoercion(value);
                }
                currentValue = "" + value;
              },
              stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
              }
            };
            return tracker;
          }
          function track(node) {
            if (getTracker(node)) {
              return;
            }
            node._valueTracker = trackValueOnNode(node);
          }
          function updateValueIfChanged(node) {
            if (!node) {
              return false;
            }
            var tracker = getTracker(node);
            if (!tracker) {
              return true;
            }
            var lastValue = tracker.getValue();
            var nextValue = getValueFromNode(node);
            if (nextValue !== lastValue) {
              tracker.setValue(nextValue);
              return true;
            }
            return false;
          }
          function getActiveElement(doc) {
            doc = doc || (typeof document !== "undefined" ? document : void 0);
            if (typeof doc === "undefined") {
              return null;
            }
            try {
              return doc.activeElement || doc.body;
            } catch (e27) {
              return doc.body;
            }
          }
          var didWarnValueDefaultValue = false;
          var didWarnCheckedDefaultChecked = false;
          var didWarnControlledToUncontrolled = false;
          var didWarnUncontrolledToControlled = false;
          function isControlled(props) {
            var usesChecked = props.type === "checkbox" || props.type === "radio";
            return usesChecked ? props.checked != null : props.value != null;
          }
          function getHostProps(element, props) {
            var node = element;
            var checked = props.checked;
            var hostProps = assign({}, props, {
              defaultChecked: void 0,
              defaultValue: void 0,
              value: void 0,
              checked: checked != null ? checked : node._wrapperState.initialChecked
            });
            return hostProps;
          }
          function initWrapperState(element, props) {
            {
              checkControlledValueProps("input", props);
              if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
                error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
                didWarnCheckedDefaultChecked = true;
              }
              if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
                error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
                didWarnValueDefaultValue = true;
              }
            }
            var node = element;
            var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
            node._wrapperState = {
              initialChecked: props.checked != null ? props.checked : props.defaultChecked,
              initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
              controlled: isControlled(props)
            };
          }
          function updateChecked(element, props) {
            var node = element;
            var checked = props.checked;
            if (checked != null) {
              setValueForProperty(node, "checked", checked, false);
            }
          }
          function updateWrapper(element, props) {
            var node = element;
            {
              var controlled = isControlled(props);
              if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
                error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
                didWarnUncontrolledToControlled = true;
              }
              if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
                error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
                didWarnControlledToUncontrolled = true;
              }
            }
            updateChecked(element, props);
            var value = getToStringValue(props.value);
            var type = props.type;
            if (value != null) {
              if (type === "number") {
                if (value === 0 && node.value === "" || node.value != value) {
                  node.value = toString(value);
                }
              } else if (node.value !== toString(value)) {
                node.value = toString(value);
              }
            } else if (type === "submit" || type === "reset") {
              node.removeAttribute("value");
              return;
            }
            {
              if (props.hasOwnProperty("value")) {
                setDefaultValue(node, props.type, value);
              } else if (props.hasOwnProperty("defaultValue")) {
                setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
              }
            }
            {
              if (props.checked == null && props.defaultChecked != null) {
                node.defaultChecked = !!props.defaultChecked;
              }
            }
          }
          function postMountWrapper(element, props, isHydrating2) {
            var node = element;
            if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
              var type = props.type;
              var isButton = type === "submit" || type === "reset";
              if (isButton && (props.value === void 0 || props.value === null)) {
                return;
              }
              var initialValue = toString(node._wrapperState.initialValue);
              if (!isHydrating2) {
                {
                  if (initialValue !== node.value) {
                    node.value = initialValue;
                  }
                }
              }
              {
                node.defaultValue = initialValue;
              }
            }
            var name = node.name;
            if (name !== "") {
              node.name = "";
            }
            {
              node.defaultChecked = !node.defaultChecked;
              node.defaultChecked = !!node._wrapperState.initialChecked;
            }
            if (name !== "") {
              node.name = name;
            }
          }
          function restoreControlledState(element, props) {
            var node = element;
            updateWrapper(node, props);
            updateNamedCousins(node, props);
          }
          function updateNamedCousins(rootNode, props) {
            var name = props.name;
            if (props.type === "radio" && name != null) {
              var queryRoot = rootNode;
              while (queryRoot.parentNode) {
                queryRoot = queryRoot.parentNode;
              }
              {
                checkAttributeStringCoercion(name, "name");
              }
              var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
              for (var i2 = 0; i2 < group.length; i2++) {
                var otherNode = group[i2];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                  continue;
                }
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) {
                  throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                }
                updateValueIfChanged(otherNode);
                updateWrapper(otherNode, otherProps);
              }
            }
          }
          function setDefaultValue(node, type, value) {
            if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
              if (value == null) {
                node.defaultValue = toString(node._wrapperState.initialValue);
              } else if (node.defaultValue !== toString(value)) {
                node.defaultValue = toString(value);
              }
            }
          }
          var didWarnSelectedSetOnOption = false;
          var didWarnInvalidChild = false;
          var didWarnInvalidInnerHTML = false;
          function validateProps(element, props) {
            {
              if (props.value == null) {
                if (typeof props.children === "object" && props.children !== null) {
                  React6.Children.forEach(props.children, function(child) {
                    if (child == null) {
                      return;
                    }
                    if (typeof child === "string" || typeof child === "number") {
                      return;
                    }
                    if (!didWarnInvalidChild) {
                      didWarnInvalidChild = true;
                      error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                    }
                  });
                } else if (props.dangerouslySetInnerHTML != null) {
                  if (!didWarnInvalidInnerHTML) {
                    didWarnInvalidInnerHTML = true;
                    error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                  }
                }
              }
              if (props.selected != null && !didWarnSelectedSetOnOption) {
                error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                didWarnSelectedSetOnOption = true;
              }
            }
          }
          function postMountWrapper$1(element, props) {
            if (props.value != null) {
              element.setAttribute("value", toString(getToStringValue(props.value)));
            }
          }
          var isArrayImpl = Array.isArray;
          function isArray(a2) {
            return isArrayImpl(a2);
          }
          var didWarnValueDefaultValue$1;
          {
            didWarnValueDefaultValue$1 = false;
          }
          function getDeclarationErrorAddendum() {
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) {
              return "\n\nCheck the render method of `" + ownerName + "`.";
            }
            return "";
          }
          var valuePropNames = ["value", "defaultValue"];
          function checkSelectPropTypes(props) {
            {
              checkControlledValueProps("select", props);
              for (var i2 = 0; i2 < valuePropNames.length; i2++) {
                var propName = valuePropNames[i2];
                if (props[propName] == null) {
                  continue;
                }
                var propNameIsArray = isArray(props[propName]);
                if (props.multiple && !propNameIsArray) {
                  error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
                } else if (!props.multiple && propNameIsArray) {
                  error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
                }
              }
            }
          }
          function updateOptions(node, multiple, propValue, setDefaultSelected) {
            var options2 = node.options;
            if (multiple) {
              var selectedValues = propValue;
              var selectedValue = {};
              for (var i2 = 0; i2 < selectedValues.length; i2++) {
                selectedValue["$" + selectedValues[i2]] = true;
              }
              for (var _i2 = 0; _i2 < options2.length; _i2++) {
                var selected = selectedValue.hasOwnProperty("$" + options2[_i2].value);
                if (options2[_i2].selected !== selected) {
                  options2[_i2].selected = selected;
                }
                if (selected && setDefaultSelected) {
                  options2[_i2].defaultSelected = true;
                }
              }
            } else {
              var _selectedValue = toString(getToStringValue(propValue));
              var defaultSelected = null;
              for (var _i22 = 0; _i22 < options2.length; _i22++) {
                if (options2[_i22].value === _selectedValue) {
                  options2[_i22].selected = true;
                  if (setDefaultSelected) {
                    options2[_i22].defaultSelected = true;
                  }
                  return;
                }
                if (defaultSelected === null && !options2[_i22].disabled) {
                  defaultSelected = options2[_i22];
                }
              }
              if (defaultSelected !== null) {
                defaultSelected.selected = true;
              }
            }
          }
          function getHostProps$1(element, props) {
            return assign({}, props, {
              value: void 0
            });
          }
          function initWrapperState$1(element, props) {
            var node = element;
            {
              checkSelectPropTypes(props);
            }
            node._wrapperState = {
              wasMultiple: !!props.multiple
            };
            {
              if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
                error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
                didWarnValueDefaultValue$1 = true;
              }
            }
          }
          function postMountWrapper$2(element, props) {
            var node = element;
            node.multiple = !!props.multiple;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            }
          }
          function postUpdateWrapper(element, props) {
            var node = element;
            var wasMultiple = node._wrapperState.wasMultiple;
            node._wrapperState.wasMultiple = !!props.multiple;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (wasMultiple !== !!props.multiple) {
              if (props.defaultValue != null) {
                updateOptions(node, !!props.multiple, props.defaultValue, true);
              } else {
                updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
              }
            }
          }
          function restoreControlledState$1(element, props) {
            var node = element;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            }
          }
          var didWarnValDefaultVal = false;
          function getHostProps$2(element, props) {
            var node = element;
            if (props.dangerouslySetInnerHTML != null) {
              throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
            }
            var hostProps = assign({}, props, {
              value: void 0,
              defaultValue: void 0,
              children: toString(node._wrapperState.initialValue)
            });
            return hostProps;
          }
          function initWrapperState$2(element, props) {
            var node = element;
            {
              checkControlledValueProps("textarea", props);
              if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
                error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
                didWarnValDefaultVal = true;
              }
            }
            var initialValue = props.value;
            if (initialValue == null) {
              var children = props.children, defaultValue = props.defaultValue;
              if (children != null) {
                {
                  error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                }
                {
                  if (defaultValue != null) {
                    throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                  }
                  if (isArray(children)) {
                    if (children.length > 1) {
                      throw new Error("<textarea> can only have at most one child.");
                    }
                    children = children[0];
                  }
                  defaultValue = children;
                }
              }
              if (defaultValue == null) {
                defaultValue = "";
              }
              initialValue = defaultValue;
            }
            node._wrapperState = {
              initialValue: getToStringValue(initialValue)
            };
          }
          function updateWrapper$1(element, props) {
            var node = element;
            var value = getToStringValue(props.value);
            var defaultValue = getToStringValue(props.defaultValue);
            if (value != null) {
              var newValue = toString(value);
              if (newValue !== node.value) {
                node.value = newValue;
              }
              if (props.defaultValue == null && node.defaultValue !== newValue) {
                node.defaultValue = newValue;
              }
            }
            if (defaultValue != null) {
              node.defaultValue = toString(defaultValue);
            }
          }
          function postMountWrapper$3(element, props) {
            var node = element;
            var textContent = node.textContent;
            if (textContent === node._wrapperState.initialValue) {
              if (textContent !== "" && textContent !== null) {
                node.value = textContent;
              }
            }
          }
          function restoreControlledState$2(element, props) {
            updateWrapper$1(element, props);
          }
          var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
          var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
          var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
          function getIntrinsicNamespace(type) {
            switch (type) {
              case "svg":
                return SVG_NAMESPACE;
              case "math":
                return MATH_NAMESPACE;
              default:
                return HTML_NAMESPACE;
            }
          }
          function getChildNamespace(parentNamespace, type) {
            if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
              return getIntrinsicNamespace(type);
            }
            if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
              return HTML_NAMESPACE;
            }
            return parentNamespace;
          }
          var createMicrosoftUnsafeLocalFunction = function(func) {
            if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
              return function(arg0, arg1, arg2, arg3) {
                MSApp.execUnsafeLocalFunction(function() {
                  return func(arg0, arg1, arg2, arg3);
                });
              };
            } else {
              return func;
            }
          };
          var reusableSVGContainer;
          var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
            if (node.namespaceURI === SVG_NAMESPACE) {
              if (!("innerHTML" in node)) {
                reusableSVGContainer = reusableSVGContainer || document.createElement("div");
                reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
                var svgNode = reusableSVGContainer.firstChild;
                while (node.firstChild) {
                  node.removeChild(node.firstChild);
                }
                while (svgNode.firstChild) {
                  node.appendChild(svgNode.firstChild);
                }
                return;
              }
            }
            node.innerHTML = html;
          });
          var ELEMENT_NODE = 1;
          var TEXT_NODE = 3;
          var COMMENT_NODE = 8;
          var DOCUMENT_NODE = 9;
          var DOCUMENT_FRAGMENT_NODE = 11;
          var setTextContent = function(node, text) {
            if (text) {
              var firstChild = node.firstChild;
              if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
              }
            }
            node.textContent = text;
          };
          var shorthandToLonghand = {
            animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
            background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
            backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
            border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
            borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
            borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
            borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
            borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
            borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
            borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
            borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
            borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
            borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
            borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
            borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
            borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
            borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
            columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
            columns: ["columnCount", "columnWidth"],
            flex: ["flexBasis", "flexGrow", "flexShrink"],
            flexFlow: ["flexDirection", "flexWrap"],
            font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
            fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
            gap: ["columnGap", "rowGap"],
            grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
            gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
            gridColumn: ["gridColumnEnd", "gridColumnStart"],
            gridColumnGap: ["columnGap"],
            gridGap: ["columnGap", "rowGap"],
            gridRow: ["gridRowEnd", "gridRowStart"],
            gridRowGap: ["rowGap"],
            gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
            listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
            margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
            marker: ["markerEnd", "markerMid", "markerStart"],
            mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
            maskPosition: ["maskPositionX", "maskPositionY"],
            outline: ["outlineColor", "outlineStyle", "outlineWidth"],
            overflow: ["overflowX", "overflowY"],
            padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
            placeContent: ["alignContent", "justifyContent"],
            placeItems: ["alignItems", "justifyItems"],
            placeSelf: ["alignSelf", "justifySelf"],
            textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
            textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
            transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
            wordWrap: ["overflowWrap"]
          };
          var isUnitlessNumber = {
            animationIterationCount: true,
            aspectRatio: true,
            borderImageOutset: true,
            borderImageSlice: true,
            borderImageWidth: true,
            boxFlex: true,
            boxFlexGroup: true,
            boxOrdinalGroup: true,
            columnCount: true,
            columns: true,
            flex: true,
            flexGrow: true,
            flexPositive: true,
            flexShrink: true,
            flexNegative: true,
            flexOrder: true,
            gridArea: true,
            gridRow: true,
            gridRowEnd: true,
            gridRowSpan: true,
            gridRowStart: true,
            gridColumn: true,
            gridColumnEnd: true,
            gridColumnSpan: true,
            gridColumnStart: true,
            fontWeight: true,
            lineClamp: true,
            lineHeight: true,
            opacity: true,
            order: true,
            orphans: true,
            tabSize: true,
            widows: true,
            zIndex: true,
            zoom: true,
            fillOpacity: true,
            floodOpacity: true,
            stopOpacity: true,
            strokeDasharray: true,
            strokeDashoffset: true,
            strokeMiterlimit: true,
            strokeOpacity: true,
            strokeWidth: true
          };
          function prefixKey(prefix2, key) {
            return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
          }
          var prefixes = ["Webkit", "ms", "Moz", "O"];
          Object.keys(isUnitlessNumber).forEach(function(prop) {
            prefixes.forEach(function(prefix2) {
              isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
            });
          });
          function dangerousStyleValue(name, value, isCustomProperty) {
            var isEmpty = value == null || typeof value === "boolean" || value === "";
            if (isEmpty) {
              return "";
            }
            if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
              return value + "px";
            }
            {
              checkCSSPropertyStringCoercion(value, name);
            }
            return ("" + value).trim();
          }
          var uppercasePattern = /([A-Z])/g;
          var msPattern = /^ms-/;
          function hyphenateStyleName(name) {
            return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
          }
          var warnValidStyle = function() {
          };
          {
            var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
            var msPattern$1 = /^-ms-/;
            var hyphenPattern = /-(.)/g;
            var badStyleValueWithSemicolonPattern = /;\s*$/;
            var warnedStyleNames = {};
            var warnedStyleValues = {};
            var warnedForNaNValue = false;
            var warnedForInfinityValue = false;
            var camelize = function(string) {
              return string.replace(hyphenPattern, function(_2, character) {
                return character.toUpperCase();
              });
            };
            var warnHyphenatedStyleName = function(name) {
              if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
                return;
              }
              warnedStyleNames[name] = true;
              error(
                "Unsupported style property %s. Did you mean %s?",
                name,
                camelize(name.replace(msPattern$1, "ms-"))
              );
            };
            var warnBadVendoredStyleName = function(name) {
              if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
                return;
              }
              warnedStyleNames[name] = true;
              error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
            };
            var warnStyleValueWithSemicolon = function(name, value) {
              if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
                return;
              }
              warnedStyleValues[value] = true;
              error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
            };
            var warnStyleValueIsNaN = function(name, value) {
              if (warnedForNaNValue) {
                return;
              }
              warnedForNaNValue = true;
              error("`NaN` is an invalid value for the `%s` css style property.", name);
            };
            var warnStyleValueIsInfinity = function(name, value) {
              if (warnedForInfinityValue) {
                return;
              }
              warnedForInfinityValue = true;
              error("`Infinity` is an invalid value for the `%s` css style property.", name);
            };
            warnValidStyle = function(name, value) {
              if (name.indexOf("-") > -1) {
                warnHyphenatedStyleName(name);
              } else if (badVendoredStyleNamePattern.test(name)) {
                warnBadVendoredStyleName(name);
              } else if (badStyleValueWithSemicolonPattern.test(value)) {
                warnStyleValueWithSemicolon(name, value);
              }
              if (typeof value === "number") {
                if (isNaN(value)) {
                  warnStyleValueIsNaN(name, value);
                } else if (!isFinite(value)) {
                  warnStyleValueIsInfinity(name, value);
                }
              }
            };
          }
          var warnValidStyle$1 = warnValidStyle;
          function createDangerousStringForStyles(styles) {
            {
              var serialized = "";
              var delimiter = "";
              for (var styleName in styles) {
                if (!styles.hasOwnProperty(styleName)) {
                  continue;
                }
                var styleValue = styles[styleName];
                if (styleValue != null) {
                  var isCustomProperty = styleName.indexOf("--") === 0;
                  serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                  serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                  delimiter = ";";
                }
              }
              return serialized || null;
            }
          }
          function setValueForStyles(node, styles) {
            var style2 = node.style;
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var isCustomProperty = styleName.indexOf("--") === 0;
              {
                if (!isCustomProperty) {
                  warnValidStyle$1(styleName, styles[styleName]);
                }
              }
              var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
              if (styleName === "float") {
                styleName = "cssFloat";
              }
              if (isCustomProperty) {
                style2.setProperty(styleName, styleValue);
              } else {
                style2[styleName] = styleValue;
              }
            }
          }
          function isValueEmpty(value) {
            return value == null || typeof value === "boolean" || value === "";
          }
          function expandShorthandMap(styles) {
            var expanded = {};
            for (var key in styles) {
              var longhands = shorthandToLonghand[key] || [key];
              for (var i2 = 0; i2 < longhands.length; i2++) {
                expanded[longhands[i2]] = key;
              }
            }
            return expanded;
          }
          function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
            {
              if (!nextStyles) {
                return;
              }
              var expandedUpdates = expandShorthandMap(styleUpdates);
              var expandedStyles = expandShorthandMap(nextStyles);
              var warnedAbout = {};
              for (var key in expandedUpdates) {
                var originalKey = expandedUpdates[key];
                var correctOriginalKey = expandedStyles[key];
                if (correctOriginalKey && originalKey !== correctOriginalKey) {
                  var warningKey = originalKey + "," + correctOriginalKey;
                  if (warnedAbout[warningKey]) {
                    continue;
                  }
                  warnedAbout[warningKey] = true;
                  error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
                }
              }
            }
          }
          var omittedCloseTags = {
            area: true,
            base: true,
            br: true,
            col: true,
            embed: true,
            hr: true,
            img: true,
            input: true,
            keygen: true,
            link: true,
            meta: true,
            param: true,
            source: true,
            track: true,
            wbr: true
          };
          var voidElementTags = assign({
            menuitem: true
          }, omittedCloseTags);
          var HTML = "__html";
          function assertValidProps(tag, props) {
            if (!props) {
              return;
            }
            if (voidElementTags[tag]) {
              if (props.children != null || props.dangerouslySetInnerHTML != null) {
                throw new Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              }
            }
            if (props.dangerouslySetInnerHTML != null) {
              if (props.children != null) {
                throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
              }
              if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) {
                throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
              }
            }
            {
              if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
                error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
              }
            }
            if (props.style != null && typeof props.style !== "object") {
              throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
            }
          }
          function isCustomComponent(tagName, props) {
            if (tagName.indexOf("-") === -1) {
              return typeof props.is === "string";
            }
            switch (tagName) {
              case "annotation-xml":
              case "color-profile":
              case "font-face":
              case "font-face-src":
              case "font-face-uri":
              case "font-face-format":
              case "font-face-name":
              case "missing-glyph":
                return false;
              default:
                return true;
            }
          }
          var possibleStandardNames = {
            accept: "accept",
            acceptcharset: "acceptCharset",
            "accept-charset": "acceptCharset",
            accesskey: "accessKey",
            action: "action",
            allowfullscreen: "allowFullScreen",
            alt: "alt",
            as: "as",
            async: "async",
            autocapitalize: "autoCapitalize",
            autocomplete: "autoComplete",
            autocorrect: "autoCorrect",
            autofocus: "autoFocus",
            autoplay: "autoPlay",
            autosave: "autoSave",
            capture: "capture",
            cellpadding: "cellPadding",
            cellspacing: "cellSpacing",
            challenge: "challenge",
            charset: "charSet",
            checked: "checked",
            children: "children",
            cite: "cite",
            class: "className",
            classid: "classID",
            classname: "className",
            cols: "cols",
            colspan: "colSpan",
            content: "content",
            contenteditable: "contentEditable",
            contextmenu: "contextMenu",
            controls: "controls",
            controlslist: "controlsList",
            coords: "coords",
            crossorigin: "crossOrigin",
            dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
            data: "data",
            datetime: "dateTime",
            default: "default",
            defaultchecked: "defaultChecked",
            defaultvalue: "defaultValue",
            defer: "defer",
            dir: "dir",
            disabled: "disabled",
            disablepictureinpicture: "disablePictureInPicture",
            disableremoteplayback: "disableRemotePlayback",
            download: "download",
            draggable: "draggable",
            enctype: "encType",
            enterkeyhint: "enterKeyHint",
            for: "htmlFor",
            form: "form",
            formmethod: "formMethod",
            formaction: "formAction",
            formenctype: "formEncType",
            formnovalidate: "formNoValidate",
            formtarget: "formTarget",
            frameborder: "frameBorder",
            headers: "headers",
            height: "height",
            hidden: "hidden",
            high: "high",
            href: "href",
            hreflang: "hrefLang",
            htmlfor: "htmlFor",
            httpequiv: "httpEquiv",
            "http-equiv": "httpEquiv",
            icon: "icon",
            id: "id",
            imagesizes: "imageSizes",
            imagesrcset: "imageSrcSet",
            innerhtml: "innerHTML",
            inputmode: "inputMode",
            integrity: "integrity",
            is: "is",
            itemid: "itemID",
            itemprop: "itemProp",
            itemref: "itemRef",
            itemscope: "itemScope",
            itemtype: "itemType",
            keyparams: "keyParams",
            keytype: "keyType",
            kind: "kind",
            label: "label",
            lang: "lang",
            list: "list",
            loop: "loop",
            low: "low",
            manifest: "manifest",
            marginwidth: "marginWidth",
            marginheight: "marginHeight",
            max: "max",
            maxlength: "maxLength",
            media: "media",
            mediagroup: "mediaGroup",
            method: "method",
            min: "min",
            minlength: "minLength",
            multiple: "multiple",
            muted: "muted",
            name: "name",
            nomodule: "noModule",
            nonce: "nonce",
            novalidate: "noValidate",
            open: "open",
            optimum: "optimum",
            pattern: "pattern",
            placeholder: "placeholder",
            playsinline: "playsInline",
            poster: "poster",
            preload: "preload",
            profile: "profile",
            radiogroup: "radioGroup",
            readonly: "readOnly",
            referrerpolicy: "referrerPolicy",
            rel: "rel",
            required: "required",
            reversed: "reversed",
            role: "role",
            rows: "rows",
            rowspan: "rowSpan",
            sandbox: "sandbox",
            scope: "scope",
            scoped: "scoped",
            scrolling: "scrolling",
            seamless: "seamless",
            selected: "selected",
            shape: "shape",
            size: "size",
            sizes: "sizes",
            span: "span",
            spellcheck: "spellCheck",
            src: "src",
            srcdoc: "srcDoc",
            srclang: "srcLang",
            srcset: "srcSet",
            start: "start",
            step: "step",
            style: "style",
            summary: "summary",
            tabindex: "tabIndex",
            target: "target",
            title: "title",
            type: "type",
            usemap: "useMap",
            value: "value",
            width: "width",
            wmode: "wmode",
            wrap: "wrap",
            about: "about",
            accentheight: "accentHeight",
            "accent-height": "accentHeight",
            accumulate: "accumulate",
            additive: "additive",
            alignmentbaseline: "alignmentBaseline",
            "alignment-baseline": "alignmentBaseline",
            allowreorder: "allowReorder",
            alphabetic: "alphabetic",
            amplitude: "amplitude",
            arabicform: "arabicForm",
            "arabic-form": "arabicForm",
            ascent: "ascent",
            attributename: "attributeName",
            attributetype: "attributeType",
            autoreverse: "autoReverse",
            azimuth: "azimuth",
            basefrequency: "baseFrequency",
            baselineshift: "baselineShift",
            "baseline-shift": "baselineShift",
            baseprofile: "baseProfile",
            bbox: "bbox",
            begin: "begin",
            bias: "bias",
            by: "by",
            calcmode: "calcMode",
            capheight: "capHeight",
            "cap-height": "capHeight",
            clip: "clip",
            clippath: "clipPath",
            "clip-path": "clipPath",
            clippathunits: "clipPathUnits",
            cliprule: "clipRule",
            "clip-rule": "clipRule",
            color: "color",
            colorinterpolation: "colorInterpolation",
            "color-interpolation": "colorInterpolation",
            colorinterpolationfilters: "colorInterpolationFilters",
            "color-interpolation-filters": "colorInterpolationFilters",
            colorprofile: "colorProfile",
            "color-profile": "colorProfile",
            colorrendering: "colorRendering",
            "color-rendering": "colorRendering",
            contentscripttype: "contentScriptType",
            contentstyletype: "contentStyleType",
            cursor: "cursor",
            cx: "cx",
            cy: "cy",
            d: "d",
            datatype: "datatype",
            decelerate: "decelerate",
            descent: "descent",
            diffuseconstant: "diffuseConstant",
            direction: "direction",
            display: "display",
            divisor: "divisor",
            dominantbaseline: "dominantBaseline",
            "dominant-baseline": "dominantBaseline",
            dur: "dur",
            dx: "dx",
            dy: "dy",
            edgemode: "edgeMode",
            elevation: "elevation",
            enablebackground: "enableBackground",
            "enable-background": "enableBackground",
            end: "end",
            exponent: "exponent",
            externalresourcesrequired: "externalResourcesRequired",
            fill: "fill",
            fillopacity: "fillOpacity",
            "fill-opacity": "fillOpacity",
            fillrule: "fillRule",
            "fill-rule": "fillRule",
            filter: "filter",
            filterres: "filterRes",
            filterunits: "filterUnits",
            floodopacity: "floodOpacity",
            "flood-opacity": "floodOpacity",
            floodcolor: "floodColor",
            "flood-color": "floodColor",
            focusable: "focusable",
            fontfamily: "fontFamily",
            "font-family": "fontFamily",
            fontsize: "fontSize",
            "font-size": "fontSize",
            fontsizeadjust: "fontSizeAdjust",
            "font-size-adjust": "fontSizeAdjust",
            fontstretch: "fontStretch",
            "font-stretch": "fontStretch",
            fontstyle: "fontStyle",
            "font-style": "fontStyle",
            fontvariant: "fontVariant",
            "font-variant": "fontVariant",
            fontweight: "fontWeight",
            "font-weight": "fontWeight",
            format: "format",
            from: "from",
            fx: "fx",
            fy: "fy",
            g1: "g1",
            g2: "g2",
            glyphname: "glyphName",
            "glyph-name": "glyphName",
            glyphorientationhorizontal: "glyphOrientationHorizontal",
            "glyph-orientation-horizontal": "glyphOrientationHorizontal",
            glyphorientationvertical: "glyphOrientationVertical",
            "glyph-orientation-vertical": "glyphOrientationVertical",
            glyphref: "glyphRef",
            gradienttransform: "gradientTransform",
            gradientunits: "gradientUnits",
            hanging: "hanging",
            horizadvx: "horizAdvX",
            "horiz-adv-x": "horizAdvX",
            horizoriginx: "horizOriginX",
            "horiz-origin-x": "horizOriginX",
            ideographic: "ideographic",
            imagerendering: "imageRendering",
            "image-rendering": "imageRendering",
            in2: "in2",
            in: "in",
            inlist: "inlist",
            intercept: "intercept",
            k1: "k1",
            k2: "k2",
            k3: "k3",
            k4: "k4",
            k: "k",
            kernelmatrix: "kernelMatrix",
            kernelunitlength: "kernelUnitLength",
            kerning: "kerning",
            keypoints: "keyPoints",
            keysplines: "keySplines",
            keytimes: "keyTimes",
            lengthadjust: "lengthAdjust",
            letterspacing: "letterSpacing",
            "letter-spacing": "letterSpacing",
            lightingcolor: "lightingColor",
            "lighting-color": "lightingColor",
            limitingconeangle: "limitingConeAngle",
            local: "local",
            markerend: "markerEnd",
            "marker-end": "markerEnd",
            markerheight: "markerHeight",
            markermid: "markerMid",
            "marker-mid": "markerMid",
            markerstart: "markerStart",
            "marker-start": "markerStart",
            markerunits: "markerUnits",
            markerwidth: "markerWidth",
            mask: "mask",
            maskcontentunits: "maskContentUnits",
            maskunits: "maskUnits",
            mathematical: "mathematical",
            mode: "mode",
            numoctaves: "numOctaves",
            offset: "offset",
            opacity: "opacity",
            operator: "operator",
            order: "order",
            orient: "orient",
            orientation: "orientation",
            origin: "origin",
            overflow: "overflow",
            overlineposition: "overlinePosition",
            "overline-position": "overlinePosition",
            overlinethickness: "overlineThickness",
            "overline-thickness": "overlineThickness",
            paintorder: "paintOrder",
            "paint-order": "paintOrder",
            panose1: "panose1",
            "panose-1": "panose1",
            pathlength: "pathLength",
            patterncontentunits: "patternContentUnits",
            patterntransform: "patternTransform",
            patternunits: "patternUnits",
            pointerevents: "pointerEvents",
            "pointer-events": "pointerEvents",
            points: "points",
            pointsatx: "pointsAtX",
            pointsaty: "pointsAtY",
            pointsatz: "pointsAtZ",
            prefix: "prefix",
            preservealpha: "preserveAlpha",
            preserveaspectratio: "preserveAspectRatio",
            primitiveunits: "primitiveUnits",
            property: "property",
            r: "r",
            radius: "radius",
            refx: "refX",
            refy: "refY",
            renderingintent: "renderingIntent",
            "rendering-intent": "renderingIntent",
            repeatcount: "repeatCount",
            repeatdur: "repeatDur",
            requiredextensions: "requiredExtensions",
            requiredfeatures: "requiredFeatures",
            resource: "resource",
            restart: "restart",
            result: "result",
            results: "results",
            rotate: "rotate",
            rx: "rx",
            ry: "ry",
            scale: "scale",
            security: "security",
            seed: "seed",
            shaperendering: "shapeRendering",
            "shape-rendering": "shapeRendering",
            slope: "slope",
            spacing: "spacing",
            specularconstant: "specularConstant",
            specularexponent: "specularExponent",
            speed: "speed",
            spreadmethod: "spreadMethod",
            startoffset: "startOffset",
            stddeviation: "stdDeviation",
            stemh: "stemh",
            stemv: "stemv",
            stitchtiles: "stitchTiles",
            stopcolor: "stopColor",
            "stop-color": "stopColor",
            stopopacity: "stopOpacity",
            "stop-opacity": "stopOpacity",
            strikethroughposition: "strikethroughPosition",
            "strikethrough-position": "strikethroughPosition",
            strikethroughthickness: "strikethroughThickness",
            "strikethrough-thickness": "strikethroughThickness",
            string: "string",
            stroke: "stroke",
            strokedasharray: "strokeDasharray",
            "stroke-dasharray": "strokeDasharray",
            strokedashoffset: "strokeDashoffset",
            "stroke-dashoffset": "strokeDashoffset",
            strokelinecap: "strokeLinecap",
            "stroke-linecap": "strokeLinecap",
            strokelinejoin: "strokeLinejoin",
            "stroke-linejoin": "strokeLinejoin",
            strokemiterlimit: "strokeMiterlimit",
            "stroke-miterlimit": "strokeMiterlimit",
            strokewidth: "strokeWidth",
            "stroke-width": "strokeWidth",
            strokeopacity: "strokeOpacity",
            "stroke-opacity": "strokeOpacity",
            suppresscontenteditablewarning: "suppressContentEditableWarning",
            suppresshydrationwarning: "suppressHydrationWarning",
            surfacescale: "surfaceScale",
            systemlanguage: "systemLanguage",
            tablevalues: "tableValues",
            targetx: "targetX",
            targety: "targetY",
            textanchor: "textAnchor",
            "text-anchor": "textAnchor",
            textdecoration: "textDecoration",
            "text-decoration": "textDecoration",
            textlength: "textLength",
            textrendering: "textRendering",
            "text-rendering": "textRendering",
            to: "to",
            transform: "transform",
            typeof: "typeof",
            u1: "u1",
            u2: "u2",
            underlineposition: "underlinePosition",
            "underline-position": "underlinePosition",
            underlinethickness: "underlineThickness",
            "underline-thickness": "underlineThickness",
            unicode: "unicode",
            unicodebidi: "unicodeBidi",
            "unicode-bidi": "unicodeBidi",
            unicoderange: "unicodeRange",
            "unicode-range": "unicodeRange",
            unitsperem: "unitsPerEm",
            "units-per-em": "unitsPerEm",
            unselectable: "unselectable",
            valphabetic: "vAlphabetic",
            "v-alphabetic": "vAlphabetic",
            values: "values",
            vectoreffect: "vectorEffect",
            "vector-effect": "vectorEffect",
            version: "version",
            vertadvy: "vertAdvY",
            "vert-adv-y": "vertAdvY",
            vertoriginx: "vertOriginX",
            "vert-origin-x": "vertOriginX",
            vertoriginy: "vertOriginY",
            "vert-origin-y": "vertOriginY",
            vhanging: "vHanging",
            "v-hanging": "vHanging",
            videographic: "vIdeographic",
            "v-ideographic": "vIdeographic",
            viewbox: "viewBox",
            viewtarget: "viewTarget",
            visibility: "visibility",
            vmathematical: "vMathematical",
            "v-mathematical": "vMathematical",
            vocab: "vocab",
            widths: "widths",
            wordspacing: "wordSpacing",
            "word-spacing": "wordSpacing",
            writingmode: "writingMode",
            "writing-mode": "writingMode",
            x1: "x1",
            x2: "x2",
            x: "x",
            xchannelselector: "xChannelSelector",
            xheight: "xHeight",
            "x-height": "xHeight",
            xlinkactuate: "xlinkActuate",
            "xlink:actuate": "xlinkActuate",
            xlinkarcrole: "xlinkArcrole",
            "xlink:arcrole": "xlinkArcrole",
            xlinkhref: "xlinkHref",
            "xlink:href": "xlinkHref",
            xlinkrole: "xlinkRole",
            "xlink:role": "xlinkRole",
            xlinkshow: "xlinkShow",
            "xlink:show": "xlinkShow",
            xlinktitle: "xlinkTitle",
            "xlink:title": "xlinkTitle",
            xlinktype: "xlinkType",
            "xlink:type": "xlinkType",
            xmlbase: "xmlBase",
            "xml:base": "xmlBase",
            xmllang: "xmlLang",
            "xml:lang": "xmlLang",
            xmlns: "xmlns",
            "xml:space": "xmlSpace",
            xmlnsxlink: "xmlnsXlink",
            "xmlns:xlink": "xmlnsXlink",
            xmlspace: "xmlSpace",
            y1: "y1",
            y2: "y2",
            y: "y",
            ychannelselector: "yChannelSelector",
            z: "z",
            zoomandpan: "zoomAndPan"
          };
          var ariaProperties = {
            "aria-current": 0,
            "aria-description": 0,
            "aria-details": 0,
            "aria-disabled": 0,
            "aria-hidden": 0,
            "aria-invalid": 0,
            "aria-keyshortcuts": 0,
            "aria-label": 0,
            "aria-roledescription": 0,
            "aria-autocomplete": 0,
            "aria-checked": 0,
            "aria-expanded": 0,
            "aria-haspopup": 0,
            "aria-level": 0,
            "aria-modal": 0,
            "aria-multiline": 0,
            "aria-multiselectable": 0,
            "aria-orientation": 0,
            "aria-placeholder": 0,
            "aria-pressed": 0,
            "aria-readonly": 0,
            "aria-required": 0,
            "aria-selected": 0,
            "aria-sort": 0,
            "aria-valuemax": 0,
            "aria-valuemin": 0,
            "aria-valuenow": 0,
            "aria-valuetext": 0,
            "aria-atomic": 0,
            "aria-busy": 0,
            "aria-live": 0,
            "aria-relevant": 0,
            "aria-dropeffect": 0,
            "aria-grabbed": 0,
            "aria-activedescendant": 0,
            "aria-colcount": 0,
            "aria-colindex": 0,
            "aria-colspan": 0,
            "aria-controls": 0,
            "aria-describedby": 0,
            "aria-errormessage": 0,
            "aria-flowto": 0,
            "aria-labelledby": 0,
            "aria-owns": 0,
            "aria-posinset": 0,
            "aria-rowcount": 0,
            "aria-rowindex": 0,
            "aria-rowspan": 0,
            "aria-setsize": 0
          };
          var warnedProperties = {};
          var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          function validateProperty(tagName, name) {
            {
              if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
                return true;
              }
              if (rARIACamel.test(name)) {
                var ariaName = "aria-" + name.slice(4).toLowerCase();
                var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
                if (correctName == null) {
                  error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                  warnedProperties[name] = true;
                  return true;
                }
                if (name !== correctName) {
                  error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                  warnedProperties[name] = true;
                  return true;
                }
              }
              if (rARIA.test(name)) {
                var lowerCasedName = name.toLowerCase();
                var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
                if (standardName == null) {
                  warnedProperties[name] = true;
                  return false;
                }
                if (name !== standardName) {
                  error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                  warnedProperties[name] = true;
                  return true;
                }
              }
            }
            return true;
          }
          function warnInvalidARIAProps(type, props) {
            {
              var invalidProps = [];
              for (var key in props) {
                var isValid = validateProperty(type, key);
                if (!isValid) {
                  invalidProps.push(key);
                }
              }
              var unknownPropString = invalidProps.map(function(prop) {
                return "`" + prop + "`";
              }).join(", ");
              if (invalidProps.length === 1) {
                error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
              } else if (invalidProps.length > 1) {
                error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
              }
            }
          }
          function validateProperties(type, props) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnInvalidARIAProps(type, props);
          }
          var didWarnValueNull = false;
          function validateProperties$1(type, props) {
            {
              if (type !== "input" && type !== "textarea" && type !== "select") {
                return;
              }
              if (props != null && props.value === null && !didWarnValueNull) {
                didWarnValueNull = true;
                if (type === "select" && props.multiple) {
                  error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
                } else {
                  error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
                }
              }
            }
          }
          var validateProperty$1 = function() {
          };
          {
            var warnedProperties$1 = {};
            var EVENT_NAME_REGEX = /^on./;
            var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
            var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
            var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
            validateProperty$1 = function(tagName, name, value, eventRegistry) {
              if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
                return true;
              }
              var lowerCasedName = name.toLowerCase();
              if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
                error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
                warnedProperties$1[name] = true;
                return true;
              }
              if (eventRegistry != null) {
                var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
                if (registrationNameDependencies2.hasOwnProperty(name)) {
                  return true;
                }
                var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
                if (registrationName != null) {
                  error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                  warnedProperties$1[name] = true;
                  return true;
                }
                if (EVENT_NAME_REGEX.test(name)) {
                  error("Unknown event handler property `%s`. It will be ignored.", name);
                  warnedProperties$1[name] = true;
                  return true;
                }
              } else if (EVENT_NAME_REGEX.test(name)) {
                if (INVALID_EVENT_NAME_REGEX.test(name)) {
                  error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
                }
                warnedProperties$1[name] = true;
                return true;
              }
              if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
                return true;
              }
              if (lowerCasedName === "innerhtml") {
                error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
                warnedProperties$1[name] = true;
                return true;
              }
              if (lowerCasedName === "aria") {
                error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
                warnedProperties$1[name] = true;
                return true;
              }
              if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
                error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
                warnedProperties$1[name] = true;
                return true;
              }
              if (typeof value === "number" && isNaN(value)) {
                error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
                warnedProperties$1[name] = true;
                return true;
              }
              var propertyInfo = getPropertyInfo(name);
              var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
              if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                var standardName = possibleStandardNames[lowerCasedName];
                if (standardName !== name) {
                  error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                  warnedProperties$1[name] = true;
                  return true;
                }
              } else if (!isReserved && name !== lowerCasedName) {
                error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
                if (value) {
                  error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
                } else {
                  error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
                }
                warnedProperties$1[name] = true;
                return true;
              }
              if (isReserved) {
                return true;
              }
              if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
                warnedProperties$1[name] = true;
                return false;
              }
              if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
                error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
                warnedProperties$1[name] = true;
                return true;
              }
              return true;
            };
          }
          var warnUnknownProperties = function(type, props, eventRegistry) {
            {
              var unknownProps = [];
              for (var key in props) {
                var isValid = validateProperty$1(type, key, props[key], eventRegistry);
                if (!isValid) {
                  unknownProps.push(key);
                }
              }
              var unknownPropString = unknownProps.map(function(prop) {
                return "`" + prop + "`";
              }).join(", ");
              if (unknownProps.length === 1) {
                error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
              } else if (unknownProps.length > 1) {
                error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
              }
            }
          };
          function validateProperties$2(type, props, eventRegistry) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnUnknownProperties(type, props, eventRegistry);
          }
          var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
          var IS_NON_DELEGATED = 1 << 1;
          var IS_CAPTURE_PHASE = 1 << 2;
          var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
          var currentReplayingEvent = null;
          function setReplayingEvent(event) {
            {
              if (currentReplayingEvent !== null) {
                error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            currentReplayingEvent = event;
          }
          function resetReplayingEvent() {
            {
              if (currentReplayingEvent === null) {
                error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            currentReplayingEvent = null;
          }
          function isReplayingEvent(event) {
            return event === currentReplayingEvent;
          }
          function getEventTarget(nativeEvent) {
            var target = nativeEvent.target || nativeEvent.srcElement || window;
            if (target.correspondingUseElement) {
              target = target.correspondingUseElement;
            }
            return target.nodeType === TEXT_NODE ? target.parentNode : target;
          }
          var restoreImpl = null;
          var restoreTarget = null;
          var restoreQueue = null;
          function restoreStateOfTarget(target) {
            var internalInstance = getInstanceFromNode(target);
            if (!internalInstance) {
              return;
            }
            if (typeof restoreImpl !== "function") {
              throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
            }
            var stateNode = internalInstance.stateNode;
            if (stateNode) {
              var _props = getFiberCurrentPropsFromNode(stateNode);
              restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
            }
          }
          function setRestoreImplementation(impl) {
            restoreImpl = impl;
          }
          function enqueueStateRestore(target) {
            if (restoreTarget) {
              if (restoreQueue) {
                restoreQueue.push(target);
              } else {
                restoreQueue = [target];
              }
            } else {
              restoreTarget = target;
            }
          }
          function needsStateRestore() {
            return restoreTarget !== null || restoreQueue !== null;
          }
          function restoreStateIfNeeded() {
            if (!restoreTarget) {
              return;
            }
            var target = restoreTarget;
            var queuedTargets = restoreQueue;
            restoreTarget = null;
            restoreQueue = null;
            restoreStateOfTarget(target);
            if (queuedTargets) {
              for (var i2 = 0; i2 < queuedTargets.length; i2++) {
                restoreStateOfTarget(queuedTargets[i2]);
              }
            }
          }
          var batchedUpdatesImpl = function(fn2, bookkeeping) {
            return fn2(bookkeeping);
          };
          var flushSyncImpl = function() {
          };
          var isInsideEventHandler = false;
          function finishEventHandler() {
            var controlledComponentsHavePendingUpdates = needsStateRestore();
            if (controlledComponentsHavePendingUpdates) {
              flushSyncImpl();
              restoreStateIfNeeded();
            }
          }
          function batchedUpdates(fn2, a2, b2) {
            if (isInsideEventHandler) {
              return fn2(a2, b2);
            }
            isInsideEventHandler = true;
            try {
              return batchedUpdatesImpl(fn2, a2, b2);
            } finally {
              isInsideEventHandler = false;
              finishEventHandler();
            }
          }
          function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
            batchedUpdatesImpl = _batchedUpdatesImpl;
            flushSyncImpl = _flushSyncImpl;
          }
          function isInteractive(tag) {
            return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
          }
          function shouldPreventMouseEvent(name, type, props) {
            switch (name) {
              case "onClick":
              case "onClickCapture":
              case "onDoubleClick":
              case "onDoubleClickCapture":
              case "onMouseDown":
              case "onMouseDownCapture":
              case "onMouseMove":
              case "onMouseMoveCapture":
              case "onMouseUp":
              case "onMouseUpCapture":
              case "onMouseEnter":
                return !!(props.disabled && isInteractive(type));
              default:
                return false;
            }
          }
          function getListener(inst, registrationName) {
            var stateNode = inst.stateNode;
            if (stateNode === null) {
              return null;
            }
            var props = getFiberCurrentPropsFromNode(stateNode);
            if (props === null) {
              return null;
            }
            var listener = props[registrationName];
            if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
              return null;
            }
            if (listener && typeof listener !== "function") {
              throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
            }
            return listener;
          }
          var passiveBrowserEventsSupported = false;
          if (canUseDOM) {
            try {
              var options = {};
              Object.defineProperty(options, "passive", {
                get: function() {
                  passiveBrowserEventsSupported = true;
                }
              });
              window.addEventListener("test", options, options);
              window.removeEventListener("test", options, options);
            } catch (e27) {
              passiveBrowserEventsSupported = false;
            }
          }
          function invokeGuardedCallbackProd(name, func, context, a2, b2, c2, d2, e27, f2) {
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            try {
              func.apply(context, funcArgs);
            } catch (error2) {
              this.onError(error2);
            }
          }
          var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
          {
            if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
              var fakeNode = document.createElement("react");
              invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a2, b2, c2, d2, e27, f2) {
                if (typeof document === "undefined" || document === null) {
                  throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
                }
                var evt = document.createEvent("Event");
                var didCall = false;
                var didError = true;
                var windowEvent = window.event;
                var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
                function restoreAfterDispatch() {
                  fakeNode.removeEventListener(evtType, callCallback2, false);
                  if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                    window.event = windowEvent;
                  }
                }
                var funcArgs = Array.prototype.slice.call(arguments, 3);
                function callCallback2() {
                  didCall = true;
                  restoreAfterDispatch();
                  func.apply(context, funcArgs);
                  didError = false;
                }
                var error2;
                var didSetError = false;
                var isCrossOriginError = false;
                function handleWindowError(event) {
                  error2 = event.error;
                  didSetError = true;
                  if (error2 === null && event.colno === 0 && event.lineno === 0) {
                    isCrossOriginError = true;
                  }
                  if (event.defaultPrevented) {
                    if (error2 != null && typeof error2 === "object") {
                      try {
                        error2._suppressLogging = true;
                      } catch (inner) {
                      }
                    }
                  }
                }
                var evtType = "react-" + (name ? name : "invokeguardedcallback");
                window.addEventListener("error", handleWindowError);
                fakeNode.addEventListener(evtType, callCallback2, false);
                evt.initEvent(evtType, false, false);
                fakeNode.dispatchEvent(evt);
                if (windowEventDescriptor) {
                  Object.defineProperty(window, "event", windowEventDescriptor);
                }
                if (didCall && didError) {
                  if (!didSetError) {
                    error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                  } else if (isCrossOriginError) {
                    error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                  }
                  this.onError(error2);
                }
                window.removeEventListener("error", handleWindowError);
                if (!didCall) {
                  restoreAfterDispatch();
                  return invokeGuardedCallbackProd.apply(this, arguments);
                }
              };
            }
          }
          var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
          var hasError = false;
          var caughtError = null;
          var hasRethrowError = false;
          var rethrowError = null;
          var reporter = {
            onError: function(error2) {
              hasError = true;
              caughtError = error2;
            }
          };
          function invokeGuardedCallback(name, func, context, a2, b2, c2, d2, e27, f2) {
            hasError = false;
            caughtError = null;
            invokeGuardedCallbackImpl$1.apply(reporter, arguments);
          }
          function invokeGuardedCallbackAndCatchFirstError(name, func, context, a2, b2, c2, d2, e27, f2) {
            invokeGuardedCallback.apply(this, arguments);
            if (hasError) {
              var error2 = clearCaughtError();
              if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error2;
              }
            }
          }
          function rethrowCaughtError() {
            if (hasRethrowError) {
              var error2 = rethrowError;
              hasRethrowError = false;
              rethrowError = null;
              throw error2;
            }
          }
          function hasCaughtError() {
            return hasError;
          }
          function clearCaughtError() {
            if (hasError) {
              var error2 = caughtError;
              hasError = false;
              caughtError = null;
              return error2;
            } else {
              throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          function get(key) {
            return key._reactInternals;
          }
          function has(key) {
            return key._reactInternals !== void 0;
          }
          function set(key, value) {
            key._reactInternals = value;
          }
          var NoFlags = 0;
          var PerformedWork = 1;
          var Placement = 2;
          var Update = 4;
          var ChildDeletion = 16;
          var ContentReset = 32;
          var Callback = 64;
          var DidCapture = 128;
          var ForceClientRender = 256;
          var Ref = 512;
          var Snapshot = 1024;
          var Passive = 2048;
          var Hydrating = 4096;
          var Visibility = 8192;
          var StoreConsistency = 16384;
          var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;
          var HostEffectMask = 32767;
          var Incomplete = 32768;
          var ShouldCapture = 65536;
          var ForceUpdateForLegacySuspense = 131072;
          var Forked = 1048576;
          var RefStatic = 2097152;
          var LayoutStatic = 4194304;
          var PassiveStatic = 8388608;
          var MountLayoutDev = 16777216;
          var MountPassiveDev = 33554432;
          var BeforeMutationMask = Update | Snapshot | 0;
          var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
          var LayoutMask = Update | Callback | Ref | Visibility;
          var PassiveMask = Passive | ChildDeletion;
          var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
          var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
          function getNearestMountedFiber(fiber) {
            var node = fiber;
            var nearestMounted = fiber;
            if (!fiber.alternate) {
              var nextNode = node;
              do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
                  nearestMounted = node.return;
                }
                nextNode = node.return;
              } while (nextNode);
            } else {
              while (node.return) {
                node = node.return;
              }
            }
            if (node.tag === HostRoot) {
              return nearestMounted;
            }
            return null;
          }
          function getSuspenseInstanceFromFiber(fiber) {
            if (fiber.tag === SuspenseComponent) {
              var suspenseState = fiber.memoizedState;
              if (suspenseState === null) {
                var current2 = fiber.alternate;
                if (current2 !== null) {
                  suspenseState = current2.memoizedState;
                }
              }
              if (suspenseState !== null) {
                return suspenseState.dehydrated;
              }
            }
            return null;
          }
          function getContainerFromFiber(fiber) {
            return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
          }
          function isFiberMounted(fiber) {
            return getNearestMountedFiber(fiber) === fiber;
          }
          function isMounted(component) {
            {
              var owner = ReactCurrentOwner.current;
              if (owner !== null && owner.tag === ClassComponent) {
                var ownerFiber = owner;
                var instance = ownerFiber.stateNode;
                if (!instance._warnedAboutRefsInRender) {
                  error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
                }
                instance._warnedAboutRefsInRender = true;
              }
            }
            var fiber = get(component);
            if (!fiber) {
              return false;
            }
            return getNearestMountedFiber(fiber) === fiber;
          }
          function assertIsMounted(fiber) {
            if (getNearestMountedFiber(fiber) !== fiber) {
              throw new Error("Unable to find node on an unmounted component.");
            }
          }
          function findCurrentFiberUsingSlowPath(fiber) {
            var alternate = fiber.alternate;
            if (!alternate) {
              var nearestMounted = getNearestMountedFiber(fiber);
              if (nearestMounted === null) {
                throw new Error("Unable to find node on an unmounted component.");
              }
              if (nearestMounted !== fiber) {
                return null;
              }
              return fiber;
            }
            var a2 = fiber;
            var b2 = alternate;
            while (true) {
              var parentA = a2.return;
              if (parentA === null) {
                break;
              }
              var parentB = parentA.alternate;
              if (parentB === null) {
                var nextParent = parentA.return;
                if (nextParent !== null) {
                  a2 = b2 = nextParent;
                  continue;
                }
                break;
              }
              if (parentA.child === parentB.child) {
                var child = parentA.child;
                while (child) {
                  if (child === a2) {
                    assertIsMounted(parentA);
                    return fiber;
                  }
                  if (child === b2) {
                    assertIsMounted(parentA);
                    return alternate;
                  }
                  child = child.sibling;
                }
                throw new Error("Unable to find node on an unmounted component.");
              }
              if (a2.return !== b2.return) {
                a2 = parentA;
                b2 = parentB;
              } else {
                var didFindChild = false;
                var _child = parentA.child;
                while (_child) {
                  if (_child === a2) {
                    didFindChild = true;
                    a2 = parentA;
                    b2 = parentB;
                    break;
                  }
                  if (_child === b2) {
                    didFindChild = true;
                    b2 = parentA;
                    a2 = parentB;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  _child = parentB.child;
                  while (_child) {
                    if (_child === a2) {
                      didFindChild = true;
                      a2 = parentB;
                      b2 = parentA;
                      break;
                    }
                    if (_child === b2) {
                      didFindChild = true;
                      b2 = parentB;
                      a2 = parentA;
                      break;
                    }
                    _child = _child.sibling;
                  }
                  if (!didFindChild) {
                    throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                  }
                }
              }
              if (a2.alternate !== b2) {
                throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            if (a2.tag !== HostRoot) {
              throw new Error("Unable to find node on an unmounted component.");
            }
            if (a2.stateNode.current === a2) {
              return fiber;
            }
            return alternate;
          }
          function findCurrentHostFiber(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
          }
          function findCurrentHostFiberImpl(node) {
            if (node.tag === HostComponent || node.tag === HostText) {
              return node;
            }
            var child = node.child;
            while (child !== null) {
              var match = findCurrentHostFiberImpl(child);
              if (match !== null) {
                return match;
              }
              child = child.sibling;
            }
            return null;
          }
          function findCurrentHostFiberWithNoPortals(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
          }
          function findCurrentHostFiberWithNoPortalsImpl(node) {
            if (node.tag === HostComponent || node.tag === HostText) {
              return node;
            }
            var child = node.child;
            while (child !== null) {
              if (child.tag !== HostPortal) {
                var match = findCurrentHostFiberWithNoPortalsImpl(child);
                if (match !== null) {
                  return match;
                }
              }
              child = child.sibling;
            }
            return null;
          }
          var scheduleCallback = Scheduler.unstable_scheduleCallback;
          var cancelCallback = Scheduler.unstable_cancelCallback;
          var shouldYield = Scheduler.unstable_shouldYield;
          var requestPaint = Scheduler.unstable_requestPaint;
          var now = Scheduler.unstable_now;
          var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
          var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
          var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
          var NormalPriority = Scheduler.unstable_NormalPriority;
          var LowPriority = Scheduler.unstable_LowPriority;
          var IdlePriority = Scheduler.unstable_IdlePriority;
          var unstable_yieldValue = Scheduler.unstable_yieldValue;
          var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
          var rendererID = null;
          var injectedHook = null;
          var injectedProfilingHooks = null;
          var hasLoggedError = false;
          var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
          function injectInternals(internals) {
            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
              return false;
            }
            var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.isDisabled) {
              return true;
            }
            if (!hook.supportsFiber) {
              {
                error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
              }
              return true;
            }
            try {
              if (enableSchedulingProfiler) {
                internals = assign({}, internals, {
                  getLaneLabelMap,
                  injectProfilingHooks
                });
              }
              rendererID = hook.inject(internals);
              injectedHook = hook;
            } catch (err) {
              {
                error("React instrumentation encountered an error: %s.", err);
              }
            }
            if (hook.checkDCE) {
              return true;
            } else {
              return false;
            }
          }
          function onScheduleRoot(root2, children) {
            {
              if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
                try {
                  injectedHook.onScheduleFiberRoot(rendererID, root2, children);
                } catch (err) {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
          function onCommitRoot(root2, eventPriority) {
            if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
              try {
                var didError = (root2.current.flags & DidCapture) === DidCapture;
                if (enableProfilerTimer) {
                  var schedulerPriority;
                  switch (eventPriority) {
                    case DiscreteEventPriority:
                      schedulerPriority = ImmediatePriority;
                      break;
                    case ContinuousEventPriority:
                      schedulerPriority = UserBlockingPriority;
                      break;
                    case DefaultEventPriority:
                      schedulerPriority = NormalPriority;
                      break;
                    case IdleEventPriority:
                      schedulerPriority = IdlePriority;
                      break;
                    default:
                      schedulerPriority = NormalPriority;
                      break;
                  }
                  injectedHook.onCommitFiberRoot(rendererID, root2, schedulerPriority, didError);
                } else {
                  injectedHook.onCommitFiberRoot(rendererID, root2, void 0, didError);
                }
              } catch (err) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
          function onPostCommitRoot(root2) {
            if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") {
              try {
                injectedHook.onPostCommitFiberRoot(rendererID, root2);
              } catch (err) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
          function onCommitUnmount(fiber) {
            if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
              try {
                injectedHook.onCommitFiberUnmount(rendererID, fiber);
              } catch (err) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
          function setIsStrictModeForDevtools(newIsStrictMode) {
            {
              if (typeof unstable_yieldValue === "function") {
                unstable_setDisableYieldValue(newIsStrictMode);
                setSuppressWarning(newIsStrictMode);
              }
              if (injectedHook && typeof injectedHook.setStrictMode === "function") {
                try {
                  injectedHook.setStrictMode(rendererID, newIsStrictMode);
                } catch (err) {
                  {
                    if (!hasLoggedError) {
                      hasLoggedError = true;
                      error("React instrumentation encountered an error: %s", err);
                    }
                  }
                }
              }
            }
          }
          function injectProfilingHooks(profilingHooks) {
            injectedProfilingHooks = profilingHooks;
          }
          function getLaneLabelMap() {
            {
              var map = /* @__PURE__ */ new Map();
              var lane = 1;
              for (var index2 = 0; index2 < TotalLanes; index2++) {
                var label = getLabelForLane(lane);
                map.set(lane, label);
                lane *= 2;
              }
              return map;
            }
          }
          function markCommitStarted(lanes) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") {
                injectedProfilingHooks.markCommitStarted(lanes);
              }
            }
          }
          function markCommitStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") {
                injectedProfilingHooks.markCommitStopped();
              }
            }
          }
          function markComponentRenderStarted(fiber) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") {
                injectedProfilingHooks.markComponentRenderStarted(fiber);
              }
            }
          }
          function markComponentRenderStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") {
                injectedProfilingHooks.markComponentRenderStopped();
              }
            }
          }
          function markComponentPassiveEffectMountStarted(fiber) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") {
                injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
              }
            }
          }
          function markComponentPassiveEffectMountStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") {
                injectedProfilingHooks.markComponentPassiveEffectMountStopped();
              }
            }
          }
          function markComponentPassiveEffectUnmountStarted(fiber) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") {
                injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
              }
            }
          }
          function markComponentPassiveEffectUnmountStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") {
                injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
              }
            }
          }
          function markComponentLayoutEffectMountStarted(fiber) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") {
                injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
              }
            }
          }
          function markComponentLayoutEffectMountStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") {
                injectedProfilingHooks.markComponentLayoutEffectMountStopped();
              }
            }
          }
          function markComponentLayoutEffectUnmountStarted(fiber) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") {
                injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
              }
            }
          }
          function markComponentLayoutEffectUnmountStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") {
                injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
              }
            }
          }
          function markComponentErrored(fiber, thrownValue, lanes) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") {
                injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
              }
            }
          }
          function markComponentSuspended(fiber, wakeable, lanes) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") {
                injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
              }
            }
          }
          function markLayoutEffectsStarted(lanes) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") {
                injectedProfilingHooks.markLayoutEffectsStarted(lanes);
              }
            }
          }
          function markLayoutEffectsStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") {
                injectedProfilingHooks.markLayoutEffectsStopped();
              }
            }
          }
          function markPassiveEffectsStarted(lanes) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") {
                injectedProfilingHooks.markPassiveEffectsStarted(lanes);
              }
            }
          }
          function markPassiveEffectsStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") {
                injectedProfilingHooks.markPassiveEffectsStopped();
              }
            }
          }
          function markRenderStarted(lanes) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") {
                injectedProfilingHooks.markRenderStarted(lanes);
              }
            }
          }
          function markRenderYielded() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") {
                injectedProfilingHooks.markRenderYielded();
              }
            }
          }
          function markRenderStopped() {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") {
                injectedProfilingHooks.markRenderStopped();
              }
            }
          }
          function markRenderScheduled(lane) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") {
                injectedProfilingHooks.markRenderScheduled(lane);
              }
            }
          }
          function markForceUpdateScheduled(fiber, lane) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") {
                injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
              }
            }
          }
          function markStateUpdateScheduled(fiber, lane) {
            {
              if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") {
                injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
              }
            }
          }
          var NoMode = 0;
          var ConcurrentMode = 1;
          var ProfileMode = 2;
          var StrictLegacyMode = 8;
          var StrictEffectsMode = 16;
          var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
          var log = Math.log;
          var LN2 = Math.LN2;
          function clz32Fallback(x2) {
            var asUint = x2 >>> 0;
            if (asUint === 0) {
              return 32;
            }
            return 31 - (log(asUint) / LN2 | 0) | 0;
          }
          var TotalLanes = 31;
          var NoLanes = 0;
          var NoLane = 0;
          var SyncLane = 1;
          var InputContinuousHydrationLane = 2;
          var InputContinuousLane = 4;
          var DefaultHydrationLane = 8;
          var DefaultLane = 16;
          var TransitionHydrationLane = 32;
          var TransitionLanes = 4194240;
          var TransitionLane1 = 64;
          var TransitionLane2 = 128;
          var TransitionLane3 = 256;
          var TransitionLane4 = 512;
          var TransitionLane5 = 1024;
          var TransitionLane6 = 2048;
          var TransitionLane7 = 4096;
          var TransitionLane8 = 8192;
          var TransitionLane9 = 16384;
          var TransitionLane10 = 32768;
          var TransitionLane11 = 65536;
          var TransitionLane12 = 131072;
          var TransitionLane13 = 262144;
          var TransitionLane14 = 524288;
          var TransitionLane15 = 1048576;
          var TransitionLane16 = 2097152;
          var RetryLanes = 130023424;
          var RetryLane1 = 4194304;
          var RetryLane2 = 8388608;
          var RetryLane3 = 16777216;
          var RetryLane4 = 33554432;
          var RetryLane5 = 67108864;
          var SomeRetryLane = RetryLane1;
          var SelectiveHydrationLane = 134217728;
          var NonIdleLanes = 268435455;
          var IdleHydrationLane = 268435456;
          var IdleLane = 536870912;
          var OffscreenLane = 1073741824;
          function getLabelForLane(lane) {
            {
              if (lane & SyncLane) {
                return "Sync";
              }
              if (lane & InputContinuousHydrationLane) {
                return "InputContinuousHydration";
              }
              if (lane & InputContinuousLane) {
                return "InputContinuous";
              }
              if (lane & DefaultHydrationLane) {
                return "DefaultHydration";
              }
              if (lane & DefaultLane) {
                return "Default";
              }
              if (lane & TransitionHydrationLane) {
                return "TransitionHydration";
              }
              if (lane & TransitionLanes) {
                return "Transition";
              }
              if (lane & RetryLanes) {
                return "Retry";
              }
              if (lane & SelectiveHydrationLane) {
                return "SelectiveHydration";
              }
              if (lane & IdleHydrationLane) {
                return "IdleHydration";
              }
              if (lane & IdleLane) {
                return "Idle";
              }
              if (lane & OffscreenLane) {
                return "Offscreen";
              }
            }
          }
          var NoTimestamp = -1;
          var nextTransitionLane = TransitionLane1;
          var nextRetryLane = RetryLane1;
          function getHighestPriorityLanes(lanes) {
            switch (getHighestPriorityLane(lanes)) {
              case SyncLane:
                return SyncLane;
              case InputContinuousHydrationLane:
                return InputContinuousHydrationLane;
              case InputContinuousLane:
                return InputContinuousLane;
              case DefaultHydrationLane:
                return DefaultHydrationLane;
              case DefaultLane:
                return DefaultLane;
              case TransitionHydrationLane:
                return TransitionHydrationLane;
              case TransitionLane1:
              case TransitionLane2:
              case TransitionLane3:
              case TransitionLane4:
              case TransitionLane5:
              case TransitionLane6:
              case TransitionLane7:
              case TransitionLane8:
              case TransitionLane9:
              case TransitionLane10:
              case TransitionLane11:
              case TransitionLane12:
              case TransitionLane13:
              case TransitionLane14:
              case TransitionLane15:
              case TransitionLane16:
                return lanes & TransitionLanes;
              case RetryLane1:
              case RetryLane2:
              case RetryLane3:
              case RetryLane4:
              case RetryLane5:
                return lanes & RetryLanes;
              case SelectiveHydrationLane:
                return SelectiveHydrationLane;
              case IdleHydrationLane:
                return IdleHydrationLane;
              case IdleLane:
                return IdleLane;
              case OffscreenLane:
                return OffscreenLane;
              default:
                {
                  error("Should have found matching lanes. This is a bug in React.");
                }
                return lanes;
            }
          }
          function getNextLanes(root2, wipLanes) {
            var pendingLanes = root2.pendingLanes;
            if (pendingLanes === NoLanes) {
              return NoLanes;
            }
            var nextLanes = NoLanes;
            var suspendedLanes = root2.suspendedLanes;
            var pingedLanes = root2.pingedLanes;
            var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
            if (nonIdlePendingLanes !== NoLanes) {
              var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
              if (nonIdleUnblockedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
              } else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
                }
              }
            } else {
              var unblockedLanes = pendingLanes & ~suspendedLanes;
              if (unblockedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(unblockedLanes);
              } else {
                if (pingedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(pingedLanes);
                }
              }
            }
            if (nextLanes === NoLanes) {
              return NoLanes;
            }
            if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {
              var nextLane = getHighestPriorityLane(nextLanes);
              var wipLane = getHighestPriorityLane(wipLanes);
              if (nextLane >= wipLane || nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {
                return wipLanes;
              }
            }
            if ((nextLanes & InputContinuousLane) !== NoLanes) {
              nextLanes |= pendingLanes & DefaultLane;
            }
            var entangledLanes = root2.entangledLanes;
            if (entangledLanes !== NoLanes) {
              var entanglements = root2.entanglements;
              var lanes = nextLanes & entangledLanes;
              while (lanes > 0) {
                var index2 = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index2;
                nextLanes |= entanglements[index2];
                lanes &= ~lane;
              }
            }
            return nextLanes;
          }
          function getMostRecentEventTime(root2, lanes) {
            var eventTimes = root2.eventTimes;
            var mostRecentEventTime = NoTimestamp;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              var eventTime = eventTimes[index2];
              if (eventTime > mostRecentEventTime) {
                mostRecentEventTime = eventTime;
              }
              lanes &= ~lane;
            }
            return mostRecentEventTime;
          }
          function computeExpirationTime(lane, currentTime) {
            switch (lane) {
              case SyncLane:
              case InputContinuousHydrationLane:
              case InputContinuousLane:
                return currentTime + 250;
              case DefaultHydrationLane:
              case DefaultLane:
              case TransitionHydrationLane:
              case TransitionLane1:
              case TransitionLane2:
              case TransitionLane3:
              case TransitionLane4:
              case TransitionLane5:
              case TransitionLane6:
              case TransitionLane7:
              case TransitionLane8:
              case TransitionLane9:
              case TransitionLane10:
              case TransitionLane11:
              case TransitionLane12:
              case TransitionLane13:
              case TransitionLane14:
              case TransitionLane15:
              case TransitionLane16:
                return currentTime + 5e3;
              case RetryLane1:
              case RetryLane2:
              case RetryLane3:
              case RetryLane4:
              case RetryLane5:
                return NoTimestamp;
              case SelectiveHydrationLane:
              case IdleHydrationLane:
              case IdleLane:
              case OffscreenLane:
                return NoTimestamp;
              default:
                {
                  error("Should have found matching lanes. This is a bug in React.");
                }
                return NoTimestamp;
            }
          }
          function markStarvedLanesAsExpired(root2, currentTime) {
            var pendingLanes = root2.pendingLanes;
            var suspendedLanes = root2.suspendedLanes;
            var pingedLanes = root2.pingedLanes;
            var expirationTimes = root2.expirationTimes;
            var lanes = pendingLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              var expirationTime = expirationTimes[index2];
              if (expirationTime === NoTimestamp) {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                  expirationTimes[index2] = computeExpirationTime(lane, currentTime);
                }
              } else if (expirationTime <= currentTime) {
                root2.expiredLanes |= lane;
              }
              lanes &= ~lane;
            }
          }
          function getHighestPriorityPendingLanes(root2) {
            return getHighestPriorityLanes(root2.pendingLanes);
          }
          function getLanesToRetrySynchronouslyOnError(root2) {
            var everythingButOffscreen = root2.pendingLanes & ~OffscreenLane;
            if (everythingButOffscreen !== NoLanes) {
              return everythingButOffscreen;
            }
            if (everythingButOffscreen & OffscreenLane) {
              return OffscreenLane;
            }
            return NoLanes;
          }
          function includesSyncLane(lanes) {
            return (lanes & SyncLane) !== NoLanes;
          }
          function includesNonIdleWork(lanes) {
            return (lanes & NonIdleLanes) !== NoLanes;
          }
          function includesOnlyRetries(lanes) {
            return (lanes & RetryLanes) === lanes;
          }
          function includesOnlyNonUrgentLanes(lanes) {
            var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
            return (lanes & UrgentLanes) === NoLanes;
          }
          function includesOnlyTransitions(lanes) {
            return (lanes & TransitionLanes) === lanes;
          }
          function includesBlockingLane(root2, lanes) {
            var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
            return (lanes & SyncDefaultLanes) !== NoLanes;
          }
          function includesExpiredLane(root2, lanes) {
            return (lanes & root2.expiredLanes) !== NoLanes;
          }
          function isTransitionLane(lane) {
            return (lane & TransitionLanes) !== NoLanes;
          }
          function claimNextTransitionLane() {
            var lane = nextTransitionLane;
            nextTransitionLane <<= 1;
            if ((nextTransitionLane & TransitionLanes) === NoLanes) {
              nextTransitionLane = TransitionLane1;
            }
            return lane;
          }
          function claimNextRetryLane() {
            var lane = nextRetryLane;
            nextRetryLane <<= 1;
            if ((nextRetryLane & RetryLanes) === NoLanes) {
              nextRetryLane = RetryLane1;
            }
            return lane;
          }
          function getHighestPriorityLane(lanes) {
            return lanes & -lanes;
          }
          function pickArbitraryLane(lanes) {
            return getHighestPriorityLane(lanes);
          }
          function pickArbitraryLaneIndex(lanes) {
            return 31 - clz32(lanes);
          }
          function laneToIndex(lane) {
            return pickArbitraryLaneIndex(lane);
          }
          function includesSomeLane(a2, b2) {
            return (a2 & b2) !== NoLanes;
          }
          function isSubsetOfLanes(set2, subset) {
            return (set2 & subset) === subset;
          }
          function mergeLanes(a2, b2) {
            return a2 | b2;
          }
          function removeLanes(set2, subset) {
            return set2 & ~subset;
          }
          function intersectLanes(a2, b2) {
            return a2 & b2;
          }
          function laneToLanes(lane) {
            return lane;
          }
          function higherPriorityLane(a2, b2) {
            return a2 !== NoLane && a2 < b2 ? a2 : b2;
          }
          function createLaneMap(initial) {
            var laneMap = [];
            for (var i2 = 0; i2 < TotalLanes; i2++) {
              laneMap.push(initial);
            }
            return laneMap;
          }
          function markRootUpdated(root2, updateLane, eventTime) {
            root2.pendingLanes |= updateLane;
            if (updateLane !== IdleLane) {
              root2.suspendedLanes = NoLanes;
              root2.pingedLanes = NoLanes;
            }
            var eventTimes = root2.eventTimes;
            var index2 = laneToIndex(updateLane);
            eventTimes[index2] = eventTime;
          }
          function markRootSuspended(root2, suspendedLanes) {
            root2.suspendedLanes |= suspendedLanes;
            root2.pingedLanes &= ~suspendedLanes;
            var expirationTimes = root2.expirationTimes;
            var lanes = suspendedLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              expirationTimes[index2] = NoTimestamp;
              lanes &= ~lane;
            }
          }
          function markRootPinged(root2, pingedLanes, eventTime) {
            root2.pingedLanes |= root2.suspendedLanes & pingedLanes;
          }
          function markRootFinished(root2, remainingLanes) {
            var noLongerPendingLanes = root2.pendingLanes & ~remainingLanes;
            root2.pendingLanes = remainingLanes;
            root2.suspendedLanes = NoLanes;
            root2.pingedLanes = NoLanes;
            root2.expiredLanes &= remainingLanes;
            root2.mutableReadLanes &= remainingLanes;
            root2.entangledLanes &= remainingLanes;
            var entanglements = root2.entanglements;
            var eventTimes = root2.eventTimes;
            var expirationTimes = root2.expirationTimes;
            var lanes = noLongerPendingLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              entanglements[index2] = NoLanes;
              eventTimes[index2] = NoTimestamp;
              expirationTimes[index2] = NoTimestamp;
              lanes &= ~lane;
            }
          }
          function markRootEntangled(root2, entangledLanes) {
            var rootEntangledLanes = root2.entangledLanes |= entangledLanes;
            var entanglements = root2.entanglements;
            var lanes = rootEntangledLanes;
            while (lanes) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              if (lane & entangledLanes | entanglements[index2] & entangledLanes) {
                entanglements[index2] |= entangledLanes;
              }
              lanes &= ~lane;
            }
          }
          function getBumpedLaneForHydration(root2, renderLanes2) {
            var renderLane = getHighestPriorityLane(renderLanes2);
            var lane;
            switch (renderLane) {
              case InputContinuousLane:
                lane = InputContinuousHydrationLane;
                break;
              case DefaultLane:
                lane = DefaultHydrationLane;
                break;
              case TransitionLane1:
              case TransitionLane2:
              case TransitionLane3:
              case TransitionLane4:
              case TransitionLane5:
              case TransitionLane6:
              case TransitionLane7:
              case TransitionLane8:
              case TransitionLane9:
              case TransitionLane10:
              case TransitionLane11:
              case TransitionLane12:
              case TransitionLane13:
              case TransitionLane14:
              case TransitionLane15:
              case TransitionLane16:
              case RetryLane1:
              case RetryLane2:
              case RetryLane3:
              case RetryLane4:
              case RetryLane5:
                lane = TransitionHydrationLane;
                break;
              case IdleLane:
                lane = IdleHydrationLane;
                break;
              default:
                lane = NoLane;
                break;
            }
            if ((lane & (root2.suspendedLanes | renderLanes2)) !== NoLane) {
              return NoLane;
            }
            return lane;
          }
          function addFiberToLanesMap(root2, fiber, lanes) {
            if (!isDevToolsPresent) {
              return;
            }
            var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap;
            while (lanes > 0) {
              var index2 = laneToIndex(lanes);
              var lane = 1 << index2;
              var updaters = pendingUpdatersLaneMap[index2];
              updaters.add(fiber);
              lanes &= ~lane;
            }
          }
          function movePendingFibersToMemoized(root2, lanes) {
            if (!isDevToolsPresent) {
              return;
            }
            var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap;
            var memoizedUpdaters = root2.memoizedUpdaters;
            while (lanes > 0) {
              var index2 = laneToIndex(lanes);
              var lane = 1 << index2;
              var updaters = pendingUpdatersLaneMap[index2];
              if (updaters.size > 0) {
                updaters.forEach(function(fiber) {
                  var alternate = fiber.alternate;
                  if (alternate === null || !memoizedUpdaters.has(alternate)) {
                    memoizedUpdaters.add(fiber);
                  }
                });
                updaters.clear();
              }
              lanes &= ~lane;
            }
          }
          function getTransitionsForLanes(root2, lanes) {
            {
              return null;
            }
          }
          var DiscreteEventPriority = SyncLane;
          var ContinuousEventPriority = InputContinuousLane;
          var DefaultEventPriority = DefaultLane;
          var IdleEventPriority = IdleLane;
          var currentUpdatePriority = NoLane;
          function getCurrentUpdatePriority() {
            return currentUpdatePriority;
          }
          function setCurrentUpdatePriority(newPriority) {
            currentUpdatePriority = newPriority;
          }
          function runWithPriority(priority, fn2) {
            var previousPriority = currentUpdatePriority;
            try {
              currentUpdatePriority = priority;
              return fn2();
            } finally {
              currentUpdatePriority = previousPriority;
            }
          }
          function higherEventPriority(a2, b2) {
            return a2 !== 0 && a2 < b2 ? a2 : b2;
          }
          function lowerEventPriority(a2, b2) {
            return a2 === 0 || a2 > b2 ? a2 : b2;
          }
          function isHigherEventPriority(a2, b2) {
            return a2 !== 0 && a2 < b2;
          }
          function lanesToEventPriority(lanes) {
            var lane = getHighestPriorityLane(lanes);
            if (!isHigherEventPriority(DiscreteEventPriority, lane)) {
              return DiscreteEventPriority;
            }
            if (!isHigherEventPriority(ContinuousEventPriority, lane)) {
              return ContinuousEventPriority;
            }
            if (includesNonIdleWork(lane)) {
              return DefaultEventPriority;
            }
            return IdleEventPriority;
          }
          function isRootDehydrated(root2) {
            var currentState = root2.current.memoizedState;
            return currentState.isDehydrated;
          }
          var _attemptSynchronousHydration;
          function setAttemptSynchronousHydration(fn2) {
            _attemptSynchronousHydration = fn2;
          }
          function attemptSynchronousHydration(fiber) {
            _attemptSynchronousHydration(fiber);
          }
          var attemptContinuousHydration;
          function setAttemptContinuousHydration(fn2) {
            attemptContinuousHydration = fn2;
          }
          var attemptHydrationAtCurrentPriority;
          function setAttemptHydrationAtCurrentPriority(fn2) {
            attemptHydrationAtCurrentPriority = fn2;
          }
          var getCurrentUpdatePriority$1;
          function setGetCurrentUpdatePriority(fn2) {
            getCurrentUpdatePriority$1 = fn2;
          }
          var attemptHydrationAtPriority;
          function setAttemptHydrationAtPriority(fn2) {
            attemptHydrationAtPriority = fn2;
          }
          var hasScheduledReplayAttempt = false;
          var queuedDiscreteEvents = [];
          var queuedFocus = null;
          var queuedDrag = null;
          var queuedMouse = null;
          var queuedPointers = /* @__PURE__ */ new Map();
          var queuedPointerCaptures = /* @__PURE__ */ new Map();
          var queuedExplicitHydrationTargets = [];
          var discreteReplayableEvents = [
            "mousedown",
            "mouseup",
            "touchcancel",
            "touchend",
            "touchstart",
            "auxclick",
            "dblclick",
            "pointercancel",
            "pointerdown",
            "pointerup",
            "dragend",
            "dragstart",
            "drop",
            "compositionend",
            "compositionstart",
            "keydown",
            "keypress",
            "keyup",
            "input",
            "textInput",
            "copy",
            "cut",
            "paste",
            "click",
            "change",
            "contextmenu",
            "reset",
            "submit"
          ];
          function isDiscreteEventThatRequiresHydration(eventType) {
            return discreteReplayableEvents.indexOf(eventType) > -1;
          }
          function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            return {
              blockedOn,
              domEventName,
              eventSystemFlags,
              nativeEvent,
              targetContainers: [targetContainer]
            };
          }
          function clearIfContinuousEvent(domEventName, nativeEvent) {
            switch (domEventName) {
              case "focusin":
              case "focusout":
                queuedFocus = null;
                break;
              case "dragenter":
              case "dragleave":
                queuedDrag = null;
                break;
              case "mouseover":
              case "mouseout":
                queuedMouse = null;
                break;
              case "pointerover":
              case "pointerout": {
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
              }
              case "gotpointercapture":
              case "lostpointercapture": {
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
              }
            }
          }
          function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
              var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
              if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) {
                  attemptContinuousHydration(_fiber2);
                }
              }
              return queuedEvent;
            }
            existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
            var targetContainers = existingQueuedEvent.targetContainers;
            if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
              targetContainers.push(targetContainer);
            }
            return existingQueuedEvent;
          }
          function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            switch (domEventName) {
              case "focusin": {
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
              }
              case "dragenter": {
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
              }
              case "mouseover": {
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
              }
              case "pointerover": {
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
              }
              case "gotpointercapture": {
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
              }
            }
            return false;
          }
          function attemptExplicitHydrationTarget(queuedTarget) {
            var targetInst = getClosestInstanceFromNode(queuedTarget.target);
            if (targetInst !== null) {
              var nearestMounted = getNearestMountedFiber(targetInst);
              if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                  var instance = getSuspenseInstanceFromFiber(nearestMounted);
                  if (instance !== null) {
                    queuedTarget.blockedOn = instance;
                    attemptHydrationAtPriority(queuedTarget.priority, function() {
                      attemptHydrationAtCurrentPriority(nearestMounted);
                    });
                    return;
                  }
                } else if (tag === HostRoot) {
                  var root2 = nearestMounted.stateNode;
                  if (isRootDehydrated(root2)) {
                    queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                    return;
                  }
                }
              }
            }
            queuedTarget.blockedOn = null;
          }
          function queueExplicitHydrationTarget(target) {
            var updatePriority = getCurrentUpdatePriority$1();
            var queuedTarget = {
              blockedOn: null,
              target,
              priority: updatePriority
            };
            var i2 = 0;
            for (; i2 < queuedExplicitHydrationTargets.length; i2++) {
              if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i2].priority)) {
                break;
              }
            }
            queuedExplicitHydrationTargets.splice(i2, 0, queuedTarget);
            if (i2 === 0) {
              attemptExplicitHydrationTarget(queuedTarget);
            }
          }
          function attemptReplayContinuousQueuedEvent(queuedEvent) {
            if (queuedEvent.blockedOn !== null) {
              return false;
            }
            var targetContainers = queuedEvent.targetContainers;
            while (targetContainers.length > 0) {
              var targetContainer = targetContainers[0];
              var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
              if (nextBlockedOn === null) {
                {
                  var nativeEvent = queuedEvent.nativeEvent;
                  var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                  setReplayingEvent(nativeEventClone);
                  nativeEvent.target.dispatchEvent(nativeEventClone);
                  resetReplayingEvent();
                }
              } else {
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) {
                  attemptContinuousHydration(_fiber3);
                }
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
              }
              targetContainers.shift();
            }
            return true;
          }
          function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
            if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
              map.delete(key);
            }
          }
          function replayUnblockedEvents() {
            hasScheduledReplayAttempt = false;
            if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
              queuedFocus = null;
            }
            if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
              queuedDrag = null;
            }
            if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
              queuedMouse = null;
            }
            queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
            queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
          }
          function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
            if (queuedEvent.blockedOn === unblocked) {
              queuedEvent.blockedOn = null;
              if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true;
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
              }
            }
          }
          function retryIfBlockedOn(unblocked) {
            if (queuedDiscreteEvents.length > 0) {
              scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
              for (var i2 = 1; i2 < queuedDiscreteEvents.length; i2++) {
                var queuedEvent = queuedDiscreteEvents[i2];
                if (queuedEvent.blockedOn === unblocked) {
                  queuedEvent.blockedOn = null;
                }
              }
            }
            if (queuedFocus !== null) {
              scheduleCallbackIfUnblocked(queuedFocus, unblocked);
            }
            if (queuedDrag !== null) {
              scheduleCallbackIfUnblocked(queuedDrag, unblocked);
            }
            if (queuedMouse !== null) {
              scheduleCallbackIfUnblocked(queuedMouse, unblocked);
            }
            var unblock = function(queuedEvent2) {
              return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
            };
            queuedPointers.forEach(unblock);
            queuedPointerCaptures.forEach(unblock);
            for (var _i2 = 0; _i2 < queuedExplicitHydrationTargets.length; _i2++) {
              var queuedTarget = queuedExplicitHydrationTargets[_i2];
              if (queuedTarget.blockedOn === unblocked) {
                queuedTarget.blockedOn = null;
              }
            }
            while (queuedExplicitHydrationTargets.length > 0) {
              var nextExplicitTarget = queuedExplicitHydrationTargets[0];
              if (nextExplicitTarget.blockedOn !== null) {
                break;
              } else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) {
                  queuedExplicitHydrationTargets.shift();
                }
              }
            }
          }
          var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
          var _enabled = true;
          function setEnabled(enabled) {
            _enabled = !!enabled;
          }
          function isEnabled() {
            return _enabled;
          }
          function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
            var eventPriority = getEventPriority(domEventName);
            var listenerWrapper;
            switch (eventPriority) {
              case DiscreteEventPriority:
                listenerWrapper = dispatchDiscreteEvent;
                break;
              case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
              case DefaultEventPriority:
              default:
                listenerWrapper = dispatchEvent;
                break;
            }
            return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
          }
          function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
            var previousPriority = getCurrentUpdatePriority();
            var prevTransition = ReactCurrentBatchConfig.transition;
            ReactCurrentBatchConfig.transition = null;
            try {
              setCurrentUpdatePriority(DiscreteEventPriority);
              dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig.transition = prevTransition;
            }
          }
          function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
            var previousPriority = getCurrentUpdatePriority();
            var prevTransition = ReactCurrentBatchConfig.transition;
            ReactCurrentBatchConfig.transition = null;
            try {
              setCurrentUpdatePriority(ContinuousEventPriority);
              dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig.transition = prevTransition;
            }
          }
          function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            if (!_enabled) {
              return;
            }
            {
              dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
            }
          }
          function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn === null) {
              dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
              clearIfContinuousEvent(domEventName, nativeEvent);
              return;
            }
            if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
              nativeEvent.stopPropagation();
              return;
            }
            clearIfContinuousEvent(domEventName, nativeEvent);
            if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
              while (blockedOn !== null) {
                var fiber = getInstanceFromNode(blockedOn);
                if (fiber !== null) {
                  attemptSynchronousHydration(fiber);
                }
                var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                if (nextBlockedOn === null) {
                  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                }
                if (nextBlockedOn === blockedOn) {
                  break;
                }
                blockedOn = nextBlockedOn;
              }
              if (blockedOn !== null) {
                nativeEvent.stopPropagation();
              }
              return;
            }
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
          }
          var return_targetInst = null;
          function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
            return_targetInst = null;
            var nativeEventTarget = getEventTarget(nativeEvent);
            var targetInst = getClosestInstanceFromNode(nativeEventTarget);
            if (targetInst !== null) {
              var nearestMounted = getNearestMountedFiber(targetInst);
              if (nearestMounted === null) {
                targetInst = null;
              } else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                  var instance = getSuspenseInstanceFromFiber(nearestMounted);
                  if (instance !== null) {
                    return instance;
                  }
                  targetInst = null;
                } else if (tag === HostRoot) {
                  var root2 = nearestMounted.stateNode;
                  if (isRootDehydrated(root2)) {
                    return getContainerFromFiber(nearestMounted);
                  }
                  targetInst = null;
                } else if (nearestMounted !== targetInst) {
                  targetInst = null;
                }
              }
            }
            return_targetInst = targetInst;
            return null;
          }
          function getEventPriority(domEventName) {
            switch (domEventName) {
              case "cancel":
              case "click":
              case "close":
              case "contextmenu":
              case "copy":
              case "cut":
              case "auxclick":
              case "dblclick":
              case "dragend":
              case "dragstart":
              case "drop":
              case "focusin":
              case "focusout":
              case "input":
              case "invalid":
              case "keydown":
              case "keypress":
              case "keyup":
              case "mousedown":
              case "mouseup":
              case "paste":
              case "pause":
              case "play":
              case "pointercancel":
              case "pointerdown":
              case "pointerup":
              case "ratechange":
              case "reset":
              case "resize":
              case "seeked":
              case "submit":
              case "touchcancel":
              case "touchend":
              case "touchstart":
              case "volumechange":
              case "change":
              case "selectionchange":
              case "textInput":
              case "compositionstart":
              case "compositionend":
              case "compositionupdate":
              case "beforeblur":
              case "afterblur":
              case "beforeinput":
              case "blur":
              case "fullscreenchange":
              case "focus":
              case "hashchange":
              case "popstate":
              case "select":
              case "selectstart":
                return DiscreteEventPriority;
              case "drag":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "mousemove":
              case "mouseout":
              case "mouseover":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "scroll":
              case "toggle":
              case "touchmove":
              case "wheel":
              case "mouseenter":
              case "mouseleave":
              case "pointerenter":
              case "pointerleave":
                return ContinuousEventPriority;
              case "message": {
                var schedulerPriority = getCurrentPriorityLevel();
                switch (schedulerPriority) {
                  case ImmediatePriority:
                    return DiscreteEventPriority;
                  case UserBlockingPriority:
                    return ContinuousEventPriority;
                  case NormalPriority:
                  case LowPriority:
                    return DefaultEventPriority;
                  case IdlePriority:
                    return IdleEventPriority;
                  default:
                    return DefaultEventPriority;
                }
              }
              default:
                return DefaultEventPriority;
            }
          }
          function addEventBubbleListener(target, eventType, listener) {
            target.addEventListener(eventType, listener, false);
            return listener;
          }
          function addEventCaptureListener(target, eventType, listener) {
            target.addEventListener(eventType, listener, true);
            return listener;
          }
          function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
            target.addEventListener(eventType, listener, {
              capture: true,
              passive
            });
            return listener;
          }
          function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
            target.addEventListener(eventType, listener, {
              passive
            });
            return listener;
          }
          var root = null;
          var startText = null;
          var fallbackText = null;
          function initialize(nativeEventTarget) {
            root = nativeEventTarget;
            startText = getText();
            return true;
          }
          function reset() {
            root = null;
            startText = null;
            fallbackText = null;
          }
          function getData() {
            if (fallbackText) {
              return fallbackText;
            }
            var start;
            var startValue = startText;
            var startLength = startValue.length;
            var end;
            var endValue = getText();
            var endLength = endValue.length;
            for (start = 0; start < startLength; start++) {
              if (startValue[start] !== endValue[start]) {
                break;
              }
            }
            var minEnd = startLength - start;
            for (end = 1; end <= minEnd; end++) {
              if (startValue[startLength - end] !== endValue[endLength - end]) {
                break;
              }
            }
            var sliceTail = end > 1 ? 1 - end : void 0;
            fallbackText = endValue.slice(start, sliceTail);
            return fallbackText;
          }
          function getText() {
            if ("value" in root) {
              return root.value;
            }
            return root.textContent;
          }
          function getEventCharCode(nativeEvent) {
            var charCode;
            var keyCode = nativeEvent.keyCode;
            if ("charCode" in nativeEvent) {
              charCode = nativeEvent.charCode;
              if (charCode === 0 && keyCode === 13) {
                charCode = 13;
              }
            } else {
              charCode = keyCode;
            }
            if (charCode === 10) {
              charCode = 13;
            }
            if (charCode >= 32 || charCode === 13) {
              return charCode;
            }
            return 0;
          }
          function functionThatReturnsTrue() {
            return true;
          }
          function functionThatReturnsFalse() {
            return false;
          }
          function createSyntheticEvent(Interface) {
            function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
              this._reactName = reactName;
              this._targetInst = targetInst;
              this.type = reactEventType;
              this.nativeEvent = nativeEvent;
              this.target = nativeEventTarget;
              this.currentTarget = null;
              for (var _propName in Interface) {
                if (!Interface.hasOwnProperty(_propName)) {
                  continue;
                }
                var normalize = Interface[_propName];
                if (normalize) {
                  this[_propName] = normalize(nativeEvent);
                } else {
                  this[_propName] = nativeEvent[_propName];
                }
              }
              var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
              if (defaultPrevented) {
                this.isDefaultPrevented = functionThatReturnsTrue;
              } else {
                this.isDefaultPrevented = functionThatReturnsFalse;
              }
              this.isPropagationStopped = functionThatReturnsFalse;
              return this;
            }
            assign(SyntheticBaseEvent.prototype, {
              preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) {
                  return;
                }
                if (event.preventDefault) {
                  event.preventDefault();
                } else if (typeof event.returnValue !== "unknown") {
                  event.returnValue = false;
                }
                this.isDefaultPrevented = functionThatReturnsTrue;
              },
              stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) {
                  return;
                }
                if (event.stopPropagation) {
                  event.stopPropagation();
                } else if (typeof event.cancelBubble !== "unknown") {
                  event.cancelBubble = true;
                }
                this.isPropagationStopped = functionThatReturnsTrue;
              },
              persist: function() {
              },
              isPersistent: functionThatReturnsTrue
            });
            return SyntheticBaseEvent;
          }
          var EventInterface = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function(event) {
              return event.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0
          };
          var SyntheticEvent = createSyntheticEvent(EventInterface);
          var UIEventInterface = assign({}, EventInterface, {
            view: 0,
            detail: 0
          });
          var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
          var lastMovementX;
          var lastMovementY;
          var lastMouseEvent;
          function updateMouseMovementPolyfillState(event) {
            if (event !== lastMouseEvent) {
              if (lastMouseEvent && event.type === "mousemove") {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
              } else {
                lastMovementX = 0;
                lastMovementY = 0;
              }
              lastMouseEvent = event;
            }
          }
          var MouseEventInterface = assign({}, UIEventInterface, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: getEventModifierState,
            button: 0,
            buttons: 0,
            relatedTarget: function(event) {
              if (event.relatedTarget === void 0)
                return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
              return event.relatedTarget;
            },
            movementX: function(event) {
              if ("movementX" in event) {
                return event.movementX;
              }
              updateMouseMovementPolyfillState(event);
              return lastMovementX;
            },
            movementY: function(event) {
              if ("movementY" in event) {
                return event.movementY;
              }
              return lastMovementY;
            }
          });
          var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
          var DragEventInterface = assign({}, MouseEventInterface, {
            dataTransfer: 0
          });
          var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
          var FocusEventInterface = assign({}, UIEventInterface, {
            relatedTarget: 0
          });
          var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
          var AnimationEventInterface = assign({}, EventInterface, {
            animationName: 0,
            elapsedTime: 0,
            pseudoElement: 0
          });
          var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
          var ClipboardEventInterface = assign({}, EventInterface, {
            clipboardData: function(event) {
              return "clipboardData" in event ? event.clipboardData : window.clipboardData;
            }
          });
          var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
          var CompositionEventInterface = assign({}, EventInterface, {
            data: 0
          });
          var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
          var SyntheticInputEvent = SyntheticCompositionEvent;
          var normalizeKey = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified"
          };
          var translateToKey = {
            "8": "Backspace",
            "9": "Tab",
            "12": "Clear",
            "13": "Enter",
            "16": "Shift",
            "17": "Control",
            "18": "Alt",
            "19": "Pause",
            "20": "CapsLock",
            "27": "Escape",
            "32": " ",
            "33": "PageUp",
            "34": "PageDown",
            "35": "End",
            "36": "Home",
            "37": "ArrowLeft",
            "38": "ArrowUp",
            "39": "ArrowRight",
            "40": "ArrowDown",
            "45": "Insert",
            "46": "Delete",
            "112": "F1",
            "113": "F2",
            "114": "F3",
            "115": "F4",
            "116": "F5",
            "117": "F6",
            "118": "F7",
            "119": "F8",
            "120": "F9",
            "121": "F10",
            "122": "F11",
            "123": "F12",
            "144": "NumLock",
            "145": "ScrollLock",
            "224": "Meta"
          };
          function getEventKey(nativeEvent) {
            if (nativeEvent.key) {
              var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
              if (key !== "Unidentified") {
                return key;
              }
            }
            if (nativeEvent.type === "keypress") {
              var charCode = getEventCharCode(nativeEvent);
              return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
            }
            if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
              return translateToKey[nativeEvent.keyCode] || "Unidentified";
            }
            return "";
          }
          var modifierKeyToProp = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
          };
          function modifierStateGetter(keyArg) {
            var syntheticEvent = this;
            var nativeEvent = syntheticEvent.nativeEvent;
            if (nativeEvent.getModifierState) {
              return nativeEvent.getModifierState(keyArg);
            }
            var keyProp = modifierKeyToProp[keyArg];
            return keyProp ? !!nativeEvent[keyProp] : false;
          }
          function getEventModifierState(nativeEvent) {
            return modifierStateGetter;
          }
          var KeyboardEventInterface = assign({}, UIEventInterface, {
            key: getEventKey,
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: getEventModifierState,
            charCode: function(event) {
              if (event.type === "keypress") {
                return getEventCharCode(event);
              }
              return 0;
            },
            keyCode: function(event) {
              if (event.type === "keydown" || event.type === "keyup") {
                return event.keyCode;
              }
              return 0;
            },
            which: function(event) {
              if (event.type === "keypress") {
                return getEventCharCode(event);
              }
              if (event.type === "keydown" || event.type === "keyup") {
                return event.keyCode;
              }
              return 0;
            }
          });
          var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
          var PointerEventInterface = assign({}, MouseEventInterface, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0
          });
          var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
          var TouchEventInterface = assign({}, UIEventInterface, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: getEventModifierState
          });
          var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
          var TransitionEventInterface = assign({}, EventInterface, {
            propertyName: 0,
            elapsedTime: 0,
            pseudoElement: 0
          });
          var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
          var WheelEventInterface = assign({}, MouseEventInterface, {
            deltaX: function(event) {
              return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
            },
            deltaY: function(event) {
              return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
            },
            deltaZ: 0,
            deltaMode: 0
          });
          var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
          var END_KEYCODES = [9, 13, 27, 32];
          var START_KEYCODE = 229;
          var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
          var documentMode = null;
          if (canUseDOM && "documentMode" in document) {
            documentMode = document.documentMode;
          }
          var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode;
          var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
          var SPACEBAR_CODE = 32;
          var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
          function registerEvents() {
            registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
            registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
            registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
            registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          }
          var hasSpaceKeypress = false;
          function isKeypressCommand(nativeEvent) {
            return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
          }
          function getCompositionEventType(domEventName) {
            switch (domEventName) {
              case "compositionstart":
                return "onCompositionStart";
              case "compositionend":
                return "onCompositionEnd";
              case "compositionupdate":
                return "onCompositionUpdate";
            }
          }
          function isFallbackCompositionStart(domEventName, nativeEvent) {
            return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
          }
          function isFallbackCompositionEnd(domEventName, nativeEvent) {
            switch (domEventName) {
              case "keyup":
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
              case "keydown":
                return nativeEvent.keyCode !== START_KEYCODE;
              case "keypress":
              case "mousedown":
              case "focusout":
                return true;
              default:
                return false;
            }
          }
          function getDataFromCustomEvent(nativeEvent) {
            var detail = nativeEvent.detail;
            if (typeof detail === "object" && "data" in detail) {
              return detail.data;
            }
            return null;
          }
          function isUsingKoreanIME(nativeEvent) {
            return nativeEvent.locale === "ko";
          }
          var isComposing = false;
          function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
            var eventType;
            var fallbackData;
            if (canUseCompositionEvent) {
              eventType = getCompositionEventType(domEventName);
            } else if (!isComposing) {
              if (isFallbackCompositionStart(domEventName, nativeEvent)) {
                eventType = "onCompositionStart";
              }
            } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
              eventType = "onCompositionEnd";
            }
            if (!eventType) {
              return null;
            }
            if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
              if (!isComposing && eventType === "onCompositionStart") {
                isComposing = initialize(nativeEventTarget);
              } else if (eventType === "onCompositionEnd") {
                if (isComposing) {
                  fallbackData = getData();
                }
              }
            }
            var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
            if (listeners.length > 0) {
              var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              if (fallbackData) {
                event.data = fallbackData;
              } else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) {
                  event.data = customData;
                }
              }
            }
          }
          function getNativeBeforeInputChars(domEventName, nativeEvent) {
            switch (domEventName) {
              case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
              case "keypress":
                var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) {
                  return null;
                }
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
              case "textInput":
                var chars = nativeEvent.data;
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                  return null;
                }
                return chars;
              default:
                return null;
            }
          }
          function getFallbackBeforeInputChars(domEventName, nativeEvent) {
            if (isComposing) {
              if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
              }
              return null;
            }
            switch (domEventName) {
              case "paste":
                return null;
              case "keypress":
                if (!isKeypressCommand(nativeEvent)) {
                  if (nativeEvent.char && nativeEvent.char.length > 1) {
                    return nativeEvent.char;
                  } else if (nativeEvent.which) {
                    return String.fromCharCode(nativeEvent.which);
                  }
                }
                return null;
              case "compositionend":
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
              default:
                return null;
            }
          }
          function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
            var chars;
            if (canUseTextInputEvent) {
              chars = getNativeBeforeInputChars(domEventName, nativeEvent);
            } else {
              chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
            }
            if (!chars) {
              return null;
            }
            var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
            if (listeners.length > 0) {
              var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              event.data = chars;
            }
          }
          function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          }
          var supportedInputTypes = {
            color: true,
            date: true,
            datetime: true,
            "datetime-local": true,
            email: true,
            month: true,
            number: true,
            password: true,
            range: true,
            search: true,
            tel: true,
            text: true,
            time: true,
            url: true,
            week: true
          };
          function isTextInputElement(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            if (nodeName === "input") {
              return !!supportedInputTypes[elem.type];
            }
            if (nodeName === "textarea") {
              return true;
            }
            return false;
          }
          function isEventSupported(eventNameSuffix) {
            if (!canUseDOM) {
              return false;
            }
            var eventName = "on" + eventNameSuffix;
            var isSupported = eventName in document;
            if (!isSupported) {
              var element = document.createElement("div");
              element.setAttribute(eventName, "return;");
              isSupported = typeof element[eventName] === "function";
            }
            return isSupported;
          }
          function registerEvents$1() {
            registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
          }
          function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
            enqueueStateRestore(target);
            var listeners = accumulateTwoPhaseListeners(inst, "onChange");
            if (listeners.length > 0) {
              var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
              dispatchQueue.push({
                event,
                listeners
              });
            }
          }
          var activeElement = null;
          var activeElementInst = null;
          function shouldUseChangeEvent(elem) {
            var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
            return nodeName === "select" || nodeName === "input" && elem.type === "file";
          }
          function manualDispatchChangeEvent(nativeEvent) {
            var dispatchQueue = [];
            createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
            batchedUpdates(runEventInBatch, dispatchQueue);
          }
          function runEventInBatch(dispatchQueue) {
            processDispatchQueue(dispatchQueue, 0);
          }
          function getInstIfValueChanged(targetInst) {
            var targetNode = getNodeFromInstance(targetInst);
            if (updateValueIfChanged(targetNode)) {
              return targetInst;
            }
          }
          function getTargetInstForChangeEvent(domEventName, targetInst) {
            if (domEventName === "change") {
              return targetInst;
            }
          }
          var isInputEventSupported = false;
          if (canUseDOM) {
            isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
          }
          function startWatchingForValueChange(target, targetInst) {
            activeElement = target;
            activeElementInst = targetInst;
            activeElement.attachEvent("onpropertychange", handlePropertyChange);
          }
          function stopWatchingForValueChange() {
            if (!activeElement) {
              return;
            }
            activeElement.detachEvent("onpropertychange", handlePropertyChange);
            activeElement = null;
            activeElementInst = null;
          }
          function handlePropertyChange(nativeEvent) {
            if (nativeEvent.propertyName !== "value") {
              return;
            }
            if (getInstIfValueChanged(activeElementInst)) {
              manualDispatchChangeEvent(nativeEvent);
            }
          }
          function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
            if (domEventName === "focusin") {
              stopWatchingForValueChange();
              startWatchingForValueChange(target, targetInst);
            } else if (domEventName === "focusout") {
              stopWatchingForValueChange();
            }
          }
          function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
            if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
              return getInstIfValueChanged(activeElementInst);
            }
          }
          function shouldUseClickEvent(elem) {
            var nodeName = elem.nodeName;
            return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
          }
          function getTargetInstForClickEvent(domEventName, targetInst) {
            if (domEventName === "click") {
              return getInstIfValueChanged(targetInst);
            }
          }
          function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
            if (domEventName === "input" || domEventName === "change") {
              return getInstIfValueChanged(targetInst);
            }
          }
          function handleControlledInputBlur(node) {
            var state = node._wrapperState;
            if (!state || !state.controlled || node.type !== "number") {
              return;
            }
            {
              setDefaultValue(node, "number", node.value);
            }
          }
          function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
            var getTargetInstFunc, handleEventFunc;
            if (shouldUseChangeEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForChangeEvent;
            } else if (isTextInputElement(targetNode)) {
              if (isInputEventSupported) {
                getTargetInstFunc = getTargetInstForInputOrChangeEvent;
              } else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
              }
            } else if (shouldUseClickEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForClickEvent;
            }
            if (getTargetInstFunc) {
              var inst = getTargetInstFunc(domEventName, targetInst);
              if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
              }
            }
            if (handleEventFunc) {
              handleEventFunc(domEventName, targetNode, targetInst);
            }
            if (domEventName === "focusout") {
              handleControlledInputBlur(targetNode);
            }
          }
          function registerEvents$2() {
            registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
            registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
            registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
            registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
          }
          function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
            var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
            if (isOverEvent && !isReplayingEvent(nativeEvent)) {
              var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
              if (related) {
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                  return;
                }
              }
            }
            if (!isOutEvent && !isOverEvent) {
              return;
            }
            var win;
            if (nativeEventTarget.window === nativeEventTarget) {
              win = nativeEventTarget;
            } else {
              var doc = nativeEventTarget.ownerDocument;
              if (doc) {
                win = doc.defaultView || doc.parentWindow;
              } else {
                win = window;
              }
            }
            var from;
            var to2;
            if (isOutEvent) {
              var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
              from = targetInst;
              to2 = _related ? getClosestInstanceFromNode(_related) : null;
              if (to2 !== null) {
                var nearestMounted = getNearestMountedFiber(to2);
                if (to2 !== nearestMounted || to2.tag !== HostComponent && to2.tag !== HostText) {
                  to2 = null;
                }
              }
            } else {
              from = null;
              to2 = targetInst;
            }
            if (from === to2) {
              return;
            }
            var SyntheticEventCtor = SyntheticMouseEvent;
            var leaveEventType = "onMouseLeave";
            var enterEventType = "onMouseEnter";
            var eventTypePrefix = "mouse";
            if (domEventName === "pointerout" || domEventName === "pointerover") {
              SyntheticEventCtor = SyntheticPointerEvent;
              leaveEventType = "onPointerLeave";
              enterEventType = "onPointerEnter";
              eventTypePrefix = "pointer";
            }
            var fromNode = from == null ? win : getNodeFromInstance(from);
            var toNode = to2 == null ? win : getNodeFromInstance(to2);
            var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
            leave.target = fromNode;
            leave.relatedTarget = toNode;
            var enter = null;
            var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
            if (nativeTargetInst === targetInst) {
              var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to2, nativeEvent, nativeEventTarget);
              enterEvent.target = toNode;
              enterEvent.relatedTarget = fromNode;
              enter = enterEvent;
            }
            accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to2);
          }
          function is2(x2, y2) {
            return x2 === y2 && (x2 !== 0 || 1 / x2 === 1 / y2) || x2 !== x2 && y2 !== y2;
          }
          var objectIs = typeof Object.is === "function" ? Object.is : is2;
          function shallowEqual(objA, objB) {
            if (objectIs(objA, objB)) {
              return true;
            }
            if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
              return false;
            }
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            if (keysA.length !== keysB.length) {
              return false;
            }
            for (var i2 = 0; i2 < keysA.length; i2++) {
              var currentKey = keysA[i2];
              if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {
                return false;
              }
            }
            return true;
          }
          function getLeafNode(node) {
            while (node && node.firstChild) {
              node = node.firstChild;
            }
            return node;
          }
          function getSiblingNode(node) {
            while (node) {
              if (node.nextSibling) {
                return node.nextSibling;
              }
              node = node.parentNode;
            }
          }
          function getNodeForCharacterOffset(root2, offset) {
            var node = getLeafNode(root2);
            var nodeStart = 0;
            var nodeEnd = 0;
            while (node) {
              if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) {
                  return {
                    node,
                    offset: offset - nodeStart
                  };
                }
                nodeStart = nodeEnd;
              }
              node = getLeafNode(getSiblingNode(node));
            }
          }
          function getOffsets(outerNode) {
            var ownerDocument = outerNode.ownerDocument;
            var win = ownerDocument && ownerDocument.defaultView || window;
            var selection = win.getSelection && win.getSelection();
            if (!selection || selection.rangeCount === 0) {
              return null;
            }
            var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
            try {
              anchorNode.nodeType;
              focusNode.nodeType;
            } catch (e27) {
              return null;
            }
            return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
          }
          function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
            var length = 0;
            var start = -1;
            var end = -1;
            var indexWithinAnchor = 0;
            var indexWithinFocus = 0;
            var node = outerNode;
            var parentNode = null;
            outer:
              while (true) {
                var next = null;
                while (true) {
                  if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                    start = length + anchorOffset;
                  }
                  if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                    end = length + focusOffset;
                  }
                  if (node.nodeType === TEXT_NODE) {
                    length += node.nodeValue.length;
                  }
                  if ((next = node.firstChild) === null) {
                    break;
                  }
                  parentNode = node;
                  node = next;
                }
                while (true) {
                  if (node === outerNode) {
                    break outer;
                  }
                  if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                    start = length;
                  }
                  if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                    end = length;
                  }
                  if ((next = node.nextSibling) !== null) {
                    break;
                  }
                  node = parentNode;
                  parentNode = node.parentNode;
                }
                node = next;
              }
            if (start === -1 || end === -1) {
              return null;
            }
            return {
              start,
              end
            };
          }
          function setOffsets(node, offsets) {
            var doc = node.ownerDocument || document;
            var win = doc && doc.defaultView || window;
            if (!win.getSelection) {
              return;
            }
            var selection = win.getSelection();
            var length = node.textContent.length;
            var start = Math.min(offsets.start, length);
            var end = offsets.end === void 0 ? start : Math.min(offsets.end, length);
            if (!selection.extend && start > end) {
              var temp = end;
              end = start;
              start = temp;
            }
            var startMarker = getNodeForCharacterOffset(node, start);
            var endMarker = getNodeForCharacterOffset(node, end);
            if (startMarker && endMarker) {
              if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
                return;
              }
              var range = doc.createRange();
              range.setStart(startMarker.node, startMarker.offset);
              selection.removeAllRanges();
              if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
              } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
              }
            }
          }
          function isTextNode(node) {
            return node && node.nodeType === TEXT_NODE;
          }
          function containsNode(outerNode, innerNode) {
            if (!outerNode || !innerNode) {
              return false;
            } else if (outerNode === innerNode) {
              return true;
            } else if (isTextNode(outerNode)) {
              return false;
            } else if (isTextNode(innerNode)) {
              return containsNode(outerNode, innerNode.parentNode);
            } else if ("contains" in outerNode) {
              return outerNode.contains(innerNode);
            } else if (outerNode.compareDocumentPosition) {
              return !!(outerNode.compareDocumentPosition(innerNode) & 16);
            } else {
              return false;
            }
          }
          function isInDocument(node) {
            return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
          }
          function isSameOriginFrame(iframe) {
            try {
              return typeof iframe.contentWindow.location.href === "string";
            } catch (err) {
              return false;
            }
          }
          function getActiveElementDeep() {
            var win = window;
            var element = getActiveElement();
            while (element instanceof win.HTMLIFrameElement) {
              if (isSameOriginFrame(element)) {
                win = element.contentWindow;
              } else {
                return element;
              }
              element = getActiveElement(win.document);
            }
            return element;
          }
          function hasSelectionCapabilities(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
          }
          function getSelectionInformation() {
            var focusedElem = getActiveElementDeep();
            return {
              focusedElem,
              selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
            };
          }
          function restoreSelection(priorSelectionInformation) {
            var curFocusedElem = getActiveElementDeep();
            var priorFocusedElem = priorSelectionInformation.focusedElem;
            var priorSelectionRange = priorSelectionInformation.selectionRange;
            if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
              if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
                setSelection(priorFocusedElem, priorSelectionRange);
              }
              var ancestors = [];
              var ancestor = priorFocusedElem;
              while (ancestor = ancestor.parentNode) {
                if (ancestor.nodeType === ELEMENT_NODE) {
                  ancestors.push({
                    element: ancestor,
                    left: ancestor.scrollLeft,
                    top: ancestor.scrollTop
                  });
                }
              }
              if (typeof priorFocusedElem.focus === "function") {
                priorFocusedElem.focus();
              }
              for (var i2 = 0; i2 < ancestors.length; i2++) {
                var info = ancestors[i2];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
              }
            }
          }
          function getSelection(input) {
            var selection;
            if ("selectionStart" in input) {
              selection = {
                start: input.selectionStart,
                end: input.selectionEnd
              };
            } else {
              selection = getOffsets(input);
            }
            return selection || {
              start: 0,
              end: 0
            };
          }
          function setSelection(input, offsets) {
            var start = offsets.start;
            var end = offsets.end;
            if (end === void 0) {
              end = start;
            }
            if ("selectionStart" in input) {
              input.selectionStart = start;
              input.selectionEnd = Math.min(end, input.value.length);
            } else {
              setOffsets(input, offsets);
            }
          }
          var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
          function registerEvents$3() {
            registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
          }
          var activeElement$1 = null;
          var activeElementInst$1 = null;
          var lastSelection = null;
          var mouseDown = false;
          function getSelection$1(node) {
            if ("selectionStart" in node && hasSelectionCapabilities(node)) {
              return {
                start: node.selectionStart,
                end: node.selectionEnd
              };
            } else {
              var win = node.ownerDocument && node.ownerDocument.defaultView || window;
              var selection = win.getSelection();
              return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
              };
            }
          }
          function getEventTargetDocument(eventTarget) {
            return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
          }
          function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
            var doc = getEventTargetDocument(nativeEventTarget);
            if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
              return;
            }
            var currentSelection = getSelection$1(activeElement$1);
            if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
              lastSelection = currentSelection;
              var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
              if (listeners.length > 0) {
                var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                  event,
                  listeners
                });
                event.target = activeElement$1;
              }
            }
          }
          function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
            switch (domEventName) {
              case "focusin":
                if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                  activeElement$1 = targetNode;
                  activeElementInst$1 = targetInst;
                  lastSelection = null;
                }
                break;
              case "focusout":
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
              case "mousedown":
                mouseDown = true;
                break;
              case "contextmenu":
              case "mouseup":
              case "dragend":
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
              case "selectionchange":
                if (skipSelectionChangeEvent) {
                  break;
                }
              case "keydown":
              case "keyup":
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
            }
          }
          function makePrefixMap(styleProp, eventName) {
            var prefixes2 = {};
            prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase();
            prefixes2["Webkit" + styleProp] = "webkit" + eventName;
            prefixes2["Moz" + styleProp] = "moz" + eventName;
            return prefixes2;
          }
          var vendorPrefixes = {
            animationend: makePrefixMap("Animation", "AnimationEnd"),
            animationiteration: makePrefixMap("Animation", "AnimationIteration"),
            animationstart: makePrefixMap("Animation", "AnimationStart"),
            transitionend: makePrefixMap("Transition", "TransitionEnd")
          };
          var prefixedEventNames = {};
          var style = {};
          if (canUseDOM) {
            style = document.createElement("div").style;
            if (!("AnimationEvent" in window)) {
              delete vendorPrefixes.animationend.animation;
              delete vendorPrefixes.animationiteration.animation;
              delete vendorPrefixes.animationstart.animation;
            }
            if (!("TransitionEvent" in window)) {
              delete vendorPrefixes.transitionend.transition;
            }
          }
          function getVendorPrefixedEventName(eventName) {
            if (prefixedEventNames[eventName]) {
              return prefixedEventNames[eventName];
            } else if (!vendorPrefixes[eventName]) {
              return eventName;
            }
            var prefixMap = vendorPrefixes[eventName];
            for (var styleProp in prefixMap) {
              if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
                return prefixedEventNames[eventName] = prefixMap[styleProp];
              }
            }
            return eventName;
          }
          var ANIMATION_END = getVendorPrefixedEventName("animationend");
          var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
          var ANIMATION_START = getVendorPrefixedEventName("animationstart");
          var TRANSITION_END = getVendorPrefixedEventName("transitionend");
          var topLevelEventsToReactNames = /* @__PURE__ */ new Map();
          var simpleEventPluginEvents = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
          function registerSimpleEvent(domEventName, reactName) {
            topLevelEventsToReactNames.set(domEventName, reactName);
            registerTwoPhaseEvent(reactName, [domEventName]);
          }
          function registerSimpleEvents() {
            for (var i2 = 0; i2 < simpleEventPluginEvents.length; i2++) {
              var eventName = simpleEventPluginEvents[i2];
              var domEventName = eventName.toLowerCase();
              var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
              registerSimpleEvent(domEventName, "on" + capitalizedEvent);
            }
            registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
            registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
            registerSimpleEvent(ANIMATION_START, "onAnimationStart");
            registerSimpleEvent("dblclick", "onDoubleClick");
            registerSimpleEvent("focusin", "onFocus");
            registerSimpleEvent("focusout", "onBlur");
            registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
          }
          function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            var reactName = topLevelEventsToReactNames.get(domEventName);
            if (reactName === void 0) {
              return;
            }
            var SyntheticEventCtor = SyntheticEvent;
            var reactEventType = domEventName;
            switch (domEventName) {
              case "keypress":
                if (getEventCharCode(nativeEvent) === 0) {
                  return;
                }
              case "keydown":
              case "keyup":
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
              case "focusin":
                reactEventType = "focus";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "focusout":
                reactEventType = "blur";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "beforeblur":
              case "afterblur":
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "click":
                if (nativeEvent.button === 2) {
                  return;
                }
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                SyntheticEventCtor = SyntheticDragEvent;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
              case ANIMATION_END:
              case ANIMATION_ITERATION:
              case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
              case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
              case "scroll":
                SyntheticEventCtor = SyntheticUIEvent;
                break;
              case "wheel":
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
              case "copy":
              case "cut":
              case "paste":
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
            }
            var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
            {
              var accumulateTargetOnly = !inCapturePhase && domEventName === "scroll";
              var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
              if (_listeners.length > 0) {
                var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                  event: _event,
                  listeners: _listeners
                });
              }
            }
          }
          registerSimpleEvents();
          registerEvents$2();
          registerEvents$1();
          registerEvents$3();
          registerEvents();
          function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
            extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
            if (shouldProcessPolyfillPlugins) {
              extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
              extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
              extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
              extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            }
          }
          var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
          var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
          function executeDispatch(event, listener, currentTarget) {
            var type = event.type || "unknown-event";
            event.currentTarget = currentTarget;
            invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event);
            event.currentTarget = null;
          }
          function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
            var previousInstance;
            if (inCapturePhase) {
              for (var i2 = dispatchListeners.length - 1; i2 >= 0; i2--) {
                var _dispatchListeners$i = dispatchListeners[i2], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
                if (instance !== previousInstance && event.isPropagationStopped()) {
                  return;
                }
                executeDispatch(event, listener, currentTarget);
                previousInstance = instance;
              }
            } else {
              for (var _i2 = 0; _i2 < dispatchListeners.length; _i2++) {
                var _dispatchListeners$_i = dispatchListeners[_i2], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
                if (_instance !== previousInstance && event.isPropagationStopped()) {
                  return;
                }
                executeDispatch(event, _listener, _currentTarget);
                previousInstance = _instance;
              }
            }
          }
          function processDispatchQueue(dispatchQueue, eventSystemFlags) {
            var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
            for (var i2 = 0; i2 < dispatchQueue.length; i2++) {
              var _dispatchQueue$i = dispatchQueue[i2], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
              processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
            }
            rethrowCaughtError();
          }
          function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
            var nativeEventTarget = getEventTarget(nativeEvent);
            var dispatchQueue = [];
            extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            processDispatchQueue(dispatchQueue, eventSystemFlags);
          }
          function listenToNonDelegatedEvent(domEventName, targetElement) {
            {
              if (!nonDelegatedEvents.has(domEventName)) {
                error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
              }
            }
            var isCapturePhaseListener = false;
            var listenerSet = getEventListenerSet(targetElement);
            var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
            if (!listenerSet.has(listenerSetKey)) {
              addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
              listenerSet.add(listenerSetKey);
            }
          }
          function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
            {
              if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {
                error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
              }
            }
            var eventSystemFlags = 0;
            if (isCapturePhaseListener) {
              eventSystemFlags |= IS_CAPTURE_PHASE;
            }
            addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
          }
          var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
          function listenToAllSupportedEvents(rootContainerElement) {
            if (!rootContainerElement[listeningMarker]) {
              rootContainerElement[listeningMarker] = true;
              allNativeEvents.forEach(function(domEventName) {
                if (domEventName !== "selectionchange") {
                  if (!nonDelegatedEvents.has(domEventName)) {
                    listenToNativeEvent(domEventName, false, rootContainerElement);
                  }
                  listenToNativeEvent(domEventName, true, rootContainerElement);
                }
              });
              var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
              if (ownerDocument !== null) {
                if (!ownerDocument[listeningMarker]) {
                  ownerDocument[listeningMarker] = true;
                  listenToNativeEvent("selectionchange", false, ownerDocument);
                }
              }
            }
          }
          function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
            var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
            var isPassiveListener = void 0;
            if (passiveBrowserEventsSupported) {
              if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
                isPassiveListener = true;
              }
            }
            targetContainer = targetContainer;
            var unsubscribeListener;
            if (isCapturePhaseListener) {
              if (isPassiveListener !== void 0) {
                unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
              } else {
                unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
              }
            } else {
              if (isPassiveListener !== void 0) {
                unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
              } else {
                unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
              }
            }
          }
          function isMatchingRootContainer(grandContainer, targetContainer) {
            return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
          }
          function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
            var ancestorInst = targetInst;
            if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
              var targetContainerNode = targetContainer;
              if (targetInst !== null) {
                var node = targetInst;
                mainLoop:
                  while (true) {
                    if (node === null) {
                      return;
                    }
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                      var container = node.stateNode.containerInfo;
                      if (isMatchingRootContainer(container, targetContainerNode)) {
                        break;
                      }
                      if (nodeTag === HostPortal) {
                        var grandNode = node.return;
                        while (grandNode !== null) {
                          var grandTag = grandNode.tag;
                          if (grandTag === HostRoot || grandTag === HostPortal) {
                            var grandContainer = grandNode.stateNode.containerInfo;
                            if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                              return;
                            }
                          }
                          grandNode = grandNode.return;
                        }
                      }
                      while (container !== null) {
                        var parentNode = getClosestInstanceFromNode(container);
                        if (parentNode === null) {
                          return;
                        }
                        var parentTag = parentNode.tag;
                        if (parentTag === HostComponent || parentTag === HostText) {
                          node = ancestorInst = parentNode;
                          continue mainLoop;
                        }
                        container = container.parentNode;
                      }
                    }
                    node = node.return;
                  }
              }
            }
            batchedUpdates(function() {
              return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
            });
          }
          function createDispatchListener(instance, listener, currentTarget) {
            return {
              instance,
              listener,
              currentTarget
            };
          }
          function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
            var captureName = reactName !== null ? reactName + "Capture" : null;
            var reactEventName = inCapturePhase ? captureName : reactName;
            var listeners = [];
            var instance = targetFiber;
            var lastHostComponent = null;
            while (instance !== null) {
              var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag;
              if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode;
                if (reactEventName !== null) {
                  var listener = getListener(instance, reactEventName);
                  if (listener != null) {
                    listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                  }
                }
              }
              if (accumulateTargetOnly) {
                break;
              }
              instance = instance.return;
            }
            return listeners;
          }
          function accumulateTwoPhaseListeners(targetFiber, reactName) {
            var captureName = reactName + "Capture";
            var listeners = [];
            var instance = targetFiber;
            while (instance !== null) {
              var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag;
              if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) {
                  listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                }
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) {
                  listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
              }
              instance = instance.return;
            }
            return listeners;
          }
          function getParent(inst) {
            if (inst === null) {
              return null;
            }
            do {
              inst = inst.return;
            } while (inst && inst.tag !== HostComponent);
            if (inst) {
              return inst;
            }
            return null;
          }
          function getLowestCommonAncestor(instA, instB) {
            var nodeA = instA;
            var nodeB = instB;
            var depthA = 0;
            for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
              depthA++;
            }
            var depthB = 0;
            for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
              depthB++;
            }
            while (depthA - depthB > 0) {
              nodeA = getParent(nodeA);
              depthA--;
            }
            while (depthB - depthA > 0) {
              nodeB = getParent(nodeB);
              depthB--;
            }
            var depth = depthA;
            while (depth--) {
              if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
                return nodeA;
              }
              nodeA = getParent(nodeA);
              nodeB = getParent(nodeB);
            }
            return null;
          }
          function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
            var registrationName = event._reactName;
            var listeners = [];
            var instance = target;
            while (instance !== null) {
              if (instance === common) {
                break;
              }
              var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
              if (alternate !== null && alternate === common) {
                break;
              }
              if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                  var captureListener = getListener(instance, registrationName);
                  if (captureListener != null) {
                    listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                  }
                } else if (!inCapturePhase) {
                  var bubbleListener = getListener(instance, registrationName);
                  if (bubbleListener != null) {
                    listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                  }
                }
              }
              instance = instance.return;
            }
            if (listeners.length !== 0) {
              dispatchQueue.push({
                event,
                listeners
              });
            }
          }
          function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to2) {
            var common = from && to2 ? getLowestCommonAncestor(from, to2) : null;
            if (from !== null) {
              accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
            }
            if (to2 !== null && enterEvent !== null) {
              accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to2, common, true);
            }
          }
          function getListenerSetKey(domEventName, capture) {
            return domEventName + "__" + (capture ? "capture" : "bubble");
          }
          var didWarnInvalidHydration = false;
          var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
          var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
          var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
          var AUTOFOCUS = "autoFocus";
          var CHILDREN = "children";
          var STYLE = "style";
          var HTML$1 = "__html";
          var warnedUnknownTags;
          var validatePropertiesInDevelopment;
          var warnForPropDifference;
          var warnForExtraAttributes;
          var warnForInvalidEventListener;
          var canDiffStyleForHydrationWarning;
          var normalizeHTML;
          {
            warnedUnknownTags = {
              dialog: true,
              webview: true
            };
            validatePropertiesInDevelopment = function(type, props) {
              validateProperties(type, props);
              validateProperties$1(type, props);
              validateProperties$2(type, props, {
                registrationNameDependencies,
                possibleRegistrationNames
              });
            };
            canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
            warnForPropDifference = function(propName, serverValue, clientValue) {
              if (didWarnInvalidHydration) {
                return;
              }
              var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
              var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
              if (normalizedServerValue === normalizedClientValue) {
                return;
              }
              didWarnInvalidHydration = true;
              error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
            };
            warnForExtraAttributes = function(attributeNames) {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              var names = [];
              attributeNames.forEach(function(name) {
                names.push(name);
              });
              error("Extra attributes from the server: %s", names);
            };
            warnForInvalidEventListener = function(registrationName, listener) {
              if (listener === false) {
                error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
              } else {
                error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
              }
            };
            normalizeHTML = function(parent, html) {
              var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
              testElement.innerHTML = html;
              return testElement.innerHTML;
            };
          }
          var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
          var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
          function normalizeMarkupForTextOrAttribute(markup) {
            {
              checkHtmlStringCoercion(markup);
            }
            var markupString = typeof markup === "string" ? markup : "" + markup;
            return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
          }
          function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
            var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
            var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
            if (normalizedServerText === normalizedClientText) {
              return;
            }
            if (shouldWarnDev) {
              {
                if (!didWarnInvalidHydration) {
                  didWarnInvalidHydration = true;
                  error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
                }
              }
            }
            if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {
              throw new Error("Text content does not match server-rendered HTML.");
            }
          }
          function getOwnerDocumentFromRootContainer(rootContainerElement) {
            return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
          }
          function noop() {
          }
          function trapClickOnNonInteractiveElement(node) {
            node.onclick = noop;
          }
          function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
            for (var propKey in nextProps) {
              if (!nextProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = nextProps[propKey];
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    Object.freeze(nextProp);
                  }
                }
                setValueForStyles(domElement, nextProp);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  setInnerHTML(domElement, nextHtml);
                }
              } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                  var canSetTextContent = tag !== "textarea" || nextProp !== "";
                  if (canSetTextContent) {
                    setTextContent(domElement, nextProp);
                  }
                } else if (typeof nextProp === "number") {
                  setTextContent(domElement, "" + nextProp);
                }
              } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                ;
              else if (propKey === AUTOFOCUS)
                ;
              else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  if (propKey === "onScroll") {
                    listenToNonDelegatedEvent("scroll", domElement);
                  }
                }
              } else if (nextProp != null) {
                setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
              }
            }
          }
          function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
            for (var i2 = 0; i2 < updatePayload.length; i2 += 2) {
              var propKey = updatePayload[i2];
              var propValue = updatePayload[i2 + 1];
              if (propKey === STYLE) {
                setValueForStyles(domElement, propValue);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                setInnerHTML(domElement, propValue);
              } else if (propKey === CHILDREN) {
                setTextContent(domElement, propValue);
              } else {
                setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
              }
            }
          }
          function createElement2(type, props, rootContainerElement, parentNamespace) {
            var isCustomComponentTag;
            var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
            var domElement;
            var namespaceURI = parentNamespace;
            if (namespaceURI === HTML_NAMESPACE) {
              namespaceURI = getIntrinsicNamespace(type);
            }
            if (namespaceURI === HTML_NAMESPACE) {
              {
                isCustomComponentTag = isCustomComponent(type, props);
                if (!isCustomComponentTag && type !== type.toLowerCase()) {
                  error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
                }
              }
              if (type === "script") {
                var div = ownerDocument.createElement("div");
                div.innerHTML = "<script><\/script>";
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
              } else if (typeof props.is === "string") {
                domElement = ownerDocument.createElement(type, {
                  is: props.is
                });
              } else {
                domElement = ownerDocument.createElement(type);
                if (type === "select") {
                  var node = domElement;
                  if (props.multiple) {
                    node.multiple = true;
                  } else if (props.size) {
                    node.size = props.size;
                  }
                }
              }
            } else {
              domElement = ownerDocument.createElementNS(namespaceURI, type);
            }
            {
              if (namespaceURI === HTML_NAMESPACE) {
                if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty.call(warnedUnknownTags, type)) {
                  warnedUnknownTags[type] = true;
                  error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
                }
              }
            }
            return domElement;
          }
          function createTextNode(text, rootContainerElement) {
            return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
          }
          function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
            var isCustomComponentTag = isCustomComponent(tag, rawProps);
            {
              validatePropertiesInDevelopment(tag, rawProps);
            }
            var props;
            switch (tag) {
              case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                props = rawProps;
                break;
              case "iframe":
              case "object":
              case "embed":
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
              case "video":
              case "audio":
                for (var i2 = 0; i2 < mediaEventTypes.length; i2++) {
                  listenToNonDelegatedEvent(mediaEventTypes[i2], domElement);
                }
                props = rawProps;
                break;
              case "source":
                listenToNonDelegatedEvent("error", domElement);
                props = rawProps;
                break;
              case "img":
              case "image":
              case "link":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
              case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                props = rawProps;
                break;
              case "input":
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "option":
                validateProps(domElement, rawProps);
                props = rawProps;
                break;
              case "select":
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "textarea":
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              default:
                props = rawProps;
            }
            assertValidProps(tag, props);
            setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
            switch (tag) {
              case "input":
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
              case "textarea":
                track(domElement);
                postMountWrapper$3(domElement);
                break;
              case "option":
                postMountWrapper$1(domElement, rawProps);
                break;
              case "select":
                postMountWrapper$2(domElement, rawProps);
                break;
              default:
                if (typeof props.onClick === "function") {
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
          }
          function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
            {
              validatePropertiesInDevelopment(tag, nextRawProps);
            }
            var updatePayload = null;
            var lastProps;
            var nextProps;
            switch (tag) {
              case "input":
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "select":
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "textarea":
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
              default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
            assertValidProps(tag, nextProps);
            var propKey;
            var styleName;
            var styleUpdates = null;
            for (propKey in lastProps) {
              if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
                continue;
              }
              if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for (styleName in lastStyle) {
                  if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
                ;
              else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                ;
              else if (propKey === AUTOFOCUS)
                ;
              else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (!updatePayload) {
                  updatePayload = [];
                }
              } else {
                (updatePayload = updatePayload || []).push(propKey, null);
              }
            }
            for (propKey in nextProps) {
              var nextProp = nextProps[propKey];
              var lastProp = lastProps != null ? lastProps[propKey] : void 0;
              if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
                continue;
              }
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    Object.freeze(nextProp);
                  }
                }
                if (lastProp) {
                  for (styleName in lastProp) {
                    if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = "";
                    }
                  }
                  for (styleName in nextProp) {
                    if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = nextProp[styleName];
                    }
                  }
                } else {
                  if (!styleUpdates) {
                    if (!updatePayload) {
                      updatePayload = [];
                    }
                    updatePayload.push(propKey, styleUpdates);
                  }
                  styleUpdates = nextProp;
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  if (lastHtml !== nextHtml) {
                    (updatePayload = updatePayload || []).push(propKey, nextHtml);
                  }
                }
              } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string" || typeof nextProp === "number") {
                  (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
                }
              } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                ;
              else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  if (propKey === "onScroll") {
                    listenToNonDelegatedEvent("scroll", domElement);
                  }
                }
                if (!updatePayload && lastProp !== nextProp) {
                  updatePayload = [];
                }
              } else {
                (updatePayload = updatePayload || []).push(propKey, nextProp);
              }
            }
            if (styleUpdates) {
              {
                validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
              }
              (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
            }
            return updatePayload;
          }
          function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
            if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
              updateChecked(domElement, nextRawProps);
            }
            var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
            var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
            updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
            switch (tag) {
              case "input":
                updateWrapper(domElement, nextRawProps);
                break;
              case "textarea":
                updateWrapper$1(domElement, nextRawProps);
                break;
              case "select":
                postUpdateWrapper(domElement, nextRawProps);
                break;
            }
          }
          function getPossibleStandardName(propName) {
            {
              var lowerCasedName = propName.toLowerCase();
              if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                return null;
              }
              return possibleStandardNames[lowerCasedName] || null;
            }
          }
          function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
            var isCustomComponentTag;
            var extraAttributeNames;
            {
              isCustomComponentTag = isCustomComponent(tag, rawProps);
              validatePropertiesInDevelopment(tag, rawProps);
            }
            switch (tag) {
              case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
              case "iframe":
              case "object":
              case "embed":
                listenToNonDelegatedEvent("load", domElement);
                break;
              case "video":
              case "audio":
                for (var i2 = 0; i2 < mediaEventTypes.length; i2++) {
                  listenToNonDelegatedEvent(mediaEventTypes[i2], domElement);
                }
                break;
              case "source":
                listenToNonDelegatedEvent("error", domElement);
                break;
              case "img":
              case "image":
              case "link":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
              case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                break;
              case "input":
                initWrapperState(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "option":
                validateProps(domElement, rawProps);
                break;
              case "select":
                initWrapperState$1(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
              case "textarea":
                initWrapperState$2(domElement, rawProps);
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            }
            assertValidProps(tag, rawProps);
            {
              extraAttributeNames = /* @__PURE__ */ new Set();
              var attributes = domElement.attributes;
              for (var _i2 = 0; _i2 < attributes.length; _i2++) {
                var name = attributes[_i2].name.toLowerCase();
                switch (name) {
                  case "value":
                    break;
                  case "checked":
                    break;
                  case "selected":
                    break;
                  default:
                    extraAttributeNames.add(attributes[_i2].name);
                }
              }
            }
            var updatePayload = null;
            for (var propKey in rawProps) {
              if (!rawProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = rawProps[propKey];
              if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                  if (domElement.textContent !== nextProp) {
                    if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                      checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                    }
                    updatePayload = [CHILDREN, nextProp];
                  }
                } else if (typeof nextProp === "number") {
                  if (domElement.textContent !== "" + nextProp) {
                    if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                      checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                    }
                    updatePayload = [CHILDREN, "" + nextProp];
                  }
                }
              } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  if (propKey === "onScroll") {
                    listenToNonDelegatedEvent("scroll", domElement);
                  }
                }
              } else if (shouldWarnDev && true && typeof isCustomComponentTag === "boolean") {
                var serverValue = void 0;
                var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                if (rawProps[SUPPRESS_HYDRATION_WARNING] === true)
                  ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === "value" || propKey === "checked" || propKey === "selected")
                  ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  var serverHTML = domElement.innerHTML;
                  var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                  if (nextHtml != null) {
                    var expectedHTML = normalizeHTML(domElement, nextHtml);
                    if (expectedHTML !== serverHTML) {
                      warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                  }
                } else if (propKey === STYLE) {
                  extraAttributeNames.delete(propKey);
                  if (canDiffStyleForHydrationWarning) {
                    var expectedStyle = createDangerousStringForStyles(nextProp);
                    serverValue = domElement.getAttribute("style");
                    if (expectedStyle !== serverValue) {
                      warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                  }
                } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                  extraAttributeNames.delete(propKey.toLowerCase());
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                  if (nextProp !== serverValue) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                  var isMismatchDueToBadCasing = false;
                  if (propertyInfo !== null) {
                    extraAttributeNames.delete(propertyInfo.attributeName);
                    serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                  } else {
                    var ownNamespace = parentNamespace;
                    if (ownNamespace === HTML_NAMESPACE) {
                      ownNamespace = getIntrinsicNamespace(tag);
                    }
                    if (ownNamespace === HTML_NAMESPACE) {
                      extraAttributeNames.delete(propKey.toLowerCase());
                    } else {
                      var standardName = getPossibleStandardName(propKey);
                      if (standardName !== null && standardName !== propKey) {
                        isMismatchDueToBadCasing = true;
                        extraAttributeNames.delete(standardName);
                      }
                      extraAttributeNames.delete(propKey);
                    }
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                  }
                  var dontWarnCustomElement = enableCustomElementPropertySupport;
                  if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                }
              }
            }
            {
              if (shouldWarnDev) {
                if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                  warnForExtraAttributes(extraAttributeNames);
                }
              }
            }
            switch (tag) {
              case "input":
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
              case "textarea":
                track(domElement);
                postMountWrapper$3(domElement);
                break;
              case "select":
              case "option":
                break;
              default:
                if (typeof rawProps.onClick === "function") {
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
            return updatePayload;
          }
          function diffHydratedText(textNode, text, isConcurrentMode) {
            var isDifferent = textNode.nodeValue !== text;
            return isDifferent;
          }
          function warnForDeletedHydratableElement(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
            }
          }
          function warnForDeletedHydratableText(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
            }
          }
          function warnForInsertedHydratedElement(parentNode, tag, props) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
            }
          }
          function warnForInsertedHydratedText(parentNode, text) {
            {
              if (text === "") {
                return;
              }
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
            }
          }
          function restoreControlledState$3(domElement, tag, props) {
            switch (tag) {
              case "input":
                restoreControlledState(domElement, props);
                return;
              case "textarea":
                restoreControlledState$2(domElement, props);
                return;
              case "select":
                restoreControlledState$1(domElement, props);
                return;
            }
          }
          var validateDOMNesting = function() {
          };
          var updatedAncestorInfo = function() {
          };
          {
            var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
            var inScopeTags = [
              "applet",
              "caption",
              "html",
              "table",
              "td",
              "th",
              "marquee",
              "object",
              "template",
              "foreignObject",
              "desc",
              "title"
            ];
            var buttonScopeTags = inScopeTags.concat(["button"]);
            var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
            var emptyAncestorInfo = {
              current: null,
              formTag: null,
              aTagInScope: null,
              buttonTagInScope: null,
              nobrTagInScope: null,
              pTagInButtonScope: null,
              listItemTagAutoclosing: null,
              dlItemTagAutoclosing: null
            };
            updatedAncestorInfo = function(oldInfo, tag) {
              var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
              var info = {
                tag
              };
              if (inScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.aTagInScope = null;
                ancestorInfo.buttonTagInScope = null;
                ancestorInfo.nobrTagInScope = null;
              }
              if (buttonScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.pTagInButtonScope = null;
              }
              if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
                ancestorInfo.listItemTagAutoclosing = null;
                ancestorInfo.dlItemTagAutoclosing = null;
              }
              ancestorInfo.current = info;
              if (tag === "form") {
                ancestorInfo.formTag = info;
              }
              if (tag === "a") {
                ancestorInfo.aTagInScope = info;
              }
              if (tag === "button") {
                ancestorInfo.buttonTagInScope = info;
              }
              if (tag === "nobr") {
                ancestorInfo.nobrTagInScope = info;
              }
              if (tag === "p") {
                ancestorInfo.pTagInButtonScope = info;
              }
              if (tag === "li") {
                ancestorInfo.listItemTagAutoclosing = info;
              }
              if (tag === "dd" || tag === "dt") {
                ancestorInfo.dlItemTagAutoclosing = info;
              }
              return ancestorInfo;
            };
            var isTagValidWithParent = function(tag, parentTag) {
              switch (parentTag) {
                case "select":
                  return tag === "option" || tag === "optgroup" || tag === "#text";
                case "optgroup":
                  return tag === "option" || tag === "#text";
                case "option":
                  return tag === "#text";
                case "tr":
                  return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
                case "tbody":
                case "thead":
                case "tfoot":
                  return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
                case "colgroup":
                  return tag === "col" || tag === "template";
                case "table":
                  return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
                case "head":
                  return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
                case "html":
                  return tag === "head" || tag === "body" || tag === "frameset";
                case "frameset":
                  return tag === "frame";
                case "#document":
                  return tag === "html";
              }
              switch (tag) {
                case "h1":
                case "h2":
                case "h3":
                case "h4":
                case "h5":
                case "h6":
                  return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
                case "rp":
                case "rt":
                  return impliedEndTags.indexOf(parentTag) === -1;
                case "body":
                case "caption":
                case "col":
                case "colgroup":
                case "frameset":
                case "frame":
                case "head":
                case "html":
                case "tbody":
                case "td":
                case "tfoot":
                case "th":
                case "thead":
                case "tr":
                  return parentTag == null;
              }
              return true;
            };
            var findInvalidAncestorForTag = function(tag, ancestorInfo) {
              switch (tag) {
                case "address":
                case "article":
                case "aside":
                case "blockquote":
                case "center":
                case "details":
                case "dialog":
                case "dir":
                case "div":
                case "dl":
                case "fieldset":
                case "figcaption":
                case "figure":
                case "footer":
                case "header":
                case "hgroup":
                case "main":
                case "menu":
                case "nav":
                case "ol":
                case "p":
                case "section":
                case "summary":
                case "ul":
                case "pre":
                case "listing":
                case "table":
                case "hr":
                case "xmp":
                case "h1":
                case "h2":
                case "h3":
                case "h4":
                case "h5":
                case "h6":
                  return ancestorInfo.pTagInButtonScope;
                case "form":
                  return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
                case "li":
                  return ancestorInfo.listItemTagAutoclosing;
                case "dd":
                case "dt":
                  return ancestorInfo.dlItemTagAutoclosing;
                case "button":
                  return ancestorInfo.buttonTagInScope;
                case "a":
                  return ancestorInfo.aTagInScope;
                case "nobr":
                  return ancestorInfo.nobrTagInScope;
              }
              return null;
            };
            var didWarn$1 = {};
            validateDOMNesting = function(childTag, childText, ancestorInfo) {
              ancestorInfo = ancestorInfo || emptyAncestorInfo;
              var parentInfo = ancestorInfo.current;
              var parentTag = parentInfo && parentInfo.tag;
              if (childText != null) {
                if (childTag != null) {
                  error("validateDOMNesting: when childText is passed, childTag should be null");
                }
                childTag = "#text";
              }
              var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
              var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
              var invalidParentOrAncestor = invalidParent || invalidAncestor;
              if (!invalidParentOrAncestor) {
                return;
              }
              var ancestorTag = invalidParentOrAncestor.tag;
              var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
              if (didWarn$1[warnKey]) {
                return;
              }
              didWarn$1[warnKey] = true;
              var tagDisplayName = childTag;
              var whitespaceInfo = "";
              if (childTag === "#text") {
                if (/\S/.test(childText)) {
                  tagDisplayName = "Text nodes";
                } else {
                  tagDisplayName = "Whitespace text nodes";
                  whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
                }
              } else {
                tagDisplayName = "<" + childTag + ">";
              }
              if (invalidParent) {
                var info = "";
                if (ancestorTag === "table" && childTag === "tr") {
                  info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
                }
                error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
              } else {
                error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
              }
            };
          }
          var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
          var SUSPENSE_START_DATA = "$";
          var SUSPENSE_END_DATA = "/$";
          var SUSPENSE_PENDING_START_DATA = "$?";
          var SUSPENSE_FALLBACK_START_DATA = "$!";
          var STYLE$1 = "style";
          var eventsEnabled = null;
          var selectionInformation = null;
          function getRootHostContext(rootContainerInstance) {
            var type;
            var namespace;
            var nodeType = rootContainerInstance.nodeType;
            switch (nodeType) {
              case DOCUMENT_NODE:
              case DOCUMENT_FRAGMENT_NODE: {
                type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                var root2 = rootContainerInstance.documentElement;
                namespace = root2 ? root2.namespaceURI : getChildNamespace(null, "");
                break;
              }
              default: {
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
              }
            }
            {
              var validatedTag = type.toLowerCase();
              var ancestorInfo = updatedAncestorInfo(null, validatedTag);
              return {
                namespace,
                ancestorInfo
              };
            }
          }
          function getChildHostContext(parentHostContext, type, rootContainerInstance) {
            {
              var parentHostContextDev = parentHostContext;
              var namespace = getChildNamespace(parentHostContextDev.namespace, type);
              var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
              return {
                namespace,
                ancestorInfo
              };
            }
          }
          function getPublicInstance(instance) {
            return instance;
          }
          function prepareForCommit(containerInfo) {
            eventsEnabled = isEnabled();
            selectionInformation = getSelectionInformation();
            var activeInstance = null;
            setEnabled(false);
            return activeInstance;
          }
          function resetAfterCommit(containerInfo) {
            restoreSelection(selectionInformation);
            setEnabled(eventsEnabled);
            eventsEnabled = null;
            selectionInformation = null;
          }
          function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
            var parentNamespace;
            {
              var hostContextDev = hostContext;
              validateDOMNesting(type, null, hostContextDev.ancestorInfo);
              if (typeof props.children === "string" || typeof props.children === "number") {
                var string = "" + props.children;
                var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
                validateDOMNesting(null, string, ownAncestorInfo);
              }
              parentNamespace = hostContextDev.namespace;
            }
            var domElement = createElement2(type, props, rootContainerInstance, parentNamespace);
            precacheFiberNode(internalInstanceHandle, domElement);
            updateFiberProps(domElement, props);
            return domElement;
          }
          function appendInitialChild(parentInstance, child) {
            parentInstance.appendChild(child);
          }
          function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
            setInitialProperties(domElement, type, props, rootContainerInstance);
            switch (type) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                return !!props.autoFocus;
              case "img":
                return true;
              default:
                return false;
            }
          }
          function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
            {
              var hostContextDev = hostContext;
              if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
                var string = "" + newProps.children;
                var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
                validateDOMNesting(null, string, ownAncestorInfo);
              }
            }
            return diffProperties(domElement, type, oldProps, newProps);
          }
          function shouldSetTextContent(type, props) {
            return type === "textarea" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
          }
          function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
            {
              var hostContextDev = hostContext;
              validateDOMNesting(null, text, hostContextDev.ancestorInfo);
            }
            var textNode = createTextNode(text, rootContainerInstance);
            precacheFiberNode(internalInstanceHandle, textNode);
            return textNode;
          }
          function getCurrentEventPriority() {
            var currentEvent = window.event;
            if (currentEvent === void 0) {
              return DefaultEventPriority;
            }
            return getEventPriority(currentEvent.type);
          }
          var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
          var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
          var noTimeout = -1;
          var localPromise = typeof Promise === "function" ? Promise : void 0;
          var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
            return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
          } : scheduleTimeout;
          function handleErrorInNextTick(error2) {
            setTimeout(function() {
              throw error2;
            });
          }
          function commitMount(domElement, type, newProps, internalInstanceHandle) {
            switch (type) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                if (newProps.autoFocus) {
                  domElement.focus();
                }
                return;
              case "img": {
                if (newProps.src) {
                  domElement.src = newProps.src;
                }
                return;
              }
            }
          }
          function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
            updateProperties(domElement, updatePayload, type, oldProps, newProps);
            updateFiberProps(domElement, newProps);
          }
          function resetTextContent(domElement) {
            setTextContent(domElement, "");
          }
          function commitTextUpdate(textInstance, oldText, newText) {
            textInstance.nodeValue = newText;
          }
          function appendChild(parentInstance, child) {
            parentInstance.appendChild(child);
          }
          function appendChildToContainer(container, child) {
            var parentNode;
            if (container.nodeType === COMMENT_NODE) {
              parentNode = container.parentNode;
              parentNode.insertBefore(child, container);
            } else {
              parentNode = container;
              parentNode.appendChild(child);
            }
            var reactRootContainer = container._reactRootContainer;
            if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
              trapClickOnNonInteractiveElement(parentNode);
            }
          }
          function insertBefore(parentInstance, child, beforeChild) {
            parentInstance.insertBefore(child, beforeChild);
          }
          function insertInContainerBefore(container, child, beforeChild) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.insertBefore(child, beforeChild);
            } else {
              container.insertBefore(child, beforeChild);
            }
          }
          function removeChild(parentInstance, child) {
            parentInstance.removeChild(child);
          }
          function removeChildFromContainer(container, child) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.removeChild(child);
            } else {
              container.removeChild(child);
            }
          }
          function clearSuspenseBoundary(parentInstance, suspenseInstance) {
            var node = suspenseInstance;
            var depth = 0;
            do {
              var nextNode = node.nextSibling;
              parentInstance.removeChild(node);
              if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                var data = nextNode.data;
                if (data === SUSPENSE_END_DATA) {
                  if (depth === 0) {
                    parentInstance.removeChild(nextNode);
                    retryIfBlockedOn(suspenseInstance);
                    return;
                  } else {
                    depth--;
                  }
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
                  depth++;
                }
              }
              node = nextNode;
            } while (node);
            retryIfBlockedOn(suspenseInstance);
          }
          function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
            if (container.nodeType === COMMENT_NODE) {
              clearSuspenseBoundary(container.parentNode, suspenseInstance);
            } else if (container.nodeType === ELEMENT_NODE) {
              clearSuspenseBoundary(container, suspenseInstance);
            }
            retryIfBlockedOn(container);
          }
          function hideInstance(instance) {
            instance = instance;
            var style2 = instance.style;
            if (typeof style2.setProperty === "function") {
              style2.setProperty("display", "none", "important");
            } else {
              style2.display = "none";
            }
          }
          function hideTextInstance(textInstance) {
            textInstance.nodeValue = "";
          }
          function unhideInstance(instance, props) {
            instance = instance;
            var styleProp = props[STYLE$1];
            var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
            instance.style.display = dangerousStyleValue("display", display);
          }
          function unhideTextInstance(textInstance, text) {
            textInstance.nodeValue = text;
          }
          function clearContainer(container) {
            if (container.nodeType === ELEMENT_NODE) {
              container.textContent = "";
            } else if (container.nodeType === DOCUMENT_NODE) {
              if (container.documentElement) {
                container.removeChild(container.documentElement);
              }
            }
          }
          function canHydrateInstance(instance, type, props) {
            if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
              return null;
            }
            return instance;
          }
          function canHydrateTextInstance(instance, text) {
            if (text === "" || instance.nodeType !== TEXT_NODE) {
              return null;
            }
            return instance;
          }
          function canHydrateSuspenseInstance(instance) {
            if (instance.nodeType !== COMMENT_NODE) {
              return null;
            }
            return instance;
          }
          function isSuspenseInstancePending(instance) {
            return instance.data === SUSPENSE_PENDING_START_DATA;
          }
          function isSuspenseInstanceFallback(instance) {
            return instance.data === SUSPENSE_FALLBACK_START_DATA;
          }
          function getSuspenseInstanceFallbackErrorDetails(instance) {
            var dataset = instance.nextSibling && instance.nextSibling.dataset;
            var digest, message, stack;
            if (dataset) {
              digest = dataset.dgst;
              {
                message = dataset.msg;
                stack = dataset.stck;
              }
            }
            {
              return {
                message,
                digest,
                stack
              };
            }
          }
          function registerSuspenseInstanceRetry(instance, callback) {
            instance._reactRetry = callback;
          }
          function getNextHydratable(node) {
            for (; node != null; node = node.nextSibling) {
              var nodeType = node.nodeType;
              if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
                break;
              }
              if (nodeType === COMMENT_NODE) {
                var nodeData = node.data;
                if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
                  break;
                }
                if (nodeData === SUSPENSE_END_DATA) {
                  return null;
                }
              }
            }
            return node;
          }
          function getNextHydratableSibling(instance) {
            return getNextHydratable(instance.nextSibling);
          }
          function getFirstHydratableChild(parentInstance) {
            return getNextHydratable(parentInstance.firstChild);
          }
          function getFirstHydratableChildWithinContainer(parentContainer) {
            return getNextHydratable(parentContainer.firstChild);
          }
          function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
            return getNextHydratable(parentInstance.nextSibling);
          }
          function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
            precacheFiberNode(internalInstanceHandle, instance);
            updateFiberProps(instance, props);
            var parentNamespace;
            {
              var hostContextDev = hostContext;
              parentNamespace = hostContextDev.namespace;
            }
            var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
            return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
          }
          function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
            precacheFiberNode(internalInstanceHandle, textInstance);
            var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
            return diffHydratedText(textInstance, text);
          }
          function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
            precacheFiberNode(internalInstanceHandle, suspenseInstance);
          }
          function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
            var node = suspenseInstance.nextSibling;
            var depth = 0;
            while (node) {
              if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                  if (depth === 0) {
                    return getNextHydratableSibling(node);
                  } else {
                    depth--;
                  }
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                  depth++;
                }
              }
              node = node.nextSibling;
            }
            return null;
          }
          function getParentSuspenseInstance(targetInstance) {
            var node = targetInstance.previousSibling;
            var depth = 0;
            while (node) {
              if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                  if (depth === 0) {
                    return node;
                  } else {
                    depth--;
                  }
                } else if (data === SUSPENSE_END_DATA) {
                  depth++;
                }
              }
              node = node.previousSibling;
            }
            return null;
          }
          function commitHydratedContainer(container) {
            retryIfBlockedOn(container);
          }
          function commitHydratedSuspenseInstance(suspenseInstance) {
            retryIfBlockedOn(suspenseInstance);
          }
          function shouldDeleteUnhydratedTailInstances(parentType) {
            return parentType !== "head" && parentType !== "body";
          }
          function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
          }
          function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
            if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              var shouldWarnDev = true;
              checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
            }
          }
          function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
            {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentContainer, instance);
              } else if (instance.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentContainer, instance);
              }
            }
          }
          function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
            {
              var parentNode = parentInstance.parentNode;
              if (parentNode !== null) {
                if (instance.nodeType === ELEMENT_NODE) {
                  warnForDeletedHydratableElement(parentNode, instance);
                } else if (instance.nodeType === COMMENT_NODE)
                  ;
                else {
                  warnForDeletedHydratableText(parentNode, instance);
                }
              }
            }
          }
          function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
            {
              if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
                if (instance.nodeType === ELEMENT_NODE) {
                  warnForDeletedHydratableElement(parentInstance, instance);
                } else if (instance.nodeType === COMMENT_NODE)
                  ;
                else {
                  warnForDeletedHydratableText(parentInstance, instance);
                }
              }
            }
          }
          function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
            {
              warnForInsertedHydratedElement(parentContainer, type);
            }
          }
          function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
            {
              warnForInsertedHydratedText(parentContainer, text);
            }
          }
          function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
            {
              var parentNode = parentInstance.parentNode;
              if (parentNode !== null)
                warnForInsertedHydratedElement(parentNode, type);
            }
          }
          function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
            {
              var parentNode = parentInstance.parentNode;
              if (parentNode !== null)
                warnForInsertedHydratedText(parentNode, text);
            }
          }
          function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
            {
              if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
                warnForInsertedHydratedElement(parentInstance, type);
              }
            }
          }
          function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
            {
              if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
                warnForInsertedHydratedText(parentInstance, text);
              }
            }
          }
          function errorHydratingContainer(parentContainer) {
            {
              error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
            }
          }
          function preparePortalMount(portalInstance) {
            listenToAllSupportedEvents(portalInstance);
          }
          var randomKey = Math.random().toString(36).slice(2);
          var internalInstanceKey = "__reactFiber$" + randomKey;
          var internalPropsKey = "__reactProps$" + randomKey;
          var internalContainerInstanceKey = "__reactContainer$" + randomKey;
          var internalEventHandlersKey = "__reactEvents$" + randomKey;
          var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
          var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
          function detachDeletedInstance(node) {
            delete node[internalInstanceKey];
            delete node[internalPropsKey];
            delete node[internalEventHandlersKey];
            delete node[internalEventHandlerListenersKey];
            delete node[internalEventHandlesSetKey];
          }
          function precacheFiberNode(hostInst, node) {
            node[internalInstanceKey] = hostInst;
          }
          function markContainerAsRoot(hostRoot, node) {
            node[internalContainerInstanceKey] = hostRoot;
          }
          function unmarkContainerAsRoot(node) {
            node[internalContainerInstanceKey] = null;
          }
          function isContainerMarkedAsRoot(node) {
            return !!node[internalContainerInstanceKey];
          }
          function getClosestInstanceFromNode(targetNode) {
            var targetInst = targetNode[internalInstanceKey];
            if (targetInst) {
              return targetInst;
            }
            var parentNode = targetNode.parentNode;
            while (parentNode) {
              targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
              if (targetInst) {
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                  var suspenseInstance = getParentSuspenseInstance(targetNode);
                  while (suspenseInstance !== null) {
                    var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                    if (targetSuspenseInst) {
                      return targetSuspenseInst;
                    }
                    suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                  }
                }
                return targetInst;
              }
              targetNode = parentNode;
              parentNode = targetNode.parentNode;
            }
            return null;
          }
          function getInstanceFromNode(node) {
            var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
            if (inst) {
              if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
                return inst;
              } else {
                return null;
              }
            }
            return null;
          }
          function getNodeFromInstance(inst) {
            if (inst.tag === HostComponent || inst.tag === HostText) {
              return inst.stateNode;
            }
            throw new Error("getNodeFromInstance: Invalid argument.");
          }
          function getFiberCurrentPropsFromNode(node) {
            return node[internalPropsKey] || null;
          }
          function updateFiberProps(node, props) {
            node[internalPropsKey] = props;
          }
          function getEventListenerSet(node) {
            var elementListenerSet = node[internalEventHandlersKey];
            if (elementListenerSet === void 0) {
              elementListenerSet = node[internalEventHandlersKey] = /* @__PURE__ */ new Set();
            }
            return elementListenerSet;
          }
          var loggedTypeFailures = {};
          var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame$1.setExtraStackFrame(null);
              }
            }
          }
          function checkPropTypes(typeSpecs, values, location, componentName, element) {
            {
              var has2 = Function.call.bind(hasOwnProperty);
              for (var typeSpecName in typeSpecs) {
                if (has2(typeSpecs, typeSpecName)) {
                  var error$1 = void 0;
                  try {
                    if (typeof typeSpecs[typeSpecName] !== "function") {
                      var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                      err.name = "Invariant Violation";
                      throw err;
                    }
                    error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                  } catch (ex2) {
                    error$1 = ex2;
                  }
                  if (error$1 && !(error$1 instanceof Error)) {
                    setCurrentlyValidatingElement(element);
                    error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                    setCurrentlyValidatingElement(null);
                  }
                  if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                    loggedTypeFailures[error$1.message] = true;
                    setCurrentlyValidatingElement(element);
                    error("Failed %s type: %s", location, error$1.message);
                    setCurrentlyValidatingElement(null);
                  }
                }
              }
            }
          }
          var valueStack = [];
          var fiberStack;
          {
            fiberStack = [];
          }
          var index = -1;
          function createCursor(defaultValue) {
            return {
              current: defaultValue
            };
          }
          function pop(cursor, fiber) {
            if (index < 0) {
              {
                error("Unexpected pop.");
              }
              return;
            }
            {
              if (fiber !== fiberStack[index]) {
                error("Unexpected Fiber popped.");
              }
            }
            cursor.current = valueStack[index];
            valueStack[index] = null;
            {
              fiberStack[index] = null;
            }
            index--;
          }
          function push(cursor, value, fiber) {
            index++;
            valueStack[index] = cursor.current;
            {
              fiberStack[index] = fiber;
            }
            cursor.current = value;
          }
          var warnedAboutMissingGetChildContext;
          {
            warnedAboutMissingGetChildContext = {};
          }
          var emptyContextObject = {};
          {
            Object.freeze(emptyContextObject);
          }
          var contextStackCursor = createCursor(emptyContextObject);
          var didPerformWorkStackCursor = createCursor(false);
          var previousContext = emptyContextObject;
          function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
            {
              if (didPushOwnContextIfProvider && isContextProvider(Component)) {
                return previousContext;
              }
              return contextStackCursor.current;
            }
          }
          function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
            {
              var instance = workInProgress2.stateNode;
              instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
              instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
            }
          }
          function getMaskedContext(workInProgress2, unmaskedContext) {
            {
              var type = workInProgress2.type;
              var contextTypes = type.contextTypes;
              if (!contextTypes) {
                return emptyContextObject;
              }
              var instance = workInProgress2.stateNode;
              if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
                return instance.__reactInternalMemoizedMaskedChildContext;
              }
              var context = {};
              for (var key in contextTypes) {
                context[key] = unmaskedContext[key];
              }
              {
                var name = getComponentNameFromFiber(workInProgress2) || "Unknown";
                checkPropTypes(contextTypes, context, "context", name);
              }
              if (instance) {
                cacheContext(workInProgress2, unmaskedContext, context);
              }
              return context;
            }
          }
          function hasContextChanged() {
            {
              return didPerformWorkStackCursor.current;
            }
          }
          function isContextProvider(type) {
            {
              var childContextTypes = type.childContextTypes;
              return childContextTypes !== null && childContextTypes !== void 0;
            }
          }
          function popContext(fiber) {
            {
              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }
          }
          function popTopLevelContextObject(fiber) {
            {
              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }
          }
          function pushTopLevelContextObject(fiber, context, didChange) {
            {
              if (contextStackCursor.current !== emptyContextObject) {
                throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
              }
              push(contextStackCursor, context, fiber);
              push(didPerformWorkStackCursor, didChange, fiber);
            }
          }
          function processChildContext(fiber, type, parentContext) {
            {
              var instance = fiber.stateNode;
              var childContextTypes = type.childContextTypes;
              if (typeof instance.getChildContext !== "function") {
                {
                  var componentName = getComponentNameFromFiber(fiber) || "Unknown";
                  if (!warnedAboutMissingGetChildContext[componentName]) {
                    warnedAboutMissingGetChildContext[componentName] = true;
                    error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                  }
                }
                return parentContext;
              }
              var childContext = instance.getChildContext();
              for (var contextKey in childContext) {
                if (!(contextKey in childContextTypes)) {
                  throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
                }
              }
              {
                var name = getComponentNameFromFiber(fiber) || "Unknown";
                checkPropTypes(childContextTypes, childContext, "child context", name);
              }
              return assign({}, parentContext, childContext);
            }
          }
          function pushContextProvider(workInProgress2) {
            {
              var instance = workInProgress2.stateNode;
              var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
              previousContext = contextStackCursor.current;
              push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
              push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
              return true;
            }
          }
          function invalidateContextProvider(workInProgress2, type, didChange) {
            {
              var instance = workInProgress2.stateNode;
              if (!instance) {
                throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
              }
              if (didChange) {
                var mergedContext = processChildContext(workInProgress2, type, previousContext);
                instance.__reactInternalMemoizedMergedChildContext = mergedContext;
                pop(didPerformWorkStackCursor, workInProgress2);
                pop(contextStackCursor, workInProgress2);
                push(contextStackCursor, mergedContext, workInProgress2);
                push(didPerformWorkStackCursor, didChange, workInProgress2);
              } else {
                pop(didPerformWorkStackCursor, workInProgress2);
                push(didPerformWorkStackCursor, didChange, workInProgress2);
              }
            }
          }
          function findCurrentUnmaskedContext(fiber) {
            {
              if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {
                throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
              }
              var node = fiber;
              do {
                switch (node.tag) {
                  case HostRoot:
                    return node.stateNode.context;
                  case ClassComponent: {
                    var Component = node.type;
                    if (isContextProvider(Component)) {
                      return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    }
                    break;
                  }
                }
                node = node.return;
              } while (node !== null);
              throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          var LegacyRoot = 0;
          var ConcurrentRoot = 1;
          var syncQueue = null;
          var includesLegacySyncCallbacks = false;
          var isFlushingSyncQueue = false;
          function scheduleSyncCallback(callback) {
            if (syncQueue === null) {
              syncQueue = [callback];
            } else {
              syncQueue.push(callback);
            }
          }
          function scheduleLegacySyncCallback(callback) {
            includesLegacySyncCallbacks = true;
            scheduleSyncCallback(callback);
          }
          function flushSyncCallbacksOnlyInLegacyMode() {
            if (includesLegacySyncCallbacks) {
              flushSyncCallbacks();
            }
          }
          function flushSyncCallbacks() {
            if (!isFlushingSyncQueue && syncQueue !== null) {
              isFlushingSyncQueue = true;
              var i2 = 0;
              var previousUpdatePriority = getCurrentUpdatePriority();
              try {
                var isSync = true;
                var queue = syncQueue;
                setCurrentUpdatePriority(DiscreteEventPriority);
                for (; i2 < queue.length; i2++) {
                  var callback = queue[i2];
                  do {
                    callback = callback(isSync);
                  } while (callback !== null);
                }
                syncQueue = null;
                includesLegacySyncCallbacks = false;
              } catch (error2) {
                if (syncQueue !== null) {
                  syncQueue = syncQueue.slice(i2 + 1);
                }
                scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                throw error2;
              } finally {
                setCurrentUpdatePriority(previousUpdatePriority);
                isFlushingSyncQueue = false;
              }
            }
            return null;
          }
          var forkStack = [];
          var forkStackIndex = 0;
          var treeForkProvider = null;
          var treeForkCount = 0;
          var idStack = [];
          var idStackIndex = 0;
          var treeContextProvider = null;
          var treeContextId = 1;
          var treeContextOverflow = "";
          function isForkedChild(workInProgress2) {
            warnIfNotHydrating();
            return (workInProgress2.flags & Forked) !== NoFlags;
          }
          function getForksAtLevel(workInProgress2) {
            warnIfNotHydrating();
            return treeForkCount;
          }
          function getTreeId() {
            var overflow = treeContextOverflow;
            var idWithLeadingBit = treeContextId;
            var id2 = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
            return id2.toString(32) + overflow;
          }
          function pushTreeFork(workInProgress2, totalChildren) {
            warnIfNotHydrating();
            forkStack[forkStackIndex++] = treeForkCount;
            forkStack[forkStackIndex++] = treeForkProvider;
            treeForkProvider = workInProgress2;
            treeForkCount = totalChildren;
          }
          function pushTreeId(workInProgress2, totalChildren, index2) {
            warnIfNotHydrating();
            idStack[idStackIndex++] = treeContextId;
            idStack[idStackIndex++] = treeContextOverflow;
            idStack[idStackIndex++] = treeContextProvider;
            treeContextProvider = workInProgress2;
            var baseIdWithLeadingBit = treeContextId;
            var baseOverflow = treeContextOverflow;
            var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
            var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
            var slot = index2 + 1;
            var length = getBitLength(totalChildren) + baseLength;
            if (length > 30) {
              var numberOfOverflowBits = baseLength - baseLength % 5;
              var newOverflowBits = (1 << numberOfOverflowBits) - 1;
              var newOverflow = (baseId & newOverflowBits).toString(32);
              var restOfBaseId = baseId >> numberOfOverflowBits;
              var restOfBaseLength = baseLength - numberOfOverflowBits;
              var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
              var restOfNewBits = slot << restOfBaseLength;
              var id2 = restOfNewBits | restOfBaseId;
              var overflow = newOverflow + baseOverflow;
              treeContextId = 1 << restOfLength | id2;
              treeContextOverflow = overflow;
            } else {
              var newBits = slot << baseLength;
              var _id = newBits | baseId;
              var _overflow = baseOverflow;
              treeContextId = 1 << length | _id;
              treeContextOverflow = _overflow;
            }
          }
          function pushMaterializedTreeId(workInProgress2) {
            warnIfNotHydrating();
            var returnFiber = workInProgress2.return;
            if (returnFiber !== null) {
              var numberOfForks = 1;
              var slotIndex = 0;
              pushTreeFork(workInProgress2, numberOfForks);
              pushTreeId(workInProgress2, numberOfForks, slotIndex);
            }
          }
          function getBitLength(number) {
            return 32 - clz32(number);
          }
          function getLeadingBit(id2) {
            return 1 << getBitLength(id2) - 1;
          }
          function popTreeContext(workInProgress2) {
            while (workInProgress2 === treeForkProvider) {
              treeForkProvider = forkStack[--forkStackIndex];
              forkStack[forkStackIndex] = null;
              treeForkCount = forkStack[--forkStackIndex];
              forkStack[forkStackIndex] = null;
            }
            while (workInProgress2 === treeContextProvider) {
              treeContextProvider = idStack[--idStackIndex];
              idStack[idStackIndex] = null;
              treeContextOverflow = idStack[--idStackIndex];
              idStack[idStackIndex] = null;
              treeContextId = idStack[--idStackIndex];
              idStack[idStackIndex] = null;
            }
          }
          function getSuspendedTreeContext() {
            warnIfNotHydrating();
            if (treeContextProvider !== null) {
              return {
                id: treeContextId,
                overflow: treeContextOverflow
              };
            } else {
              return null;
            }
          }
          function restoreSuspendedTreeContext(workInProgress2, suspendedContext) {
            warnIfNotHydrating();
            idStack[idStackIndex++] = treeContextId;
            idStack[idStackIndex++] = treeContextOverflow;
            idStack[idStackIndex++] = treeContextProvider;
            treeContextId = suspendedContext.id;
            treeContextOverflow = suspendedContext.overflow;
            treeContextProvider = workInProgress2;
          }
          function warnIfNotHydrating() {
            {
              if (!getIsHydrating()) {
                error("Expected to be hydrating. This is a bug in React. Please file an issue.");
              }
            }
          }
          var hydrationParentFiber = null;
          var nextHydratableInstance = null;
          var isHydrating = false;
          var didSuspendOrErrorDEV = false;
          var hydrationErrors = null;
          function warnIfHydrating() {
            {
              if (isHydrating) {
                error("We should not be hydrating here. This is a bug in React. Please file a bug.");
              }
            }
          }
          function markDidThrowWhileHydratingDEV() {
            {
              didSuspendOrErrorDEV = true;
            }
          }
          function didSuspendOrErrorWhileHydratingDEV() {
            {
              return didSuspendOrErrorDEV;
            }
          }
          function enterHydrationState(fiber) {
            var parentInstance = fiber.stateNode.containerInfo;
            nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
            hydrationParentFiber = fiber;
            isHydrating = true;
            hydrationErrors = null;
            didSuspendOrErrorDEV = false;
            return true;
          }
          function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
            nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
            hydrationParentFiber = fiber;
            isHydrating = true;
            hydrationErrors = null;
            didSuspendOrErrorDEV = false;
            if (treeContext !== null) {
              restoreSuspendedTreeContext(fiber, treeContext);
            }
            return true;
          }
          function warnUnhydratedInstance(returnFiber, instance) {
            {
              switch (returnFiber.tag) {
                case HostRoot: {
                  didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                  break;
                }
                case HostComponent: {
                  var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotHydrateInstance(
                    returnFiber.type,
                    returnFiber.memoizedProps,
                    returnFiber.stateNode,
                    instance,
                    isConcurrentMode
                  );
                  break;
                }
                case SuspenseComponent: {
                  var suspenseState = returnFiber.memoizedState;
                  if (suspenseState.dehydrated !== null)
                    didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                  break;
                }
              }
            }
          }
          function deleteHydratableInstance(returnFiber, instance) {
            warnUnhydratedInstance(returnFiber, instance);
            var childToDelete = createFiberFromHostInstanceForDeletion();
            childToDelete.stateNode = instance;
            childToDelete.return = returnFiber;
            var deletions = returnFiber.deletions;
            if (deletions === null) {
              returnFiber.deletions = [childToDelete];
              returnFiber.flags |= ChildDeletion;
            } else {
              deletions.push(childToDelete);
            }
          }
          function warnNonhydratedInstance(returnFiber, fiber) {
            {
              if (didSuspendOrErrorDEV) {
                return;
              }
              switch (returnFiber.tag) {
                case HostRoot: {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  switch (fiber.tag) {
                    case HostComponent:
                      var type = fiber.type;
                      var props = fiber.pendingProps;
                      didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                      break;
                    case HostText:
                      var text = fiber.pendingProps;
                      didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                      break;
                  }
                  break;
                }
                case HostComponent: {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  switch (fiber.tag) {
                    case HostComponent: {
                      var _type = fiber.type;
                      var _props = fiber.pendingProps;
                      var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                      didNotFindHydratableInstance(
                        parentType,
                        parentProps,
                        parentInstance,
                        _type,
                        _props,
                        isConcurrentMode
                      );
                      break;
                    }
                    case HostText: {
                      var _text = fiber.pendingProps;
                      var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                      didNotFindHydratableTextInstance(
                        parentType,
                        parentProps,
                        parentInstance,
                        _text,
                        _isConcurrentMode
                      );
                      break;
                    }
                  }
                  break;
                }
                case SuspenseComponent: {
                  var suspenseState = returnFiber.memoizedState;
                  var _parentInstance = suspenseState.dehydrated;
                  if (_parentInstance !== null)
                    switch (fiber.tag) {
                      case HostComponent:
                        var _type2 = fiber.type;
                        var _props2 = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                        break;
                      case HostText:
                        var _text2 = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                        break;
                    }
                  break;
                }
                default:
                  return;
              }
            }
          }
          function insertNonHydratedInstance(returnFiber, fiber) {
            fiber.flags = fiber.flags & ~Hydrating | Placement;
            warnNonhydratedInstance(returnFiber, fiber);
          }
          function tryHydrate(fiber, nextInstance) {
            switch (fiber.tag) {
              case HostComponent: {
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                  fiber.stateNode = instance;
                  hydrationParentFiber = fiber;
                  nextHydratableInstance = getFirstHydratableChild(instance);
                  return true;
                }
                return false;
              }
              case HostText: {
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                  fiber.stateNode = textInstance;
                  hydrationParentFiber = fiber;
                  nextHydratableInstance = null;
                  return true;
                }
                return false;
              }
              case SuspenseComponent: {
                var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                if (suspenseInstance !== null) {
                  var suspenseState = {
                    dehydrated: suspenseInstance,
                    treeContext: getSuspendedTreeContext(),
                    retryLane: OffscreenLane
                  };
                  fiber.memoizedState = suspenseState;
                  var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                  dehydratedFragment.return = fiber;
                  fiber.child = dehydratedFragment;
                  hydrationParentFiber = fiber;
                  nextHydratableInstance = null;
                  return true;
                }
                return false;
              }
              default:
                return false;
            }
          }
          function shouldClientRenderOnMismatch(fiber) {
            return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
          }
          function throwOnHydrationMismatch(fiber) {
            throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
          }
          function tryToClaimNextHydratableInstance(fiber) {
            if (!isHydrating) {
              return;
            }
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) {
              if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
              }
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            var firstAttemptedInstance = nextInstance;
            if (!tryHydrate(fiber, nextInstance)) {
              if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
              }
              nextInstance = getNextHydratableSibling(firstAttemptedInstance);
              var prevHydrationParentFiber = hydrationParentFiber;
              if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
              }
              deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
            }
          }
          function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
            var instance = fiber.stateNode;
            var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
            var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev);
            fiber.updateQueue = updatePayload;
            if (updatePayload !== null) {
              return true;
            }
            return false;
          }
          function prepareToHydrateHostTextInstance(fiber) {
            var textInstance = fiber.stateNode;
            var textContent = fiber.memoizedProps;
            var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
            if (shouldUpdate) {
              var returnFiber = hydrationParentFiber;
              if (returnFiber !== null) {
                switch (returnFiber.tag) {
                  case HostRoot: {
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedContainerTextInstance(
                      parentContainer,
                      textInstance,
                      textContent,
                      isConcurrentMode
                    );
                    break;
                  }
                  case HostComponent: {
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedTextInstance(
                      parentType,
                      parentProps,
                      parentInstance,
                      textInstance,
                      textContent,
                      _isConcurrentMode2
                    );
                    break;
                  }
                }
              }
            }
            return shouldUpdate;
          }
          function prepareToHydrateHostSuspenseInstance(fiber) {
            var suspenseState = fiber.memoizedState;
            var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
            if (!suspenseInstance) {
              throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            }
            hydrateSuspenseInstance(suspenseInstance, fiber);
          }
          function skipPastDehydratedSuspenseInstance(fiber) {
            var suspenseState = fiber.memoizedState;
            var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
            if (!suspenseInstance) {
              throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            }
            return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
          }
          function popToNextHostParent(fiber) {
            var parent = fiber.return;
            while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
              parent = parent.return;
            }
            hydrationParentFiber = parent;
          }
          function popHydrationState(fiber) {
            if (fiber !== hydrationParentFiber) {
              return false;
            }
            if (!isHydrating) {
              popToNextHostParent(fiber);
              isHydrating = true;
              return false;
            }
            if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
              var nextInstance = nextHydratableInstance;
              if (nextInstance) {
                if (shouldClientRenderOnMismatch(fiber)) {
                  warnIfUnhydratedTailNodes(fiber);
                  throwOnHydrationMismatch();
                } else {
                  while (nextInstance) {
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                  }
                }
              }
            }
            popToNextHostParent(fiber);
            if (fiber.tag === SuspenseComponent) {
              nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
            } else {
              nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
            }
            return true;
          }
          function hasUnhydratedTailNodes() {
            return isHydrating && nextHydratableInstance !== null;
          }
          function warnIfUnhydratedTailNodes(fiber) {
            var nextInstance = nextHydratableInstance;
            while (nextInstance) {
              warnUnhydratedInstance(fiber, nextInstance);
              nextInstance = getNextHydratableSibling(nextInstance);
            }
          }
          function resetHydrationState() {
            hydrationParentFiber = null;
            nextHydratableInstance = null;
            isHydrating = false;
            didSuspendOrErrorDEV = false;
          }
          function upgradeHydrationErrorsToRecoverable() {
            if (hydrationErrors !== null) {
              queueRecoverableErrors(hydrationErrors);
              hydrationErrors = null;
            }
          }
          function getIsHydrating() {
            return isHydrating;
          }
          function queueHydrationError(error2) {
            if (hydrationErrors === null) {
              hydrationErrors = [error2];
            } else {
              hydrationErrors.push(error2);
            }
          }
          var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
          var NoTransition = null;
          function requestCurrentTransition() {
            return ReactCurrentBatchConfig$1.transition;
          }
          var ReactStrictModeWarnings = {
            recordUnsafeLifecycleWarnings: function(fiber, instance) {
            },
            flushPendingUnsafeLifecycleWarnings: function() {
            },
            recordLegacyContextWarning: function(fiber, instance) {
            },
            flushLegacyContextWarning: function() {
            },
            discardPendingWarnings: function() {
            }
          };
          {
            var findStrictRoot = function(fiber) {
              var maybeStrictRoot = null;
              var node = fiber;
              while (node !== null) {
                if (node.mode & StrictLegacyMode) {
                  maybeStrictRoot = node;
                }
                node = node.return;
              }
              return maybeStrictRoot;
            };
            var setToSortedString = function(set2) {
              var array = [];
              set2.forEach(function(value) {
                array.push(value);
              });
              return array.sort().join(", ");
            };
            var pendingComponentWillMountWarnings = [];
            var pendingUNSAFE_ComponentWillMountWarnings = [];
            var pendingComponentWillReceivePropsWarnings = [];
            var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            var pendingComponentWillUpdateWarnings = [];
            var pendingUNSAFE_ComponentWillUpdateWarnings = [];
            var didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
              if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
                return;
              }
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                pendingComponentWillMountWarnings.push(fiber);
              }
              if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === "function") {
                pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                pendingComponentWillReceivePropsWarnings.push(fiber);
              }
              if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                pendingComponentWillUpdateWarnings.push(fiber);
              }
              if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === "function") {
                pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
              }
            };
            ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
              var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillMountWarnings.length > 0) {
                pendingComponentWillMountWarnings.forEach(function(fiber) {
                  componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillMountWarnings = [];
              }
              var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
                pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillMountWarnings = [];
              }
              var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillReceivePropsWarnings.length > 0) {
                pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                  componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillReceivePropsWarnings = [];
              }
              var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
                pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
              }
              var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillUpdateWarnings.length > 0) {
                pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                  componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillUpdateWarnings = [];
              }
              var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
                pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillUpdateWarnings = [];
              }
              if (UNSAFE_componentWillMountUniqueNames.size > 0) {
                var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
                error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
              }
              if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
                var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
                error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
              }
              if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
                var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
                error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
              }
              if (componentWillMountUniqueNames.size > 0) {
                var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
                warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
              }
              if (componentWillReceivePropsUniqueNames.size > 0) {
                var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
                warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
              }
              if (componentWillUpdateUniqueNames.size > 0) {
                var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
                warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
              }
            };
            var pendingLegacyContextWarning = /* @__PURE__ */ new Map();
            var didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
            ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
              var strictRoot = findStrictRoot(fiber);
              if (strictRoot === null) {
                error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
                return;
              }
              if (didWarnAboutLegacyContext.has(fiber.type)) {
                return;
              }
              var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
              if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
                if (warningsForRoot === void 0) {
                  warningsForRoot = [];
                  pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
                }
                warningsForRoot.push(fiber);
              }
            };
            ReactStrictModeWarnings.flushLegacyContextWarning = function() {
              pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
                if (fiberArray.length === 0) {
                  return;
                }
                var firstFiber = fiberArray[0];
                var uniqueNames = /* @__PURE__ */ new Set();
                fiberArray.forEach(function(fiber) {
                  uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                  didWarnAboutLegacyContext.add(fiber.type);
                });
                var sortedNames = setToSortedString(uniqueNames);
                try {
                  setCurrentFiber(firstFiber);
                  error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
                } finally {
                  resetCurrentFiber();
                }
              });
            };
            ReactStrictModeWarnings.discardPendingWarnings = function() {
              pendingComponentWillMountWarnings = [];
              pendingUNSAFE_ComponentWillMountWarnings = [];
              pendingComponentWillReceivePropsWarnings = [];
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
              pendingComponentWillUpdateWarnings = [];
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
              pendingLegacyContextWarning = /* @__PURE__ */ new Map();
            };
          }
          function resolveDefaultProps(Component, baseProps) {
            if (Component && Component.defaultProps) {
              var props = assign({}, baseProps);
              var defaultProps = Component.defaultProps;
              for (var propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
              return props;
            }
            return baseProps;
          }
          var valueCursor = createCursor(null);
          var rendererSigil;
          {
            rendererSigil = {};
          }
          var currentlyRenderingFiber = null;
          var lastContextDependency = null;
          var lastFullyObservedContext = null;
          var isDisallowedContextReadInDEV = false;
          function resetContextDependencies() {
            currentlyRenderingFiber = null;
            lastContextDependency = null;
            lastFullyObservedContext = null;
            {
              isDisallowedContextReadInDEV = false;
            }
          }
          function enterDisallowedContextReadInDEV() {
            {
              isDisallowedContextReadInDEV = true;
            }
          }
          function exitDisallowedContextReadInDEV() {
            {
              isDisallowedContextReadInDEV = false;
            }
          }
          function pushProvider(providerFiber, context, nextValue) {
            {
              push(valueCursor, context._currentValue, providerFiber);
              context._currentValue = nextValue;
              {
                if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                  error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
                }
                context._currentRenderer = rendererSigil;
              }
            }
          }
          function popProvider(context, providerFiber) {
            var currentValue = valueCursor.current;
            pop(valueCursor, providerFiber);
            {
              {
                context._currentValue = currentValue;
              }
            }
          }
          function scheduleContextWorkOnParentPath(parent, renderLanes2, propagationRoot) {
            var node = parent;
            while (node !== null) {
              var alternate = node.alternate;
              if (!isSubsetOfLanes(node.childLanes, renderLanes2)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes2);
                if (alternate !== null) {
                  alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
                }
              } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
                alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
              }
              if (node === propagationRoot) {
                break;
              }
              node = node.return;
            }
            {
              if (node !== propagationRoot) {
                error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function propagateContextChange(workInProgress2, context, renderLanes2) {
            {
              propagateContextChange_eager(workInProgress2, context, renderLanes2);
            }
          }
          function propagateContextChange_eager(workInProgress2, context, renderLanes2) {
            var fiber = workInProgress2.child;
            if (fiber !== null) {
              fiber.return = workInProgress2;
            }
            while (fiber !== null) {
              var nextFiber = void 0;
              var list = fiber.dependencies;
              if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while (dependency !== null) {
                  if (dependency.context === context) {
                    if (fiber.tag === ClassComponent) {
                      var lane = pickArbitraryLane(renderLanes2);
                      var update = createUpdate(NoTimestamp, lane);
                      update.tag = ForceUpdate;
                      var updateQueue = fiber.updateQueue;
                      if (updateQueue === null)
                        ;
                      else {
                        var sharedQueue = updateQueue.shared;
                        var pending = sharedQueue.pending;
                        if (pending === null) {
                          update.next = update;
                        } else {
                          update.next = pending.next;
                          pending.next = update;
                        }
                        sharedQueue.pending = update;
                      }
                    }
                    fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                    var alternate = fiber.alternate;
                    if (alternate !== null) {
                      alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                    }
                    scheduleContextWorkOnParentPath(fiber.return, renderLanes2, workInProgress2);
                    list.lanes = mergeLanes(list.lanes, renderLanes2);
                    break;
                  }
                  dependency = dependency.next;
                }
              } else if (fiber.tag === ContextProvider) {
                nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
              } else if (fiber.tag === DehydratedFragment) {
                var parentSuspense = fiber.return;
                if (parentSuspense === null) {
                  throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                }
                parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes2);
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null) {
                  _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes2);
                }
                scheduleContextWorkOnParentPath(parentSuspense, renderLanes2, workInProgress2);
                nextFiber = fiber.sibling;
              } else {
                nextFiber = fiber.child;
              }
              if (nextFiber !== null) {
                nextFiber.return = fiber;
              } else {
                nextFiber = fiber;
                while (nextFiber !== null) {
                  if (nextFiber === workInProgress2) {
                    nextFiber = null;
                    break;
                  }
                  var sibling = nextFiber.sibling;
                  if (sibling !== null) {
                    sibling.return = nextFiber.return;
                    nextFiber = sibling;
                    break;
                  }
                  nextFiber = nextFiber.return;
                }
              }
              fiber = nextFiber;
            }
          }
          function prepareToReadContext(workInProgress2, renderLanes2) {
            currentlyRenderingFiber = workInProgress2;
            lastContextDependency = null;
            lastFullyObservedContext = null;
            var dependencies = workInProgress2.dependencies;
            if (dependencies !== null) {
              {
                var firstContext = dependencies.firstContext;
                if (firstContext !== null) {
                  if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                    markWorkInProgressReceivedUpdate();
                  }
                  dependencies.firstContext = null;
                }
              }
            }
          }
          function readContext(context) {
            {
              if (isDisallowedContextReadInDEV) {
                error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
              }
            }
            var value = context._currentValue;
            if (lastFullyObservedContext === context)
              ;
            else {
              var contextItem = {
                context,
                memoizedValue: value,
                next: null
              };
              if (lastContextDependency === null) {
                if (currentlyRenderingFiber === null) {
                  throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                }
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                  lanes: NoLanes,
                  firstContext: contextItem
                };
              } else {
                lastContextDependency = lastContextDependency.next = contextItem;
              }
            }
            return value;
          }
          var concurrentQueues = null;
          function pushConcurrentUpdateQueue(queue) {
            if (concurrentQueues === null) {
              concurrentQueues = [queue];
            } else {
              concurrentQueues.push(queue);
            }
          }
          function finishQueueingConcurrentUpdates() {
            if (concurrentQueues !== null) {
              for (var i2 = 0; i2 < concurrentQueues.length; i2++) {
                var queue = concurrentQueues[i2];
                var lastInterleavedUpdate = queue.interleaved;
                if (lastInterleavedUpdate !== null) {
                  queue.interleaved = null;
                  var firstInterleavedUpdate = lastInterleavedUpdate.next;
                  var lastPendingUpdate = queue.pending;
                  if (lastPendingUpdate !== null) {
                    var firstPendingUpdate = lastPendingUpdate.next;
                    lastPendingUpdate.next = firstInterleavedUpdate;
                    lastInterleavedUpdate.next = firstPendingUpdate;
                  }
                  queue.pending = lastInterleavedUpdate;
                }
              }
              concurrentQueues = null;
            }
          }
          function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
            var interleaved = queue.interleaved;
            if (interleaved === null) {
              update.next = update;
              pushConcurrentUpdateQueue(queue);
            } else {
              update.next = interleaved.next;
              interleaved.next = update;
            }
            queue.interleaved = update;
            return markUpdateLaneFromFiberToRoot(fiber, lane);
          }
          function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
            var interleaved = queue.interleaved;
            if (interleaved === null) {
              update.next = update;
              pushConcurrentUpdateQueue(queue);
            } else {
              update.next = interleaved.next;
              interleaved.next = update;
            }
            queue.interleaved = update;
          }
          function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
            var interleaved = queue.interleaved;
            if (interleaved === null) {
              update.next = update;
              pushConcurrentUpdateQueue(queue);
            } else {
              update.next = interleaved.next;
              interleaved.next = update;
            }
            queue.interleaved = update;
            return markUpdateLaneFromFiberToRoot(fiber, lane);
          }
          function enqueueConcurrentRenderForLane(fiber, lane) {
            return markUpdateLaneFromFiberToRoot(fiber, lane);
          }
          var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
          function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
            sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
            var alternate = sourceFiber.alternate;
            if (alternate !== null) {
              alternate.lanes = mergeLanes(alternate.lanes, lane);
            }
            {
              if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
                warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
              }
            }
            var node = sourceFiber;
            var parent = sourceFiber.return;
            while (parent !== null) {
              parent.childLanes = mergeLanes(parent.childLanes, lane);
              alternate = parent.alternate;
              if (alternate !== null) {
                alternate.childLanes = mergeLanes(alternate.childLanes, lane);
              } else {
                {
                  if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                    warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                  }
                }
              }
              node = parent;
              parent = parent.return;
            }
            if (node.tag === HostRoot) {
              var root2 = node.stateNode;
              return root2;
            } else {
              return null;
            }
          }
          var UpdateState = 0;
          var ReplaceState = 1;
          var ForceUpdate = 2;
          var CaptureUpdate = 3;
          var hasForceUpdate = false;
          var didWarnUpdateInsideUpdate;
          var currentlyProcessingQueue;
          {
            didWarnUpdateInsideUpdate = false;
            currentlyProcessingQueue = null;
          }
          function initializeUpdateQueue(fiber) {
            var queue = {
              baseState: fiber.memoizedState,
              firstBaseUpdate: null,
              lastBaseUpdate: null,
              shared: {
                pending: null,
                interleaved: null,
                lanes: NoLanes
              },
              effects: null
            };
            fiber.updateQueue = queue;
          }
          function cloneUpdateQueue(current2, workInProgress2) {
            var queue = workInProgress2.updateQueue;
            var currentQueue = current2.updateQueue;
            if (queue === currentQueue) {
              var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
              };
              workInProgress2.updateQueue = clone;
            }
          }
          function createUpdate(eventTime, lane) {
            var update = {
              eventTime,
              lane,
              tag: UpdateState,
              payload: null,
              callback: null,
              next: null
            };
            return update;
          }
          function enqueueUpdate(fiber, update, lane) {
            var updateQueue = fiber.updateQueue;
            if (updateQueue === null) {
              return null;
            }
            var sharedQueue = updateQueue.shared;
            {
              if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
                error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
                didWarnUpdateInsideUpdate = true;
              }
            }
            if (isUnsafeClassRenderPhaseUpdate()) {
              var pending = sharedQueue.pending;
              if (pending === null) {
                update.next = update;
              } else {
                update.next = pending.next;
                pending.next = update;
              }
              sharedQueue.pending = update;
              return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
            } else {
              return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
            }
          }
          function entangleTransitions(root2, fiber, lane) {
            var updateQueue = fiber.updateQueue;
            if (updateQueue === null) {
              return;
            }
            var sharedQueue = updateQueue.shared;
            if (isTransitionLane(lane)) {
              var queueLanes = sharedQueue.lanes;
              queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
              var newQueueLanes = mergeLanes(queueLanes, lane);
              sharedQueue.lanes = newQueueLanes;
              markRootEntangled(root2, newQueueLanes);
            }
          }
          function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
            var queue = workInProgress2.updateQueue;
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              var currentQueue = current2.updateQueue;
              if (queue === currentQueue) {
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                  var update = firstBaseUpdate;
                  do {
                    var clone = {
                      eventTime: update.eventTime,
                      lane: update.lane,
                      tag: update.tag,
                      payload: update.payload,
                      callback: update.callback,
                      next: null
                    };
                    if (newLast === null) {
                      newFirst = newLast = clone;
                    } else {
                      newLast.next = clone;
                      newLast = clone;
                    }
                    update = update.next;
                  } while (update !== null);
                  if (newLast === null) {
                    newFirst = newLast = capturedUpdate;
                  } else {
                    newLast.next = capturedUpdate;
                    newLast = capturedUpdate;
                  }
                } else {
                  newFirst = newLast = capturedUpdate;
                }
                queue = {
                  baseState: currentQueue.baseState,
                  firstBaseUpdate: newFirst,
                  lastBaseUpdate: newLast,
                  shared: currentQueue.shared,
                  effects: currentQueue.effects
                };
                workInProgress2.updateQueue = queue;
                return;
              }
            }
            var lastBaseUpdate = queue.lastBaseUpdate;
            if (lastBaseUpdate === null) {
              queue.firstBaseUpdate = capturedUpdate;
            } else {
              lastBaseUpdate.next = capturedUpdate;
            }
            queue.lastBaseUpdate = capturedUpdate;
          }
          function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance) {
            switch (update.tag) {
              case ReplaceState: {
                var payload = update.payload;
                if (typeof payload === "function") {
                  {
                    enterDisallowedContextReadInDEV();
                  }
                  var nextState = payload.call(instance, prevState, nextProps);
                  {
                    if (workInProgress2.mode & StrictLegacyMode) {
                      setIsStrictModeForDevtools(true);
                      try {
                        payload.call(instance, prevState, nextProps);
                      } finally {
                        setIsStrictModeForDevtools(false);
                      }
                    }
                    exitDisallowedContextReadInDEV();
                  }
                  return nextState;
                }
                return payload;
              }
              case CaptureUpdate: {
                workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
              }
              case UpdateState: {
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === "function") {
                  {
                    enterDisallowedContextReadInDEV();
                  }
                  partialState = _payload.call(instance, prevState, nextProps);
                  {
                    if (workInProgress2.mode & StrictLegacyMode) {
                      setIsStrictModeForDevtools(true);
                      try {
                        _payload.call(instance, prevState, nextProps);
                      } finally {
                        setIsStrictModeForDevtools(false);
                      }
                    }
                    exitDisallowedContextReadInDEV();
                  }
                } else {
                  partialState = _payload;
                }
                if (partialState === null || partialState === void 0) {
                  return prevState;
                }
                return assign({}, prevState, partialState);
              }
              case ForceUpdate: {
                hasForceUpdate = true;
                return prevState;
              }
            }
            return prevState;
          }
          function processUpdateQueue(workInProgress2, props, instance, renderLanes2) {
            var queue = workInProgress2.updateQueue;
            hasForceUpdate = false;
            {
              currentlyProcessingQueue = queue.shared;
            }
            var firstBaseUpdate = queue.firstBaseUpdate;
            var lastBaseUpdate = queue.lastBaseUpdate;
            var pendingQueue = queue.shared.pending;
            if (pendingQueue !== null) {
              queue.shared.pending = null;
              var lastPendingUpdate = pendingQueue;
              var firstPendingUpdate = lastPendingUpdate.next;
              lastPendingUpdate.next = null;
              if (lastBaseUpdate === null) {
                firstBaseUpdate = firstPendingUpdate;
              } else {
                lastBaseUpdate.next = firstPendingUpdate;
              }
              lastBaseUpdate = lastPendingUpdate;
              var current2 = workInProgress2.alternate;
              if (current2 !== null) {
                var currentQueue = current2.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                  if (currentLastBaseUpdate === null) {
                    currentQueue.firstBaseUpdate = firstPendingUpdate;
                  } else {
                    currentLastBaseUpdate.next = firstPendingUpdate;
                  }
                  currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
              }
            }
            if (firstBaseUpdate !== null) {
              var newState = queue.baseState;
              var newLanes = NoLanes;
              var newBaseState = null;
              var newFirstBaseUpdate = null;
              var newLastBaseUpdate = null;
              var update = firstBaseUpdate;
              do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                  var clone = {
                    eventTime: updateEventTime,
                    lane: updateLane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  if (newLastBaseUpdate === null) {
                    newFirstBaseUpdate = newLastBaseUpdate = clone;
                    newBaseState = newState;
                  } else {
                    newLastBaseUpdate = newLastBaseUpdate.next = clone;
                  }
                  newLanes = mergeLanes(newLanes, updateLane);
                } else {
                  if (newLastBaseUpdate !== null) {
                    var _clone = {
                      eventTime: updateEventTime,
                      lane: NoLane,
                      tag: update.tag,
                      payload: update.payload,
                      callback: update.callback,
                      next: null
                    };
                    newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                  }
                  newState = getStateFromUpdate(workInProgress2, queue, update, newState, props, instance);
                  var callback = update.callback;
                  if (callback !== null && update.lane !== NoLane) {
                    workInProgress2.flags |= Callback;
                    var effects = queue.effects;
                    if (effects === null) {
                      queue.effects = [update];
                    } else {
                      effects.push(update);
                    }
                  }
                }
                update = update.next;
                if (update === null) {
                  pendingQueue = queue.shared.pending;
                  if (pendingQueue === null) {
                    break;
                  } else {
                    var _lastPendingUpdate = pendingQueue;
                    var _firstPendingUpdate = _lastPendingUpdate.next;
                    _lastPendingUpdate.next = null;
                    update = _firstPendingUpdate;
                    queue.lastBaseUpdate = _lastPendingUpdate;
                    queue.shared.pending = null;
                  }
                }
              } while (true);
              if (newLastBaseUpdate === null) {
                newBaseState = newState;
              }
              queue.baseState = newBaseState;
              queue.firstBaseUpdate = newFirstBaseUpdate;
              queue.lastBaseUpdate = newLastBaseUpdate;
              var lastInterleaved = queue.shared.interleaved;
              if (lastInterleaved !== null) {
                var interleaved = lastInterleaved;
                do {
                  newLanes = mergeLanes(newLanes, interleaved.lane);
                  interleaved = interleaved.next;
                } while (interleaved !== lastInterleaved);
              } else if (firstBaseUpdate === null) {
                queue.shared.lanes = NoLanes;
              }
              markSkippedUpdateLanes(newLanes);
              workInProgress2.lanes = newLanes;
              workInProgress2.memoizedState = newState;
            }
            {
              currentlyProcessingQueue = null;
            }
          }
          function callCallback(callback, context) {
            if (typeof callback !== "function") {
              throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
            }
            callback.call(context);
          }
          function resetHasForceUpdateBeforeProcessing() {
            hasForceUpdate = false;
          }
          function checkHasForceUpdateAfterProcessing() {
            return hasForceUpdate;
          }
          function commitUpdateQueue(finishedWork, finishedQueue, instance) {
            var effects = finishedQueue.effects;
            finishedQueue.effects = null;
            if (effects !== null) {
              for (var i2 = 0; i2 < effects.length; i2++) {
                var effect = effects[i2];
                var callback = effect.callback;
                if (callback !== null) {
                  effect.callback = null;
                  callCallback(callback, instance);
                }
              }
            }
          }
          var fakeInternalInstance = {};
          var emptyRefsObject = new React6.Component().refs;
          var didWarnAboutStateAssignmentForComponent;
          var didWarnAboutUninitializedState;
          var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
          var didWarnAboutLegacyLifecyclesAndDerivedState;
          var didWarnAboutUndefinedDerivedState;
          var warnOnUndefinedDerivedState;
          var warnOnInvalidCallback;
          var didWarnAboutDirectlyAssigningPropsToState;
          var didWarnAboutContextTypeAndContextTypes;
          var didWarnAboutInvalidateContextType;
          {
            didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set();
            didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
            didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
            didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
            didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
            didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
            didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
            var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
            warnOnInvalidCallback = function(callback, callerName) {
              if (callback === null || typeof callback === "function") {
                return;
              }
              var key = callerName + "_" + callback;
              if (!didWarnOnInvalidCallback.has(key)) {
                didWarnOnInvalidCallback.add(key);
                error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
              }
            };
            warnOnUndefinedDerivedState = function(type, partialState) {
              if (partialState === void 0) {
                var componentName = getComponentNameFromType(type) || "Component";
                if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                  didWarnAboutUndefinedDerivedState.add(componentName);
                  error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
                }
              }
            };
            Object.defineProperty(fakeInternalInstance, "_processChildContext", {
              enumerable: false,
              value: function() {
                throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
              }
            });
            Object.freeze(fakeInternalInstance);
          }
          function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
            var prevState = workInProgress2.memoizedState;
            var partialState = getDerivedStateFromProps(nextProps, prevState);
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  partialState = getDerivedStateFromProps(nextProps, prevState);
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              warnOnUndefinedDerivedState(ctor, partialState);
            }
            var memoizedState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
            workInProgress2.memoizedState = memoizedState;
            if (workInProgress2.lanes === NoLanes) {
              var updateQueue = workInProgress2.updateQueue;
              updateQueue.baseState = memoizedState;
            }
          }
          var classComponentUpdater = {
            isMounted,
            enqueueSetState: function(inst, payload, callback) {
              var fiber = get(inst);
              var eventTime = requestEventTime();
              var lane = requestUpdateLane(fiber);
              var update = createUpdate(eventTime, lane);
              update.payload = payload;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "setState");
                }
                update.callback = callback;
              }
              var root2 = enqueueUpdate(fiber, update, lane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                entangleTransitions(root2, fiber, lane);
              }
              {
                markStateUpdateScheduled(fiber, lane);
              }
            },
            enqueueReplaceState: function(inst, payload, callback) {
              var fiber = get(inst);
              var eventTime = requestEventTime();
              var lane = requestUpdateLane(fiber);
              var update = createUpdate(eventTime, lane);
              update.tag = ReplaceState;
              update.payload = payload;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "replaceState");
                }
                update.callback = callback;
              }
              var root2 = enqueueUpdate(fiber, update, lane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                entangleTransitions(root2, fiber, lane);
              }
              {
                markStateUpdateScheduled(fiber, lane);
              }
            },
            enqueueForceUpdate: function(inst, callback) {
              var fiber = get(inst);
              var eventTime = requestEventTime();
              var lane = requestUpdateLane(fiber);
              var update = createUpdate(eventTime, lane);
              update.tag = ForceUpdate;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "forceUpdate");
                }
                update.callback = callback;
              }
              var root2 = enqueueUpdate(fiber, update, lane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                entangleTransitions(root2, fiber, lane);
              }
              {
                markForceUpdateScheduled(fiber, lane);
              }
            }
          };
          function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
            var instance = workInProgress2.stateNode;
            if (typeof instance.shouldComponentUpdate === "function") {
              var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
              {
                if (workInProgress2.mode & StrictLegacyMode) {
                  setIsStrictModeForDevtools(true);
                  try {
                    shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                  } finally {
                    setIsStrictModeForDevtools(false);
                  }
                }
                if (shouldUpdate === void 0) {
                  error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
                }
              }
              return shouldUpdate;
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent) {
              return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
            }
            return true;
          }
          function checkClassInstance(workInProgress2, ctor, newProps) {
            var instance = workInProgress2.stateNode;
            {
              var name = getComponentNameFromType(ctor) || "Component";
              var renderPresent = instance.render;
              if (!renderPresent) {
                if (ctor.prototype && typeof ctor.prototype.render === "function") {
                  error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
                } else {
                  error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
                }
              }
              if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
                error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
              }
              if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
                error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
              }
              if (instance.propTypes) {
                error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
              }
              if (instance.contextType) {
                error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
              }
              {
                if (instance.contextTypes) {
                  error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
                }
                if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                  didWarnAboutContextTypeAndContextTypes.add(ctor);
                  error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
                }
              }
              if (typeof instance.componentShouldUpdate === "function") {
                error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
              }
              if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
                error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
              }
              if (typeof instance.componentDidUnmount === "function") {
                error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
              }
              if (typeof instance.componentDidReceiveProps === "function") {
                error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
              }
              if (typeof instance.componentWillRecieveProps === "function") {
                error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
              }
              if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
                error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
              }
              var hasMutatedProps = instance.props !== newProps;
              if (instance.props !== void 0 && hasMutatedProps) {
                error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
              }
              if (instance.defaultProps) {
                error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
                didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
                error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
              }
              if (typeof instance.getDerivedStateFromProps === "function") {
                error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
              }
              if (typeof instance.getDerivedStateFromError === "function") {
                error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
              }
              if (typeof ctor.getSnapshotBeforeUpdate === "function") {
                error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
              }
              var _state = instance.state;
              if (_state && (typeof _state !== "object" || isArray(_state))) {
                error("%s.state: must be set to an object or null", name);
              }
              if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
                error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
              }
            }
          }
          function adoptClassInstance(workInProgress2, instance) {
            instance.updater = classComponentUpdater;
            workInProgress2.stateNode = instance;
            set(instance, workInProgress2);
            {
              instance._reactInternalInstance = fakeInternalInstance;
            }
          }
          function constructClassInstance(workInProgress2, ctor, props) {
            var isLegacyContextConsumer = false;
            var unmaskedContext = emptyContextObject;
            var context = emptyContextObject;
            var contextType = ctor.contextType;
            {
              if ("contextType" in ctor) {
                var isValid = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
                if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                  didWarnAboutInvalidateContextType.add(ctor);
                  var addendum = "";
                  if (contextType === void 0) {
                    addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                  } else if (typeof contextType !== "object") {
                    addendum = " However, it is set to a " + typeof contextType + ".";
                  } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                    addendum = " Did you accidentally pass the Context.Provider instead?";
                  } else if (contextType._context !== void 0) {
                    addendum = " Did you accidentally pass the Context.Consumer instead?";
                  } else {
                    addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                  }
                  error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
                }
              }
            }
            if (typeof contextType === "object" && contextType !== null) {
              context = readContext(contextType);
            } else {
              unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              var contextTypes = ctor.contextTypes;
              isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
              context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
            }
            var instance = new ctor(props, context);
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  instance = new ctor(props, context);
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
            }
            var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
            adoptClassInstance(workInProgress2, instance);
            {
              if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
                var componentName = getComponentNameFromType(ctor) || "Component";
                if (!didWarnAboutUninitializedState.has(componentName)) {
                  didWarnAboutUninitializedState.add(componentName);
                  error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
                }
              }
              if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
                var foundWillMountName = null;
                var foundWillReceivePropsName = null;
                var foundWillUpdateName = null;
                if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                  foundWillMountName = "componentWillMount";
                } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                  foundWillMountName = "UNSAFE_componentWillMount";
                }
                if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                  foundWillReceivePropsName = "componentWillReceiveProps";
                } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                  foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
                }
                if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                  foundWillUpdateName = "componentWillUpdate";
                } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                  foundWillUpdateName = "UNSAFE_componentWillUpdate";
                }
                if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                  var _componentName = getComponentNameFromType(ctor) || "Component";
                  var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                  if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                  }
                }
              }
            }
            if (isLegacyContextConsumer) {
              cacheContext(workInProgress2, unmaskedContext, context);
            }
            return instance;
          }
          function callComponentWillMount(workInProgress2, instance) {
            var oldState = instance.state;
            if (typeof instance.componentWillMount === "function") {
              instance.componentWillMount();
            }
            if (typeof instance.UNSAFE_componentWillMount === "function") {
              instance.UNSAFE_componentWillMount();
            }
            if (oldState !== instance.state) {
              {
                error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress2) || "Component");
              }
              classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
            }
          }
          function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
            var oldState = instance.state;
            if (typeof instance.componentWillReceiveProps === "function") {
              instance.componentWillReceiveProps(newProps, nextContext);
            }
            if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
              instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
            }
            if (instance.state !== oldState) {
              {
                var componentName = getComponentNameFromFiber(workInProgress2) || "Component";
                if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                  didWarnAboutStateAssignmentForComponent.add(componentName);
                  error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
                }
              }
              classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
            }
          }
          function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
            {
              checkClassInstance(workInProgress2, ctor, newProps);
            }
            var instance = workInProgress2.stateNode;
            instance.props = newProps;
            instance.state = workInProgress2.memoizedState;
            instance.refs = emptyRefsObject;
            initializeUpdateQueue(workInProgress2);
            var contextType = ctor.contextType;
            if (typeof contextType === "object" && contextType !== null) {
              instance.context = readContext(contextType);
            } else {
              var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              instance.context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            {
              if (instance.state === newProps) {
                var componentName = getComponentNameFromType(ctor) || "Component";
                if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                  didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                  error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
                }
              }
              if (workInProgress2.mode & StrictLegacyMode) {
                ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance);
              }
              {
                ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
              }
            }
            instance.state = workInProgress2.memoizedState;
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              instance.state = workInProgress2.memoizedState;
            }
            if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
              callComponentWillMount(workInProgress2, instance);
              processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
              instance.state = workInProgress2.memoizedState;
            }
            if (typeof instance.componentDidMount === "function") {
              var fiberFlags = Update;
              {
                fiberFlags |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                fiberFlags |= MountLayoutDev;
              }
              workInProgress2.flags |= fiberFlags;
            }
          }
          function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
            var instance = workInProgress2.stateNode;
            var oldProps = workInProgress2.memoizedProps;
            instance.props = oldProps;
            var oldContext = instance.context;
            var contextType = ctor.contextType;
            var nextContext = emptyContextObject;
            if (typeof contextType === "object" && contextType !== null) {
              nextContext = readContext(contextType);
            } else {
              var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
            }
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
              if (oldProps !== newProps || oldContext !== nextContext) {
                callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
              }
            }
            resetHasForceUpdateBeforeProcessing();
            var oldState = workInProgress2.memoizedState;
            var newState = instance.state = oldState;
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            newState = workInProgress2.memoizedState;
            if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
              if (typeof instance.componentDidMount === "function") {
                var fiberFlags = Update;
                {
                  fiberFlags |= LayoutStatic;
                }
                if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                  fiberFlags |= MountLayoutDev;
                }
                workInProgress2.flags |= fiberFlags;
              }
              return false;
            }
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              newState = workInProgress2.memoizedState;
            }
            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
            if (shouldUpdate) {
              if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
                if (typeof instance.componentWillMount === "function") {
                  instance.componentWillMount();
                }
                if (typeof instance.UNSAFE_componentWillMount === "function") {
                  instance.UNSAFE_componentWillMount();
                }
              }
              if (typeof instance.componentDidMount === "function") {
                var _fiberFlags = Update;
                {
                  _fiberFlags |= LayoutStatic;
                }
                if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                  _fiberFlags |= MountLayoutDev;
                }
                workInProgress2.flags |= _fiberFlags;
              }
            } else {
              if (typeof instance.componentDidMount === "function") {
                var _fiberFlags2 = Update;
                {
                  _fiberFlags2 |= LayoutStatic;
                }
                if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                  _fiberFlags2 |= MountLayoutDev;
                }
                workInProgress2.flags |= _fiberFlags2;
              }
              workInProgress2.memoizedProps = newProps;
              workInProgress2.memoizedState = newState;
            }
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextContext;
            return shouldUpdate;
          }
          function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
            var instance = workInProgress2.stateNode;
            cloneUpdateQueue(current2, workInProgress2);
            var unresolvedOldProps = workInProgress2.memoizedProps;
            var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
            instance.props = oldProps;
            var unresolvedNewProps = workInProgress2.pendingProps;
            var oldContext = instance.context;
            var contextType = ctor.contextType;
            var nextContext = emptyContextObject;
            if (typeof contextType === "object" && contextType !== null) {
              nextContext = readContext(contextType);
            } else {
              var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
            }
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
              if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
                callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
              }
            }
            resetHasForceUpdateBeforeProcessing();
            var oldState = workInProgress2.memoizedState;
            var newState = instance.state = oldState;
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            newState = workInProgress2.memoizedState;
            if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
              if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Snapshot;
                }
              }
              return false;
            }
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              newState = workInProgress2.memoizedState;
            }
            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) || enableLazyContextPropagation;
            if (shouldUpdate) {
              if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
                if (typeof instance.componentWillUpdate === "function") {
                  instance.componentWillUpdate(newProps, newState, nextContext);
                }
                if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                  instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
                }
              }
              if (typeof instance.componentDidUpdate === "function") {
                workInProgress2.flags |= Update;
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                workInProgress2.flags |= Snapshot;
              }
            } else {
              if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.flags |= Snapshot;
                }
              }
              workInProgress2.memoizedProps = newProps;
              workInProgress2.memoizedState = newState;
            }
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextContext;
            return shouldUpdate;
          }
          var didWarnAboutMaps;
          var didWarnAboutGenerators;
          var didWarnAboutStringRefs;
          var ownerHasKeyUseWarning;
          var ownerHasFunctionTypeWarning;
          var warnForMissingKey = function(child, returnFiber) {
          };
          {
            didWarnAboutMaps = false;
            didWarnAboutGenerators = false;
            didWarnAboutStringRefs = {};
            ownerHasKeyUseWarning = {};
            ownerHasFunctionTypeWarning = {};
            warnForMissingKey = function(child, returnFiber) {
              if (child === null || typeof child !== "object") {
                return;
              }
              if (!child._store || child._store.validated || child.key != null) {
                return;
              }
              if (typeof child._store !== "object") {
                throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
              }
              child._store.validated = true;
              var componentName = getComponentNameFromFiber(returnFiber) || "Component";
              if (ownerHasKeyUseWarning[componentName]) {
                return;
              }
              ownerHasKeyUseWarning[componentName] = true;
              error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
            };
          }
          function coerceRef(returnFiber, current2, element) {
            var mixedRef = element.ref;
            if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
              {
                if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                  var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                  if (!didWarnAboutStringRefs[componentName]) {
                    {
                      error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                    }
                    didWarnAboutStringRefs[componentName] = true;
                  }
                }
              }
              if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                  var ownerFiber = owner;
                  if (ownerFiber.tag !== ClassComponent) {
                    throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                  }
                  inst = ownerFiber.stateNode;
                }
                if (!inst) {
                  throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                }
                var resolvedInst = inst;
                {
                  checkPropStringCoercion(mixedRef, "ref");
                }
                var stringRef = "" + mixedRef;
                if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref._stringRef === stringRef) {
                  return current2.ref;
                }
                var ref = function(value) {
                  var refs = resolvedInst.refs;
                  if (refs === emptyRefsObject) {
                    refs = resolvedInst.refs = {};
                  }
                  if (value === null) {
                    delete refs[stringRef];
                  } else {
                    refs[stringRef] = value;
                  }
                };
                ref._stringRef = stringRef;
                return ref;
              } else {
                if (typeof mixedRef !== "string") {
                  throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                }
                if (!element._owner) {
                  throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
                }
              }
            }
            return mixedRef;
          }
          function throwOnInvalidObjectType(returnFiber, newChild) {
            var childString = Object.prototype.toString.call(newChild);
            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
          }
          function warnOnFunctionType(returnFiber) {
            {
              var componentName = getComponentNameFromFiber(returnFiber) || "Component";
              if (ownerHasFunctionTypeWarning[componentName]) {
                return;
              }
              ownerHasFunctionTypeWarning[componentName] = true;
              error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
          function resolveLazy(lazyType) {
            var payload = lazyType._payload;
            var init = lazyType._init;
            return init(payload);
          }
          function ChildReconciler(shouldTrackSideEffects) {
            function deleteChild(returnFiber, childToDelete) {
              if (!shouldTrackSideEffects) {
                return;
              }
              var deletions = returnFiber.deletions;
              if (deletions === null) {
                returnFiber.deletions = [childToDelete];
                returnFiber.flags |= ChildDeletion;
              } else {
                deletions.push(childToDelete);
              }
            }
            function deleteRemainingChildren(returnFiber, currentFirstChild) {
              if (!shouldTrackSideEffects) {
                return null;
              }
              var childToDelete = currentFirstChild;
              while (childToDelete !== null) {
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
              }
              return null;
            }
            function mapRemainingChildren(returnFiber, currentFirstChild) {
              var existingChildren = /* @__PURE__ */ new Map();
              var existingChild = currentFirstChild;
              while (existingChild !== null) {
                if (existingChild.key !== null) {
                  existingChildren.set(existingChild.key, existingChild);
                } else {
                  existingChildren.set(existingChild.index, existingChild);
                }
                existingChild = existingChild.sibling;
              }
              return existingChildren;
            }
            function useFiber(fiber, pendingProps) {
              var clone = createWorkInProgress(fiber, pendingProps);
              clone.index = 0;
              clone.sibling = null;
              return clone;
            }
            function placeChild(newFiber, lastPlacedIndex, newIndex) {
              newFiber.index = newIndex;
              if (!shouldTrackSideEffects) {
                newFiber.flags |= Forked;
                return lastPlacedIndex;
              }
              var current2 = newFiber.alternate;
              if (current2 !== null) {
                var oldIndex = current2.index;
                if (oldIndex < lastPlacedIndex) {
                  newFiber.flags |= Placement;
                  return lastPlacedIndex;
                } else {
                  return oldIndex;
                }
              } else {
                newFiber.flags |= Placement;
                return lastPlacedIndex;
              }
            }
            function placeSingleChild(newFiber) {
              if (shouldTrackSideEffects && newFiber.alternate === null) {
                newFiber.flags |= Placement;
              }
              return newFiber;
            }
            function updateTextNode(returnFiber, current2, textContent, lanes) {
              if (current2 === null || current2.tag !== HostText) {
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current2, textContent);
                existing.return = returnFiber;
                return existing;
              }
            }
            function updateElement(returnFiber, current2, element, lanes) {
              var elementType = element.type;
              if (elementType === REACT_FRAGMENT_TYPE) {
                return updateFragment2(returnFiber, current2, element.props.children, lanes, element.key);
              }
              if (current2 !== null) {
                if (current2.elementType === elementType || isCompatibleFamilyForHotReloading(current2, element) || typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current2.type) {
                  var existing = useFiber(current2, element.props);
                  existing.ref = coerceRef(returnFiber, current2, element);
                  existing.return = returnFiber;
                  {
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                  }
                  return existing;
                }
              }
              var created = createFiberFromElement(element, returnFiber.mode, lanes);
              created.ref = coerceRef(returnFiber, current2, element);
              created.return = returnFiber;
              return created;
            }
            function updatePortal(returnFiber, current2, portal, lanes) {
              if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current2, portal.children || []);
                existing.return = returnFiber;
                return existing;
              }
            }
            function updateFragment2(returnFiber, current2, fragment, lanes, key) {
              if (current2 === null || current2.tag !== Fragment) {
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current2, fragment);
                existing.return = returnFiber;
                return existing;
              }
            }
            function createChild(returnFiber, newChild, lanes) {
              if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                    _created.ref = coerceRef(returnFiber, null, newChild);
                    _created.return = returnFiber;
                    return _created;
                  }
                  case REACT_PORTAL_TYPE: {
                    var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                    _created2.return = returnFiber;
                    return _created2;
                  }
                  case REACT_LAZY_TYPE: {
                    var payload = newChild._payload;
                    var init = newChild._init;
                    return createChild(returnFiber, init(payload), lanes);
                  }
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                  var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                  _created3.return = returnFiber;
                  return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              return null;
            }
            function updateSlot(returnFiber, oldFiber, newChild, lanes) {
              var key = oldFiber !== null ? oldFiber.key : null;
              if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                if (key !== null) {
                  return null;
                }
                return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    if (newChild.key === key) {
                      return updateElement(returnFiber, oldFiber, newChild, lanes);
                    } else {
                      return null;
                    }
                  }
                  case REACT_PORTAL_TYPE: {
                    if (newChild.key === key) {
                      return updatePortal(returnFiber, oldFiber, newChild, lanes);
                    } else {
                      return null;
                    }
                  }
                  case REACT_LAZY_TYPE: {
                    var payload = newChild._payload;
                    var init = newChild._init;
                    return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                  }
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                  if (key !== null) {
                    return null;
                  }
                  return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              return null;
            }
            function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
              if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                  }
                  case REACT_PORTAL_TYPE: {
                    var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                  }
                  case REACT_LAZY_TYPE:
                    var payload = newChild._payload;
                    var init = newChild._init;
                    return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                  var _matchedFiber3 = existingChildren.get(newIdx) || null;
                  return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              return null;
            }
            function warnOnInvalidKey(child, knownKeys, returnFiber) {
              {
                if (typeof child !== "object" || child === null) {
                  return knownKeys;
                }
                switch (child.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== "string") {
                      break;
                    }
                    if (knownKeys === null) {
                      knownKeys = /* @__PURE__ */ new Set();
                      knownKeys.add(key);
                      break;
                    }
                    if (!knownKeys.has(key)) {
                      knownKeys.add(key);
                      break;
                    }
                    error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                  case REACT_LAZY_TYPE:
                    var payload = child._payload;
                    var init = child._init;
                    warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                    break;
                }
              }
              return knownKeys;
            }
            function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
              {
                var knownKeys = null;
                for (var i2 = 0; i2 < newChildren.length; i2++) {
                  var child = newChildren[i2];
                  knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
              }
              var resultingFirstChild = null;
              var previousNewFiber = null;
              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = newFiber;
                } else {
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }
              if (newIdx === newChildren.length) {
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                  var numberOfForks = newIdx;
                  pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
              }
              if (oldFiber === null) {
                for (; newIdx < newChildren.length; newIdx++) {
                  var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                  if (_newFiber === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber;
                  } else {
                    previousNewFiber.sibling = _newFiber;
                  }
                  previousNewFiber = _newFiber;
                }
                if (getIsHydrating()) {
                  var _numberOfForks = newIdx;
                  pushTreeFork(returnFiber, _numberOfForks);
                }
                return resultingFirstChild;
              }
              var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber2.alternate !== null) {
                      existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                  }
                  lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber2;
                  } else {
                    previousNewFiber.sibling = _newFiber2;
                  }
                  previousNewFiber = _newFiber2;
                }
              }
              if (shouldTrackSideEffects) {
                existingChildren.forEach(function(child2) {
                  return deleteChild(returnFiber, child2);
                });
              }
              if (getIsHydrating()) {
                var _numberOfForks2 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks2);
              }
              return resultingFirstChild;
            }
            function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
              var iteratorFn = getIteratorFn(newChildrenIterable);
              if (typeof iteratorFn !== "function") {
                throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
              }
              {
                if (typeof Symbol === "function" && newChildrenIterable[Symbol.toStringTag] === "Generator") {
                  if (!didWarnAboutGenerators) {
                    error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                  }
                  didWarnAboutGenerators = true;
                }
                if (newChildrenIterable.entries === iteratorFn) {
                  if (!didWarnAboutMaps) {
                    error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
                var _newChildren = iteratorFn.call(newChildrenIterable);
                if (_newChildren) {
                  var knownKeys = null;
                  var _step = _newChildren.next();
                  for (; !_step.done; _step = _newChildren.next()) {
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                  }
                }
              }
              var newChildren = iteratorFn.call(newChildrenIterable);
              if (newChildren == null) {
                throw new Error("An iterable object provided no iterator.");
              }
              var resultingFirstChild = null;
              var previousNewFiber = null;
              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              var step = newChildren.next();
              for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = newFiber;
                } else {
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }
              if (step.done) {
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                  var numberOfForks = newIdx;
                  pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
              }
              if (oldFiber === null) {
                for (; !step.done; newIdx++, step = newChildren.next()) {
                  var _newFiber3 = createChild(returnFiber, step.value, lanes);
                  if (_newFiber3 === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber3;
                  } else {
                    previousNewFiber.sibling = _newFiber3;
                  }
                  previousNewFiber = _newFiber3;
                }
                if (getIsHydrating()) {
                  var _numberOfForks3 = newIdx;
                  pushTreeFork(returnFiber, _numberOfForks3);
                }
                return resultingFirstChild;
              }
              var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber4.alternate !== null) {
                      existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                  }
                  lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber4;
                  } else {
                    previousNewFiber.sibling = _newFiber4;
                  }
                  previousNewFiber = _newFiber4;
                }
              }
              if (shouldTrackSideEffects) {
                existingChildren.forEach(function(child2) {
                  return deleteChild(returnFiber, child2);
                });
              }
              if (getIsHydrating()) {
                var _numberOfForks4 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks4);
              }
              return resultingFirstChild;
            }
            function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
              if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
              }
              deleteRemainingChildren(returnFiber, currentFirstChild);
              var created = createFiberFromText(textContent, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
              var key = element.key;
              var child = currentFirstChild;
              while (child !== null) {
                if (child.key === key) {
                  var elementType = element.type;
                  if (elementType === REACT_FRAGMENT_TYPE) {
                    if (child.tag === Fragment) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var existing = useFiber(child, element.props.children);
                      existing.return = returnFiber;
                      {
                        existing._debugSource = element._source;
                        existing._debugOwner = element._owner;
                      }
                      return existing;
                    }
                  } else {
                    if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var _existing = useFiber(child, element.props);
                      _existing.ref = coerceRef(returnFiber, child, element);
                      _existing.return = returnFiber;
                      {
                        _existing._debugSource = element._source;
                        _existing._debugOwner = element._owner;
                      }
                      return _existing;
                    }
                  }
                  deleteRemainingChildren(returnFiber, child);
                  break;
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }
              if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
              } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
              }
            }
            function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
              var key = portal.key;
              var child = currentFirstChild;
              while (child !== null) {
                if (child.key === key) {
                  if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, portal.children || []);
                    existing.return = returnFiber;
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }
              var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
              var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
              if (isUnkeyedTopLevelFragment) {
                newChild = newChild.props.children;
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                    return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                  case REACT_PORTAL_TYPE:
                    return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                  case REACT_LAZY_TYPE:
                    var payload = newChild._payload;
                    var init = newChild._init;
                    return reconcileChildFibers2(returnFiber, currentFirstChild, init(payload), lanes);
                }
                if (isArray(newChild)) {
                  return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                }
                if (getIteratorFn(newChild)) {
                  return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType(returnFiber);
                }
              }
              return deleteRemainingChildren(returnFiber, currentFirstChild);
            }
            return reconcileChildFibers2;
          }
          var reconcileChildFibers = ChildReconciler(true);
          var mountChildFibers = ChildReconciler(false);
          function cloneChildFibers(current2, workInProgress2) {
            if (current2 !== null && workInProgress2.child !== current2.child) {
              throw new Error("Resuming work not yet implemented.");
            }
            if (workInProgress2.child === null) {
              return;
            }
            var currentChild = workInProgress2.child;
            var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
            workInProgress2.child = newChild;
            newChild.return = workInProgress2;
            while (currentChild.sibling !== null) {
              currentChild = currentChild.sibling;
              newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
              newChild.return = workInProgress2;
            }
            newChild.sibling = null;
          }
          function resetChildFibers(workInProgress2, lanes) {
            var child = workInProgress2.child;
            while (child !== null) {
              resetWorkInProgress(child, lanes);
              child = child.sibling;
            }
          }
          var NO_CONTEXT = {};
          var contextStackCursor$1 = createCursor(NO_CONTEXT);
          var contextFiberStackCursor = createCursor(NO_CONTEXT);
          var rootInstanceStackCursor = createCursor(NO_CONTEXT);
          function requiredContext(c2) {
            if (c2 === NO_CONTEXT) {
              throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
            }
            return c2;
          }
          function getRootHostContainer() {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            return rootInstance;
          }
          function pushHostContainer(fiber, nextRootInstance) {
            push(rootInstanceStackCursor, nextRootInstance, fiber);
            push(contextFiberStackCursor, fiber, fiber);
            push(contextStackCursor$1, NO_CONTEXT, fiber);
            var nextRootContext = getRootHostContext(nextRootInstance);
            pop(contextStackCursor$1, fiber);
            push(contextStackCursor$1, nextRootContext, fiber);
          }
          function popHostContainer(fiber) {
            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
            pop(rootInstanceStackCursor, fiber);
          }
          function getHostContext() {
            var context = requiredContext(contextStackCursor$1.current);
            return context;
          }
          function pushHostContext(fiber) {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            var context = requiredContext(contextStackCursor$1.current);
            var nextContext = getChildHostContext(context, fiber.type);
            if (context === nextContext) {
              return;
            }
            push(contextFiberStackCursor, fiber, fiber);
            push(contextStackCursor$1, nextContext, fiber);
          }
          function popHostContext(fiber) {
            if (contextFiberStackCursor.current !== fiber) {
              return;
            }
            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
          }
          var DefaultSuspenseContext = 0;
          var SubtreeSuspenseContextMask = 1;
          var InvisibleParentSuspenseContext = 1;
          var ForceSuspenseFallback = 2;
          var suspenseStackCursor = createCursor(DefaultSuspenseContext);
          function hasSuspenseContext(parentContext, flag) {
            return (parentContext & flag) !== 0;
          }
          function setDefaultShallowSuspenseContext(parentContext) {
            return parentContext & SubtreeSuspenseContextMask;
          }
          function setShallowSuspenseContext(parentContext, shallowContext) {
            return parentContext & SubtreeSuspenseContextMask | shallowContext;
          }
          function addSubtreeSuspenseContext(parentContext, subtreeContext) {
            return parentContext | subtreeContext;
          }
          function pushSuspenseContext(fiber, newContext) {
            push(suspenseStackCursor, newContext, fiber);
          }
          function popSuspenseContext(fiber) {
            pop(suspenseStackCursor, fiber);
          }
          function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
            var nextState = workInProgress2.memoizedState;
            if (nextState !== null) {
              if (nextState.dehydrated !== null) {
                return true;
              }
              return false;
            }
            var props = workInProgress2.memoizedProps;
            {
              return true;
            }
          }
          function findFirstSuspended(row) {
            var node = row;
            while (node !== null) {
              if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                  var dehydrated = state.dehydrated;
                  if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                    return node;
                  }
                }
              } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== void 0) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) {
                  return node;
                }
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === row) {
                return null;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === row) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return null;
          }
          var NoFlags$1 = 0;
          var HasEffect = 1;
          var Insertion = 2;
          var Layout = 4;
          var Passive$1 = 8;
          var workInProgressSources = [];
          function resetWorkInProgressVersions() {
            for (var i2 = 0; i2 < workInProgressSources.length; i2++) {
              var mutableSource = workInProgressSources[i2];
              {
                mutableSource._workInProgressVersionPrimary = null;
              }
            }
            workInProgressSources.length = 0;
          }
          function registerMutableSourceForHydration(root2, mutableSource) {
            var getVersion = mutableSource._getVersion;
            var version = getVersion(mutableSource._source);
            if (root2.mutableSourceEagerHydrationData == null) {
              root2.mutableSourceEagerHydrationData = [mutableSource, version];
            } else {
              root2.mutableSourceEagerHydrationData.push(mutableSource, version);
            }
          }
          var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
          var didWarnAboutMismatchedHooksForComponent;
          var didWarnUncachedGetSnapshot;
          {
            didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
          }
          var renderLanes = NoLanes;
          var currentlyRenderingFiber$1 = null;
          var currentHook = null;
          var workInProgressHook = null;
          var didScheduleRenderPhaseUpdate = false;
          var didScheduleRenderPhaseUpdateDuringThisPass = false;
          var localIdCounter = 0;
          var globalClientIdCounter = 0;
          var RE_RENDER_LIMIT = 25;
          var currentHookNameInDev = null;
          var hookTypesDev = null;
          var hookTypesUpdateIndexDev = -1;
          var ignorePreviousDependencies = false;
          function mountHookTypesDev() {
            {
              var hookName = currentHookNameInDev;
              if (hookTypesDev === null) {
                hookTypesDev = [hookName];
              } else {
                hookTypesDev.push(hookName);
              }
            }
          }
          function updateHookTypesDev() {
            {
              var hookName = currentHookNameInDev;
              if (hookTypesDev !== null) {
                hookTypesUpdateIndexDev++;
                if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                  warnOnHookMismatchInDev(hookName);
                }
              }
            }
          }
          function checkDepsAreArrayDev(deps) {
            {
              if (deps !== void 0 && deps !== null && !isArray(deps)) {
                error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
              }
            }
          }
          function warnOnHookMismatchInDev(currentHookName) {
            {
              var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
              if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
                didWarnAboutMismatchedHooksForComponent.add(componentName);
                if (hookTypesDev !== null) {
                  var table = "";
                  var secondColumnStart = 30;
                  for (var i2 = 0; i2 <= hookTypesUpdateIndexDev; i2++) {
                    var oldHookName = hookTypesDev[i2];
                    var newHookName = i2 === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i2 + 1 + ". " + oldHookName;
                    while (row.length < secondColumnStart) {
                      row += " ";
                    }
                    row += newHookName + "\n";
                    table += row;
                  }
                  error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
                }
              }
            }
          }
          function throwInvalidHookError() {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
          }
          function areHookInputsEqual(nextDeps, prevDeps) {
            {
              if (ignorePreviousDependencies) {
                return false;
              }
            }
            if (prevDeps === null) {
              {
                error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
              }
              return false;
            }
            {
              if (nextDeps.length !== prevDeps.length) {
                error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
              }
            }
            for (var i2 = 0; i2 < prevDeps.length && i2 < nextDeps.length; i2++) {
              if (objectIs(nextDeps[i2], prevDeps[i2])) {
                continue;
              }
              return false;
            }
            return true;
          }
          function renderWithHooks(current2, workInProgress2, Component, props, secondArg, nextRenderLanes) {
            renderLanes = nextRenderLanes;
            currentlyRenderingFiber$1 = workInProgress2;
            {
              hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
              hookTypesUpdateIndexDev = -1;
              ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
            }
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            workInProgress2.lanes = NoLanes;
            {
              if (current2 !== null && current2.memoizedState !== null) {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
              } else if (hookTypesDev !== null) {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
              } else {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
              }
            }
            var children = Component(props, secondArg);
            if (didScheduleRenderPhaseUpdateDuringThisPass) {
              var numberOfReRenders = 0;
              do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                localIdCounter = 0;
                if (numberOfReRenders >= RE_RENDER_LIMIT) {
                  throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                }
                numberOfReRenders += 1;
                {
                  ignorePreviousDependencies = false;
                }
                currentHook = null;
                workInProgressHook = null;
                workInProgress2.updateQueue = null;
                {
                  hookTypesUpdateIndexDev = -1;
                }
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
              } while (didScheduleRenderPhaseUpdateDuringThisPass);
            }
            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
            {
              workInProgress2._debugHookTypes = hookTypesDev;
            }
            var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
            renderLanes = NoLanes;
            currentlyRenderingFiber$1 = null;
            currentHook = null;
            workInProgressHook = null;
            {
              currentHookNameInDev = null;
              hookTypesDev = null;
              hookTypesUpdateIndexDev = -1;
              if (current2 !== null && (current2.flags & StaticMask) !== (workInProgress2.flags & StaticMask) && (current2.mode & ConcurrentMode) !== NoMode) {
                error("Internal React error: Expected static flag was missing. Please notify the React team.");
              }
            }
            didScheduleRenderPhaseUpdate = false;
            if (didRenderTooFewHooks) {
              throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
            }
            return children;
          }
          function checkDidRenderIdHook() {
            var didRenderIdHook = localIdCounter !== 0;
            localIdCounter = 0;
            return didRenderIdHook;
          }
          function bailoutHooks(current2, workInProgress2, lanes) {
            workInProgress2.updateQueue = current2.updateQueue;
            if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
              workInProgress2.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
            } else {
              workInProgress2.flags &= ~(Passive | Update);
            }
            current2.lanes = removeLanes(current2.lanes, lanes);
          }
          function resetHooksAfterThrow() {
            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
            if (didScheduleRenderPhaseUpdate) {
              var hook = currentlyRenderingFiber$1.memoizedState;
              while (hook !== null) {
                var queue = hook.queue;
                if (queue !== null) {
                  queue.pending = null;
                }
                hook = hook.next;
              }
              didScheduleRenderPhaseUpdate = false;
            }
            renderLanes = NoLanes;
            currentlyRenderingFiber$1 = null;
            currentHook = null;
            workInProgressHook = null;
            {
              hookTypesDev = null;
              hookTypesUpdateIndexDev = -1;
              currentHookNameInDev = null;
              isUpdatingOpaqueValueInRenderPhase = false;
            }
            didScheduleRenderPhaseUpdateDuringThisPass = false;
            localIdCounter = 0;
          }
          function mountWorkInProgressHook() {
            var hook = {
              memoizedState: null,
              baseState: null,
              baseQueue: null,
              queue: null,
              next: null
            };
            if (workInProgressHook === null) {
              currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
            } else {
              workInProgressHook = workInProgressHook.next = hook;
            }
            return workInProgressHook;
          }
          function updateWorkInProgressHook() {
            var nextCurrentHook;
            if (currentHook === null) {
              var current2 = currentlyRenderingFiber$1.alternate;
              if (current2 !== null) {
                nextCurrentHook = current2.memoizedState;
              } else {
                nextCurrentHook = null;
              }
            } else {
              nextCurrentHook = currentHook.next;
            }
            var nextWorkInProgressHook;
            if (workInProgressHook === null) {
              nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
            } else {
              nextWorkInProgressHook = workInProgressHook.next;
            }
            if (nextWorkInProgressHook !== null) {
              workInProgressHook = nextWorkInProgressHook;
              nextWorkInProgressHook = workInProgressHook.next;
              currentHook = nextCurrentHook;
            } else {
              if (nextCurrentHook === null) {
                throw new Error("Rendered more hooks than during the previous render.");
              }
              currentHook = nextCurrentHook;
              var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
              };
              if (workInProgressHook === null) {
                currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
              } else {
                workInProgressHook = workInProgressHook.next = newHook;
              }
            }
            return workInProgressHook;
          }
          function createFunctionComponentUpdateQueue() {
            return {
              lastEffect: null,
              stores: null
            };
          }
          function basicStateReducer(state, action) {
            return typeof action === "function" ? action(state) : action;
          }
          function mountReducer(reducer, initialArg, init) {
            var hook = mountWorkInProgressHook();
            var initialState;
            if (init !== void 0) {
              initialState = init(initialArg);
            } else {
              initialState = initialArg;
            }
            hook.memoizedState = hook.baseState = initialState;
            var queue = {
              pending: null,
              interleaved: null,
              lanes: NoLanes,
              dispatch: null,
              lastRenderedReducer: reducer,
              lastRenderedState: initialState
            };
            hook.queue = queue;
            var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
            return [hook.memoizedState, dispatch];
          }
          function updateReducer(reducer, initialArg, init) {
            var hook = updateWorkInProgressHook();
            var queue = hook.queue;
            if (queue === null) {
              throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
            }
            queue.lastRenderedReducer = reducer;
            var current2 = currentHook;
            var baseQueue = current2.baseQueue;
            var pendingQueue = queue.pending;
            if (pendingQueue !== null) {
              if (baseQueue !== null) {
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
              }
              {
                if (current2.baseQueue !== baseQueue) {
                  error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
                }
              }
              current2.baseQueue = baseQueue = pendingQueue;
              queue.pending = null;
            }
            if (baseQueue !== null) {
              var first = baseQueue.next;
              var newState = current2.baseState;
              var newBaseState = null;
              var newBaseQueueFirst = null;
              var newBaseQueueLast = null;
              var update = first;
              do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                  var clone = {
                    lane: updateLane,
                    action: update.action,
                    hasEagerState: update.hasEagerState,
                    eagerState: update.eagerState,
                    next: null
                  };
                  if (newBaseQueueLast === null) {
                    newBaseQueueFirst = newBaseQueueLast = clone;
                    newBaseState = newState;
                  } else {
                    newBaseQueueLast = newBaseQueueLast.next = clone;
                  }
                  currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                  markSkippedUpdateLanes(updateLane);
                } else {
                  if (newBaseQueueLast !== null) {
                    var _clone = {
                      lane: NoLane,
                      action: update.action,
                      hasEagerState: update.hasEagerState,
                      eagerState: update.eagerState,
                      next: null
                    };
                    newBaseQueueLast = newBaseQueueLast.next = _clone;
                  }
                  if (update.hasEagerState) {
                    newState = update.eagerState;
                  } else {
                    var action = update.action;
                    newState = reducer(newState, action);
                  }
                }
                update = update.next;
              } while (update !== null && update !== first);
              if (newBaseQueueLast === null) {
                newBaseState = newState;
              } else {
                newBaseQueueLast.next = newBaseQueueFirst;
              }
              if (!objectIs(newState, hook.memoizedState)) {
                markWorkInProgressReceivedUpdate();
              }
              hook.memoizedState = newState;
              hook.baseState = newBaseState;
              hook.baseQueue = newBaseQueueLast;
              queue.lastRenderedState = newState;
            }
            var lastInterleaved = queue.interleaved;
            if (lastInterleaved !== null) {
              var interleaved = lastInterleaved;
              do {
                var interleavedLane = interleaved.lane;
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                markSkippedUpdateLanes(interleavedLane);
                interleaved = interleaved.next;
              } while (interleaved !== lastInterleaved);
            } else if (baseQueue === null) {
              queue.lanes = NoLanes;
            }
            var dispatch = queue.dispatch;
            return [hook.memoizedState, dispatch];
          }
          function rerenderReducer(reducer, initialArg, init) {
            var hook = updateWorkInProgressHook();
            var queue = hook.queue;
            if (queue === null) {
              throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
            }
            queue.lastRenderedReducer = reducer;
            var dispatch = queue.dispatch;
            var lastRenderPhaseUpdate = queue.pending;
            var newState = hook.memoizedState;
            if (lastRenderPhaseUpdate !== null) {
              queue.pending = null;
              var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              var update = firstRenderPhaseUpdate;
              do {
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
              } while (update !== firstRenderPhaseUpdate);
              if (!objectIs(newState, hook.memoizedState)) {
                markWorkInProgressReceivedUpdate();
              }
              hook.memoizedState = newState;
              if (hook.baseQueue === null) {
                hook.baseState = newState;
              }
              queue.lastRenderedState = newState;
            }
            return [newState, dispatch];
          }
          function mountMutableSource(source, getSnapshot, subscribe) {
            {
              return void 0;
            }
          }
          function updateMutableSource(source, getSnapshot, subscribe) {
            {
              return void 0;
            }
          }
          function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
            var fiber = currentlyRenderingFiber$1;
            var hook = mountWorkInProgressHook();
            var nextSnapshot;
            var isHydrating2 = getIsHydrating();
            if (isHydrating2) {
              if (getServerSnapshot === void 0) {
                throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
              }
              nextSnapshot = getServerSnapshot();
              {
                if (!didWarnUncachedGetSnapshot) {
                  if (nextSnapshot !== getServerSnapshot()) {
                    error("The result of getServerSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                  }
                }
              }
            } else {
              nextSnapshot = getSnapshot();
              {
                if (!didWarnUncachedGetSnapshot) {
                  var cachedSnapshot = getSnapshot();
                  if (!objectIs(nextSnapshot, cachedSnapshot)) {
                    error("The result of getSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                  }
                }
              }
              var root2 = getWorkInProgressRoot();
              if (root2 === null) {
                throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
              }
              if (!includesBlockingLane(root2, renderLanes)) {
                pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
              }
            }
            hook.memoizedState = nextSnapshot;
            var inst = {
              value: nextSnapshot,
              getSnapshot
            };
            hook.queue = inst;
            mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
            return nextSnapshot;
          }
          function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
            var fiber = currentlyRenderingFiber$1;
            var hook = updateWorkInProgressHook();
            var nextSnapshot = getSnapshot();
            {
              if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                  error("The result of getSnapshot should be cached to avoid an infinite loop");
                  didWarnUncachedGetSnapshot = true;
                }
              }
            }
            var prevSnapshot = hook.memoizedState;
            var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
            if (snapshotChanged) {
              hook.memoizedState = nextSnapshot;
              markWorkInProgressReceivedUpdate();
            }
            var inst = hook.queue;
            updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
            if (inst.getSnapshot !== getSnapshot || snapshotChanged || workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
              fiber.flags |= Passive;
              pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
              var root2 = getWorkInProgressRoot();
              if (root2 === null) {
                throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
              }
              if (!includesBlockingLane(root2, renderLanes)) {
                pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
              }
            }
            return nextSnapshot;
          }
          function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
            fiber.flags |= StoreConsistency;
            var check = {
              getSnapshot,
              value: renderedSnapshot
            };
            var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
            if (componentUpdateQueue === null) {
              componentUpdateQueue = createFunctionComponentUpdateQueue();
              currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
              componentUpdateQueue.stores = [check];
            } else {
              var stores = componentUpdateQueue.stores;
              if (stores === null) {
                componentUpdateQueue.stores = [check];
              } else {
                stores.push(check);
              }
            }
          }
          function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
            inst.value = nextSnapshot;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceStoreRerender(fiber);
            }
          }
          function subscribeToStore(fiber, inst, subscribe) {
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceStoreRerender(fiber);
              }
            };
            return subscribe(handleStoreChange);
          }
          function checkIfSnapshotChanged(inst) {
            var latestGetSnapshot = inst.getSnapshot;
            var prevValue = inst.value;
            try {
              var nextValue = latestGetSnapshot();
              return !objectIs(prevValue, nextValue);
            } catch (error2) {
              return true;
            }
          }
          function forceStoreRerender(fiber) {
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
            }
          }
          function mountState(initialState) {
            var hook = mountWorkInProgressHook();
            if (typeof initialState === "function") {
              initialState = initialState();
            }
            hook.memoizedState = hook.baseState = initialState;
            var queue = {
              pending: null,
              interleaved: null,
              lanes: NoLanes,
              dispatch: null,
              lastRenderedReducer: basicStateReducer,
              lastRenderedState: initialState
            };
            hook.queue = queue;
            var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
            return [hook.memoizedState, dispatch];
          }
          function updateState(initialState) {
            return updateReducer(basicStateReducer);
          }
          function rerenderState(initialState) {
            return rerenderReducer(basicStateReducer);
          }
          function pushEffect(tag, create, destroy, deps) {
            var effect = {
              tag,
              create,
              destroy,
              deps,
              next: null
            };
            var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
            if (componentUpdateQueue === null) {
              componentUpdateQueue = createFunctionComponentUpdateQueue();
              currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var lastEffect = componentUpdateQueue.lastEffect;
              if (lastEffect === null) {
                componentUpdateQueue.lastEffect = effect.next = effect;
              } else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
              }
            }
            return effect;
          }
          function mountRef(initialValue) {
            var hook = mountWorkInProgressHook();
            {
              var _ref2 = {
                current: initialValue
              };
              hook.memoizedState = _ref2;
              return _ref2;
            }
          }
          function updateRef(initialValue) {
            var hook = updateWorkInProgressHook();
            return hook.memoizedState;
          }
          function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            currentlyRenderingFiber$1.flags |= fiberFlags;
            hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
          }
          function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var destroy = void 0;
            if (currentHook !== null) {
              var prevEffect = currentHook.memoizedState;
              destroy = prevEffect.destroy;
              if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                  return;
                }
              }
            }
            currentlyRenderingFiber$1.flags |= fiberFlags;
            hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
          }
          function mountEffect(create, deps) {
            if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
              return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
            } else {
              return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
            }
          }
          function updateEffect(create, deps) {
            return updateEffectImpl(Passive, Passive$1, create, deps);
          }
          function mountInsertionEffect(create, deps) {
            return mountEffectImpl(Update, Insertion, create, deps);
          }
          function updateInsertionEffect(create, deps) {
            return updateEffectImpl(Update, Insertion, create, deps);
          }
          function mountLayoutEffect(create, deps) {
            var fiberFlags = Update;
            {
              fiberFlags |= LayoutStatic;
            }
            if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
              fiberFlags |= MountLayoutDev;
            }
            return mountEffectImpl(fiberFlags, Layout, create, deps);
          }
          function updateLayoutEffect(create, deps) {
            return updateEffectImpl(Update, Layout, create, deps);
          }
          function imperativeHandleEffect(create, ref) {
            if (typeof ref === "function") {
              var refCallback = ref;
              var _inst = create();
              refCallback(_inst);
              return function() {
                refCallback(null);
              };
            } else if (ref !== null && ref !== void 0) {
              var refObject = ref;
              {
                if (!refObject.hasOwnProperty("current")) {
                  error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
                }
              }
              var _inst2 = create();
              refObject.current = _inst2;
              return function() {
                refObject.current = null;
              };
            }
          }
          function mountImperativeHandle(ref, create, deps) {
            {
              if (typeof create !== "function") {
                error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
              }
            }
            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
            var fiberFlags = Update;
            {
              fiberFlags |= LayoutStatic;
            }
            if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
              fiberFlags |= MountLayoutDev;
            }
            return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
          }
          function updateImperativeHandle(ref, create, deps) {
            {
              if (typeof create !== "function") {
                error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
              }
            }
            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
            return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
          }
          function mountDebugValue(value, formatterFn) {
          }
          var updateDebugValue = mountDebugValue;
          function mountCallback(callback, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            hook.memoizedState = [callback, nextDeps];
            return callback;
          }
          function updateCallback(callback, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var prevState = hook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
            hook.memoizedState = [callback, nextDeps];
            return callback;
          }
          function mountMemo(nextCreate, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var nextValue = nextCreate();
            hook.memoizedState = [nextValue, nextDeps];
            return nextValue;
          }
          function updateMemo(nextCreate, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var prevState = hook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
            var nextValue = nextCreate();
            hook.memoizedState = [nextValue, nextDeps];
            return nextValue;
          }
          function mountDeferredValue(value) {
            var hook = mountWorkInProgressHook();
            hook.memoizedState = value;
            return value;
          }
          function updateDeferredValue(value) {
            var hook = updateWorkInProgressHook();
            var resolvedCurrentHook = currentHook;
            var prevValue = resolvedCurrentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
          }
          function rerenderDeferredValue(value) {
            var hook = updateWorkInProgressHook();
            if (currentHook === null) {
              hook.memoizedState = value;
              return value;
            } else {
              var prevValue = currentHook.memoizedState;
              return updateDeferredValueImpl(hook, prevValue, value);
            }
          }
          function updateDeferredValueImpl(hook, prevValue, value) {
            var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
            if (shouldDeferValue) {
              if (!objectIs(value, prevValue)) {
                var deferredLane = claimNextTransitionLane();
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                markSkippedUpdateLanes(deferredLane);
                hook.baseState = true;
              }
              return prevValue;
            } else {
              if (hook.baseState) {
                hook.baseState = false;
                markWorkInProgressReceivedUpdate();
              }
              hook.memoizedState = value;
              return value;
            }
          }
          function startTransition(setPending, callback, options2) {
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
            setPending(true);
            var prevTransition = ReactCurrentBatchConfig$2.transition;
            ReactCurrentBatchConfig$2.transition = {};
            var currentTransition = ReactCurrentBatchConfig$2.transition;
            {
              ReactCurrentBatchConfig$2.transition._updatedFibers = /* @__PURE__ */ new Set();
            }
            try {
              setPending(false);
              callback();
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig$2.transition = prevTransition;
              {
                if (prevTransition === null && currentTransition._updatedFibers) {
                  var updatedFibersCount = currentTransition._updatedFibers.size;
                  if (updatedFibersCount > 10) {
                    warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                  }
                  currentTransition._updatedFibers.clear();
                }
              }
            }
          }
          function mountTransition() {
            var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1];
            var start = startTransition.bind(null, setPending);
            var hook = mountWorkInProgressHook();
            hook.memoizedState = start;
            return [isPending, start];
          }
          function updateTransition() {
            var _updateState = updateState(), isPending = _updateState[0];
            var hook = updateWorkInProgressHook();
            var start = hook.memoizedState;
            return [isPending, start];
          }
          function rerenderTransition() {
            var _rerenderState = rerenderState(), isPending = _rerenderState[0];
            var hook = updateWorkInProgressHook();
            var start = hook.memoizedState;
            return [isPending, start];
          }
          var isUpdatingOpaqueValueInRenderPhase = false;
          function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
            {
              return isUpdatingOpaqueValueInRenderPhase;
            }
          }
          function mountId() {
            var hook = mountWorkInProgressHook();
            var root2 = getWorkInProgressRoot();
            var identifierPrefix = root2.identifierPrefix;
            var id2;
            if (getIsHydrating()) {
              var treeId = getTreeId();
              id2 = ":" + identifierPrefix + "R" + treeId;
              var localId = localIdCounter++;
              if (localId > 0) {
                id2 += "H" + localId.toString(32);
              }
              id2 += ":";
            } else {
              var globalClientId = globalClientIdCounter++;
              id2 = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
            }
            hook.memoizedState = id2;
            return id2;
          }
          function updateId() {
            var hook = updateWorkInProgressHook();
            var id2 = hook.memoizedState;
            return id2;
          }
          function dispatchReducerAction(fiber, queue, action) {
            {
              if (typeof arguments[3] === "function") {
                error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
              }
            }
            var lane = requestUpdateLane(fiber);
            var update = {
              lane,
              action,
              hasEagerState: false,
              eagerState: null,
              next: null
            };
            if (isRenderPhaseUpdate(fiber)) {
              enqueueRenderPhaseUpdate(queue, update);
            } else {
              var root2 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
              if (root2 !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                entangleTransitionUpdate(root2, queue, lane);
              }
            }
            markUpdateInDevTools(fiber, lane);
          }
          function dispatchSetState(fiber, queue, action) {
            {
              if (typeof arguments[3] === "function") {
                error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
              }
            }
            var lane = requestUpdateLane(fiber);
            var update = {
              lane,
              action,
              hasEagerState: false,
              eagerState: null,
              next: null
            };
            if (isRenderPhaseUpdate(fiber)) {
              enqueueRenderPhaseUpdate(queue, update);
            } else {
              var alternate = fiber.alternate;
              if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                  var prevDispatcher;
                  {
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                  }
                  try {
                    var currentState = queue.lastRenderedState;
                    var eagerState = lastRenderedReducer(currentState, action);
                    update.hasEagerState = true;
                    update.eagerState = eagerState;
                    if (objectIs(eagerState, currentState)) {
                      enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                      return;
                    }
                  } catch (error2) {
                  } finally {
                    {
                      ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                  }
                }
              }
              var root2 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
              if (root2 !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                entangleTransitionUpdate(root2, queue, lane);
              }
            }
            markUpdateInDevTools(fiber, lane);
          }
          function isRenderPhaseUpdate(fiber) {
            var alternate = fiber.alternate;
            return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
          }
          function enqueueRenderPhaseUpdate(queue, update) {
            didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
            var pending = queue.pending;
            if (pending === null) {
              update.next = update;
            } else {
              update.next = pending.next;
              pending.next = update;
            }
            queue.pending = update;
          }
          function entangleTransitionUpdate(root2, queue, lane) {
            if (isTransitionLane(lane)) {
              var queueLanes = queue.lanes;
              queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
              var newQueueLanes = mergeLanes(queueLanes, lane);
              queue.lanes = newQueueLanes;
              markRootEntangled(root2, newQueueLanes);
            }
          }
          function markUpdateInDevTools(fiber, lane, action) {
            {
              markStateUpdateScheduled(fiber, lane);
            }
          }
          var ContextOnlyDispatcher = {
            readContext,
            useCallback: throwInvalidHookError,
            useContext: throwInvalidHookError,
            useEffect: throwInvalidHookError,
            useImperativeHandle: throwInvalidHookError,
            useInsertionEffect: throwInvalidHookError,
            useLayoutEffect: throwInvalidHookError,
            useMemo: throwInvalidHookError,
            useReducer: throwInvalidHookError,
            useRef: throwInvalidHookError,
            useState: throwInvalidHookError,
            useDebugValue: throwInvalidHookError,
            useDeferredValue: throwInvalidHookError,
            useTransition: throwInvalidHookError,
            useMutableSource: throwInvalidHookError,
            useSyncExternalStore: throwInvalidHookError,
            useId: throwInvalidHookError,
            unstable_isNewReconciler: enableNewReconciler
          };
          var HooksDispatcherOnMountInDEV = null;
          var HooksDispatcherOnMountWithHookTypesInDEV = null;
          var HooksDispatcherOnUpdateInDEV = null;
          var HooksDispatcherOnRerenderInDEV = null;
          var InvalidNestedHooksDispatcherOnMountInDEV = null;
          var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
          var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
          {
            var warnInvalidContextAccess = function() {
              error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            };
            var warnInvalidHookAccess = function() {
              error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            };
            HooksDispatcherOnMountInDEV = {
              readContext: function(context) {
                return readContext(context);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountCallback(callback, deps);
              },
              useContext: function(context) {
                currentHookNameInDev = "useContext";
                mountHookTypesDev();
                return readContext(context);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountImperativeHandle(ref, create, deps);
              },
              useInsertionEffect: function(create, deps) {
                currentHookNameInDev = "useInsertionEffect";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountInsertionEffect(create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                mountHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                mountHookTypesDev();
                return mountDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                mountHookTypesDev();
                return mountDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                mountHookTypesDev();
                return mountTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                mountHookTypesDev();
                return mountMutableSource();
              },
              useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                currentHookNameInDev = "useSyncExternalStore";
                mountHookTypesDev();
                return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
              },
              useId: function() {
                currentHookNameInDev = "useId";
                mountHookTypesDev();
                return mountId();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            HooksDispatcherOnMountWithHookTypesInDEV = {
              readContext: function(context) {
                return readContext(context);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return mountCallback(callback, deps);
              },
              useContext: function(context) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return mountImperativeHandle(ref, create, deps);
              },
              useInsertionEffect: function(create, deps) {
                currentHookNameInDev = "useInsertionEffect";
                updateHookTypesDev();
                return mountInsertionEffect(create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return mountDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return mountDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return mountTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                updateHookTypesDev();
                return mountMutableSource();
              },
              useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                currentHookNameInDev = "useSyncExternalStore";
                updateHookTypesDev();
                return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
              },
              useId: function() {
                currentHookNameInDev = "useId";
                updateHookTypesDev();
                return mountId();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            HooksDispatcherOnUpdateInDEV = {
              readContext: function(context) {
                return readContext(context);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useInsertionEffect: function(create, deps) {
                currentHookNameInDev = "useInsertionEffect";
                updateHookTypesDev();
                return updateInsertionEffect(create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return updateDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return updateTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                updateHookTypesDev();
                return updateMutableSource();
              },
              useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                currentHookNameInDev = "useSyncExternalStore";
                updateHookTypesDev();
                return updateSyncExternalStore(subscribe, getSnapshot);
              },
              useId: function() {
                currentHookNameInDev = "useId";
                updateHookTypesDev();
                return updateId();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            HooksDispatcherOnRerenderInDEV = {
              readContext: function(context) {
                return readContext(context);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useInsertionEffect: function(create, deps) {
                currentHookNameInDev = "useInsertionEffect";
                updateHookTypesDev();
                return updateInsertionEffect(create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                try {
                  return rerenderReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                try {
                  return rerenderState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return rerenderDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return rerenderTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                updateHookTypesDev();
                return updateMutableSource();
              },
              useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                currentHookNameInDev = "useSyncExternalStore";
                updateHookTypesDev();
                return updateSyncExternalStore(subscribe, getSnapshot);
              },
              useId: function() {
                currentHookNameInDev = "useId";
                updateHookTypesDev();
                return updateId();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            InvalidNestedHooksDispatcherOnMountInDEV = {
              readContext: function(context) {
                warnInvalidContextAccess();
                return readContext(context);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountCallback(callback, deps);
              },
              useContext: function(context) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return readContext(context);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountImperativeHandle(ref, create, deps);
              },
              useInsertionEffect: function(create, deps) {
                currentHookNameInDev = "useInsertionEffect";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountInsertionEffect(create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountMutableSource();
              },
              useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                currentHookNameInDev = "useSyncExternalStore";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
              },
              useId: function() {
                currentHookNameInDev = "useId";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountId();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            InvalidNestedHooksDispatcherOnUpdateInDEV = {
              readContext: function(context) {
                warnInvalidContextAccess();
                return readContext(context);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return readContext(context);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useInsertionEffect: function(create, deps) {
                currentHookNameInDev = "useInsertionEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateInsertionEffect(create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateMutableSource();
              },
              useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                currentHookNameInDev = "useSyncExternalStore";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateSyncExternalStore(subscribe, getSnapshot);
              },
              useId: function() {
                currentHookNameInDev = "useId";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateId();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
            InvalidNestedHooksDispatcherOnRerenderInDEV = {
              readContext: function(context) {
                warnInvalidContextAccess();
                return readContext(context);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return readContext(context);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useInsertionEffect: function(create, deps) {
                currentHookNameInDev = "useInsertionEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateInsertionEffect(create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return rerenderReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateRef();
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return rerenderState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDebugValue();
              },
              useDeferredValue: function(value) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return rerenderDeferredValue(value);
              },
              useTransition: function() {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return rerenderTransition();
              },
              useMutableSource: function(source, getSnapshot, subscribe) {
                currentHookNameInDev = "useMutableSource";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateMutableSource();
              },
              useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                currentHookNameInDev = "useSyncExternalStore";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateSyncExternalStore(subscribe, getSnapshot);
              },
              useId: function() {
                currentHookNameInDev = "useId";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateId();
              },
              unstable_isNewReconciler: enableNewReconciler
            };
          }
          var now$1 = Scheduler.unstable_now;
          var commitTime = 0;
          var layoutEffectStartTime = -1;
          var profilerStartTime = -1;
          var passiveEffectStartTime = -1;
          var currentUpdateIsNested = false;
          var nestedUpdateScheduled = false;
          function isCurrentUpdateNested() {
            return currentUpdateIsNested;
          }
          function markNestedUpdateScheduled() {
            {
              nestedUpdateScheduled = true;
            }
          }
          function resetNestedUpdateFlag() {
            {
              currentUpdateIsNested = false;
              nestedUpdateScheduled = false;
            }
          }
          function syncNestedUpdateFlag() {
            {
              currentUpdateIsNested = nestedUpdateScheduled;
              nestedUpdateScheduled = false;
            }
          }
          function getCommitTime() {
            return commitTime;
          }
          function recordCommitTime() {
            commitTime = now$1();
          }
          function startProfilerTimer(fiber) {
            profilerStartTime = now$1();
            if (fiber.actualStartTime < 0) {
              fiber.actualStartTime = now$1();
            }
          }
          function stopProfilerTimerIfRunning(fiber) {
            profilerStartTime = -1;
          }
          function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
            if (profilerStartTime >= 0) {
              var elapsedTime = now$1() - profilerStartTime;
              fiber.actualDuration += elapsedTime;
              if (overrideBaseTime) {
                fiber.selfBaseDuration = elapsedTime;
              }
              profilerStartTime = -1;
            }
          }
          function recordLayoutEffectDuration(fiber) {
            if (layoutEffectStartTime >= 0) {
              var elapsedTime = now$1() - layoutEffectStartTime;
              layoutEffectStartTime = -1;
              var parentFiber = fiber.return;
              while (parentFiber !== null) {
                switch (parentFiber.tag) {
                  case HostRoot:
                    var root2 = parentFiber.stateNode;
                    root2.effectDuration += elapsedTime;
                    return;
                  case Profiler:
                    var parentStateNode = parentFiber.stateNode;
                    parentStateNode.effectDuration += elapsedTime;
                    return;
                }
                parentFiber = parentFiber.return;
              }
            }
          }
          function recordPassiveEffectDuration(fiber) {
            if (passiveEffectStartTime >= 0) {
              var elapsedTime = now$1() - passiveEffectStartTime;
              passiveEffectStartTime = -1;
              var parentFiber = fiber.return;
              while (parentFiber !== null) {
                switch (parentFiber.tag) {
                  case HostRoot:
                    var root2 = parentFiber.stateNode;
                    if (root2 !== null) {
                      root2.passiveEffectDuration += elapsedTime;
                    }
                    return;
                  case Profiler:
                    var parentStateNode = parentFiber.stateNode;
                    if (parentStateNode !== null) {
                      parentStateNode.passiveEffectDuration += elapsedTime;
                    }
                    return;
                }
                parentFiber = parentFiber.return;
              }
            }
          }
          function startLayoutEffectTimer() {
            layoutEffectStartTime = now$1();
          }
          function startPassiveEffectTimer() {
            passiveEffectStartTime = now$1();
          }
          function transferActualDuration(fiber) {
            var child = fiber.child;
            while (child) {
              fiber.actualDuration += child.actualDuration;
              child = child.sibling;
            }
          }
          function createCapturedValueAtFiber(value, source) {
            return {
              value,
              source,
              stack: getStackByFiberInDevAndProd(source),
              digest: null
            };
          }
          function createCapturedValue(value, digest, stack) {
            return {
              value,
              source: null,
              stack: stack != null ? stack : null,
              digest: digest != null ? digest : null
            };
          }
          function showErrorDialog(boundary, errorInfo) {
            return true;
          }
          function logCapturedError(boundary, errorInfo) {
            try {
              var logError = showErrorDialog(boundary, errorInfo);
              if (logError === false) {
                return;
              }
              var error2 = errorInfo.value;
              if (true) {
                var source = errorInfo.source;
                var stack = errorInfo.stack;
                var componentStack = stack !== null ? stack : "";
                if (error2 != null && error2._suppressLogging) {
                  if (boundary.tag === ClassComponent) {
                    return;
                  }
                  console["error"](error2);
                }
                var componentName = source ? getComponentNameFromFiber(source) : null;
                var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
                var errorBoundaryMessage;
                if (boundary.tag === HostRoot) {
                  errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
                } else {
                  var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                  errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
                }
                var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
                console["error"](combinedMessage);
              } else {
                console["error"](error2);
              }
            } catch (e27) {
              setTimeout(function() {
                throw e27;
              });
            }
          }
          var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
          function createRootErrorUpdate(fiber, errorInfo, lane) {
            var update = createUpdate(NoTimestamp, lane);
            update.tag = CaptureUpdate;
            update.payload = {
              element: null
            };
            var error2 = errorInfo.value;
            update.callback = function() {
              onUncaughtError(error2);
              logCapturedError(fiber, errorInfo);
            };
            return update;
          }
          function createClassErrorUpdate(fiber, errorInfo, lane) {
            var update = createUpdate(NoTimestamp, lane);
            update.tag = CaptureUpdate;
            var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
            if (typeof getDerivedStateFromError === "function") {
              var error$1 = errorInfo.value;
              update.payload = function() {
                return getDerivedStateFromError(error$1);
              };
              update.callback = function() {
                {
                  markFailedErrorBoundaryForHotReloading(fiber);
                }
                logCapturedError(fiber, errorInfo);
              };
            }
            var inst = fiber.stateNode;
            if (inst !== null && typeof inst.componentDidCatch === "function") {
              update.callback = function callback() {
                {
                  markFailedErrorBoundaryForHotReloading(fiber);
                }
                logCapturedError(fiber, errorInfo);
                if (typeof getDerivedStateFromError !== "function") {
                  markLegacyErrorBoundaryAsFailed(this);
                }
                var error$12 = errorInfo.value;
                var stack = errorInfo.stack;
                this.componentDidCatch(error$12, {
                  componentStack: stack !== null ? stack : ""
                });
                {
                  if (typeof getDerivedStateFromError !== "function") {
                    if (!includesSomeLane(fiber.lanes, SyncLane)) {
                      error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
                    }
                  }
                }
              };
            }
            return update;
          }
          function attachPingListener(root2, wakeable, lanes) {
            var pingCache = root2.pingCache;
            var threadIDs;
            if (pingCache === null) {
              pingCache = root2.pingCache = new PossiblyWeakMap$1();
              threadIDs = /* @__PURE__ */ new Set();
              pingCache.set(wakeable, threadIDs);
            } else {
              threadIDs = pingCache.get(wakeable);
              if (threadIDs === void 0) {
                threadIDs = /* @__PURE__ */ new Set();
                pingCache.set(wakeable, threadIDs);
              }
            }
            if (!threadIDs.has(lanes)) {
              threadIDs.add(lanes);
              var ping = pingSuspendedRoot.bind(null, root2, wakeable, lanes);
              {
                if (isDevToolsPresent) {
                  restorePendingUpdaters(root2, lanes);
                }
              }
              wakeable.then(ping, ping);
            }
          }
          function attachRetryListener(suspenseBoundary, root2, wakeable, lanes) {
            var wakeables = suspenseBoundary.updateQueue;
            if (wakeables === null) {
              var updateQueue = /* @__PURE__ */ new Set();
              updateQueue.add(wakeable);
              suspenseBoundary.updateQueue = updateQueue;
            } else {
              wakeables.add(wakeable);
            }
          }
          function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
            var tag = sourceFiber.tag;
            if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
              var currentSource = sourceFiber.alternate;
              if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
              } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
              }
            }
          }
          function getNearestSuspenseBoundaryToCapture(returnFiber) {
            var node = returnFiber;
            do {
              if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {
                return node;
              }
              node = node.return;
            } while (node !== null);
            return null;
          }
          function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes) {
            if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
              if (suspenseBoundary === returnFiber) {
                suspenseBoundary.flags |= ShouldCapture;
              } else {
                suspenseBoundary.flags |= DidCapture;
                sourceFiber.flags |= ForceUpdateForLegacySuspense;
                sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                if (sourceFiber.tag === ClassComponent) {
                  var currentSourceFiber = sourceFiber.alternate;
                  if (currentSourceFiber === null) {
                    sourceFiber.tag = IncompleteClassComponent;
                  } else {
                    var update = createUpdate(NoTimestamp, SyncLane);
                    update.tag = ForceUpdate;
                    enqueueUpdate(sourceFiber, update, SyncLane);
                  }
                }
                sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
              }
              return suspenseBoundary;
            }
            suspenseBoundary.flags |= ShouldCapture;
            suspenseBoundary.lanes = rootRenderLanes;
            return suspenseBoundary;
          }
          function throwException(root2, returnFiber, sourceFiber, value, rootRenderLanes) {
            sourceFiber.flags |= Incomplete;
            {
              if (isDevToolsPresent) {
                restorePendingUpdaters(root2, rootRenderLanes);
              }
            }
            if (value !== null && typeof value === "object" && typeof value.then === "function") {
              var wakeable = value;
              resetSuspendedComponent(sourceFiber);
              {
                if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
                  markDidThrowWhileHydratingDEV();
                }
              }
              var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
              if (suspenseBoundary !== null) {
                suspenseBoundary.flags &= ~ForceClientRender;
                markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes);
                if (suspenseBoundary.mode & ConcurrentMode) {
                  attachPingListener(root2, wakeable, rootRenderLanes);
                }
                attachRetryListener(suspenseBoundary, root2, wakeable);
                return;
              } else {
                if (!includesSyncLane(rootRenderLanes)) {
                  attachPingListener(root2, wakeable, rootRenderLanes);
                  renderDidSuspendDelayIfPossible();
                  return;
                }
                var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
                value = uncaughtSuspenseError;
              }
            } else {
              if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
                markDidThrowWhileHydratingDEV();
                var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
                if (_suspenseBoundary !== null) {
                  if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {
                    _suspenseBoundary.flags |= ForceClientRender;
                  }
                  markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes);
                  queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                  return;
                }
              }
            }
            value = createCapturedValueAtFiber(value, sourceFiber);
            renderDidError(value);
            var workInProgress2 = returnFiber;
            do {
              switch (workInProgress2.tag) {
                case HostRoot: {
                  var _errorInfo = value;
                  workInProgress2.flags |= ShouldCapture;
                  var lane = pickArbitraryLane(rootRenderLanes);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                  var update = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                  enqueueCapturedUpdate(workInProgress2, update);
                  return;
                }
                case ClassComponent:
                  var errorInfo = value;
                  var ctor = workInProgress2.type;
                  var instance = workInProgress2.stateNode;
                  if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                    workInProgress2.flags |= ShouldCapture;
                    var _lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                    var _update = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                    enqueueCapturedUpdate(workInProgress2, _update);
                    return;
                  }
                  break;
              }
              workInProgress2 = workInProgress2.return;
            } while (workInProgress2 !== null);
          }
          function getSuspendedCache() {
            {
              return null;
            }
          }
          var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
          var didReceiveUpdate = false;
          var didWarnAboutBadClass;
          var didWarnAboutModulePatternComponent;
          var didWarnAboutContextTypeOnFunctionComponent;
          var didWarnAboutGetDerivedStateOnFunctionComponent;
          var didWarnAboutFunctionRefs;
          var didWarnAboutReassigningProps;
          var didWarnAboutRevealOrder;
          var didWarnAboutTailOptions;
          {
            didWarnAboutBadClass = {};
            didWarnAboutModulePatternComponent = {};
            didWarnAboutContextTypeOnFunctionComponent = {};
            didWarnAboutGetDerivedStateOnFunctionComponent = {};
            didWarnAboutFunctionRefs = {};
            didWarnAboutReassigningProps = false;
            didWarnAboutRevealOrder = {};
            didWarnAboutTailOptions = {};
          }
          function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
            if (current2 === null) {
              workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
            } else {
              workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
            }
          }
          function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          }
          function updateForwardRef(current2, workInProgress2, Component, nextProps, renderLanes2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentNameFromType(Component)
                  );
                }
              }
            }
            var render2 = Component.render;
            var ref = workInProgress2.ref;
            var nextChildren;
            var hasId;
            prepareToReadContext(workInProgress2, renderLanes2);
            {
              markComponentRenderStarted(workInProgress2);
            }
            {
              ReactCurrentOwner$1.current = workInProgress2;
              setIsRendering(true);
              nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
              hasId = checkDidRenderIdHook();
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
                  hasId = checkDidRenderIdHook();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              setIsRendering(false);
            }
            {
              markComponentRenderStopped();
            }
            if (current2 !== null && !didReceiveUpdate) {
              bailoutHooks(current2, workInProgress2, renderLanes2);
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            if (getIsHydrating() && hasId) {
              pushMaterializedTreeId(workInProgress2);
            }
            workInProgress2.flags |= PerformedWork;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
            if (current2 === null) {
              var type = Component.type;
              if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === void 0) {
                var resolvedType = type;
                {
                  resolvedType = resolveFunctionForHotReloading(type);
                }
                workInProgress2.tag = SimpleMemoComponent;
                workInProgress2.type = resolvedType;
                {
                  validateFunctionComponentInDev(workInProgress2, type);
                }
                return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, renderLanes2);
              }
              {
                var innerPropTypes = type.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentNameFromType(type)
                  );
                }
              }
              var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
              child.ref = workInProgress2.ref;
              child.return = workInProgress2;
              workInProgress2.child = child;
              return child;
            }
            {
              var _type = Component.type;
              var _innerPropTypes = _type.propTypes;
              if (_innerPropTypes) {
                checkPropTypes(
                  _innerPropTypes,
                  nextProps,
                  "prop",
                  getComponentNameFromType(_type)
                );
              }
            }
            var currentChild = current2.child;
            var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
            if (!hasScheduledUpdateOrContext) {
              var prevProps = currentChild.memoizedProps;
              var compare = Component.compare;
              compare = compare !== null ? compare : shallowEqual;
              if (compare(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              }
            }
            workInProgress2.flags |= PerformedWork;
            var newChild = createWorkInProgress(currentChild, nextProps);
            newChild.ref = workInProgress2.ref;
            newChild.return = workInProgress2;
            workInProgress2.child = newChild;
            return newChild;
          }
          function updateSimpleMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var outerMemoType = workInProgress2.elementType;
                if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                  var lazyComponent = outerMemoType;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    outerMemoType = init(payload);
                  } catch (x2) {
                    outerMemoType = null;
                  }
                  var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(
                      outerPropTypes,
                      nextProps,
                      "prop",
                      getComponentNameFromType(outerMemoType)
                    );
                  }
                }
              }
            }
            if (current2 !== null) {
              var prevProps = current2.memoizedProps;
              if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && workInProgress2.type === current2.type) {
                didReceiveUpdate = false;
                workInProgress2.pendingProps = nextProps = prevProps;
                if (!checkScheduledUpdateOrContext(current2, renderLanes2)) {
                  workInProgress2.lanes = current2.lanes;
                  return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                  didReceiveUpdate = true;
                }
              }
            }
            return updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2);
          }
          function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            var prevState = current2 !== null ? current2.memoizedState : null;
            if (nextProps.mode === "hidden" || enableLegacyHidden) {
              if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                var nextState = {
                  baseLanes: NoLanes,
                  cachePool: null,
                  transitions: null
                };
                workInProgress2.memoizedState = nextState;
                pushRenderLanes(workInProgress2, renderLanes2);
              } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
                var spawnedCachePool = null;
                var nextBaseLanes;
                if (prevState !== null) {
                  var prevBaseLanes = prevState.baseLanes;
                  nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
                } else {
                  nextBaseLanes = renderLanes2;
                }
                workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                  baseLanes: nextBaseLanes,
                  cachePool: spawnedCachePool,
                  transitions: null
                };
                workInProgress2.memoizedState = _nextState;
                workInProgress2.updateQueue = null;
                pushRenderLanes(workInProgress2, nextBaseLanes);
                return null;
              } else {
                var _nextState2 = {
                  baseLanes: NoLanes,
                  cachePool: null,
                  transitions: null
                };
                workInProgress2.memoizedState = _nextState2;
                var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
                pushRenderLanes(workInProgress2, subtreeRenderLanes2);
              }
            } else {
              var _subtreeRenderLanes;
              if (prevState !== null) {
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
                workInProgress2.memoizedState = null;
              } else {
                _subtreeRenderLanes = renderLanes2;
              }
              pushRenderLanes(workInProgress2, _subtreeRenderLanes);
            }
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateFragment(current2, workInProgress2, renderLanes2) {
            var nextChildren = workInProgress2.pendingProps;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateMode(current2, workInProgress2, renderLanes2) {
            var nextChildren = workInProgress2.pendingProps.children;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateProfiler(current2, workInProgress2, renderLanes2) {
            {
              workInProgress2.flags |= Update;
              {
                var stateNode = workInProgress2.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
              }
            }
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function markRef(current2, workInProgress2) {
            var ref = workInProgress2.ref;
            if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
              workInProgress2.flags |= Ref;
              {
                workInProgress2.flags |= RefStatic;
              }
            }
          }
          function updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentNameFromType(Component)
                  );
                }
              }
            }
            var context;
            {
              var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
              context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            var nextChildren;
            var hasId;
            prepareToReadContext(workInProgress2, renderLanes2);
            {
              markComponentRenderStarted(workInProgress2);
            }
            {
              ReactCurrentOwner$1.current = workInProgress2;
              setIsRendering(true);
              nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
              hasId = checkDidRenderIdHook();
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
                  hasId = checkDidRenderIdHook();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              setIsRendering(false);
            }
            {
              markComponentRenderStopped();
            }
            if (current2 !== null && !didReceiveUpdate) {
              bailoutHooks(current2, workInProgress2, renderLanes2);
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            if (getIsHydrating() && hasId) {
              pushMaterializedTreeId(workInProgress2);
            }
            workInProgress2.flags |= PerformedWork;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateClassComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
            {
              switch (shouldError(workInProgress2)) {
                case false: {
                  var _instance = workInProgress2.stateNode;
                  var ctor = workInProgress2.type;
                  var tempInstance = new ctor(workInProgress2.memoizedProps, _instance.context);
                  var state = tempInstance.state;
                  _instance.updater.enqueueSetState(_instance, state, null);
                  break;
                }
                case true: {
                  workInProgress2.flags |= DidCapture;
                  workInProgress2.flags |= ShouldCapture;
                  var error$1 = new Error("Simulated error coming from DevTools");
                  var lane = pickArbitraryLane(renderLanes2);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                  var update = createClassErrorUpdate(workInProgress2, createCapturedValueAtFiber(error$1, workInProgress2), lane);
                  enqueueCapturedUpdate(workInProgress2, update);
                  break;
                }
              }
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentNameFromType(Component)
                  );
                }
              }
            }
            var hasContext;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            var instance = workInProgress2.stateNode;
            var shouldUpdate;
            if (instance === null) {
              resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2);
              constructClassInstance(workInProgress2, Component, nextProps);
              mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
              shouldUpdate = true;
            } else if (current2 === null) {
              shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            } else {
              shouldUpdate = updateClassInstance(current2, workInProgress2, Component, nextProps, renderLanes2);
            }
            var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2);
            {
              var inst = workInProgress2.stateNode;
              if (shouldUpdate && inst.props !== nextProps) {
                if (!didWarnAboutReassigningProps) {
                  error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress2) || "a component");
                }
                didWarnAboutReassigningProps = true;
              }
            }
            return nextUnitOfWork;
          }
          function finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2) {
            markRef(current2, workInProgress2);
            var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
            if (!shouldUpdate && !didCaptureError) {
              if (hasContext) {
                invalidateContextProvider(workInProgress2, Component, false);
              }
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            var instance = workInProgress2.stateNode;
            ReactCurrentOwner$1.current = workInProgress2;
            var nextChildren;
            if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
              nextChildren = null;
              {
                stopProfilerTimerIfRunning();
              }
            } else {
              {
                markComponentRenderStarted(workInProgress2);
              }
              {
                setIsRendering(true);
                nextChildren = instance.render();
                if (workInProgress2.mode & StrictLegacyMode) {
                  setIsStrictModeForDevtools(true);
                  try {
                    instance.render();
                  } finally {
                    setIsStrictModeForDevtools(false);
                  }
                }
                setIsRendering(false);
              }
              {
                markComponentRenderStopped();
              }
            }
            workInProgress2.flags |= PerformedWork;
            if (current2 !== null && didCaptureError) {
              forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
            } else {
              reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            }
            workInProgress2.memoizedState = instance.state;
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component, true);
            }
            return workInProgress2.child;
          }
          function pushHostRootContext(workInProgress2) {
            var root2 = workInProgress2.stateNode;
            if (root2.pendingContext) {
              pushTopLevelContextObject(workInProgress2, root2.pendingContext, root2.pendingContext !== root2.context);
            } else if (root2.context) {
              pushTopLevelContextObject(workInProgress2, root2.context, false);
            }
            pushHostContainer(workInProgress2, root2.containerInfo);
          }
          function updateHostRoot(current2, workInProgress2, renderLanes2) {
            pushHostRootContext(workInProgress2);
            if (current2 === null) {
              throw new Error("Should have a current fiber. This is a bug in React.");
            }
            var nextProps = workInProgress2.pendingProps;
            var prevState = workInProgress2.memoizedState;
            var prevChildren = prevState.element;
            cloneUpdateQueue(current2, workInProgress2);
            processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
            var nextState = workInProgress2.memoizedState;
            var root2 = workInProgress2.stateNode;
            var nextChildren = nextState.element;
            if (prevState.isDehydrated) {
              var overrideState = {
                element: nextChildren,
                isDehydrated: false,
                cache: nextState.cache,
                pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                transitions: nextState.transitions
              };
              var updateQueue = workInProgress2.updateQueue;
              updateQueue.baseState = overrideState;
              workInProgress2.memoizedState = overrideState;
              if (workInProgress2.flags & ForceClientRender) {
                var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress2);
                return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError);
              } else if (nextChildren !== prevChildren) {
                var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress2);
                return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, _recoverableError);
              } else {
                enterHydrationState(workInProgress2);
                var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
                workInProgress2.child = child;
                var node = child;
                while (node) {
                  node.flags = node.flags & ~Placement | Hydrating;
                  node = node.sibling;
                }
              }
            } else {
              resetHydrationState();
              if (nextChildren === prevChildren) {
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              }
              reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            }
            return workInProgress2.child;
          }
          function mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError) {
            resetHydrationState();
            queueHydrationError(recoverableError);
            workInProgress2.flags |= ForceClientRender;
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateHostComponent(current2, workInProgress2, renderLanes2) {
            pushHostContext(workInProgress2);
            if (current2 === null) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            var type = workInProgress2.type;
            var nextProps = workInProgress2.pendingProps;
            var prevProps = current2 !== null ? current2.memoizedProps : null;
            var nextChildren = nextProps.children;
            var isDirectTextChild = shouldSetTextContent(type, nextProps);
            if (isDirectTextChild) {
              nextChildren = null;
            } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
              workInProgress2.flags |= ContentReset;
            }
            markRef(current2, workInProgress2);
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            return workInProgress2.child;
          }
          function updateHostText(current2, workInProgress2) {
            if (current2 === null) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            return null;
          }
          function mountLazyComponent(_current, workInProgress2, elementType, renderLanes2) {
            resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
            var props = workInProgress2.pendingProps;
            var lazyComponent = elementType;
            var payload = lazyComponent._payload;
            var init = lazyComponent._init;
            var Component = init(payload);
            workInProgress2.type = Component;
            var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
            var resolvedProps = resolveDefaultProps(Component, props);
            var child;
            switch (resolvedTag) {
              case FunctionComponent: {
                {
                  validateFunctionComponentInDev(workInProgress2, Component);
                  workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
                }
                child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
                return child;
              }
              case ClassComponent: {
                {
                  workInProgress2.type = Component = resolveClassForHotReloading(Component);
                }
                child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
                return child;
              }
              case ForwardRef: {
                {
                  workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
                }
                child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderLanes2);
                return child;
              }
              case MemoComponent: {
                {
                  if (workInProgress2.type !== workInProgress2.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(
                        outerPropTypes,
                        resolvedProps,
                        "prop",
                        getComponentNameFromType(Component)
                      );
                    }
                  }
                }
                child = updateMemoComponent(
                  null,
                  workInProgress2,
                  Component,
                  resolveDefaultProps(Component.type, resolvedProps),
                  renderLanes2
                );
                return child;
              }
            }
            var hint = "";
            {
              if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
                hint = " Did you wrap a component in React.lazy() more than once?";
              }
            }
            throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
          }
          function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderLanes2) {
            resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
            workInProgress2.tag = ClassComponent;
            var hasContext;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            constructClassInstance(workInProgress2, Component, nextProps);
            mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
          }
          function mountIndeterminateComponent(_current, workInProgress2, Component, renderLanes2) {
            resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
            var props = workInProgress2.pendingProps;
            var context;
            {
              var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
              context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            var value;
            var hasId;
            {
              markComponentRenderStarted(workInProgress2);
            }
            {
              if (Component.prototype && typeof Component.prototype.render === "function") {
                var componentName = getComponentNameFromType(Component) || "Unknown";
                if (!didWarnAboutBadClass[componentName]) {
                  error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                  didWarnAboutBadClass[componentName] = true;
                }
              }
              if (workInProgress2.mode & StrictLegacyMode) {
                ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
              }
              setIsRendering(true);
              ReactCurrentOwner$1.current = workInProgress2;
              value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
              hasId = checkDidRenderIdHook();
              setIsRendering(false);
            }
            {
              markComponentRenderStopped();
            }
            workInProgress2.flags |= PerformedWork;
            {
              if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
                var _componentName = getComponentNameFromType(Component) || "Unknown";
                if (!didWarnAboutModulePatternComponent[_componentName]) {
                  error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                  didWarnAboutModulePatternComponent[_componentName] = true;
                }
              }
            }
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              {
                var _componentName2 = getComponentNameFromType(Component) || "Unknown";
                if (!didWarnAboutModulePatternComponent[_componentName2]) {
                  error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                  didWarnAboutModulePatternComponent[_componentName2] = true;
                }
              }
              workInProgress2.tag = ClassComponent;
              workInProgress2.memoizedState = null;
              workInProgress2.updateQueue = null;
              var hasContext = false;
              if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress2);
              } else {
                hasContext = false;
              }
              workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
              initializeUpdateQueue(workInProgress2);
              adoptClassInstance(workInProgress2, value);
              mountClassInstance(workInProgress2, Component, props, renderLanes2);
              return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
            } else {
              workInProgress2.tag = FunctionComponent;
              {
                if (workInProgress2.mode & StrictLegacyMode) {
                  setIsStrictModeForDevtools(true);
                  try {
                    value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
                    hasId = checkDidRenderIdHook();
                  } finally {
                    setIsStrictModeForDevtools(false);
                  }
                }
              }
              if (getIsHydrating() && hasId) {
                pushMaterializedTreeId(workInProgress2);
              }
              reconcileChildren(null, workInProgress2, value, renderLanes2);
              {
                validateFunctionComponentInDev(workInProgress2, Component);
              }
              return workInProgress2.child;
            }
          }
          function validateFunctionComponentInDev(workInProgress2, Component) {
            {
              if (Component) {
                if (Component.childContextTypes) {
                  error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
                }
              }
              if (workInProgress2.ref !== null) {
                var info = "";
                var ownerName = getCurrentFiberOwnerNameInDevOrNull();
                if (ownerName) {
                  info += "\n\nCheck the render method of `" + ownerName + "`.";
                }
                var warningKey = ownerName || "";
                var debugSource = workInProgress2._debugSource;
                if (debugSource) {
                  warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
                }
                if (!didWarnAboutFunctionRefs[warningKey]) {
                  didWarnAboutFunctionRefs[warningKey] = true;
                  error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
                }
              }
              if (typeof Component.getDerivedStateFromProps === "function") {
                var _componentName3 = getComponentNameFromType(Component) || "Unknown";
                if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                  error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                  didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
                }
              }
              if (typeof Component.contextType === "object" && Component.contextType !== null) {
                var _componentName4 = getComponentNameFromType(Component) || "Unknown";
                if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                  error("%s: Function components do not support contextType.", _componentName4);
                  didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
                }
              }
            }
          }
          var SUSPENDED_MARKER = {
            dehydrated: null,
            treeContext: null,
            retryLane: NoLane
          };
          function mountSuspenseOffscreenState(renderLanes2) {
            return {
              baseLanes: renderLanes2,
              cachePool: getSuspendedCache(),
              transitions: null
            };
          }
          function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
            var cachePool = null;
            return {
              baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2),
              cachePool,
              transitions: prevOffscreenState.transitions
            };
          }
          function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
            if (current2 !== null) {
              var suspenseState = current2.memoizedState;
              if (suspenseState === null) {
                return false;
              }
            }
            return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
          }
          function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
            return removeLanes(current2.childLanes, renderLanes2);
          }
          function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
            var nextProps = workInProgress2.pendingProps;
            {
              if (shouldSuspend(workInProgress2)) {
                workInProgress2.flags |= DidCapture;
              }
            }
            var suspenseContext = suspenseStackCursor.current;
            var showFallback = false;
            var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
            if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
              showFallback = true;
              workInProgress2.flags &= ~DidCapture;
            } else {
              if (current2 === null || current2.memoizedState !== null) {
                {
                  suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
                }
              }
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
            pushSuspenseContext(workInProgress2, suspenseContext);
            if (current2 === null) {
              tryToClaimNextHydratableInstance(workInProgress2);
              var suspenseState = workInProgress2.memoizedState;
              if (suspenseState !== null) {
                var dehydrated = suspenseState.dehydrated;
                if (dehydrated !== null) {
                  return mountDehydratedSuspenseComponent(workInProgress2, dehydrated);
                }
              }
              var nextPrimaryChildren = nextProps.children;
              var nextFallbackChildren = nextProps.fallback;
              if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
                var primaryChildFragment = workInProgress2.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
              } else {
                return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren);
              }
            } else {
              var prevState = current2.memoizedState;
              if (prevState !== null) {
                var _dehydrated = prevState.dehydrated;
                if (_dehydrated !== null) {
                  return updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, _dehydrated, prevState, renderLanes2);
                }
              }
              if (showFallback) {
                var _nextFallbackChildren = nextProps.fallback;
                var _nextPrimaryChildren = nextProps.children;
                var fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren, _nextFallbackChildren, renderLanes2);
                var _primaryChildFragment2 = workInProgress2.child;
                var prevOffscreenState = current2.child.memoizedState;
                _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
                _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
              } else {
                var _nextPrimaryChildren2 = nextProps.children;
                var _primaryChildFragment3 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren2, renderLanes2);
                workInProgress2.memoizedState = null;
                return _primaryChildFragment3;
              }
            }
          }
          function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
            var mode = workInProgress2.mode;
            var primaryChildProps = {
              mode: "visible",
              children: primaryChildren
            };
            var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            primaryChildFragment.return = workInProgress2;
            workInProgress2.child = primaryChildFragment;
            return primaryChildFragment;
          }
          function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
            var mode = workInProgress2.mode;
            var progressedPrimaryFragment = workInProgress2.child;
            var primaryChildProps = {
              mode: "hidden",
              children: primaryChildren
            };
            var primaryChildFragment;
            var fallbackChildFragment;
            if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
              primaryChildFragment = progressedPrimaryFragment;
              primaryChildFragment.childLanes = NoLanes;
              primaryChildFragment.pendingProps = primaryChildProps;
              if (workInProgress2.mode & ProfileMode) {
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
              }
              fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            } else {
              primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
              fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            }
            primaryChildFragment.return = workInProgress2;
            fallbackChildFragment.return = workInProgress2;
            primaryChildFragment.sibling = fallbackChildFragment;
            workInProgress2.child = primaryChildFragment;
            return fallbackChildFragment;
          }
          function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes2) {
            return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
          }
          function updateWorkInProgressOffscreenFiber(current2, offscreenProps) {
            return createWorkInProgress(current2, offscreenProps);
          }
          function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
            var currentPrimaryChildFragment = current2.child;
            var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
            var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
              mode: "visible",
              children: primaryChildren
            });
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              primaryChildFragment.lanes = renderLanes2;
            }
            primaryChildFragment.return = workInProgress2;
            primaryChildFragment.sibling = null;
            if (currentFallbackChildFragment !== null) {
              var deletions = workInProgress2.deletions;
              if (deletions === null) {
                workInProgress2.deletions = [currentFallbackChildFragment];
                workInProgress2.flags |= ChildDeletion;
              } else {
                deletions.push(currentFallbackChildFragment);
              }
            }
            workInProgress2.child = primaryChildFragment;
            return primaryChildFragment;
          }
          function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
            var mode = workInProgress2.mode;
            var currentPrimaryChildFragment = current2.child;
            var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
            var primaryChildProps = {
              mode: "hidden",
              children: primaryChildren
            };
            var primaryChildFragment;
            if ((mode & ConcurrentMode) === NoMode && workInProgress2.child !== currentPrimaryChildFragment) {
              var progressedPrimaryFragment = workInProgress2.child;
              primaryChildFragment = progressedPrimaryFragment;
              primaryChildFragment.childLanes = NoLanes;
              primaryChildFragment.pendingProps = primaryChildProps;
              if (workInProgress2.mode & ProfileMode) {
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
              }
              workInProgress2.deletions = null;
            } else {
              primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
              primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
            }
            var fallbackChildFragment;
            if (currentFallbackChildFragment !== null) {
              fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
            } else {
              fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
              fallbackChildFragment.flags |= Placement;
            }
            fallbackChildFragment.return = workInProgress2;
            primaryChildFragment.return = workInProgress2;
            primaryChildFragment.sibling = fallbackChildFragment;
            workInProgress2.child = primaryChildFragment;
            return fallbackChildFragment;
          }
          function retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, recoverableError) {
            if (recoverableError !== null) {
              queueHydrationError(recoverableError);
            }
            reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
            var nextProps = workInProgress2.pendingProps;
            var primaryChildren = nextProps.children;
            var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
            primaryChildFragment.flags |= Placement;
            workInProgress2.memoizedState = null;
            return primaryChildFragment;
          }
          function mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
            var fiberMode = workInProgress2.mode;
            var primaryChildProps = {
              mode: "visible",
              children: primaryChildren
            };
            var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
            var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes2, null);
            fallbackChildFragment.flags |= Placement;
            primaryChildFragment.return = workInProgress2;
            fallbackChildFragment.return = workInProgress2;
            primaryChildFragment.sibling = fallbackChildFragment;
            workInProgress2.child = primaryChildFragment;
            if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
              reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
            }
            return fallbackChildFragment;
          }
          function mountDehydratedSuspenseComponent(workInProgress2, suspenseInstance, renderLanes2) {
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              {
                error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
              }
              workInProgress2.lanes = laneToLanes(SyncLane);
            } else if (isSuspenseInstanceFallback(suspenseInstance)) {
              workInProgress2.lanes = laneToLanes(DefaultHydrationLane);
            } else {
              workInProgress2.lanes = laneToLanes(OffscreenLane);
            }
            return null;
          }
          function updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes2) {
            if (!didSuspend) {
              warnIfHydrating();
              if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                return retrySuspenseComponentWithoutHydrating(
                  current2,
                  workInProgress2,
                  renderLanes2,
                  null
                );
              }
              if (isSuspenseInstanceFallback(suspenseInstance)) {
                var digest, message, stack;
                {
                  var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                  digest = _getSuspenseInstanceF.digest;
                  message = _getSuspenseInstanceF.message;
                  stack = _getSuspenseInstanceF.stack;
                }
                var error2;
                if (message) {
                  error2 = new Error(message);
                } else {
                  error2 = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                }
                var capturedValue = createCapturedValue(error2, digest, stack);
                return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, capturedValue);
              }
              var hasContextChanged2 = includesSomeLane(renderLanes2, current2.childLanes);
              if (didReceiveUpdate || hasContextChanged2) {
                var root2 = getWorkInProgressRoot();
                if (root2 !== null) {
                  var attemptHydrationAtLane = getBumpedLaneForHydration(root2, renderLanes2);
                  if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                    suspenseState.retryLane = attemptHydrationAtLane;
                    var eventTime = NoTimestamp;
                    enqueueConcurrentRenderForLane(current2, attemptHydrationAtLane);
                    scheduleUpdateOnFiber(root2, current2, attemptHydrationAtLane, eventTime);
                  }
                }
                renderDidSuspendDelayIfPossible();
                var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
                return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue);
              } else if (isSuspenseInstancePending(suspenseInstance)) {
                workInProgress2.flags |= DidCapture;
                workInProgress2.child = current2.child;
                var retry = retryDehydratedSuspenseBoundary.bind(null, current2);
                registerSuspenseInstanceRetry(suspenseInstance, retry);
                return null;
              } else {
                reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress2, suspenseInstance, suspenseState.treeContext);
                var primaryChildren = nextProps.children;
                var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
                primaryChildFragment.flags |= Hydrating;
                return primaryChildFragment;
              }
            } else {
              if (workInProgress2.flags & ForceClientRender) {
                workInProgress2.flags &= ~ForceClientRender;
                var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue2);
              } else if (workInProgress2.memoizedState !== null) {
                workInProgress2.child = current2.child;
                workInProgress2.flags |= DidCapture;
                return null;
              } else {
                var nextPrimaryChildren = nextProps.children;
                var nextFallbackChildren = nextProps.fallback;
                var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
                var _primaryChildFragment4 = workInProgress2.child;
                _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
              }
            }
          }
          function scheduleSuspenseWorkOnFiber(fiber, renderLanes2, propagationRoot) {
            fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
            var alternate = fiber.alternate;
            if (alternate !== null) {
              alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
            }
            scheduleContextWorkOnParentPath(fiber.return, renderLanes2, propagationRoot);
          }
          function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
            var node = firstChild;
            while (node !== null) {
              if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                  scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
                }
              } else if (node.tag === SuspenseListComponent) {
                scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function findLastContentRow(firstChild) {
            var row = firstChild;
            var lastContentRow = null;
            while (row !== null) {
              var currentRow = row.alternate;
              if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                lastContentRow = row;
              }
              row = row.sibling;
            }
            return lastContentRow;
          }
          function validateRevealOrder(revealOrder) {
            {
              if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
                didWarnAboutRevealOrder[revealOrder] = true;
                if (typeof revealOrder === "string") {
                  switch (revealOrder.toLowerCase()) {
                    case "together":
                    case "forwards":
                    case "backwards": {
                      error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                      break;
                    }
                    case "forward":
                    case "backward": {
                      error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                      break;
                    }
                    default:
                      error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                      break;
                  }
                } else {
                  error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                }
              }
            }
          }
          function validateTailOptions(tailMode, revealOrder) {
            {
              if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
                if (tailMode !== "collapsed" && tailMode !== "hidden") {
                  didWarnAboutTailOptions[tailMode] = true;
                  error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
                } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                  didWarnAboutTailOptions[tailMode] = true;
                  error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
                }
              }
            }
          }
          function validateSuspenseListNestedChild(childSlot, index2) {
            {
              var isAnArray = isArray(childSlot);
              var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
              if (isAnArray || isIterable) {
                var type = isAnArray ? "array" : "iterable";
                error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index2, type);
                return false;
              }
            }
            return true;
          }
          function validateSuspenseListChildren(children, revealOrder) {
            {
              if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
                if (isArray(children)) {
                  for (var i2 = 0; i2 < children.length; i2++) {
                    if (!validateSuspenseListNestedChild(children[i2], i2)) {
                      return;
                    }
                  }
                } else {
                  var iteratorFn = getIteratorFn(children);
                  if (typeof iteratorFn === "function") {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                      var step = childrenIterator.next();
                      var _i2 = 0;
                      for (; !step.done; step = childrenIterator.next()) {
                        if (!validateSuspenseListNestedChild(step.value, _i2)) {
                          return;
                        }
                        _i2++;
                      }
                    }
                  } else {
                    error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                  }
                }
              }
            }
          }
          function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode) {
            var renderState = workInProgress2.memoizedState;
            if (renderState === null) {
              workInProgress2.memoizedState = {
                isBackwards,
                rendering: null,
                renderingStartTime: 0,
                last: lastContentRow,
                tail,
                tailMode
              };
            } else {
              renderState.isBackwards = isBackwards;
              renderState.rendering = null;
              renderState.renderingStartTime = 0;
              renderState.last = lastContentRow;
              renderState.tail = tail;
              renderState.tailMode = tailMode;
            }
          }
          function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
            var nextProps = workInProgress2.pendingProps;
            var revealOrder = nextProps.revealOrder;
            var tailMode = nextProps.tail;
            var newChildren = nextProps.children;
            validateRevealOrder(revealOrder);
            validateTailOptions(tailMode, revealOrder);
            validateSuspenseListChildren(newChildren, revealOrder);
            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
            var suspenseContext = suspenseStackCursor.current;
            var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
            if (shouldForceFallback) {
              suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
              workInProgress2.flags |= DidCapture;
            } else {
              var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
              if (didSuspendBefore) {
                propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
              }
              suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
            }
            pushSuspenseContext(workInProgress2, suspenseContext);
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              workInProgress2.memoizedState = null;
            } else {
              switch (revealOrder) {
                case "forwards": {
                  var lastContentRow = findLastContentRow(workInProgress2.child);
                  var tail;
                  if (lastContentRow === null) {
                    tail = workInProgress2.child;
                    workInProgress2.child = null;
                  } else {
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                  }
                  initSuspenseListRenderState(
                    workInProgress2,
                    false,
                    tail,
                    lastContentRow,
                    tailMode
                  );
                  break;
                }
                case "backwards": {
                  var _tail = null;
                  var row = workInProgress2.child;
                  workInProgress2.child = null;
                  while (row !== null) {
                    var currentRow = row.alternate;
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                      workInProgress2.child = row;
                      break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                  }
                  initSuspenseListRenderState(
                    workInProgress2,
                    true,
                    _tail,
                    null,
                    tailMode
                  );
                  break;
                }
                case "together": {
                  initSuspenseListRenderState(
                    workInProgress2,
                    false,
                    null,
                    null,
                    void 0
                  );
                  break;
                }
                default: {
                  workInProgress2.memoizedState = null;
                }
              }
            }
            return workInProgress2.child;
          }
          function updatePortalComponent(current2, workInProgress2, renderLanes2) {
            pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
            var nextChildren = workInProgress2.pendingProps;
            if (current2 === null) {
              workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
            } else {
              reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            }
            return workInProgress2.child;
          }
          var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
          function updateContextProvider(current2, workInProgress2, renderLanes2) {
            var providerType = workInProgress2.type;
            var context = providerType._context;
            var newProps = workInProgress2.pendingProps;
            var oldProps = workInProgress2.memoizedProps;
            var newValue = newProps.value;
            {
              if (!("value" in newProps)) {
                if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                  hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                  error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
                }
              }
              var providerPropTypes = workInProgress2.type.propTypes;
              if (providerPropTypes) {
                checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
              }
            }
            pushProvider(workInProgress2, context, newValue);
            {
              if (oldProps !== null) {
                var oldValue = oldProps.value;
                if (objectIs(oldValue, newValue)) {
                  if (oldProps.children === newProps.children && !hasContextChanged()) {
                    return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                  }
                } else {
                  propagateContextChange(workInProgress2, context, renderLanes2);
                }
              }
            }
            var newChildren = newProps.children;
            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
            return workInProgress2.child;
          }
          var hasWarnedAboutUsingContextAsConsumer = false;
          function updateContextConsumer(current2, workInProgress2, renderLanes2) {
            var context = workInProgress2.type;
            {
              if (context._context === void 0) {
                if (context !== context.Consumer) {
                  if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                }
              } else {
                context = context._context;
              }
            }
            var newProps = workInProgress2.pendingProps;
            var render2 = newProps.children;
            {
              if (typeof render2 !== "function") {
                error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
              }
            }
            prepareToReadContext(workInProgress2, renderLanes2);
            var newValue = readContext(context);
            {
              markComponentRenderStarted(workInProgress2);
            }
            var newChildren;
            {
              ReactCurrentOwner$1.current = workInProgress2;
              setIsRendering(true);
              newChildren = render2(newValue);
              setIsRendering(false);
            }
            {
              markComponentRenderStopped();
            }
            workInProgress2.flags |= PerformedWork;
            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
            return workInProgress2.child;
          }
          function markWorkInProgressReceivedUpdate() {
            didReceiveUpdate = true;
          }
          function resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2) {
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              if (current2 !== null) {
                current2.alternate = null;
                workInProgress2.alternate = null;
                workInProgress2.flags |= Placement;
              }
            }
          }
          function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
            if (current2 !== null) {
              workInProgress2.dependencies = current2.dependencies;
            }
            {
              stopProfilerTimerIfRunning();
            }
            markSkippedUpdateLanes(workInProgress2.lanes);
            if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
              {
                return null;
              }
            }
            cloneChildFibers(current2, workInProgress2);
            return workInProgress2.child;
          }
          function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
            {
              var returnFiber = oldWorkInProgress.return;
              if (returnFiber === null) {
                throw new Error("Cannot swap the root fiber.");
              }
              current2.alternate = null;
              oldWorkInProgress.alternate = null;
              newWorkInProgress.index = oldWorkInProgress.index;
              newWorkInProgress.sibling = oldWorkInProgress.sibling;
              newWorkInProgress.return = oldWorkInProgress.return;
              newWorkInProgress.ref = oldWorkInProgress.ref;
              if (oldWorkInProgress === returnFiber.child) {
                returnFiber.child = newWorkInProgress;
              } else {
                var prevSibling = returnFiber.child;
                if (prevSibling === null) {
                  throw new Error("Expected parent to have a child.");
                }
                while (prevSibling.sibling !== oldWorkInProgress) {
                  prevSibling = prevSibling.sibling;
                  if (prevSibling === null) {
                    throw new Error("Expected to find the previous sibling.");
                  }
                }
                prevSibling.sibling = newWorkInProgress;
              }
              var deletions = returnFiber.deletions;
              if (deletions === null) {
                returnFiber.deletions = [current2];
                returnFiber.flags |= ChildDeletion;
              } else {
                deletions.push(current2);
              }
              newWorkInProgress.flags |= Placement;
              return newWorkInProgress;
            }
          }
          function checkScheduledUpdateOrContext(current2, renderLanes2) {
            var updateLanes = current2.lanes;
            if (includesSomeLane(updateLanes, renderLanes2)) {
              return true;
            }
            return false;
          }
          function attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2) {
            switch (workInProgress2.tag) {
              case HostRoot:
                pushHostRootContext(workInProgress2);
                var root2 = workInProgress2.stateNode;
                resetHydrationState();
                break;
              case HostComponent:
                pushHostContext(workInProgress2);
                break;
              case ClassComponent: {
                var Component = workInProgress2.type;
                if (isContextProvider(Component)) {
                  pushContextProvider(workInProgress2);
                }
                break;
              }
              case HostPortal:
                pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
                break;
              case ContextProvider: {
                var newValue = workInProgress2.memoizedProps.value;
                var context = workInProgress2.type._context;
                pushProvider(workInProgress2, context, newValue);
                break;
              }
              case Profiler:
                {
                  var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                  if (hasChildWork) {
                    workInProgress2.flags |= Update;
                  }
                  {
                    var stateNode = workInProgress2.stateNode;
                    stateNode.effectDuration = 0;
                    stateNode.passiveEffectDuration = 0;
                  }
                }
                break;
              case SuspenseComponent: {
                var state = workInProgress2.memoizedState;
                if (state !== null) {
                  if (state.dehydrated !== null) {
                    pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                    workInProgress2.flags |= DidCapture;
                    return null;
                  }
                  var primaryChildFragment = workInProgress2.child;
                  var primaryChildLanes = primaryChildFragment.childLanes;
                  if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                    return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                  } else {
                    pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                    var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                    if (child !== null) {
                      return child.sibling;
                    } else {
                      return null;
                    }
                  }
                } else {
                  pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                }
                break;
              }
              case SuspenseListComponent: {
                var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
                var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                if (didSuspendBefore) {
                  if (_hasChildWork) {
                    return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                  }
                  workInProgress2.flags |= DidCapture;
                }
                var renderState = workInProgress2.memoizedState;
                if (renderState !== null) {
                  renderState.rendering = null;
                  renderState.tail = null;
                  renderState.lastEffect = null;
                }
                pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
                if (_hasChildWork) {
                  break;
                } else {
                  return null;
                }
              }
              case OffscreenComponent:
              case LegacyHiddenComponent: {
                workInProgress2.lanes = NoLanes;
                return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
              }
            }
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          function beginWork(current2, workInProgress2, renderLanes2) {
            {
              if (workInProgress2._debugNeedsRemount && current2 !== null) {
                return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
              }
            }
            if (current2 !== null) {
              var oldProps = current2.memoizedProps;
              var newProps = workInProgress2.pendingProps;
              if (oldProps !== newProps || hasContextChanged() || workInProgress2.type !== current2.type) {
                didReceiveUpdate = true;
              } else {
                var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
                if (!hasScheduledUpdateOrContext && (workInProgress2.flags & DidCapture) === NoFlags) {
                  didReceiveUpdate = false;
                  return attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2);
                }
                if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                  didReceiveUpdate = true;
                } else {
                  didReceiveUpdate = false;
                }
              }
            } else {
              didReceiveUpdate = false;
              if (getIsHydrating() && isForkedChild(workInProgress2)) {
                var slotIndex = workInProgress2.index;
                var numberOfForks = getForksAtLevel();
                pushTreeId(workInProgress2, numberOfForks, slotIndex);
              }
            }
            workInProgress2.lanes = NoLanes;
            switch (workInProgress2.tag) {
              case IndeterminateComponent: {
                return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
              }
              case LazyComponent: {
                var elementType = workInProgress2.elementType;
                return mountLazyComponent(current2, workInProgress2, elementType, renderLanes2);
              }
              case FunctionComponent: {
                var Component = workInProgress2.type;
                var unresolvedProps = workInProgress2.pendingProps;
                var resolvedProps = workInProgress2.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                return updateFunctionComponent(current2, workInProgress2, Component, resolvedProps, renderLanes2);
              }
              case ClassComponent: {
                var _Component = workInProgress2.type;
                var _unresolvedProps = workInProgress2.pendingProps;
                var _resolvedProps = workInProgress2.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                return updateClassComponent(current2, workInProgress2, _Component, _resolvedProps, renderLanes2);
              }
              case HostRoot:
                return updateHostRoot(current2, workInProgress2, renderLanes2);
              case HostComponent:
                return updateHostComponent(current2, workInProgress2, renderLanes2);
              case HostText:
                return updateHostText(current2, workInProgress2);
              case SuspenseComponent:
                return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
              case HostPortal:
                return updatePortalComponent(current2, workInProgress2, renderLanes2);
              case ForwardRef: {
                var type = workInProgress2.type;
                var _unresolvedProps2 = workInProgress2.pendingProps;
                var _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
              }
              case Fragment:
                return updateFragment(current2, workInProgress2, renderLanes2);
              case Mode:
                return updateMode(current2, workInProgress2, renderLanes2);
              case Profiler:
                return updateProfiler(current2, workInProgress2, renderLanes2);
              case ContextProvider:
                return updateContextProvider(current2, workInProgress2, renderLanes2);
              case ContextConsumer:
                return updateContextConsumer(current2, workInProgress2, renderLanes2);
              case MemoComponent: {
                var _type2 = workInProgress2.type;
                var _unresolvedProps3 = workInProgress2.pendingProps;
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                {
                  if (workInProgress2.type !== workInProgress2.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(
                        outerPropTypes,
                        _resolvedProps3,
                        "prop",
                        getComponentNameFromType(_type2)
                      );
                    }
                  }
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, renderLanes2);
              }
              case SimpleMemoComponent: {
                return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, renderLanes2);
              }
              case IncompleteClassComponent: {
                var _Component2 = workInProgress2.type;
                var _unresolvedProps4 = workInProgress2.pendingProps;
                var _resolvedProps4 = workInProgress2.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                return mountIncompleteClassComponent(current2, workInProgress2, _Component2, _resolvedProps4, renderLanes2);
              }
              case SuspenseListComponent: {
                return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
              }
              case ScopeComponent: {
                break;
              }
              case OffscreenComponent: {
                return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
              }
            }
            throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
          }
          function markUpdate(workInProgress2) {
            workInProgress2.flags |= Update;
          }
          function markRef$1(workInProgress2) {
            workInProgress2.flags |= Ref;
            {
              workInProgress2.flags |= RefStatic;
            }
          }
          var appendAllChildren;
          var updateHostContainer;
          var updateHostComponent$1;
          var updateHostText$1;
          {
            appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
              var node = workInProgress2.child;
              while (node !== null) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  appendInitialChild(parent, node.stateNode);
                } else if (node.tag === HostPortal)
                  ;
                else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === workInProgress2) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === workInProgress2) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            };
            updateHostContainer = function(current2, workInProgress2) {
            };
            updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
              var oldProps = current2.memoizedProps;
              if (oldProps === newProps) {
                return;
              }
              var instance = workInProgress2.stateNode;
              var currentHostContext = getHostContext();
              var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
              workInProgress2.updateQueue = updatePayload;
              if (updatePayload) {
                markUpdate(workInProgress2);
              }
            };
            updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
              if (oldText !== newText) {
                markUpdate(workInProgress2);
              }
            };
          }
          function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
            if (getIsHydrating()) {
              return;
            }
            switch (renderState.tailMode) {
              case "hidden": {
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while (tailNode !== null) {
                  if (tailNode.alternate !== null) {
                    lastTailNode = tailNode;
                  }
                  tailNode = tailNode.sibling;
                }
                if (lastTailNode === null) {
                  renderState.tail = null;
                } else {
                  lastTailNode.sibling = null;
                }
                break;
              }
              case "collapsed": {
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while (_tailNode !== null) {
                  if (_tailNode.alternate !== null) {
                    _lastTailNode = _tailNode;
                  }
                  _tailNode = _tailNode.sibling;
                }
                if (_lastTailNode === null) {
                  if (!hasRenderedATailFallback && renderState.tail !== null) {
                    renderState.tail.sibling = null;
                  } else {
                    renderState.tail = null;
                  }
                } else {
                  _lastTailNode.sibling = null;
                }
                break;
              }
            }
          }
          function bubbleProperties(completedWork) {
            var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
            var newChildLanes = NoLanes;
            var subtreeFlags = NoFlags;
            if (!didBailout) {
              if ((completedWork.mode & ProfileMode) !== NoMode) {
                var actualDuration = completedWork.actualDuration;
                var treeBaseDuration = completedWork.selfBaseDuration;
                var child = completedWork.child;
                while (child !== null) {
                  newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                  subtreeFlags |= child.subtreeFlags;
                  subtreeFlags |= child.flags;
                  actualDuration += child.actualDuration;
                  treeBaseDuration += child.treeBaseDuration;
                  child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
                completedWork.treeBaseDuration = treeBaseDuration;
              } else {
                var _child = completedWork.child;
                while (_child !== null) {
                  newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                  subtreeFlags |= _child.subtreeFlags;
                  subtreeFlags |= _child.flags;
                  _child.return = completedWork;
                  _child = _child.sibling;
                }
              }
              completedWork.subtreeFlags |= subtreeFlags;
            } else {
              if ((completedWork.mode & ProfileMode) !== NoMode) {
                var _treeBaseDuration = completedWork.selfBaseDuration;
                var _child2 = completedWork.child;
                while (_child2 !== null) {
                  newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));
                  subtreeFlags |= _child2.subtreeFlags & StaticMask;
                  subtreeFlags |= _child2.flags & StaticMask;
                  _treeBaseDuration += _child2.treeBaseDuration;
                  _child2 = _child2.sibling;
                }
                completedWork.treeBaseDuration = _treeBaseDuration;
              } else {
                var _child3 = completedWork.child;
                while (_child3 !== null) {
                  newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));
                  subtreeFlags |= _child3.subtreeFlags & StaticMask;
                  subtreeFlags |= _child3.flags & StaticMask;
                  _child3.return = completedWork;
                  _child3 = _child3.sibling;
                }
              }
              completedWork.subtreeFlags |= subtreeFlags;
            }
            completedWork.childLanes = newChildLanes;
            return didBailout;
          }
          function completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState) {
            if (hasUnhydratedTailNodes() && (workInProgress2.mode & ConcurrentMode) !== NoMode && (workInProgress2.flags & DidCapture) === NoFlags) {
              warnIfUnhydratedTailNodes(workInProgress2);
              resetHydrationState();
              workInProgress2.flags |= ForceClientRender | Incomplete | ShouldCapture;
              return false;
            }
            var wasHydrated = popHydrationState(workInProgress2);
            if (nextState !== null && nextState.dehydrated !== null) {
              if (current2 === null) {
                if (!wasHydrated) {
                  throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                }
                prepareToHydrateHostSuspenseInstance(workInProgress2);
                bubbleProperties(workInProgress2);
                {
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    var isTimedOutSuspense = nextState !== null;
                    if (isTimedOutSuspense) {
                      var primaryChildFragment = workInProgress2.child;
                      if (primaryChildFragment !== null) {
                        workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                      }
                    }
                  }
                }
                return false;
              } else {
                resetHydrationState();
                if ((workInProgress2.flags & DidCapture) === NoFlags) {
                  workInProgress2.memoizedState = null;
                }
                workInProgress2.flags |= Update;
                bubbleProperties(workInProgress2);
                {
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    var _isTimedOutSuspense = nextState !== null;
                    if (_isTimedOutSuspense) {
                      var _primaryChildFragment = workInProgress2.child;
                      if (_primaryChildFragment !== null) {
                        workInProgress2.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                      }
                    }
                  }
                }
                return false;
              }
            } else {
              upgradeHydrationErrorsToRecoverable();
              return true;
            }
          }
          function completeWork(current2, workInProgress2, renderLanes2) {
            var newProps = workInProgress2.pendingProps;
            popTreeContext(workInProgress2);
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
              case LazyComponent:
              case SimpleMemoComponent:
              case FunctionComponent:
              case ForwardRef:
              case Fragment:
              case Mode:
              case Profiler:
              case ContextConsumer:
              case MemoComponent:
                bubbleProperties(workInProgress2);
                return null;
              case ClassComponent: {
                var Component = workInProgress2.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress2);
                }
                bubbleProperties(workInProgress2);
                return null;
              }
              case HostRoot: {
                var fiberRoot = workInProgress2.stateNode;
                popHostContainer(workInProgress2);
                popTopLevelContextObject(workInProgress2);
                resetWorkInProgressVersions();
                if (fiberRoot.pendingContext) {
                  fiberRoot.context = fiberRoot.pendingContext;
                  fiberRoot.pendingContext = null;
                }
                if (current2 === null || current2.child === null) {
                  var wasHydrated = popHydrationState(workInProgress2);
                  if (wasHydrated) {
                    markUpdate(workInProgress2);
                  } else {
                    if (current2 !== null) {
                      var prevState = current2.memoizedState;
                      if (!prevState.isDehydrated || (workInProgress2.flags & ForceClientRender) !== NoFlags) {
                        workInProgress2.flags |= Snapshot;
                        upgradeHydrationErrorsToRecoverable();
                      }
                    }
                  }
                }
                updateHostContainer(current2, workInProgress2);
                bubbleProperties(workInProgress2);
                return null;
              }
              case HostComponent: {
                popHostContext(workInProgress2);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress2.type;
                if (current2 !== null && workInProgress2.stateNode != null) {
                  updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance);
                  if (current2.ref !== workInProgress2.ref) {
                    markRef$1(workInProgress2);
                  }
                } else {
                  if (!newProps) {
                    if (workInProgress2.stateNode === null) {
                      throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    }
                    bubbleProperties(workInProgress2);
                    return null;
                  }
                  var currentHostContext = getHostContext();
                  var _wasHydrated = popHydrationState(workInProgress2);
                  if (_wasHydrated) {
                    if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                      markUpdate(workInProgress2);
                    }
                  } else {
                    var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                    appendAllChildren(instance, workInProgress2, false, false);
                    workInProgress2.stateNode = instance;
                    if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
                      markUpdate(workInProgress2);
                    }
                  }
                  if (workInProgress2.ref !== null) {
                    markRef$1(workInProgress2);
                  }
                }
                bubbleProperties(workInProgress2);
                return null;
              }
              case HostText: {
                var newText = newProps;
                if (current2 && workInProgress2.stateNode != null) {
                  var oldText = current2.memoizedProps;
                  updateHostText$1(current2, workInProgress2, oldText, newText);
                } else {
                  if (typeof newText !== "string") {
                    if (workInProgress2.stateNode === null) {
                      throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                  var _rootContainerInstance = getRootHostContainer();
                  var _currentHostContext = getHostContext();
                  var _wasHydrated2 = popHydrationState(workInProgress2);
                  if (_wasHydrated2) {
                    if (prepareToHydrateHostTextInstance(workInProgress2)) {
                      markUpdate(workInProgress2);
                    }
                  } else {
                    workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                  }
                }
                bubbleProperties(workInProgress2);
                return null;
              }
              case SuspenseComponent: {
                popSuspenseContext(workInProgress2);
                var nextState = workInProgress2.memoizedState;
                if (current2 === null || current2.memoizedState !== null && current2.memoizedState.dehydrated !== null) {
                  var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState);
                  if (!fallthroughToNormalSuspensePath) {
                    if (workInProgress2.flags & ShouldCapture) {
                      return workInProgress2;
                    } else {
                      return null;
                    }
                  }
                }
                if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                  workInProgress2.lanes = renderLanes2;
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    transferActualDuration(workInProgress2);
                  }
                  return workInProgress2;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = current2 !== null && current2.memoizedState !== null;
                if (nextDidTimeout !== prevDidTimeout) {
                  if (nextDidTimeout) {
                    var _offscreenFiber2 = workInProgress2.child;
                    _offscreenFiber2.flags |= Visibility;
                    if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
                      var hasInvisibleChildContext = current2 === null && (workInProgress2.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                      if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                        renderDidSuspend();
                      } else {
                        renderDidSuspendDelayIfPossible();
                      }
                    }
                  }
                }
                var wakeables = workInProgress2.updateQueue;
                if (wakeables !== null) {
                  workInProgress2.flags |= Update;
                }
                bubbleProperties(workInProgress2);
                {
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    if (nextDidTimeout) {
                      var primaryChildFragment = workInProgress2.child;
                      if (primaryChildFragment !== null) {
                        workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                      }
                    }
                  }
                }
                return null;
              }
              case HostPortal:
                popHostContainer(workInProgress2);
                updateHostContainer(current2, workInProgress2);
                if (current2 === null) {
                  preparePortalMount(workInProgress2.stateNode.containerInfo);
                }
                bubbleProperties(workInProgress2);
                return null;
              case ContextProvider:
                var context = workInProgress2.type._context;
                popProvider(context, workInProgress2);
                bubbleProperties(workInProgress2);
                return null;
              case IncompleteClassComponent: {
                var _Component = workInProgress2.type;
                if (isContextProvider(_Component)) {
                  popContext(workInProgress2);
                }
                bubbleProperties(workInProgress2);
                return null;
              }
              case SuspenseListComponent: {
                popSuspenseContext(workInProgress2);
                var renderState = workInProgress2.memoizedState;
                if (renderState === null) {
                  bubbleProperties(workInProgress2);
                  return null;
                }
                var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                  if (!didSuspendAlready) {
                    var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                    if (!cannotBeSuspended) {
                      var row = workInProgress2.child;
                      while (row !== null) {
                        var suspended = findFirstSuspended(row);
                        if (suspended !== null) {
                          didSuspendAlready = true;
                          workInProgress2.flags |= DidCapture;
                          cutOffTailIfNeeded(renderState, false);
                          var newThenables = suspended.updateQueue;
                          if (newThenables !== null) {
                            workInProgress2.updateQueue = newThenables;
                            workInProgress2.flags |= Update;
                          }
                          workInProgress2.subtreeFlags = NoFlags;
                          resetChildFibers(workInProgress2, renderLanes2);
                          pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                          return workInProgress2.child;
                        }
                        row = row.sibling;
                      }
                    }
                    if (renderState.tail !== null && now() > getRenderTargetTime()) {
                      workInProgress2.flags |= DidCapture;
                      didSuspendAlready = true;
                      cutOffTailIfNeeded(renderState, false);
                      workInProgress2.lanes = SomeRetryLane;
                    }
                  } else {
                    cutOffTailIfNeeded(renderState, false);
                  }
                } else {
                  if (!didSuspendAlready) {
                    var _suspended = findFirstSuspended(renderedTail);
                    if (_suspended !== null) {
                      workInProgress2.flags |= DidCapture;
                      didSuspendAlready = true;
                      var _newThenables = _suspended.updateQueue;
                      if (_newThenables !== null) {
                        workInProgress2.updateQueue = _newThenables;
                        workInProgress2.flags |= Update;
                      }
                      cutOffTailIfNeeded(renderState, true);
                      if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                        bubbleProperties(workInProgress2);
                        return null;
                      }
                    } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane) {
                      workInProgress2.flags |= DidCapture;
                      didSuspendAlready = true;
                      cutOffTailIfNeeded(renderState, false);
                      workInProgress2.lanes = SomeRetryLane;
                    }
                  }
                  if (renderState.isBackwards) {
                    renderedTail.sibling = workInProgress2.child;
                    workInProgress2.child = renderedTail;
                  } else {
                    var previousSibling = renderState.last;
                    if (previousSibling !== null) {
                      previousSibling.sibling = renderedTail;
                    } else {
                      workInProgress2.child = renderedTail;
                    }
                    renderState.last = renderedTail;
                  }
                }
                if (renderState.tail !== null) {
                  var next = renderState.tail;
                  renderState.rendering = next;
                  renderState.tail = next.sibling;
                  renderState.renderingStartTime = now();
                  next.sibling = null;
                  var suspenseContext = suspenseStackCursor.current;
                  if (didSuspendAlready) {
                    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                  } else {
                    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                  }
                  pushSuspenseContext(workInProgress2, suspenseContext);
                  return next;
                }
                bubbleProperties(workInProgress2);
                return null;
              }
              case ScopeComponent: {
                break;
              }
              case OffscreenComponent:
              case LegacyHiddenComponent: {
                popRenderLanes(workInProgress2);
                var _nextState = workInProgress2.memoizedState;
                var nextIsHidden = _nextState !== null;
                if (current2 !== null) {
                  var _prevState = current2.memoizedState;
                  var prevIsHidden = _prevState !== null;
                  if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) {
                    workInProgress2.flags |= Visibility;
                  }
                }
                if (!nextIsHidden || (workInProgress2.mode & ConcurrentMode) === NoMode) {
                  bubbleProperties(workInProgress2);
                } else {
                  if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                    bubbleProperties(workInProgress2);
                    {
                      if (workInProgress2.subtreeFlags & (Placement | Update)) {
                        workInProgress2.flags |= Visibility;
                      }
                    }
                  }
                }
                return null;
              }
              case CacheComponent: {
                return null;
              }
              case TracingMarkerComponent: {
                return null;
              }
            }
            throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
          }
          function unwindWork(current2, workInProgress2, renderLanes2) {
            popTreeContext(workInProgress2);
            switch (workInProgress2.tag) {
              case ClassComponent: {
                var Component = workInProgress2.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress2);
                }
                var flags = workInProgress2.flags;
                if (flags & ShouldCapture) {
                  workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    transferActualDuration(workInProgress2);
                  }
                  return workInProgress2;
                }
                return null;
              }
              case HostRoot: {
                var root2 = workInProgress2.stateNode;
                popHostContainer(workInProgress2);
                popTopLevelContextObject(workInProgress2);
                resetWorkInProgressVersions();
                var _flags = workInProgress2.flags;
                if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                  workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
                  return workInProgress2;
                }
                return null;
              }
              case HostComponent: {
                popHostContext(workInProgress2);
                return null;
              }
              case SuspenseComponent: {
                popSuspenseContext(workInProgress2);
                var suspenseState = workInProgress2.memoizedState;
                if (suspenseState !== null && suspenseState.dehydrated !== null) {
                  if (workInProgress2.alternate === null) {
                    throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                  }
                  resetHydrationState();
                }
                var _flags2 = workInProgress2.flags;
                if (_flags2 & ShouldCapture) {
                  workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                  if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                    transferActualDuration(workInProgress2);
                  }
                  return workInProgress2;
                }
                return null;
              }
              case SuspenseListComponent: {
                popSuspenseContext(workInProgress2);
                return null;
              }
              case HostPortal:
                popHostContainer(workInProgress2);
                return null;
              case ContextProvider:
                var context = workInProgress2.type._context;
                popProvider(context, workInProgress2);
                return null;
              case OffscreenComponent:
              case LegacyHiddenComponent:
                popRenderLanes(workInProgress2);
                return null;
              case CacheComponent:
                return null;
              default:
                return null;
            }
          }
          function unwindInterruptedWork(current2, interruptedWork, renderLanes2) {
            popTreeContext(interruptedWork);
            switch (interruptedWork.tag) {
              case ClassComponent: {
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== void 0) {
                  popContext(interruptedWork);
                }
                break;
              }
              case HostRoot: {
                var root2 = interruptedWork.stateNode;
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
              }
              case HostComponent: {
                popHostContext(interruptedWork);
                break;
              }
              case HostPortal:
                popHostContainer(interruptedWork);
                break;
              case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
              case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
              case ContextProvider:
                var context = interruptedWork.type._context;
                popProvider(context, interruptedWork);
                break;
              case OffscreenComponent:
              case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
            }
          }
          var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
          {
            didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
          }
          var offscreenSubtreeIsHidden = false;
          var offscreenSubtreeWasHidden = false;
          var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
          var nextEffect = null;
          var inProgressLanes = null;
          var inProgressRoot = null;
          function reportUncaughtErrorInDEV(error2) {
            {
              invokeGuardedCallback(null, function() {
                throw error2;
              });
              clearCaughtError();
            }
          }
          var callComponentWillUnmountWithTimer = function(current2, instance) {
            instance.props = current2.memoizedProps;
            instance.state = current2.memoizedState;
            if (current2.mode & ProfileMode) {
              try {
                startLayoutEffectTimer();
                instance.componentWillUnmount();
              } finally {
                recordLayoutEffectDuration(current2);
              }
            } else {
              instance.componentWillUnmount();
            }
          };
          function safelyCallCommitHookLayoutEffectListMount(current2, nearestMountedAncestor) {
            try {
              commitHookEffectListMount(Layout, current2);
            } catch (error2) {
              captureCommitPhaseError(current2, nearestMountedAncestor, error2);
            }
          }
          function safelyCallComponentWillUnmount(current2, nearestMountedAncestor, instance) {
            try {
              callComponentWillUnmountWithTimer(current2, instance);
            } catch (error2) {
              captureCommitPhaseError(current2, nearestMountedAncestor, error2);
            }
          }
          function safelyCallComponentDidMount(current2, nearestMountedAncestor, instance) {
            try {
              instance.componentDidMount();
            } catch (error2) {
              captureCommitPhaseError(current2, nearestMountedAncestor, error2);
            }
          }
          function safelyAttachRef(current2, nearestMountedAncestor) {
            try {
              commitAttachRef(current2);
            } catch (error2) {
              captureCommitPhaseError(current2, nearestMountedAncestor, error2);
            }
          }
          function safelyDetachRef(current2, nearestMountedAncestor) {
            var ref = current2.ref;
            if (ref !== null) {
              if (typeof ref === "function") {
                var retVal;
                try {
                  if (enableProfilerTimer && enableProfilerCommitHooks && current2.mode & ProfileMode) {
                    try {
                      startLayoutEffectTimer();
                      retVal = ref(null);
                    } finally {
                      recordLayoutEffectDuration(current2);
                    }
                  } else {
                    retVal = ref(null);
                  }
                } catch (error2) {
                  captureCommitPhaseError(current2, nearestMountedAncestor, error2);
                }
                {
                  if (typeof retVal === "function") {
                    error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current2));
                  }
                }
              } else {
                ref.current = null;
              }
            }
          }
          function safelyCallDestroy(current2, nearestMountedAncestor, destroy) {
            try {
              destroy();
            } catch (error2) {
              captureCommitPhaseError(current2, nearestMountedAncestor, error2);
            }
          }
          var focusedInstanceHandle = null;
          var shouldFireAfterActiveInstanceBlur = false;
          function commitBeforeMutationEffects(root2, firstChild) {
            focusedInstanceHandle = prepareForCommit(root2.containerInfo);
            nextEffect = firstChild;
            commitBeforeMutationEffects_begin();
            var shouldFire = shouldFireAfterActiveInstanceBlur;
            shouldFireAfterActiveInstanceBlur = false;
            focusedInstanceHandle = null;
            return shouldFire;
          }
          function commitBeforeMutationEffects_begin() {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              var child = fiber.child;
              if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
              } else {
                commitBeforeMutationEffects_complete();
              }
            }
          }
          function commitBeforeMutationEffects_complete() {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              setCurrentFiber(fiber);
              try {
                commitBeforeMutationEffectsOnFiber(fiber);
              } catch (error2) {
                captureCommitPhaseError(fiber, fiber.return, error2);
              }
              resetCurrentFiber();
              var sibling = fiber.sibling;
              if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
              }
              nextEffect = fiber.return;
            }
          }
          function commitBeforeMutationEffectsOnFiber(finishedWork) {
            var current2 = finishedWork.alternate;
            var flags = finishedWork.flags;
            if ((flags & Snapshot) !== NoFlags) {
              setCurrentFiber(finishedWork);
              switch (finishedWork.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  break;
                }
                case ClassComponent: {
                  if (current2 !== null) {
                    var prevProps = current2.memoizedProps;
                    var prevState = current2.memoizedState;
                    var instance = finishedWork.stateNode;
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) {
                          error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        }
                        if (instance.state !== finishedWork.memoizedState) {
                          error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        }
                      }
                    }
                    var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                    {
                      var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                      if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                        didWarnSet.add(finishedWork.type);
                        error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                      }
                    }
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }
                  break;
                }
                case HostRoot: {
                  {
                    var root2 = finishedWork.stateNode;
                    clearContainer(root2.containerInfo);
                  }
                  break;
                }
                case HostComponent:
                case HostText:
                case HostPortal:
                case IncompleteClassComponent:
                  break;
                default: {
                  throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              resetCurrentFiber();
            }
          }
          function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
            var updateQueue = finishedWork.updateQueue;
            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;
              do {
                if ((effect.tag & flags) === flags) {
                  var destroy = effect.destroy;
                  effect.destroy = void 0;
                  if (destroy !== void 0) {
                    {
                      if ((flags & Passive$1) !== NoFlags$1) {
                        markComponentPassiveEffectUnmountStarted(finishedWork);
                      } else if ((flags & Layout) !== NoFlags$1) {
                        markComponentLayoutEffectUnmountStarted(finishedWork);
                      }
                    }
                    {
                      if ((flags & Insertion) !== NoFlags$1) {
                        setIsRunningInsertionEffect(true);
                      }
                    }
                    safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                    {
                      if ((flags & Insertion) !== NoFlags$1) {
                        setIsRunningInsertionEffect(false);
                      }
                    }
                    {
                      if ((flags & Passive$1) !== NoFlags$1) {
                        markComponentPassiveEffectUnmountStopped();
                      } else if ((flags & Layout) !== NoFlags$1) {
                        markComponentLayoutEffectUnmountStopped();
                      }
                    }
                  }
                }
                effect = effect.next;
              } while (effect !== firstEffect);
            }
          }
          function commitHookEffectListMount(flags, finishedWork) {
            var updateQueue = finishedWork.updateQueue;
            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;
              do {
                if ((effect.tag & flags) === flags) {
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectMountStarted(finishedWork);
                    } else if ((flags & Layout) !== NoFlags$1) {
                      markComponentLayoutEffectMountStarted(finishedWork);
                    }
                  }
                  var create = effect.create;
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(true);
                    }
                  }
                  effect.destroy = create();
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(false);
                    }
                  }
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectMountStopped();
                    } else if ((flags & Layout) !== NoFlags$1) {
                      markComponentLayoutEffectMountStopped();
                    }
                  }
                  {
                    var destroy = effect.destroy;
                    if (destroy !== void 0 && typeof destroy !== "function") {
                      var hookName = void 0;
                      if ((effect.tag & Layout) !== NoFlags) {
                        hookName = "useLayoutEffect";
                      } else if ((effect.tag & Insertion) !== NoFlags) {
                        hookName = "useInsertionEffect";
                      } else {
                        hookName = "useEffect";
                      }
                      var addendum = void 0;
                      if (destroy === null) {
                        addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                      } else if (typeof destroy.then === "function") {
                        addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                      } else {
                        addendum = " You returned: " + destroy;
                      }
                      error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                    }
                  }
                }
                effect = effect.next;
              } while (effect !== firstEffect);
            }
          }
          function commitPassiveEffectDurations(finishedRoot, finishedWork) {
            {
              if ((finishedWork.flags & Update) !== NoFlags) {
                switch (finishedWork.tag) {
                  case Profiler: {
                    var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                    var _finishedWork$memoize = finishedWork.memoizedProps, id2 = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit;
                    var commitTime2 = getCommitTime();
                    var phase = finishedWork.alternate === null ? "mount" : "update";
                    {
                      if (isCurrentUpdateNested()) {
                        phase = "nested-update";
                      }
                    }
                    if (typeof onPostCommit === "function") {
                      onPostCommit(id2, phase, passiveEffectDuration, commitTime2);
                    }
                    var parentFiber = finishedWork.return;
                    outer:
                      while (parentFiber !== null) {
                        switch (parentFiber.tag) {
                          case HostRoot:
                            var root2 = parentFiber.stateNode;
                            root2.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                          case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                        }
                        parentFiber = parentFiber.return;
                      }
                    break;
                  }
                }
              }
            }
          }
          function commitLayoutEffectOnFiber(finishedRoot, current2, finishedWork, committedLanes) {
            if ((finishedWork.flags & LayoutMask) !== NoFlags) {
              switch (finishedWork.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  if (!offscreenSubtreeWasHidden) {
                    if (finishedWork.mode & ProfileMode) {
                      try {
                        startLayoutEffectTimer();
                        commitHookEffectListMount(Layout | HasEffect, finishedWork);
                      } finally {
                        recordLayoutEffectDuration(finishedWork);
                      }
                    } else {
                      commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    }
                  }
                  break;
                }
                case ClassComponent: {
                  var instance = finishedWork.stateNode;
                  if (finishedWork.flags & Update) {
                    if (!offscreenSubtreeWasHidden) {
                      if (current2 === null) {
                        {
                          if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) {
                              error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (instance.state !== finishedWork.memoizedState) {
                              error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                          }
                        }
                        if (finishedWork.mode & ProfileMode) {
                          try {
                            startLayoutEffectTimer();
                            instance.componentDidMount();
                          } finally {
                            recordLayoutEffectDuration(finishedWork);
                          }
                        } else {
                          instance.componentDidMount();
                        }
                      } else {
                        var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                        var prevState = current2.memoizedState;
                        {
                          if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) {
                              error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (instance.state !== finishedWork.memoizedState) {
                              error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                          }
                        }
                        if (finishedWork.mode & ProfileMode) {
                          try {
                            startLayoutEffectTimer();
                            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                          } finally {
                            recordLayoutEffectDuration(finishedWork);
                          }
                        } else {
                          instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        }
                      }
                    }
                  }
                  var updateQueue = finishedWork.updateQueue;
                  if (updateQueue !== null) {
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) {
                          error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        }
                        if (instance.state !== finishedWork.memoizedState) {
                          error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        }
                      }
                    }
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                  }
                  break;
                }
                case HostRoot: {
                  var _updateQueue = finishedWork.updateQueue;
                  if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) {
                      switch (finishedWork.child.tag) {
                        case HostComponent:
                          _instance = getPublicInstance(finishedWork.child.stateNode);
                          break;
                        case ClassComponent:
                          _instance = finishedWork.child.stateNode;
                          break;
                      }
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                  }
                  break;
                }
                case HostComponent: {
                  var _instance2 = finishedWork.stateNode;
                  if (current2 === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                  }
                  break;
                }
                case HostText: {
                  break;
                }
                case HostPortal: {
                  break;
                }
                case Profiler: {
                  {
                    var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                    var effectDuration = finishedWork.stateNode.effectDuration;
                    var commitTime2 = getCommitTime();
                    var phase = current2 === null ? "mount" : "update";
                    {
                      if (isCurrentUpdateNested()) {
                        phase = "nested-update";
                      }
                    }
                    if (typeof onRender === "function") {
                      onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2);
                    }
                    {
                      if (typeof onCommit === "function") {
                        onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime2);
                      }
                      enqueuePendingPassiveProfilerEffect(finishedWork);
                      var parentFiber = finishedWork.return;
                      outer:
                        while (parentFiber !== null) {
                          switch (parentFiber.tag) {
                            case HostRoot:
                              var root2 = parentFiber.stateNode;
                              root2.effectDuration += effectDuration;
                              break outer;
                            case Profiler:
                              var parentStateNode = parentFiber.stateNode;
                              parentStateNode.effectDuration += effectDuration;
                              break outer;
                          }
                          parentFiber = parentFiber.return;
                        }
                    }
                  }
                  break;
                }
                case SuspenseComponent: {
                  commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                  break;
                }
                case SuspenseListComponent:
                case IncompleteClassComponent:
                case ScopeComponent:
                case OffscreenComponent:
                case LegacyHiddenComponent:
                case TracingMarkerComponent: {
                  break;
                }
                default:
                  throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            if (!offscreenSubtreeWasHidden) {
              {
                if (finishedWork.flags & Ref) {
                  commitAttachRef(finishedWork);
                }
              }
            }
          }
          function reappearLayoutEffectsOnFiber(node) {
            switch (node.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                if (node.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    safelyCallCommitHookLayoutEffectListMount(node, node.return);
                  } finally {
                    recordLayoutEffectDuration(node);
                  }
                } else {
                  safelyCallCommitHookLayoutEffectListMount(node, node.return);
                }
                break;
              }
              case ClassComponent: {
                var instance = node.stateNode;
                if (typeof instance.componentDidMount === "function") {
                  safelyCallComponentDidMount(node, node.return, instance);
                }
                safelyAttachRef(node, node.return);
                break;
              }
              case HostComponent: {
                safelyAttachRef(node, node.return);
                break;
              }
            }
          }
          function hideOrUnhideAllChildren(finishedWork, isHidden) {
            var hostSubtreeRoot = null;
            {
              var node = finishedWork;
              while (true) {
                if (node.tag === HostComponent) {
                  if (hostSubtreeRoot === null) {
                    hostSubtreeRoot = node;
                    try {
                      var instance = node.stateNode;
                      if (isHidden) {
                        hideInstance(instance);
                      } else {
                        unhideInstance(node.stateNode, node.memoizedProps);
                      }
                    } catch (error2) {
                      captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                  }
                } else if (node.tag === HostText) {
                  if (hostSubtreeRoot === null) {
                    try {
                      var _instance3 = node.stateNode;
                      if (isHidden) {
                        hideTextInstance(_instance3);
                      } else {
                        unhideTextInstance(_instance3, node.memoizedProps);
                      }
                    } catch (error2) {
                      captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                  }
                } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)
                  ;
                else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === finishedWork) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === finishedWork) {
                    return;
                  }
                  if (hostSubtreeRoot === node) {
                    hostSubtreeRoot = null;
                  }
                  node = node.return;
                }
                if (hostSubtreeRoot === node) {
                  hostSubtreeRoot = null;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            }
          }
          function commitAttachRef(finishedWork) {
            var ref = finishedWork.ref;
            if (ref !== null) {
              var instance = finishedWork.stateNode;
              var instanceToUse;
              switch (finishedWork.tag) {
                case HostComponent:
                  instanceToUse = getPublicInstance(instance);
                  break;
                default:
                  instanceToUse = instance;
              }
              if (typeof ref === "function") {
                var retVal;
                if (finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    retVal = ref(instanceToUse);
                  } finally {
                    recordLayoutEffectDuration(finishedWork);
                  }
                } else {
                  retVal = ref(instanceToUse);
                }
                {
                  if (typeof retVal === "function") {
                    error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
                  }
                }
              } else {
                {
                  if (!ref.hasOwnProperty("current")) {
                    error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                  }
                }
                ref.current = instanceToUse;
              }
            }
          }
          function detachFiberMutation(fiber) {
            var alternate = fiber.alternate;
            if (alternate !== null) {
              alternate.return = null;
            }
            fiber.return = null;
          }
          function detachFiberAfterEffects(fiber) {
            var alternate = fiber.alternate;
            if (alternate !== null) {
              fiber.alternate = null;
              detachFiberAfterEffects(alternate);
            }
            {
              fiber.child = null;
              fiber.deletions = null;
              fiber.sibling = null;
              if (fiber.tag === HostComponent) {
                var hostInstance = fiber.stateNode;
                if (hostInstance !== null) {
                  detachDeletedInstance(hostInstance);
                }
              }
              fiber.stateNode = null;
              {
                fiber._debugOwner = null;
              }
              {
                fiber.return = null;
                fiber.dependencies = null;
                fiber.memoizedProps = null;
                fiber.memoizedState = null;
                fiber.pendingProps = null;
                fiber.stateNode = null;
                fiber.updateQueue = null;
              }
            }
          }
          function getHostParentFiber(fiber) {
            var parent = fiber.return;
            while (parent !== null) {
              if (isHostParent(parent)) {
                return parent;
              }
              parent = parent.return;
            }
            throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
          }
          function isHostParent(fiber) {
            return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
          }
          function getHostSibling(fiber) {
            var node = fiber;
            siblings:
              while (true) {
                while (node.sibling === null) {
                  if (node.return === null || isHostParent(node.return)) {
                    return null;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
                while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                  if (node.flags & Placement) {
                    continue siblings;
                  }
                  if (node.child === null || node.tag === HostPortal) {
                    continue siblings;
                  } else {
                    node.child.return = node;
                    node = node.child;
                  }
                }
                if (!(node.flags & Placement)) {
                  return node.stateNode;
                }
              }
          }
          function commitPlacement(finishedWork) {
            var parentFiber = getHostParentFiber(finishedWork);
            switch (parentFiber.tag) {
              case HostComponent: {
                var parent = parentFiber.stateNode;
                if (parentFiber.flags & ContentReset) {
                  resetTextContent(parent);
                  parentFiber.flags &= ~ContentReset;
                }
                var before = getHostSibling(finishedWork);
                insertOrAppendPlacementNode(finishedWork, before, parent);
                break;
              }
              case HostRoot:
              case HostPortal: {
                var _parent = parentFiber.stateNode.containerInfo;
                var _before = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                break;
              }
              default:
                throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
            var tag = node.tag;
            var isHost = tag === HostComponent || tag === HostText;
            if (isHost) {
              var stateNode = node.stateNode;
              if (before) {
                insertInContainerBefore(parent, stateNode, before);
              } else {
                appendChildToContainer(parent, stateNode);
              }
            } else if (tag === HostPortal)
              ;
            else {
              var child = node.child;
              if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while (sibling !== null) {
                  insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                  sibling = sibling.sibling;
                }
              }
            }
          }
          function insertOrAppendPlacementNode(node, before, parent) {
            var tag = node.tag;
            var isHost = tag === HostComponent || tag === HostText;
            if (isHost) {
              var stateNode = node.stateNode;
              if (before) {
                insertBefore(parent, stateNode, before);
              } else {
                appendChild(parent, stateNode);
              }
            } else if (tag === HostPortal)
              ;
            else {
              var child = node.child;
              if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while (sibling !== null) {
                  insertOrAppendPlacementNode(sibling, before, parent);
                  sibling = sibling.sibling;
                }
              }
            }
          }
          var hostParent = null;
          var hostParentIsContainer = false;
          function commitDeletionEffects(root2, returnFiber, deletedFiber) {
            {
              var parent = returnFiber;
              findParent:
                while (parent !== null) {
                  switch (parent.tag) {
                    case HostComponent: {
                      hostParent = parent.stateNode;
                      hostParentIsContainer = false;
                      break findParent;
                    }
                    case HostRoot: {
                      hostParent = parent.stateNode.containerInfo;
                      hostParentIsContainer = true;
                      break findParent;
                    }
                    case HostPortal: {
                      hostParent = parent.stateNode.containerInfo;
                      hostParentIsContainer = true;
                      break findParent;
                    }
                  }
                  parent = parent.return;
                }
              if (hostParent === null) {
                throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              }
              commitDeletionEffectsOnFiber(root2, returnFiber, deletedFiber);
              hostParent = null;
              hostParentIsContainer = false;
            }
            detachFiberMutation(deletedFiber);
          }
          function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
            var child = parent.child;
            while (child !== null) {
              commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
              child = child.sibling;
            }
          }
          function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
            onCommitUnmount(deletedFiber);
            switch (deletedFiber.tag) {
              case HostComponent: {
                if (!offscreenSubtreeWasHidden) {
                  safelyDetachRef(deletedFiber, nearestMountedAncestor);
                }
              }
              case HostText: {
                {
                  var prevHostParent = hostParent;
                  var prevHostParentIsContainer = hostParentIsContainer;
                  hostParent = null;
                  recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                  hostParent = prevHostParent;
                  hostParentIsContainer = prevHostParentIsContainer;
                  if (hostParent !== null) {
                    if (hostParentIsContainer) {
                      removeChildFromContainer(hostParent, deletedFiber.stateNode);
                    } else {
                      removeChild(hostParent, deletedFiber.stateNode);
                    }
                  }
                }
                return;
              }
              case DehydratedFragment: {
                {
                  if (hostParent !== null) {
                    if (hostParentIsContainer) {
                      clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                    } else {
                      clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                    }
                  }
                }
                return;
              }
              case HostPortal: {
                {
                  var _prevHostParent = hostParent;
                  var _prevHostParentIsContainer = hostParentIsContainer;
                  hostParent = deletedFiber.stateNode.containerInfo;
                  hostParentIsContainer = true;
                  recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                  hostParent = _prevHostParent;
                  hostParentIsContainer = _prevHostParentIsContainer;
                }
                return;
              }
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent: {
                if (!offscreenSubtreeWasHidden) {
                  var updateQueue = deletedFiber.updateQueue;
                  if (updateQueue !== null) {
                    var lastEffect = updateQueue.lastEffect;
                    if (lastEffect !== null) {
                      var firstEffect = lastEffect.next;
                      var effect = firstEffect;
                      do {
                        var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                        if (destroy !== void 0) {
                          if ((tag & Insertion) !== NoFlags$1) {
                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                          } else if ((tag & Layout) !== NoFlags$1) {
                            {
                              markComponentLayoutEffectUnmountStarted(deletedFiber);
                            }
                            if (deletedFiber.mode & ProfileMode) {
                              startLayoutEffectTimer();
                              safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                              recordLayoutEffectDuration(deletedFiber);
                            } else {
                              safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                            }
                            {
                              markComponentLayoutEffectUnmountStopped();
                            }
                          }
                        }
                        effect = effect.next;
                      } while (effect !== firstEffect);
                    }
                  }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
              }
              case ClassComponent: {
                if (!offscreenSubtreeWasHidden) {
                  safelyDetachRef(deletedFiber, nearestMountedAncestor);
                  var instance = deletedFiber.stateNode;
                  if (typeof instance.componentWillUnmount === "function") {
                    safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                  }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
              }
              case ScopeComponent: {
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
              }
              case OffscreenComponent: {
                if (deletedFiber.mode & ConcurrentMode) {
                  var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                  offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                  recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                  offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else {
                  recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                }
                break;
              }
              default: {
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
              }
            }
          }
          function commitSuspenseCallback(finishedWork) {
            var newState = finishedWork.memoizedState;
          }
          function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
            var newState = finishedWork.memoizedState;
            if (newState === null) {
              var current2 = finishedWork.alternate;
              if (current2 !== null) {
                var prevState = current2.memoizedState;
                if (prevState !== null) {
                  var suspenseInstance = prevState.dehydrated;
                  if (suspenseInstance !== null) {
                    commitHydratedSuspenseInstance(suspenseInstance);
                  }
                }
              }
            }
          }
          function attachSuspenseRetryListeners(finishedWork) {
            var wakeables = finishedWork.updateQueue;
            if (wakeables !== null) {
              finishedWork.updateQueue = null;
              var retryCache = finishedWork.stateNode;
              if (retryCache === null) {
                retryCache = finishedWork.stateNode = new PossiblyWeakSet();
              }
              wakeables.forEach(function(wakeable) {
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                  retryCache.add(wakeable);
                  {
                    if (isDevToolsPresent) {
                      if (inProgressLanes !== null && inProgressRoot !== null) {
                        restorePendingUpdaters(inProgressRoot, inProgressLanes);
                      } else {
                        throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                      }
                    }
                  }
                  wakeable.then(retry, retry);
                }
              });
            }
          }
          function commitMutationEffects(root2, finishedWork, committedLanes) {
            inProgressLanes = committedLanes;
            inProgressRoot = root2;
            setCurrentFiber(finishedWork);
            commitMutationEffectsOnFiber(finishedWork, root2);
            setCurrentFiber(finishedWork);
            inProgressLanes = null;
            inProgressRoot = null;
          }
          function recursivelyTraverseMutationEffects(root2, parentFiber, lanes) {
            var deletions = parentFiber.deletions;
            if (deletions !== null) {
              for (var i2 = 0; i2 < deletions.length; i2++) {
                var childToDelete = deletions[i2];
                try {
                  commitDeletionEffects(root2, parentFiber, childToDelete);
                } catch (error2) {
                  captureCommitPhaseError(childToDelete, parentFiber, error2);
                }
              }
            }
            var prevDebugFiber = getCurrentFiber();
            if (parentFiber.subtreeFlags & MutationMask) {
              var child = parentFiber.child;
              while (child !== null) {
                setCurrentFiber(child);
                commitMutationEffectsOnFiber(child, root2);
                child = child.sibling;
              }
            }
            setCurrentFiber(prevDebugFiber);
          }
          function commitMutationEffectsOnFiber(finishedWork, root2, lanes) {
            var current2 = finishedWork.alternate;
            var flags = finishedWork.flags;
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                  try {
                    commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                    commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                  if (finishedWork.mode & ProfileMode) {
                    try {
                      startLayoutEffectTimer();
                      commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error2) {
                      captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                    recordLayoutEffectDuration(finishedWork);
                  } else {
                    try {
                      commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error2) {
                      captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                  }
                }
                return;
              }
              case ClassComponent: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                  if (current2 !== null) {
                    safelyDetachRef(current2, current2.return);
                  }
                }
                return;
              }
              case HostComponent: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                  if (current2 !== null) {
                    safelyDetachRef(current2, current2.return);
                  }
                }
                {
                  if (finishedWork.flags & ContentReset) {
                    var instance = finishedWork.stateNode;
                    try {
                      resetTextContent(instance);
                    } catch (error2) {
                      captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                  }
                  if (flags & Update) {
                    var _instance4 = finishedWork.stateNode;
                    if (_instance4 != null) {
                      var newProps = finishedWork.memoizedProps;
                      var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                      var type = finishedWork.type;
                      var updatePayload = finishedWork.updateQueue;
                      finishedWork.updateQueue = null;
                      if (updatePayload !== null) {
                        try {
                          commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                        } catch (error2) {
                          captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                        }
                      }
                    }
                  }
                }
                return;
              }
              case HostText: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                  {
                    if (finishedWork.stateNode === null) {
                      throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    }
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps;
                    var oldText = current2 !== null ? current2.memoizedProps : newText;
                    try {
                      commitTextUpdate(textInstance, oldText, newText);
                    } catch (error2) {
                      captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                  }
                }
                return;
              }
              case HostRoot: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                  {
                    if (current2 !== null) {
                      var prevRootState = current2.memoizedState;
                      if (prevRootState.isDehydrated) {
                        try {
                          commitHydratedContainer(root2.containerInfo);
                        } catch (error2) {
                          captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                        }
                      }
                    }
                  }
                }
                return;
              }
              case HostPortal: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
              }
              case SuspenseComponent: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                var offscreenFiber = finishedWork.child;
                if (offscreenFiber.flags & Visibility) {
                  var offscreenInstance = offscreenFiber.stateNode;
                  var newState = offscreenFiber.memoizedState;
                  var isHidden = newState !== null;
                  offscreenInstance.isHidden = isHidden;
                  if (isHidden) {
                    var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                    if (!wasHidden) {
                      markCommitTimeOfFallback();
                    }
                  }
                }
                if (flags & Update) {
                  try {
                    commitSuspenseCallback(finishedWork);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                  attachSuspenseRetryListeners(finishedWork);
                }
                return;
              }
              case OffscreenComponent: {
                var _wasHidden = current2 !== null && current2.memoizedState !== null;
                if (finishedWork.mode & ConcurrentMode) {
                  var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                  offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                  recursivelyTraverseMutationEffects(root2, finishedWork);
                  offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else {
                  recursivelyTraverseMutationEffects(root2, finishedWork);
                }
                commitReconciliationEffects(finishedWork);
                if (flags & Visibility) {
                  var _offscreenInstance = finishedWork.stateNode;
                  var _newState = finishedWork.memoizedState;
                  var _isHidden = _newState !== null;
                  var offscreenBoundary = finishedWork;
                  _offscreenInstance.isHidden = _isHidden;
                  {
                    if (_isHidden) {
                      if (!_wasHidden) {
                        if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                          nextEffect = offscreenBoundary;
                          var offscreenChild = offscreenBoundary.child;
                          while (offscreenChild !== null) {
                            nextEffect = offscreenChild;
                            disappearLayoutEffects_begin(offscreenChild);
                            offscreenChild = offscreenChild.sibling;
                          }
                        }
                      }
                    }
                  }
                  {
                    hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                  }
                }
                return;
              }
              case SuspenseListComponent: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                  attachSuspenseRetryListeners(finishedWork);
                }
                return;
              }
              case ScopeComponent: {
                return;
              }
              default: {
                recursivelyTraverseMutationEffects(root2, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
              }
            }
          }
          function commitReconciliationEffects(finishedWork) {
            var flags = finishedWork.flags;
            if (flags & Placement) {
              try {
                commitPlacement(finishedWork);
              } catch (error2) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
              }
              finishedWork.flags &= ~Placement;
            }
            if (flags & Hydrating) {
              finishedWork.flags &= ~Hydrating;
            }
          }
          function commitLayoutEffects(finishedWork, root2, committedLanes) {
            inProgressLanes = committedLanes;
            inProgressRoot = root2;
            nextEffect = finishedWork;
            commitLayoutEffects_begin(finishedWork, root2, committedLanes);
            inProgressLanes = null;
            inProgressRoot = null;
          }
          function commitLayoutEffects_begin(subtreeRoot, root2, committedLanes) {
            var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
            while (nextEffect !== null) {
              var fiber = nextEffect;
              var firstChild = fiber.child;
              if (fiber.tag === OffscreenComponent && isModernRoot) {
                var isHidden = fiber.memoizedState !== null;
                var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                if (newOffscreenSubtreeIsHidden) {
                  commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
                  continue;
                } else {
                  var current2 = fiber.alternate;
                  var wasHidden = current2 !== null && current2.memoizedState !== null;
                  var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                  var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                  var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                  offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                  offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                  if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                    nextEffect = fiber;
                    reappearLayoutEffects_begin(fiber);
                  }
                  var child = firstChild;
                  while (child !== null) {
                    nextEffect = child;
                    commitLayoutEffects_begin(
                      child,
                      root2,
                      committedLanes
                    );
                    child = child.sibling;
                  }
                  nextEffect = fiber;
                  offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                  offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                  commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
                  continue;
                }
              }
              if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
              } else {
                commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
              }
            }
          }
          function commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              if ((fiber.flags & LayoutMask) !== NoFlags) {
                var current2 = fiber.alternate;
                setCurrentFiber(fiber);
                try {
                  commitLayoutEffectOnFiber(root2, current2, fiber, committedLanes);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                resetCurrentFiber();
              }
              if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
              }
              var sibling = fiber.sibling;
              if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
              }
              nextEffect = fiber.return;
            }
          }
          function disappearLayoutEffects_begin(subtreeRoot) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              var firstChild = fiber.child;
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent: {
                  if (fiber.mode & ProfileMode) {
                    try {
                      startLayoutEffectTimer();
                      commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    } finally {
                      recordLayoutEffectDuration(fiber);
                    }
                  } else {
                    commitHookEffectListUnmount(Layout, fiber, fiber.return);
                  }
                  break;
                }
                case ClassComponent: {
                  safelyDetachRef(fiber, fiber.return);
                  var instance = fiber.stateNode;
                  if (typeof instance.componentWillUnmount === "function") {
                    safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                  }
                  break;
                }
                case HostComponent: {
                  safelyDetachRef(fiber, fiber.return);
                  break;
                }
                case OffscreenComponent: {
                  var isHidden = fiber.memoizedState !== null;
                  if (isHidden) {
                    disappearLayoutEffects_complete(subtreeRoot);
                    continue;
                  }
                  break;
                }
              }
              if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
              } else {
                disappearLayoutEffects_complete(subtreeRoot);
              }
            }
          }
          function disappearLayoutEffects_complete(subtreeRoot) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
              }
              var sibling = fiber.sibling;
              if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
              }
              nextEffect = fiber.return;
            }
          }
          function reappearLayoutEffects_begin(subtreeRoot) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              var firstChild = fiber.child;
              if (fiber.tag === OffscreenComponent) {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                  reappearLayoutEffects_complete(subtreeRoot);
                  continue;
                }
              }
              if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
              } else {
                reappearLayoutEffects_complete(subtreeRoot);
              }
            }
          }
          function reappearLayoutEffects_complete(subtreeRoot) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              setCurrentFiber(fiber);
              try {
                reappearLayoutEffectsOnFiber(fiber);
              } catch (error2) {
                captureCommitPhaseError(fiber, fiber.return, error2);
              }
              resetCurrentFiber();
              if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
              }
              var sibling = fiber.sibling;
              if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
              }
              nextEffect = fiber.return;
            }
          }
          function commitPassiveMountEffects(root2, finishedWork, committedLanes, committedTransitions) {
            nextEffect = finishedWork;
            commitPassiveMountEffects_begin(finishedWork, root2, committedLanes, committedTransitions);
          }
          function commitPassiveMountEffects_begin(subtreeRoot, root2, committedLanes, committedTransitions) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              var firstChild = fiber.child;
              if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
              } else {
                commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions);
              }
            }
          }
          function commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                try {
                  commitPassiveMountOnFiber(root2, fiber, committedLanes, committedTransitions);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                resetCurrentFiber();
              }
              if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
              }
              var sibling = fiber.sibling;
              if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
              }
              nextEffect = fiber.return;
            }
          }
          function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                if (finishedWork.mode & ProfileMode) {
                  startPassiveEffectTimer();
                  try {
                    commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                  } finally {
                    recordPassiveEffectDuration(finishedWork);
                  }
                } else {
                  commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                }
                break;
              }
            }
          }
          function commitPassiveUnmountEffects(firstChild) {
            nextEffect = firstChild;
            commitPassiveUnmountEffects_begin();
          }
          function commitPassiveUnmountEffects_begin() {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              var child = fiber.child;
              if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                var deletions = fiber.deletions;
                if (deletions !== null) {
                  for (var i2 = 0; i2 < deletions.length; i2++) {
                    var fiberToDelete = deletions[i2];
                    nextEffect = fiberToDelete;
                    commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                  }
                  {
                    var previousFiber = fiber.alternate;
                    if (previousFiber !== null) {
                      var detachedChild = previousFiber.child;
                      if (detachedChild !== null) {
                        previousFiber.child = null;
                        do {
                          var detachedSibling = detachedChild.sibling;
                          detachedChild.sibling = null;
                          detachedChild = detachedSibling;
                        } while (detachedChild !== null);
                      }
                    }
                  }
                  nextEffect = fiber;
                }
              }
              if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
              } else {
                commitPassiveUnmountEffects_complete();
              }
            }
          }
          function commitPassiveUnmountEffects_complete() {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                commitPassiveUnmountOnFiber(fiber);
                resetCurrentFiber();
              }
              var sibling = fiber.sibling;
              if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
              }
              nextEffect = fiber.return;
            }
          }
          function commitPassiveUnmountOnFiber(finishedWork) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                if (finishedWork.mode & ProfileMode) {
                  startPassiveEffectTimer();
                  commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                  recordPassiveEffectDuration(finishedWork);
                } else {
                  commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                }
                break;
              }
            }
          }
          function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              setCurrentFiber(fiber);
              commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
              resetCurrentFiber();
              var child = fiber.child;
              if (child !== null) {
                child.return = fiber;
                nextEffect = child;
              } else {
                commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
              }
            }
          }
          function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
            while (nextEffect !== null) {
              var fiber = nextEffect;
              var sibling = fiber.sibling;
              var returnFiber = fiber.return;
              {
                detachFiberAfterEffects(fiber);
                if (fiber === deletedSubtreeRoot) {
                  nextEffect = null;
                  return;
                }
              }
              if (sibling !== null) {
                sibling.return = returnFiber;
                nextEffect = sibling;
                return;
              }
              nextEffect = returnFiber;
            }
          }
          function commitPassiveUnmountInsideDeletedTreeOnFiber(current2, nearestMountedAncestor) {
            switch (current2.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                if (current2.mode & ProfileMode) {
                  startPassiveEffectTimer();
                  commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
                  recordPassiveEffectDuration(current2);
                } else {
                  commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
                }
                break;
              }
            }
          }
          function invokeLayoutEffectMountInDEV(fiber) {
            {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  try {
                    commitHookEffectListMount(Layout | HasEffect, fiber);
                  } catch (error2) {
                    captureCommitPhaseError(fiber, fiber.return, error2);
                  }
                  break;
                }
                case ClassComponent: {
                  var instance = fiber.stateNode;
                  try {
                    instance.componentDidMount();
                  } catch (error2) {
                    captureCommitPhaseError(fiber, fiber.return, error2);
                  }
                  break;
                }
              }
            }
          }
          function invokePassiveEffectMountInDEV(fiber) {
            {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  try {
                    commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                  } catch (error2) {
                    captureCommitPhaseError(fiber, fiber.return, error2);
                  }
                  break;
                }
              }
            }
          }
          function invokeLayoutEffectUnmountInDEV(fiber) {
            {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  try {
                    commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                  } catch (error2) {
                    captureCommitPhaseError(fiber, fiber.return, error2);
                  }
                  break;
                }
                case ClassComponent: {
                  var instance = fiber.stateNode;
                  if (typeof instance.componentWillUnmount === "function") {
                    safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                  }
                  break;
                }
              }
            }
          }
          function invokePassiveEffectUnmountInDEV(fiber) {
            {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  try {
                    commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                  } catch (error2) {
                    captureCommitPhaseError(fiber, fiber.return, error2);
                  }
                }
              }
            }
          }
          var COMPONENT_TYPE = 0;
          var HAS_PSEUDO_CLASS_TYPE = 1;
          var ROLE_TYPE = 2;
          var TEST_NAME_TYPE = 3;
          var TEXT_TYPE = 4;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor = Symbol.for;
            COMPONENT_TYPE = symbolFor("selector.component");
            HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
            ROLE_TYPE = symbolFor("selector.role");
            TEST_NAME_TYPE = symbolFor("selector.test_id");
            TEXT_TYPE = symbolFor("selector.text");
          }
          var commitHooks = [];
          function onCommitRoot$1() {
            {
              commitHooks.forEach(function(commitHook) {
                return commitHook();
              });
            }
          }
          var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
          function isLegacyActEnvironment(fiber) {
            {
              var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0;
              var jestIsDefined = typeof jest !== "undefined";
              return jestIsDefined && isReactActEnvironmentGlobal !== false;
            }
          }
          function isConcurrentActEnvironment() {
            {
              var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0;
              if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {
                error("The current testing environment is not configured to support act(...)");
              }
              return isReactActEnvironmentGlobal;
            }
          }
          var ceil = Math.ceil;
          var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
          var NoContext = 0;
          var BatchedContext = 1;
          var RenderContext = 2;
          var CommitContext = 4;
          var RootInProgress = 0;
          var RootFatalErrored = 1;
          var RootErrored = 2;
          var RootSuspended = 3;
          var RootSuspendedWithDelay = 4;
          var RootCompleted = 5;
          var RootDidNotComplete = 6;
          var executionContext = NoContext;
          var workInProgressRoot = null;
          var workInProgress = null;
          var workInProgressRootRenderLanes = NoLanes;
          var subtreeRenderLanes = NoLanes;
          var subtreeRenderLanesCursor = createCursor(NoLanes);
          var workInProgressRootExitStatus = RootInProgress;
          var workInProgressRootFatalError = null;
          var workInProgressRootIncludedLanes = NoLanes;
          var workInProgressRootSkippedLanes = NoLanes;
          var workInProgressRootInterleavedUpdatedLanes = NoLanes;
          var workInProgressRootPingedLanes = NoLanes;
          var workInProgressRootConcurrentErrors = null;
          var workInProgressRootRecoverableErrors = null;
          var globalMostRecentFallbackTime = 0;
          var FALLBACK_THROTTLE_MS = 500;
          var workInProgressRootRenderTargetTime = Infinity;
          var RENDER_TIMEOUT_MS = 500;
          var workInProgressTransitions = null;
          function resetRenderTimer() {
            workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
          }
          function getRenderTargetTime() {
            return workInProgressRootRenderTargetTime;
          }
          var hasUncaughtError = false;
          var firstUncaughtError = null;
          var legacyErrorBoundariesThatAlreadyFailed = null;
          var rootDoesHavePassiveEffects = false;
          var rootWithPendingPassiveEffects = null;
          var pendingPassiveEffectsLanes = NoLanes;
          var pendingPassiveProfilerEffects = [];
          var pendingPassiveTransitions = null;
          var NESTED_UPDATE_LIMIT = 50;
          var nestedUpdateCount = 0;
          var rootWithNestedUpdates = null;
          var isFlushingPassiveEffects = false;
          var didScheduleUpdateDuringPassiveEffects = false;
          var NESTED_PASSIVE_UPDATE_LIMIT = 50;
          var nestedPassiveUpdateCount = 0;
          var rootWithPassiveNestedUpdates = null;
          var currentEventTime = NoTimestamp;
          var currentEventTransitionLane = NoLanes;
          var isRunningInsertionEffect = false;
          function getWorkInProgressRoot() {
            return workInProgressRoot;
          }
          function requestEventTime() {
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              return now();
            }
            if (currentEventTime !== NoTimestamp) {
              return currentEventTime;
            }
            currentEventTime = now();
            return currentEventTime;
          }
          function requestUpdateLane(fiber) {
            var mode = fiber.mode;
            if ((mode & ConcurrentMode) === NoMode) {
              return SyncLane;
            } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {
              return pickArbitraryLane(workInProgressRootRenderLanes);
            }
            var isTransition = requestCurrentTransition() !== NoTransition;
            if (isTransition) {
              if (ReactCurrentBatchConfig$3.transition !== null) {
                var transition = ReactCurrentBatchConfig$3.transition;
                if (!transition._updatedFibers) {
                  transition._updatedFibers = /* @__PURE__ */ new Set();
                }
                transition._updatedFibers.add(fiber);
              }
              if (currentEventTransitionLane === NoLane) {
                currentEventTransitionLane = claimNextTransitionLane();
              }
              return currentEventTransitionLane;
            }
            var updateLane = getCurrentUpdatePriority();
            if (updateLane !== NoLane) {
              return updateLane;
            }
            var eventLane = getCurrentEventPriority();
            return eventLane;
          }
          function requestRetryLane(fiber) {
            var mode = fiber.mode;
            if ((mode & ConcurrentMode) === NoMode) {
              return SyncLane;
            }
            return claimNextRetryLane();
          }
          function scheduleUpdateOnFiber(root2, fiber, lane, eventTime) {
            checkForNestedUpdates();
            {
              if (isRunningInsertionEffect) {
                error("useInsertionEffect must not schedule updates.");
              }
            }
            {
              if (isFlushingPassiveEffects) {
                didScheduleUpdateDuringPassiveEffects = true;
              }
            }
            markRootUpdated(root2, lane, eventTime);
            if ((executionContext & RenderContext) !== NoLanes && root2 === workInProgressRoot) {
              warnAboutRenderPhaseUpdatesInDEV(fiber);
            } else {
              {
                if (isDevToolsPresent) {
                  addFiberToLanesMap(root2, fiber, lane);
                }
              }
              warnIfUpdatesNotWrappedWithActDEV(fiber);
              if (root2 === workInProgressRoot) {
                if ((executionContext & RenderContext) === NoContext) {
                  workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                }
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
                  markRootSuspended$1(root2, workInProgressRootRenderLanes);
                }
              }
              ensureRootIsScheduled(root2, eventTime);
              if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
              }
            }
          }
          function scheduleInitialHydrationOnRoot(root2, lane, eventTime) {
            var current2 = root2.current;
            current2.lanes = lane;
            markRootUpdated(root2, lane, eventTime);
            ensureRootIsScheduled(root2, eventTime);
          }
          function isUnsafeClassRenderPhaseUpdate(fiber) {
            return (executionContext & RenderContext) !== NoContext;
          }
          function ensureRootIsScheduled(root2, currentTime) {
            var existingCallbackNode = root2.callbackNode;
            markStarvedLanesAsExpired(root2, currentTime);
            var nextLanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
            if (nextLanes === NoLanes) {
              if (existingCallbackNode !== null) {
                cancelCallback$1(existingCallbackNode);
              }
              root2.callbackNode = null;
              root2.callbackPriority = NoLane;
              return;
            }
            var newCallbackPriority = getHighestPriorityLane(nextLanes);
            var existingCallbackPriority = root2.callbackPriority;
            if (existingCallbackPriority === newCallbackPriority && !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
              {
                if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {
                  error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              return;
            }
            if (existingCallbackNode != null) {
              cancelCallback$1(existingCallbackNode);
            }
            var newCallbackNode;
            if (newCallbackPriority === SyncLane) {
              if (root2.tag === LegacyRoot) {
                if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {
                  ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                }
                scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root2));
              } else {
                scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root2));
              }
              {
                if (ReactCurrentActQueue$1.current !== null) {
                  ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
                } else {
                  scheduleMicrotask(function() {
                    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                      flushSyncCallbacks();
                    }
                  });
                }
              }
              newCallbackNode = null;
            } else {
              var schedulerPriorityLevel;
              switch (lanesToEventPriority(nextLanes)) {
                case DiscreteEventPriority:
                  schedulerPriorityLevel = ImmediatePriority;
                  break;
                case ContinuousEventPriority:
                  schedulerPriorityLevel = UserBlockingPriority;
                  break;
                case DefaultEventPriority:
                  schedulerPriorityLevel = NormalPriority;
                  break;
                case IdleEventPriority:
                  schedulerPriorityLevel = IdlePriority;
                  break;
                default:
                  schedulerPriorityLevel = NormalPriority;
                  break;
              }
              newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root2));
            }
            root2.callbackPriority = newCallbackPriority;
            root2.callbackNode = newCallbackNode;
          }
          function performConcurrentWorkOnRoot(root2, didTimeout) {
            {
              resetNestedUpdateFlag();
            }
            currentEventTime = NoTimestamp;
            currentEventTransitionLane = NoLanes;
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              throw new Error("Should not already be working.");
            }
            var originalCallbackNode = root2.callbackNode;
            var didFlushPassiveEffects = flushPassiveEffects();
            if (didFlushPassiveEffects) {
              if (root2.callbackNode !== originalCallbackNode) {
                return null;
              }
            }
            var lanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
            if (lanes === NoLanes) {
              return null;
            }
            var shouldTimeSlice = !includesBlockingLane(root2, lanes) && !includesExpiredLane(root2, lanes) && !didTimeout;
            var exitStatus = shouldTimeSlice ? renderRootConcurrent(root2, lanes) : renderRootSync(root2, lanes);
            if (exitStatus !== RootInProgress) {
              if (exitStatus === RootErrored) {
                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
                if (errorRetryLanes !== NoLanes) {
                  lanes = errorRetryLanes;
                  exitStatus = recoverFromConcurrentError(root2, errorRetryLanes);
                }
              }
              if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root2, NoLanes);
                markRootSuspended$1(root2, lanes);
                ensureRootIsScheduled(root2, now());
                throw fatalError;
              }
              if (exitStatus === RootDidNotComplete) {
                markRootSuspended$1(root2, lanes);
              } else {
                var renderWasConcurrent = !includesBlockingLane(root2, lanes);
                var finishedWork = root2.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                  exitStatus = renderRootSync(root2, lanes);
                  if (exitStatus === RootErrored) {
                    var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
                    if (_errorRetryLanes !== NoLanes) {
                      lanes = _errorRetryLanes;
                      exitStatus = recoverFromConcurrentError(root2, _errorRetryLanes);
                    }
                  }
                  if (exitStatus === RootFatalErrored) {
                    var _fatalError = workInProgressRootFatalError;
                    prepareFreshStack(root2, NoLanes);
                    markRootSuspended$1(root2, lanes);
                    ensureRootIsScheduled(root2, now());
                    throw _fatalError;
                  }
                }
                root2.finishedWork = finishedWork;
                root2.finishedLanes = lanes;
                finishConcurrentRender(root2, exitStatus, lanes);
              }
            }
            ensureRootIsScheduled(root2, now());
            if (root2.callbackNode === originalCallbackNode) {
              return performConcurrentWorkOnRoot.bind(null, root2);
            }
            return null;
          }
          function recoverFromConcurrentError(root2, errorRetryLanes) {
            var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
            if (isRootDehydrated(root2)) {
              var rootWorkInProgress = prepareFreshStack(root2, errorRetryLanes);
              rootWorkInProgress.flags |= ForceClientRender;
              {
                errorHydratingContainer(root2.containerInfo);
              }
            }
            var exitStatus = renderRootSync(root2, errorRetryLanes);
            if (exitStatus !== RootErrored) {
              var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
              workInProgressRootRecoverableErrors = errorsFromFirstAttempt;
              if (errorsFromSecondAttempt !== null) {
                queueRecoverableErrors(errorsFromSecondAttempt);
              }
            }
            return exitStatus;
          }
          function queueRecoverableErrors(errors) {
            if (workInProgressRootRecoverableErrors === null) {
              workInProgressRootRecoverableErrors = errors;
            } else {
              workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
            }
          }
          function finishConcurrentRender(root2, exitStatus, lanes) {
            switch (exitStatus) {
              case RootInProgress:
              case RootFatalErrored: {
                throw new Error("Root did not complete. This is a bug in React.");
              }
              case RootErrored: {
                commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
              }
              case RootSuspended: {
                markRootSuspended$1(root2, lanes);
                if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                  var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
                  if (msUntilTimeout > 10) {
                    var nextLanes = getNextLanes(root2, NoLanes);
                    if (nextLanes !== NoLanes) {
                      break;
                    }
                    var suspendedLanes = root2.suspendedLanes;
                    if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                      var eventTime = requestEventTime();
                      markRootPinged(root2, suspendedLanes);
                      break;
                    }
                    root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                    break;
                  }
                }
                commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
              }
              case RootSuspendedWithDelay: {
                markRootSuspended$1(root2, lanes);
                if (includesOnlyTransitions(lanes)) {
                  break;
                }
                if (!shouldForceFlushFallbacksInDEV()) {
                  var mostRecentEventTime = getMostRecentEventTime(root2, lanes);
                  var eventTimeMs = mostRecentEventTime;
                  var timeElapsedMs = now() - eventTimeMs;
                  var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                  if (_msUntilTimeout > 10) {
                    root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                    break;
                  }
                }
                commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
              }
              case RootCompleted: {
                commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
              }
              default: {
                throw new Error("Unknown root exit status.");
              }
            }
          }
          function isRenderConsistentWithExternalStores(finishedWork) {
            var node = finishedWork;
            while (true) {
              if (node.flags & StoreConsistency) {
                var updateQueue = node.updateQueue;
                if (updateQueue !== null) {
                  var checks = updateQueue.stores;
                  if (checks !== null) {
                    for (var i2 = 0; i2 < checks.length; i2++) {
                      var check = checks[i2];
                      var getSnapshot = check.getSnapshot;
                      var renderedValue = check.value;
                      try {
                        if (!objectIs(getSnapshot(), renderedValue)) {
                          return false;
                        }
                      } catch (error2) {
                        return false;
                      }
                    }
                  }
                }
              }
              var child = node.child;
              if (node.subtreeFlags & StoreConsistency && child !== null) {
                child.return = node;
                node = child;
                continue;
              }
              if (node === finishedWork) {
                return true;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return true;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return true;
          }
          function markRootSuspended$1(root2, suspendedLanes) {
            suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
            suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
            markRootSuspended(root2, suspendedLanes);
          }
          function performSyncWorkOnRoot(root2) {
            {
              syncNestedUpdateFlag();
            }
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              throw new Error("Should not already be working.");
            }
            flushPassiveEffects();
            var lanes = getNextLanes(root2, NoLanes);
            if (!includesSomeLane(lanes, SyncLane)) {
              ensureRootIsScheduled(root2, now());
              return null;
            }
            var exitStatus = renderRootSync(root2, lanes);
            if (root2.tag !== LegacyRoot && exitStatus === RootErrored) {
              var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
              if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root2, errorRetryLanes);
              }
            }
            if (exitStatus === RootFatalErrored) {
              var fatalError = workInProgressRootFatalError;
              prepareFreshStack(root2, NoLanes);
              markRootSuspended$1(root2, lanes);
              ensureRootIsScheduled(root2, now());
              throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) {
              throw new Error("Root did not complete. This is a bug in React.");
            }
            var finishedWork = root2.current.alternate;
            root2.finishedWork = finishedWork;
            root2.finishedLanes = lanes;
            commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
            ensureRootIsScheduled(root2, now());
            return null;
          }
          function flushRoot(root2, lanes) {
            if (lanes !== NoLanes) {
              markRootEntangled(root2, mergeLanes(lanes, SyncLane));
              ensureRootIsScheduled(root2, now());
              if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                resetRenderTimer();
                flushSyncCallbacks();
              }
            }
          }
          function batchedUpdates$1(fn2, a2) {
            var prevExecutionContext = executionContext;
            executionContext |= BatchedContext;
            try {
              return fn2(a2);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
              }
            }
          }
          function discreteUpdates(fn2, a2, b2, c2, d2) {
            var previousPriority = getCurrentUpdatePriority();
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            try {
              ReactCurrentBatchConfig$3.transition = null;
              setCurrentUpdatePriority(DiscreteEventPriority);
              return fn2(a2, b2, c2, d2);
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig$3.transition = prevTransition;
              if (executionContext === NoContext) {
                resetRenderTimer();
              }
            }
          }
          function flushSync(fn2) {
            if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {
              flushPassiveEffects();
            }
            var prevExecutionContext = executionContext;
            executionContext |= BatchedContext;
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
              ReactCurrentBatchConfig$3.transition = null;
              setCurrentUpdatePriority(DiscreteEventPriority);
              if (fn2) {
                return fn2();
              } else {
                return void 0;
              }
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig$3.transition = prevTransition;
              executionContext = prevExecutionContext;
              if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                flushSyncCallbacks();
              }
            }
          }
          function isAlreadyRendering() {
            return (executionContext & (RenderContext | CommitContext)) !== NoContext;
          }
          function pushRenderLanes(fiber, lanes) {
            push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
            subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
            workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
          }
          function popRenderLanes(fiber) {
            subtreeRenderLanes = subtreeRenderLanesCursor.current;
            pop(subtreeRenderLanesCursor, fiber);
          }
          function prepareFreshStack(root2, lanes) {
            root2.finishedWork = null;
            root2.finishedLanes = NoLanes;
            var timeoutHandle = root2.timeoutHandle;
            if (timeoutHandle !== noTimeout) {
              root2.timeoutHandle = noTimeout;
              cancelTimeout(timeoutHandle);
            }
            if (workInProgress !== null) {
              var interruptedWork = workInProgress.return;
              while (interruptedWork !== null) {
                var current2 = interruptedWork.alternate;
                unwindInterruptedWork(current2, interruptedWork);
                interruptedWork = interruptedWork.return;
              }
            }
            workInProgressRoot = root2;
            var rootWorkInProgress = createWorkInProgress(root2.current, null);
            workInProgress = rootWorkInProgress;
            workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
            workInProgressRootExitStatus = RootInProgress;
            workInProgressRootFatalError = null;
            workInProgressRootSkippedLanes = NoLanes;
            workInProgressRootInterleavedUpdatedLanes = NoLanes;
            workInProgressRootPingedLanes = NoLanes;
            workInProgressRootConcurrentErrors = null;
            workInProgressRootRecoverableErrors = null;
            finishQueueingConcurrentUpdates();
            {
              ReactStrictModeWarnings.discardPendingWarnings();
            }
            return rootWorkInProgress;
          }
          function handleError(root2, thrownValue) {
            do {
              var erroredWork = workInProgress;
              try {
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber();
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                  workInProgressRootExitStatus = RootFatalErrored;
                  workInProgressRootFatalError = thrownValue;
                  workInProgress = null;
                  return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                }
                if (enableSchedulingProfiler) {
                  markComponentRenderStopped();
                  if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                    var wakeable = thrownValue;
                    markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                  } else {
                    markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                  }
                }
                throwException(root2, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
              } catch (yetAnotherThrownValue) {
                thrownValue = yetAnotherThrownValue;
                if (workInProgress === erroredWork && erroredWork !== null) {
                  erroredWork = erroredWork.return;
                  workInProgress = erroredWork;
                } else {
                  erroredWork = workInProgress;
                }
                continue;
              }
              return;
            } while (true);
          }
          function pushDispatcher() {
            var prevDispatcher = ReactCurrentDispatcher$2.current;
            ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
            if (prevDispatcher === null) {
              return ContextOnlyDispatcher;
            } else {
              return prevDispatcher;
            }
          }
          function popDispatcher(prevDispatcher) {
            ReactCurrentDispatcher$2.current = prevDispatcher;
          }
          function markCommitTimeOfFallback() {
            globalMostRecentFallbackTime = now();
          }
          function markSkippedUpdateLanes(lane) {
            workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
          }
          function renderDidSuspend() {
            if (workInProgressRootExitStatus === RootInProgress) {
              workInProgressRootExitStatus = RootSuspended;
            }
          }
          function renderDidSuspendDelayIfPossible() {
            if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {
              workInProgressRootExitStatus = RootSuspendedWithDelay;
            }
            if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {
              markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
            }
          }
          function renderDidError(error2) {
            if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {
              workInProgressRootExitStatus = RootErrored;
            }
            if (workInProgressRootConcurrentErrors === null) {
              workInProgressRootConcurrentErrors = [error2];
            } else {
              workInProgressRootConcurrentErrors.push(error2);
            }
          }
          function renderHasNotSuspendedYet() {
            return workInProgressRootExitStatus === RootInProgress;
          }
          function renderRootSync(root2, lanes) {
            var prevExecutionContext = executionContext;
            executionContext |= RenderContext;
            var prevDispatcher = pushDispatcher();
            if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
              {
                if (isDevToolsPresent) {
                  var memoizedUpdaters = root2.memoizedUpdaters;
                  if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root2, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                  }
                  movePendingFibersToMemoized(root2, lanes);
                }
              }
              workInProgressTransitions = getTransitionsForLanes();
              prepareFreshStack(root2, lanes);
            }
            {
              markRenderStarted(lanes);
            }
            do {
              try {
                workLoopSync();
                break;
              } catch (thrownValue) {
                handleError(root2, thrownValue);
              }
            } while (true);
            resetContextDependencies();
            executionContext = prevExecutionContext;
            popDispatcher(prevDispatcher);
            if (workInProgress !== null) {
              throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
            }
            {
              markRenderStopped();
            }
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes;
            return workInProgressRootExitStatus;
          }
          function workLoopSync() {
            while (workInProgress !== null) {
              performUnitOfWork(workInProgress);
            }
          }
          function renderRootConcurrent(root2, lanes) {
            var prevExecutionContext = executionContext;
            executionContext |= RenderContext;
            var prevDispatcher = pushDispatcher();
            if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
              {
                if (isDevToolsPresent) {
                  var memoizedUpdaters = root2.memoizedUpdaters;
                  if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root2, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                  }
                  movePendingFibersToMemoized(root2, lanes);
                }
              }
              workInProgressTransitions = getTransitionsForLanes();
              resetRenderTimer();
              prepareFreshStack(root2, lanes);
            }
            {
              markRenderStarted(lanes);
            }
            do {
              try {
                workLoopConcurrent();
                break;
              } catch (thrownValue) {
                handleError(root2, thrownValue);
              }
            } while (true);
            resetContextDependencies();
            popDispatcher(prevDispatcher);
            executionContext = prevExecutionContext;
            if (workInProgress !== null) {
              {
                markRenderYielded();
              }
              return RootInProgress;
            } else {
              {
                markRenderStopped();
              }
              workInProgressRoot = null;
              workInProgressRootRenderLanes = NoLanes;
              return workInProgressRootExitStatus;
            }
          }
          function workLoopConcurrent() {
            while (workInProgress !== null && !shouldYield()) {
              performUnitOfWork(workInProgress);
            }
          }
          function performUnitOfWork(unitOfWork) {
            var current2 = unitOfWork.alternate;
            setCurrentFiber(unitOfWork);
            var next;
            if ((unitOfWork.mode & ProfileMode) !== NoMode) {
              startProfilerTimer(unitOfWork);
              next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
              stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
            } else {
              next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
            }
            resetCurrentFiber();
            unitOfWork.memoizedProps = unitOfWork.pendingProps;
            if (next === null) {
              completeUnitOfWork(unitOfWork);
            } else {
              workInProgress = next;
            }
            ReactCurrentOwner$2.current = null;
          }
          function completeUnitOfWork(unitOfWork) {
            var completedWork = unitOfWork;
            do {
              var current2 = completedWork.alternate;
              var returnFiber = completedWork.return;
              if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) {
                  next = completeWork(current2, completedWork, subtreeRenderLanes);
                } else {
                  startProfilerTimer(completedWork);
                  next = completeWork(current2, completedWork, subtreeRenderLanes);
                  stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                  workInProgress = next;
                  return;
                }
              } else {
                var _next = unwindWork(current2, completedWork);
                if (_next !== null) {
                  _next.flags &= HostEffectMask;
                  workInProgress = _next;
                  return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                  var actualDuration = completedWork.actualDuration;
                  var child = completedWork.child;
                  while (child !== null) {
                    actualDuration += child.actualDuration;
                    child = child.sibling;
                  }
                  completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                  returnFiber.flags |= Incomplete;
                  returnFiber.subtreeFlags = NoFlags;
                  returnFiber.deletions = null;
                } else {
                  workInProgressRootExitStatus = RootDidNotComplete;
                  workInProgress = null;
                  return;
                }
              }
              var siblingFiber = completedWork.sibling;
              if (siblingFiber !== null) {
                workInProgress = siblingFiber;
                return;
              }
              completedWork = returnFiber;
              workInProgress = completedWork;
            } while (completedWork !== null);
            if (workInProgressRootExitStatus === RootInProgress) {
              workInProgressRootExitStatus = RootCompleted;
            }
          }
          function commitRoot(root2, recoverableErrors, transitions) {
            var previousUpdateLanePriority = getCurrentUpdatePriority();
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            try {
              ReactCurrentBatchConfig$3.transition = null;
              setCurrentUpdatePriority(DiscreteEventPriority);
              commitRootImpl(root2, recoverableErrors, transitions, previousUpdateLanePriority);
            } finally {
              ReactCurrentBatchConfig$3.transition = prevTransition;
              setCurrentUpdatePriority(previousUpdateLanePriority);
            }
            return null;
          }
          function commitRootImpl(root2, recoverableErrors, transitions, renderPriorityLevel) {
            do {
              flushPassiveEffects();
            } while (rootWithPendingPassiveEffects !== null);
            flushRenderPhaseStrictModeWarningsInDEV();
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              throw new Error("Should not already be working.");
            }
            var finishedWork = root2.finishedWork;
            var lanes = root2.finishedLanes;
            {
              markCommitStarted(lanes);
            }
            if (finishedWork === null) {
              {
                markCommitStopped();
              }
              return null;
            } else {
              {
                if (lanes === NoLanes) {
                  error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
                }
              }
            }
            root2.finishedWork = null;
            root2.finishedLanes = NoLanes;
            if (finishedWork === root2.current) {
              throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
            }
            root2.callbackNode = null;
            root2.callbackPriority = NoLane;
            var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
            markRootFinished(root2, remainingLanes);
            if (root2 === workInProgressRoot) {
              workInProgressRoot = null;
              workInProgress = null;
              workInProgressRootRenderLanes = NoLanes;
            }
            if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
              if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                pendingPassiveTransitions = transitions;
                scheduleCallback$1(NormalPriority, function() {
                  flushPassiveEffects();
                  return null;
                });
              }
            }
            var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
            var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
            if (subtreeHasEffects || rootHasEffect) {
              var prevTransition = ReactCurrentBatchConfig$3.transition;
              ReactCurrentBatchConfig$3.transition = null;
              var previousPriority = getCurrentUpdatePriority();
              setCurrentUpdatePriority(DiscreteEventPriority);
              var prevExecutionContext = executionContext;
              executionContext |= CommitContext;
              ReactCurrentOwner$2.current = null;
              var shouldFireAfterActiveInstanceBlur2 = commitBeforeMutationEffects(root2, finishedWork);
              {
                recordCommitTime();
              }
              commitMutationEffects(root2, finishedWork, lanes);
              resetAfterCommit(root2.containerInfo);
              root2.current = finishedWork;
              {
                markLayoutEffectsStarted(lanes);
              }
              commitLayoutEffects(finishedWork, root2, lanes);
              {
                markLayoutEffectsStopped();
              }
              requestPaint();
              executionContext = prevExecutionContext;
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig$3.transition = prevTransition;
            } else {
              root2.current = finishedWork;
              {
                recordCommitTime();
              }
            }
            var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
            if (rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = false;
              rootWithPendingPassiveEffects = root2;
              pendingPassiveEffectsLanes = lanes;
            } else {
              {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = null;
              }
            }
            remainingLanes = root2.pendingLanes;
            if (remainingLanes === NoLanes) {
              legacyErrorBoundariesThatAlreadyFailed = null;
            }
            {
              if (!rootDidHavePassiveEffects) {
                commitDoubleInvokeEffectsInDEV(root2.current, false);
              }
            }
            onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
            {
              if (isDevToolsPresent) {
                root2.memoizedUpdaters.clear();
              }
            }
            {
              onCommitRoot$1();
            }
            ensureRootIsScheduled(root2, now());
            if (recoverableErrors !== null) {
              var onRecoverableError = root2.onRecoverableError;
              for (var i2 = 0; i2 < recoverableErrors.length; i2++) {
                var recoverableError = recoverableErrors[i2];
                var componentStack = recoverableError.stack;
                var digest = recoverableError.digest;
                onRecoverableError(recoverableError.value, {
                  componentStack,
                  digest
                });
              }
            }
            if (hasUncaughtError) {
              hasUncaughtError = false;
              var error$1 = firstUncaughtError;
              firstUncaughtError = null;
              throw error$1;
            }
            if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root2.tag !== LegacyRoot) {
              flushPassiveEffects();
            }
            remainingLanes = root2.pendingLanes;
            if (includesSomeLane(remainingLanes, SyncLane)) {
              {
                markNestedUpdateScheduled();
              }
              if (root2 === rootWithNestedUpdates) {
                nestedUpdateCount++;
              } else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root2;
              }
            } else {
              nestedUpdateCount = 0;
            }
            flushSyncCallbacks();
            {
              markCommitStopped();
            }
            return null;
          }
          function flushPassiveEffects() {
            if (rootWithPendingPassiveEffects !== null) {
              var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
              var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
              var prevTransition = ReactCurrentBatchConfig$3.transition;
              var previousPriority = getCurrentUpdatePriority();
              try {
                ReactCurrentBatchConfig$3.transition = null;
                setCurrentUpdatePriority(priority);
                return flushPassiveEffectsImpl();
              } finally {
                setCurrentUpdatePriority(previousPriority);
                ReactCurrentBatchConfig$3.transition = prevTransition;
              }
            }
            return false;
          }
          function enqueuePendingPassiveProfilerEffect(fiber) {
            {
              pendingPassiveProfilerEffects.push(fiber);
              if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                scheduleCallback$1(NormalPriority, function() {
                  flushPassiveEffects();
                  return null;
                });
              }
            }
          }
          function flushPassiveEffectsImpl() {
            if (rootWithPendingPassiveEffects === null) {
              return false;
            }
            var transitions = pendingPassiveTransitions;
            pendingPassiveTransitions = null;
            var root2 = rootWithPendingPassiveEffects;
            var lanes = pendingPassiveEffectsLanes;
            rootWithPendingPassiveEffects = null;
            pendingPassiveEffectsLanes = NoLanes;
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              throw new Error("Cannot flush passive effects while already rendering.");
            }
            {
              isFlushingPassiveEffects = true;
              didScheduleUpdateDuringPassiveEffects = false;
            }
            {
              markPassiveEffectsStarted(lanes);
            }
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            commitPassiveUnmountEffects(root2.current);
            commitPassiveMountEffects(root2, root2.current, lanes, transitions);
            {
              var profilerEffects = pendingPassiveProfilerEffects;
              pendingPassiveProfilerEffects = [];
              for (var i2 = 0; i2 < profilerEffects.length; i2++) {
                var _fiber = profilerEffects[i2];
                commitPassiveEffectDurations(root2, _fiber);
              }
            }
            {
              markPassiveEffectsStopped();
            }
            {
              commitDoubleInvokeEffectsInDEV(root2.current, true);
            }
            executionContext = prevExecutionContext;
            flushSyncCallbacks();
            {
              if (didScheduleUpdateDuringPassiveEffects) {
                if (root2 === rootWithPassiveNestedUpdates) {
                  nestedPassiveUpdateCount++;
                } else {
                  nestedPassiveUpdateCount = 0;
                  rootWithPassiveNestedUpdates = root2;
                }
              } else {
                nestedPassiveUpdateCount = 0;
              }
              isFlushingPassiveEffects = false;
              didScheduleUpdateDuringPassiveEffects = false;
            }
            onPostCommitRoot(root2);
            {
              var stateNode = root2.current.stateNode;
              stateNode.effectDuration = 0;
              stateNode.passiveEffectDuration = 0;
            }
            return true;
          }
          function isAlreadyFailedLegacyErrorBoundary(instance) {
            return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
          }
          function markLegacyErrorBoundaryAsFailed(instance) {
            if (legacyErrorBoundariesThatAlreadyFailed === null) {
              legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance]);
            } else {
              legacyErrorBoundariesThatAlreadyFailed.add(instance);
            }
          }
          function prepareToThrowUncaughtError(error2) {
            if (!hasUncaughtError) {
              hasUncaughtError = true;
              firstUncaughtError = error2;
            }
          }
          var onUncaughtError = prepareToThrowUncaughtError;
          function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
            var errorInfo = createCapturedValueAtFiber(error2, sourceFiber);
            var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
            var root2 = enqueueUpdate(rootFiber, update, SyncLane);
            var eventTime = requestEventTime();
            if (root2 !== null) {
              markRootUpdated(root2, SyncLane, eventTime);
              ensureRootIsScheduled(root2, eventTime);
            }
          }
          function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
            {
              reportUncaughtErrorInDEV(error$1);
              setIsRunningInsertionEffect(false);
            }
            if (sourceFiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
              return;
            }
            var fiber = null;
            {
              fiber = nearestMountedAncestor;
            }
            while (fiber !== null) {
              if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                return;
              } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                  var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                  var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                  var root2 = enqueueUpdate(fiber, update, SyncLane);
                  var eventTime = requestEventTime();
                  if (root2 !== null) {
                    markRootUpdated(root2, SyncLane, eventTime);
                    ensureRootIsScheduled(root2, eventTime);
                  }
                  return;
                }
              }
              fiber = fiber.return;
            }
            {
              error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
            }
          }
          function pingSuspendedRoot(root2, wakeable, pingedLanes) {
            var pingCache = root2.pingCache;
            if (pingCache !== null) {
              pingCache.delete(wakeable);
            }
            var eventTime = requestEventTime();
            markRootPinged(root2, pingedLanes);
            warnIfSuspenseResolutionNotWrappedWithActDEV(root2);
            if (workInProgressRoot === root2 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
              if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
                prepareFreshStack(root2, NoLanes);
              } else {
                workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
              }
            }
            ensureRootIsScheduled(root2, eventTime);
          }
          function retryTimedOutBoundary(boundaryFiber, retryLane) {
            if (retryLane === NoLane) {
              retryLane = requestRetryLane(boundaryFiber);
            }
            var eventTime = requestEventTime();
            var root2 = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
            if (root2 !== null) {
              markRootUpdated(root2, retryLane, eventTime);
              ensureRootIsScheduled(root2, eventTime);
            }
          }
          function retryDehydratedSuspenseBoundary(boundaryFiber) {
            var suspenseState = boundaryFiber.memoizedState;
            var retryLane = NoLane;
            if (suspenseState !== null) {
              retryLane = suspenseState.retryLane;
            }
            retryTimedOutBoundary(boundaryFiber, retryLane);
          }
          function resolveRetryWakeable(boundaryFiber, wakeable) {
            var retryLane = NoLane;
            var retryCache;
            switch (boundaryFiber.tag) {
              case SuspenseComponent:
                retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                if (suspenseState !== null) {
                  retryLane = suspenseState.retryLane;
                }
                break;
              case SuspenseListComponent:
                retryCache = boundaryFiber.stateNode;
                break;
              default:
                throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
            }
            if (retryCache !== null) {
              retryCache.delete(wakeable);
            }
            retryTimedOutBoundary(boundaryFiber, retryLane);
          }
          function jnd(timeElapsed) {
            return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
          }
          function checkForNestedUpdates() {
            if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = null;
              throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
            }
            {
              if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = null;
                error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
              }
            }
          }
          function flushRenderPhaseStrictModeWarningsInDEV() {
            {
              ReactStrictModeWarnings.flushLegacyContextWarning();
              {
                ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
              }
            }
          }
          function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
            {
              setCurrentFiber(fiber);
              invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
              if (hasPassiveEffects) {
                invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
              }
              invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
              if (hasPassiveEffects) {
                invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
              }
              resetCurrentFiber();
            }
          }
          function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
            {
              var current2 = firstChild;
              var subtreeRoot = null;
              while (current2 !== null) {
                var primarySubtreeFlag = current2.subtreeFlags & fiberFlags;
                if (current2 !== subtreeRoot && current2.child !== null && primarySubtreeFlag !== NoFlags) {
                  current2 = current2.child;
                } else {
                  if ((current2.flags & fiberFlags) !== NoFlags) {
                    invokeEffectFn(current2);
                  }
                  if (current2.sibling !== null) {
                    current2 = current2.sibling;
                  } else {
                    current2 = subtreeRoot = current2.return;
                  }
                }
              }
            }
          }
          var didWarnStateUpdateForNotYetMountedComponent = null;
          function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
            {
              if ((executionContext & RenderContext) !== NoContext) {
                return;
              }
              if (!(fiber.mode & ConcurrentMode)) {
                return;
              }
              var tag = fiber.tag;
              if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
                return;
              }
              var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
              if (didWarnStateUpdateForNotYetMountedComponent !== null) {
                if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                  return;
                }
                didWarnStateUpdateForNotYetMountedComponent.add(componentName);
              } else {
                didWarnStateUpdateForNotYetMountedComponent = /* @__PURE__ */ new Set([componentName]);
              }
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
          var beginWork$1;
          {
            var dummyFiber = null;
            beginWork$1 = function(current2, unitOfWork, lanes) {
              var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
              try {
                return beginWork(current2, unitOfWork, lanes);
              } catch (originalError) {
                if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                  throw originalError;
                }
                resetContextDependencies();
                resetHooksAfterThrow();
                unwindInterruptedWork(current2, unitOfWork);
                assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
                if (unitOfWork.mode & ProfileMode) {
                  startProfilerTimer(unitOfWork);
                }
                invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
                if (hasCaughtError()) {
                  var replayError = clearCaughtError();
                  if (typeof replayError === "object" && replayError !== null && replayError._suppressLogging && typeof originalError === "object" && originalError !== null && !originalError._suppressLogging) {
                    originalError._suppressLogging = true;
                  }
                }
                throw originalError;
              }
            };
          }
          var didWarnAboutUpdateInRender = false;
          var didWarnAboutUpdateInRenderForAnotherComponent;
          {
            didWarnAboutUpdateInRenderForAnotherComponent = /* @__PURE__ */ new Set();
          }
          function warnAboutRenderPhaseUpdatesInDEV(fiber) {
            {
              if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
                switch (fiber.tag) {
                  case FunctionComponent:
                  case ForwardRef:
                  case SimpleMemoComponent: {
                    var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                    var dedupeKey = renderingComponentName;
                    if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                      didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                      var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                      error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                    }
                    break;
                  }
                  case ClassComponent: {
                    if (!didWarnAboutUpdateInRender) {
                      error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                      didWarnAboutUpdateInRender = true;
                    }
                    break;
                  }
                }
              }
            }
          }
          function restorePendingUpdaters(root2, lanes) {
            {
              if (isDevToolsPresent) {
                var memoizedUpdaters = root2.memoizedUpdaters;
                memoizedUpdaters.forEach(function(schedulingFiber) {
                  addFiberToLanesMap(root2, schedulingFiber, lanes);
                });
              }
            }
          }
          var fakeActCallbackNode = {};
          function scheduleCallback$1(priorityLevel, callback) {
            {
              var actQueue = ReactCurrentActQueue$1.current;
              if (actQueue !== null) {
                actQueue.push(callback);
                return fakeActCallbackNode;
              } else {
                return scheduleCallback(priorityLevel, callback);
              }
            }
          }
          function cancelCallback$1(callbackNode) {
            if (callbackNode === fakeActCallbackNode) {
              return;
            }
            return cancelCallback(callbackNode);
          }
          function shouldForceFlushFallbacksInDEV() {
            return ReactCurrentActQueue$1.current !== null;
          }
          function warnIfUpdatesNotWrappedWithActDEV(fiber) {
            {
              if (fiber.mode & ConcurrentMode) {
                if (!isConcurrentActEnvironment()) {
                  return;
                }
              } else {
                if (!isLegacyActEnvironment()) {
                  return;
                }
                if (executionContext !== NoContext) {
                  return;
                }
                if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {
                  return;
                }
              }
              if (ReactCurrentActQueue$1.current === null) {
                var previousFiber = current;
                try {
                  setCurrentFiber(fiber);
                  error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(fiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
          }
          function warnIfSuspenseResolutionNotWrappedWithActDEV(root2) {
            {
              if (root2.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {
                error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
              }
            }
          }
          function setIsRunningInsertionEffect(isRunning) {
            {
              isRunningInsertionEffect = isRunning;
            }
          }
          var resolveFamily = null;
          var failedBoundaries = null;
          var setRefreshHandler = function(handler) {
            {
              resolveFamily = handler;
            }
          };
          function resolveFunctionForHotReloading(type) {
            {
              if (resolveFamily === null) {
                return type;
              }
              var family = resolveFamily(type);
              if (family === void 0) {
                return type;
              }
              return family.current;
            }
          }
          function resolveClassForHotReloading(type) {
            return resolveFunctionForHotReloading(type);
          }
          function resolveForwardRefForHotReloading(type) {
            {
              if (resolveFamily === null) {
                return type;
              }
              var family = resolveFamily(type);
              if (family === void 0) {
                if (type !== null && type !== void 0 && typeof type.render === "function") {
                  var currentRender = resolveFunctionForHotReloading(type.render);
                  if (type.render !== currentRender) {
                    var syntheticType = {
                      $$typeof: REACT_FORWARD_REF_TYPE,
                      render: currentRender
                    };
                    if (type.displayName !== void 0) {
                      syntheticType.displayName = type.displayName;
                    }
                    return syntheticType;
                  }
                }
                return type;
              }
              return family.current;
            }
          }
          function isCompatibleFamilyForHotReloading(fiber, element) {
            {
              if (resolveFamily === null) {
                return false;
              }
              var prevType = fiber.elementType;
              var nextType = element.type;
              var needsCompareFamilies = false;
              var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
              switch (fiber.tag) {
                case ClassComponent: {
                  if (typeof nextType === "function") {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case FunctionComponent: {
                  if (typeof nextType === "function") {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case ForwardRef: {
                  if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case MemoComponent:
                case SimpleMemoComponent: {
                  if ($$typeofNextType === REACT_MEMO_TYPE) {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                default:
                  return false;
              }
              if (needsCompareFamilies) {
                var prevFamily = resolveFamily(prevType);
                if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                  return true;
                }
              }
              return false;
            }
          }
          function markFailedErrorBoundaryForHotReloading(fiber) {
            {
              if (resolveFamily === null) {
                return;
              }
              if (typeof WeakSet !== "function") {
                return;
              }
              if (failedBoundaries === null) {
                failedBoundaries = /* @__PURE__ */ new WeakSet();
              }
              failedBoundaries.add(fiber);
            }
          }
          var scheduleRefresh = function(root2, update) {
            {
              if (resolveFamily === null) {
                return;
              }
              var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
              flushPassiveEffects();
              flushSync(function() {
                scheduleFibersWithFamiliesRecursively(root2.current, updatedFamilies, staleFamilies);
              });
            }
          };
          var scheduleRoot = function(root2, element) {
            {
              if (root2.context !== emptyContextObject) {
                return;
              }
              flushPassiveEffects();
              flushSync(function() {
                updateContainer(element, root2, null, null);
              });
            }
          };
          function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
            {
              var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
              var candidateType = null;
              switch (tag) {
                case FunctionComponent:
                case SimpleMemoComponent:
                case ClassComponent:
                  candidateType = type;
                  break;
                case ForwardRef:
                  candidateType = type.render;
                  break;
              }
              if (resolveFamily === null) {
                throw new Error("Expected resolveFamily to be set during hot reload.");
              }
              var needsRender = false;
              var needsRemount = false;
              if (candidateType !== null) {
                var family = resolveFamily(candidateType);
                if (family !== void 0) {
                  if (staleFamilies.has(family)) {
                    needsRemount = true;
                  } else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) {
                      needsRemount = true;
                    } else {
                      needsRender = true;
                    }
                  }
                }
              }
              if (failedBoundaries !== null) {
                if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                  needsRemount = true;
                }
              }
              if (needsRemount) {
                fiber._debugNeedsRemount = true;
              }
              if (needsRemount || needsRender) {
                var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
                if (_root !== null) {
                  scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
                }
              }
              if (child !== null && !needsRemount) {
                scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
              }
              if (sibling !== null) {
                scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
              }
            }
          }
          var findHostInstancesForRefresh = function(root2, families) {
            {
              var hostInstances = /* @__PURE__ */ new Set();
              var types = new Set(families.map(function(family) {
                return family.current;
              }));
              findHostInstancesForMatchingFibersRecursively(root2.current, types, hostInstances);
              return hostInstances;
            }
          };
          function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
            {
              var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
              var candidateType = null;
              switch (tag) {
                case FunctionComponent:
                case SimpleMemoComponent:
                case ClassComponent:
                  candidateType = type;
                  break;
                case ForwardRef:
                  candidateType = type.render;
                  break;
              }
              var didMatch = false;
              if (candidateType !== null) {
                if (types.has(candidateType)) {
                  didMatch = true;
                }
              }
              if (didMatch) {
                findHostInstancesForFiberShallowly(fiber, hostInstances);
              } else {
                if (child !== null) {
                  findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
                }
              }
              if (sibling !== null) {
                findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
              }
            }
          }
          function findHostInstancesForFiberShallowly(fiber, hostInstances) {
            {
              var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
              if (foundHostInstances) {
                return;
              }
              var node = fiber;
              while (true) {
                switch (node.tag) {
                  case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                  case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                  case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                }
                if (node.return === null) {
                  throw new Error("Expected to reach root first.");
                }
                node = node.return;
              }
            }
          }
          function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
            {
              var node = fiber;
              var foundHostInstances = false;
              while (true) {
                if (node.tag === HostComponent) {
                  foundHostInstances = true;
                  hostInstances.add(node.stateNode);
                } else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === fiber) {
                  return foundHostInstances;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === fiber) {
                    return foundHostInstances;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            }
            return false;
          }
          var hasBadMapPolyfill;
          {
            hasBadMapPolyfill = false;
            try {
              var nonExtensibleObject = Object.preventExtensions({});
              /* @__PURE__ */ new Map([[nonExtensibleObject, null]]);
              /* @__PURE__ */ new Set([nonExtensibleObject]);
            } catch (e27) {
              hasBadMapPolyfill = true;
            }
          }
          function FiberNode(tag, pendingProps, key, mode) {
            this.tag = tag;
            this.key = key;
            this.elementType = null;
            this.type = null;
            this.stateNode = null;
            this.return = null;
            this.child = null;
            this.sibling = null;
            this.index = 0;
            this.ref = null;
            this.pendingProps = pendingProps;
            this.memoizedProps = null;
            this.updateQueue = null;
            this.memoizedState = null;
            this.dependencies = null;
            this.mode = mode;
            this.flags = NoFlags;
            this.subtreeFlags = NoFlags;
            this.deletions = null;
            this.lanes = NoLanes;
            this.childLanes = NoLanes;
            this.alternate = null;
            {
              this.actualDuration = Number.NaN;
              this.actualStartTime = Number.NaN;
              this.selfBaseDuration = Number.NaN;
              this.treeBaseDuration = Number.NaN;
              this.actualDuration = 0;
              this.actualStartTime = -1;
              this.selfBaseDuration = 0;
              this.treeBaseDuration = 0;
            }
            {
              this._debugSource = null;
              this._debugOwner = null;
              this._debugNeedsRemount = false;
              this._debugHookTypes = null;
              if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
                Object.preventExtensions(this);
              }
            }
          }
          var createFiber = function(tag, pendingProps, key, mode) {
            return new FiberNode(tag, pendingProps, key, mode);
          };
          function shouldConstruct$1(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function isSimpleFunctionComponent(type) {
            return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
          }
          function resolveLazyComponentTag(Component) {
            if (typeof Component === "function") {
              return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
            } else if (Component !== void 0 && Component !== null) {
              var $$typeof = Component.$$typeof;
              if ($$typeof === REACT_FORWARD_REF_TYPE) {
                return ForwardRef;
              }
              if ($$typeof === REACT_MEMO_TYPE) {
                return MemoComponent;
              }
            }
            return IndeterminateComponent;
          }
          function createWorkInProgress(current2, pendingProps) {
            var workInProgress2 = current2.alternate;
            if (workInProgress2 === null) {
              workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
              workInProgress2.elementType = current2.elementType;
              workInProgress2.type = current2.type;
              workInProgress2.stateNode = current2.stateNode;
              {
                workInProgress2._debugSource = current2._debugSource;
                workInProgress2._debugOwner = current2._debugOwner;
                workInProgress2._debugHookTypes = current2._debugHookTypes;
              }
              workInProgress2.alternate = current2;
              current2.alternate = workInProgress2;
            } else {
              workInProgress2.pendingProps = pendingProps;
              workInProgress2.type = current2.type;
              workInProgress2.flags = NoFlags;
              workInProgress2.subtreeFlags = NoFlags;
              workInProgress2.deletions = null;
              {
                workInProgress2.actualDuration = 0;
                workInProgress2.actualStartTime = -1;
              }
            }
            workInProgress2.flags = current2.flags & StaticMask;
            workInProgress2.childLanes = current2.childLanes;
            workInProgress2.lanes = current2.lanes;
            workInProgress2.child = current2.child;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              lanes: currentDependencies.lanes,
              firstContext: currentDependencies.firstContext
            };
            workInProgress2.sibling = current2.sibling;
            workInProgress2.index = current2.index;
            workInProgress2.ref = current2.ref;
            {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
            {
              workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
              switch (workInProgress2.tag) {
                case IndeterminateComponent:
                case FunctionComponent:
                case SimpleMemoComponent:
                  workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                  break;
                case ClassComponent:
                  workInProgress2.type = resolveClassForHotReloading(current2.type);
                  break;
                case ForwardRef:
                  workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                  break;
              }
            }
            return workInProgress2;
          }
          function resetWorkInProgress(workInProgress2, renderLanes2) {
            workInProgress2.flags &= StaticMask | Placement;
            var current2 = workInProgress2.alternate;
            if (current2 === null) {
              workInProgress2.childLanes = NoLanes;
              workInProgress2.lanes = renderLanes2;
              workInProgress2.child = null;
              workInProgress2.subtreeFlags = NoFlags;
              workInProgress2.memoizedProps = null;
              workInProgress2.memoizedState = null;
              workInProgress2.updateQueue = null;
              workInProgress2.dependencies = null;
              workInProgress2.stateNode = null;
              {
                workInProgress2.selfBaseDuration = 0;
                workInProgress2.treeBaseDuration = 0;
              }
            } else {
              workInProgress2.childLanes = current2.childLanes;
              workInProgress2.lanes = current2.lanes;
              workInProgress2.child = current2.child;
              workInProgress2.subtreeFlags = NoFlags;
              workInProgress2.deletions = null;
              workInProgress2.memoizedProps = current2.memoizedProps;
              workInProgress2.memoizedState = current2.memoizedState;
              workInProgress2.updateQueue = current2.updateQueue;
              workInProgress2.type = current2.type;
              var currentDependencies = current2.dependencies;
              workInProgress2.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
              };
              {
                workInProgress2.selfBaseDuration = current2.selfBaseDuration;
                workInProgress2.treeBaseDuration = current2.treeBaseDuration;
              }
            }
            return workInProgress2;
          }
          function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
            var mode;
            if (tag === ConcurrentRoot) {
              mode = ConcurrentMode;
              if (isStrictMode === true) {
                mode |= StrictLegacyMode;
                {
                  mode |= StrictEffectsMode;
                }
              }
            } else {
              mode = NoMode;
            }
            if (isDevToolsPresent) {
              mode |= ProfileMode;
            }
            return createFiber(HostRoot, null, null, mode);
          }
          function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
            var fiberTag = IndeterminateComponent;
            var resolvedType = type;
            if (typeof type === "function") {
              if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                {
                  resolvedType = resolveClassForHotReloading(resolvedType);
                }
              } else {
                {
                  resolvedType = resolveFunctionForHotReloading(resolvedType);
                }
              }
            } else if (typeof type === "string") {
              fiberTag = HostComponent;
            } else {
              getTag:
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                    return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                  case REACT_STRICT_MODE_TYPE:
                    fiberTag = Mode;
                    mode |= StrictLegacyMode;
                    if ((mode & ConcurrentMode) !== NoMode) {
                      mode |= StrictEffectsMode;
                    }
                    break;
                  case REACT_PROFILER_TYPE:
                    return createFiberFromProfiler(pendingProps, mode, lanes, key);
                  case REACT_SUSPENSE_TYPE:
                    return createFiberFromSuspense(pendingProps, mode, lanes, key);
                  case REACT_SUSPENSE_LIST_TYPE:
                    return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                  case REACT_OFFSCREEN_TYPE:
                    return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                  case REACT_LEGACY_HIDDEN_TYPE:
                  case REACT_SCOPE_TYPE:
                  case REACT_CACHE_TYPE:
                  case REACT_TRACING_MARKER_TYPE:
                  case REACT_DEBUG_TRACING_MODE_TYPE:
                  default: {
                    if (typeof type === "object" && type !== null) {
                      switch (type.$$typeof) {
                        case REACT_PROVIDER_TYPE:
                          fiberTag = ContextProvider;
                          break getTag;
                        case REACT_CONTEXT_TYPE:
                          fiberTag = ContextConsumer;
                          break getTag;
                        case REACT_FORWARD_REF_TYPE:
                          fiberTag = ForwardRef;
                          {
                            resolvedType = resolveForwardRefForHotReloading(resolvedType);
                          }
                          break getTag;
                        case REACT_MEMO_TYPE:
                          fiberTag = MemoComponent;
                          break getTag;
                        case REACT_LAZY_TYPE:
                          fiberTag = LazyComponent;
                          resolvedType = null;
                          break getTag;
                      }
                    }
                    var info = "";
                    {
                      if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                        info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                      }
                      var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                      if (ownerName) {
                        info += "\n\nCheck the render method of `" + ownerName + "`.";
                      }
                    }
                    throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
                  }
                }
            }
            var fiber = createFiber(fiberTag, pendingProps, key, mode);
            fiber.elementType = type;
            fiber.type = resolvedType;
            fiber.lanes = lanes;
            {
              fiber._debugOwner = owner;
            }
            return fiber;
          }
          function createFiberFromElement(element, mode, lanes) {
            var owner = null;
            {
              owner = element._owner;
            }
            var type = element.type;
            var key = element.key;
            var pendingProps = element.props;
            var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
            {
              fiber._debugSource = element._source;
              fiber._debugOwner = element._owner;
            }
            return fiber;
          }
          function createFiberFromFragment(elements, mode, lanes, key) {
            var fiber = createFiber(Fragment, elements, key, mode);
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromProfiler(pendingProps, mode, lanes, key) {
            {
              if (typeof pendingProps.id !== "string") {
                error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
              }
            }
            var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
            fiber.elementType = REACT_PROFILER_TYPE;
            fiber.lanes = lanes;
            {
              fiber.stateNode = {
                effectDuration: 0,
                passiveEffectDuration: 0
              };
            }
            return fiber;
          }
          function createFiberFromSuspense(pendingProps, mode, lanes, key) {
            var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
            fiber.elementType = REACT_SUSPENSE_TYPE;
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
            var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
            fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
            var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
            fiber.elementType = REACT_OFFSCREEN_TYPE;
            fiber.lanes = lanes;
            var primaryChildInstance = {
              isHidden: false
            };
            fiber.stateNode = primaryChildInstance;
            return fiber;
          }
          function createFiberFromText(content, mode, lanes) {
            var fiber = createFiber(HostText, content, null, mode);
            fiber.lanes = lanes;
            return fiber;
          }
          function createFiberFromHostInstanceForDeletion() {
            var fiber = createFiber(HostComponent, null, null, NoMode);
            fiber.elementType = "DELETED";
            return fiber;
          }
          function createFiberFromDehydratedFragment(dehydratedNode) {
            var fiber = createFiber(DehydratedFragment, null, null, NoMode);
            fiber.stateNode = dehydratedNode;
            return fiber;
          }
          function createFiberFromPortal(portal, mode, lanes) {
            var pendingProps = portal.children !== null ? portal.children : [];
            var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
            fiber.lanes = lanes;
            fiber.stateNode = {
              containerInfo: portal.containerInfo,
              pendingChildren: null,
              implementation: portal.implementation
            };
            return fiber;
          }
          function assignFiberPropertiesInDEV(target, source) {
            if (target === null) {
              target = createFiber(IndeterminateComponent, null, null, NoMode);
            }
            target.tag = source.tag;
            target.key = source.key;
            target.elementType = source.elementType;
            target.type = source.type;
            target.stateNode = source.stateNode;
            target.return = source.return;
            target.child = source.child;
            target.sibling = source.sibling;
            target.index = source.index;
            target.ref = source.ref;
            target.pendingProps = source.pendingProps;
            target.memoizedProps = source.memoizedProps;
            target.updateQueue = source.updateQueue;
            target.memoizedState = source.memoizedState;
            target.dependencies = source.dependencies;
            target.mode = source.mode;
            target.flags = source.flags;
            target.subtreeFlags = source.subtreeFlags;
            target.deletions = source.deletions;
            target.lanes = source.lanes;
            target.childLanes = source.childLanes;
            target.alternate = source.alternate;
            {
              target.actualDuration = source.actualDuration;
              target.actualStartTime = source.actualStartTime;
              target.selfBaseDuration = source.selfBaseDuration;
              target.treeBaseDuration = source.treeBaseDuration;
            }
            target._debugSource = source._debugSource;
            target._debugOwner = source._debugOwner;
            target._debugNeedsRemount = source._debugNeedsRemount;
            target._debugHookTypes = source._debugHookTypes;
            return target;
          }
          function FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError) {
            this.tag = tag;
            this.containerInfo = containerInfo;
            this.pendingChildren = null;
            this.current = null;
            this.pingCache = null;
            this.finishedWork = null;
            this.timeoutHandle = noTimeout;
            this.context = null;
            this.pendingContext = null;
            this.callbackNode = null;
            this.callbackPriority = NoLane;
            this.eventTimes = createLaneMap(NoLanes);
            this.expirationTimes = createLaneMap(NoTimestamp);
            this.pendingLanes = NoLanes;
            this.suspendedLanes = NoLanes;
            this.pingedLanes = NoLanes;
            this.expiredLanes = NoLanes;
            this.mutableReadLanes = NoLanes;
            this.finishedLanes = NoLanes;
            this.entangledLanes = NoLanes;
            this.entanglements = createLaneMap(NoLanes);
            this.identifierPrefix = identifierPrefix;
            this.onRecoverableError = onRecoverableError;
            {
              this.mutableSourceEagerHydrationData = null;
            }
            {
              this.effectDuration = 0;
              this.passiveEffectDuration = 0;
            }
            {
              this.memoizedUpdaters = /* @__PURE__ */ new Set();
              var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
              for (var _i2 = 0; _i2 < TotalLanes; _i2++) {
                pendingUpdatersLaneMap.push(/* @__PURE__ */ new Set());
              }
            }
            {
              switch (tag) {
                case ConcurrentRoot:
                  this._debugRootType = hydrate2 ? "hydrateRoot()" : "createRoot()";
                  break;
                case LegacyRoot:
                  this._debugRootType = hydrate2 ? "hydrate()" : "render()";
                  break;
              }
            }
          }
          function createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
            var root2 = new FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError);
            var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
            root2.current = uninitializedFiber;
            uninitializedFiber.stateNode = root2;
            {
              var _initialState = {
                element: initialChildren,
                isDehydrated: hydrate2,
                cache: null,
                transitions: null,
                pendingSuspenseBoundaries: null
              };
              uninitializedFiber.memoizedState = _initialState;
            }
            initializeUpdateQueue(uninitializedFiber);
            return root2;
          }
          var ReactVersion = "18.2.0";
          function createPortal(children, containerInfo, implementation) {
            var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
            {
              checkKeyStringCoercion(key);
            }
            return {
              $$typeof: REACT_PORTAL_TYPE,
              key: key == null ? null : "" + key,
              children,
              containerInfo,
              implementation
            };
          }
          var didWarnAboutNestedUpdates;
          var didWarnAboutFindNodeInStrictMode;
          {
            didWarnAboutNestedUpdates = false;
            didWarnAboutFindNodeInStrictMode = {};
          }
          function getContextForSubtree(parentComponent) {
            if (!parentComponent) {
              return emptyContextObject;
            }
            var fiber = get(parentComponent);
            var parentContext = findCurrentUnmaskedContext(fiber);
            if (fiber.tag === ClassComponent) {
              var Component = fiber.type;
              if (isContextProvider(Component)) {
                return processChildContext(fiber, Component, parentContext);
              }
            }
            return parentContext;
          }
          function findHostInstanceWithWarning(component, methodName) {
            {
              var fiber = get(component);
              if (fiber === void 0) {
                if (typeof component.render === "function") {
                  throw new Error("Unable to find node on an unmounted component.");
                } else {
                  var keys = Object.keys(component).join(",");
                  throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
                }
              }
              var hostFiber = findCurrentHostFiber(fiber);
              if (hostFiber === null) {
                return null;
              }
              if (hostFiber.mode & StrictLegacyMode) {
                var componentName = getComponentNameFromFiber(fiber) || "Component";
                if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                  didWarnAboutFindNodeInStrictMode[componentName] = true;
                  var previousFiber = current;
                  try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictLegacyMode) {
                      error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    } else {
                      error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    }
                  } finally {
                    if (previousFiber) {
                      setCurrentFiber(previousFiber);
                    } else {
                      resetCurrentFiber();
                    }
                  }
                }
              }
              return hostFiber.stateNode;
            }
          }
          function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
            var hydrate2 = false;
            var initialChildren = null;
            return createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          }
          function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
            var hydrate2 = true;
            var root2 = createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
            root2.context = getContextForSubtree(null);
            var current2 = root2.current;
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(current2);
            var update = createUpdate(eventTime, lane);
            update.callback = callback !== void 0 && callback !== null ? callback : null;
            enqueueUpdate(current2, update, lane);
            scheduleInitialHydrationOnRoot(root2, lane, eventTime);
            return root2;
          }
          function updateContainer(element, container, parentComponent, callback) {
            {
              onScheduleRoot(container, element);
            }
            var current$1 = container.current;
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(current$1);
            {
              markRenderScheduled(lane);
            }
            var context = getContextForSubtree(parentComponent);
            if (container.context === null) {
              container.context = context;
            } else {
              container.pendingContext = context;
            }
            {
              if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
                didWarnAboutNestedUpdates = true;
                error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
              }
            }
            var update = createUpdate(eventTime, lane);
            update.payload = {
              element
            };
            callback = callback === void 0 ? null : callback;
            if (callback !== null) {
              {
                if (typeof callback !== "function") {
                  error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
                }
              }
              update.callback = callback;
            }
            var root2 = enqueueUpdate(current$1, update, lane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, current$1, lane, eventTime);
              entangleTransitions(root2, current$1, lane);
            }
            return lane;
          }
          function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) {
              return null;
            }
            switch (containerFiber.child.tag) {
              case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
              default:
                return containerFiber.child.stateNode;
            }
          }
          function attemptSynchronousHydration$1(fiber) {
            switch (fiber.tag) {
              case HostRoot: {
                var root2 = fiber.stateNode;
                if (isRootDehydrated(root2)) {
                  var lanes = getHighestPriorityPendingLanes(root2);
                  flushRoot(root2, lanes);
                }
                break;
              }
              case SuspenseComponent: {
                flushSync(function() {
                  var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                  if (root3 !== null) {
                    var eventTime = requestEventTime();
                    scheduleUpdateOnFiber(root3, fiber, SyncLane, eventTime);
                  }
                });
                var retryLane = SyncLane;
                markRetryLaneIfNotHydrated(fiber, retryLane);
                break;
              }
            }
          }
          function markRetryLaneImpl(fiber, retryLane) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState !== null && suspenseState.dehydrated !== null) {
              suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
            }
          }
          function markRetryLaneIfNotHydrated(fiber, retryLane) {
            markRetryLaneImpl(fiber, retryLane);
            var alternate = fiber.alternate;
            if (alternate) {
              markRetryLaneImpl(alternate, retryLane);
            }
          }
          function attemptContinuousHydration$1(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var lane = SelectiveHydrationLane;
            var root2 = enqueueConcurrentRenderForLane(fiber, lane);
            if (root2 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
            }
            markRetryLaneIfNotHydrated(fiber, lane);
          }
          function attemptHydrationAtCurrentPriority$1(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var lane = requestUpdateLane(fiber);
            var root2 = enqueueConcurrentRenderForLane(fiber, lane);
            if (root2 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
            }
            markRetryLaneIfNotHydrated(fiber, lane);
          }
          function findHostInstanceWithNoPortals(fiber) {
            var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
            if (hostFiber === null) {
              return null;
            }
            return hostFiber.stateNode;
          }
          var shouldErrorImpl = function(fiber) {
            return null;
          };
          function shouldError(fiber) {
            return shouldErrorImpl(fiber);
          }
          var shouldSuspendImpl = function(fiber) {
            return false;
          };
          function shouldSuspend(fiber) {
            return shouldSuspendImpl(fiber);
          }
          var overrideHookState = null;
          var overrideHookStateDeletePath = null;
          var overrideHookStateRenamePath = null;
          var overrideProps = null;
          var overridePropsDeletePath = null;
          var overridePropsRenamePath = null;
          var scheduleUpdate = null;
          var setErrorHandler = null;
          var setSuspenseHandler = null;
          {
            var copyWithDeleteImpl = function(obj, path, index2) {
              var key = path[index2];
              var updated = isArray(obj) ? obj.slice() : assign({}, obj);
              if (index2 + 1 === path.length) {
                if (isArray(updated)) {
                  updated.splice(key, 1);
                } else {
                  delete updated[key];
                }
                return updated;
              }
              updated[key] = copyWithDeleteImpl(obj[key], path, index2 + 1);
              return updated;
            };
            var copyWithDelete = function(obj, path) {
              return copyWithDeleteImpl(obj, path, 0);
            };
            var copyWithRenameImpl = function(obj, oldPath, newPath, index2) {
              var oldKey = oldPath[index2];
              var updated = isArray(obj) ? obj.slice() : assign({}, obj);
              if (index2 + 1 === oldPath.length) {
                var newKey = newPath[index2];
                updated[newKey] = updated[oldKey];
                if (isArray(updated)) {
                  updated.splice(oldKey, 1);
                } else {
                  delete updated[oldKey];
                }
              } else {
                updated[oldKey] = copyWithRenameImpl(
                  obj[oldKey],
                  oldPath,
                  newPath,
                  index2 + 1
                );
              }
              return updated;
            };
            var copyWithRename = function(obj, oldPath, newPath) {
              if (oldPath.length !== newPath.length) {
                warn("copyWithRename() expects paths of the same length");
                return;
              } else {
                for (var i2 = 0; i2 < newPath.length - 1; i2++) {
                  if (oldPath[i2] !== newPath[i2]) {
                    warn("copyWithRename() expects paths to be the same except for the deepest key");
                    return;
                  }
                }
              }
              return copyWithRenameImpl(obj, oldPath, newPath, 0);
            };
            var copyWithSetImpl = function(obj, path, index2, value) {
              if (index2 >= path.length) {
                return value;
              }
              var key = path[index2];
              var updated = isArray(obj) ? obj.slice() : assign({}, obj);
              updated[key] = copyWithSetImpl(obj[key], path, index2 + 1, value);
              return updated;
            };
            var copyWithSet = function(obj, path, value) {
              return copyWithSetImpl(obj, path, 0, value);
            };
            var findHook = function(fiber, id2) {
              var currentHook2 = fiber.memoizedState;
              while (currentHook2 !== null && id2 > 0) {
                currentHook2 = currentHook2.next;
                id2--;
              }
              return currentHook2;
            };
            overrideHookState = function(fiber, id2, path, value) {
              var hook = findHook(fiber, id2);
              if (hook !== null) {
                var newState = copyWithSet(hook.memoizedState, path, value);
                hook.memoizedState = newState;
                hook.baseState = newState;
                fiber.memoizedProps = assign({}, fiber.memoizedProps);
                var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                if (root2 !== null) {
                  scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                }
              }
            };
            overrideHookStateDeletePath = function(fiber, id2, path) {
              var hook = findHook(fiber, id2);
              if (hook !== null) {
                var newState = copyWithDelete(hook.memoizedState, path);
                hook.memoizedState = newState;
                hook.baseState = newState;
                fiber.memoizedProps = assign({}, fiber.memoizedProps);
                var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                if (root2 !== null) {
                  scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                }
              }
            };
            overrideHookStateRenamePath = function(fiber, id2, oldPath, newPath) {
              var hook = findHook(fiber, id2);
              if (hook !== null) {
                var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
                hook.memoizedState = newState;
                hook.baseState = newState;
                fiber.memoizedProps = assign({}, fiber.memoizedProps);
                var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                if (root2 !== null) {
                  scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                }
              }
            };
            overrideProps = function(fiber, path, value) {
              fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
              if (fiber.alternate) {
                fiber.alternate.pendingProps = fiber.pendingProps;
              }
              var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
              }
            };
            overridePropsDeletePath = function(fiber, path) {
              fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
              if (fiber.alternate) {
                fiber.alternate.pendingProps = fiber.pendingProps;
              }
              var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
              }
            };
            overridePropsRenamePath = function(fiber, oldPath, newPath) {
              fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
              if (fiber.alternate) {
                fiber.alternate.pendingProps = fiber.pendingProps;
              }
              var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
              }
            };
            scheduleUpdate = function(fiber) {
              var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
              }
            };
            setErrorHandler = function(newShouldErrorImpl) {
              shouldErrorImpl = newShouldErrorImpl;
            };
            setSuspenseHandler = function(newShouldSuspendImpl) {
              shouldSuspendImpl = newShouldSuspendImpl;
            };
          }
          function findHostInstanceByFiber(fiber) {
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            return hostFiber.stateNode;
          }
          function emptyFindFiberByHostInstance(instance) {
            return null;
          }
          function getCurrentFiberForDevTools() {
            return current;
          }
          function injectIntoDevTools(devToolsConfig) {
            var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
            var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
            return injectInternals({
              bundleType: devToolsConfig.bundleType,
              version: devToolsConfig.version,
              rendererPackageName: devToolsConfig.rendererPackageName,
              rendererConfig: devToolsConfig.rendererConfig,
              overrideHookState,
              overrideHookStateDeletePath,
              overrideHookStateRenamePath,
              overrideProps,
              overridePropsDeletePath,
              overridePropsRenamePath,
              setErrorHandler,
              setSuspenseHandler,
              scheduleUpdate,
              currentDispatcherRef: ReactCurrentDispatcher2,
              findHostInstanceByFiber,
              findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
              findHostInstancesForRefresh,
              scheduleRefresh,
              scheduleRoot,
              setRefreshHandler,
              getCurrentFiber: getCurrentFiberForDevTools,
              reconcilerVersion: ReactVersion
            });
          }
          var defaultOnRecoverableError = typeof reportError === "function" ? reportError : function(error2) {
            console["error"](error2);
          };
          function ReactDOMRoot(internalRoot) {
            this._internalRoot = internalRoot;
          }
          ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
            var root2 = this._internalRoot;
            if (root2 === null) {
              throw new Error("Cannot update an unmounted root.");
            }
            {
              if (typeof arguments[1] === "function") {
                error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
              } else if (isValidContainer(arguments[1])) {
                error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
              } else if (typeof arguments[1] !== "undefined") {
                error("You passed a second argument to root.render(...) but it only accepts one argument.");
              }
              var container = root2.containerInfo;
              if (container.nodeType !== COMMENT_NODE) {
                var hostInstance = findHostInstanceWithNoPortals(root2.current);
                if (hostInstance) {
                  if (hostInstance.parentNode !== container) {
                    error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                  }
                }
              }
            }
            updateContainer(children, root2, null, null);
          };
          ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
            {
              if (typeof arguments[0] === "function") {
                error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
              }
            }
            var root2 = this._internalRoot;
            if (root2 !== null) {
              this._internalRoot = null;
              var container = root2.containerInfo;
              {
                if (isAlreadyRendering()) {
                  error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
                }
              }
              flushSync(function() {
                updateContainer(null, root2, null, null);
              });
              unmarkContainerAsRoot(container);
            }
          };
          function createRoot(container, options2) {
            if (!isValidContainer(container)) {
              throw new Error("createRoot(...): Target container is not a DOM element.");
            }
            warnIfReactDOMContainerInDEV(container);
            var isStrictMode = false;
            var concurrentUpdatesByDefaultOverride = false;
            var identifierPrefix = "";
            var onRecoverableError = defaultOnRecoverableError;
            var transitionCallbacks = null;
            if (options2 !== null && options2 !== void 0) {
              {
                if (options2.hydrate) {
                  warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
                } else {
                  if (typeof options2 === "object" && options2 !== null && options2.$$typeof === REACT_ELEMENT_TYPE) {
                    error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
                  }
                }
              }
              if (options2.unstable_strictMode === true) {
                isStrictMode = true;
              }
              if (options2.identifierPrefix !== void 0) {
                identifierPrefix = options2.identifierPrefix;
              }
              if (options2.onRecoverableError !== void 0) {
                onRecoverableError = options2.onRecoverableError;
              }
              if (options2.transitionCallbacks !== void 0) {
                transitionCallbacks = options2.transitionCallbacks;
              }
            }
            var root2 = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
            markContainerAsRoot(root2.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            return new ReactDOMRoot(root2);
          }
          function ReactDOMHydrationRoot(internalRoot) {
            this._internalRoot = internalRoot;
          }
          function scheduleHydration(target) {
            if (target) {
              queueExplicitHydrationTarget(target);
            }
          }
          ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
          function hydrateRoot(container, initialChildren, options2) {
            if (!isValidContainer(container)) {
              throw new Error("hydrateRoot(...): Target container is not a DOM element.");
            }
            warnIfReactDOMContainerInDEV(container);
            {
              if (initialChildren === void 0) {
                error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
              }
            }
            var hydrationCallbacks = options2 != null ? options2 : null;
            var mutableSources = options2 != null && options2.hydratedSources || null;
            var isStrictMode = false;
            var concurrentUpdatesByDefaultOverride = false;
            var identifierPrefix = "";
            var onRecoverableError = defaultOnRecoverableError;
            if (options2 !== null && options2 !== void 0) {
              if (options2.unstable_strictMode === true) {
                isStrictMode = true;
              }
              if (options2.identifierPrefix !== void 0) {
                identifierPrefix = options2.identifierPrefix;
              }
              if (options2.onRecoverableError !== void 0) {
                onRecoverableError = options2.onRecoverableError;
              }
            }
            var root2 = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
            markContainerAsRoot(root2.current, container);
            listenToAllSupportedEvents(container);
            if (mutableSources) {
              for (var i2 = 0; i2 < mutableSources.length; i2++) {
                var mutableSource = mutableSources[i2];
                registerMutableSourceForHydration(root2, mutableSource);
              }
            }
            return new ReactDOMHydrationRoot(root2);
          }
          function isValidContainer(node) {
            return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
          }
          function isValidContainerLegacy(node) {
            return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
          }
          function warnIfReactDOMContainerInDEV(container) {
            {
              if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
                error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
              }
              if (isContainerMarkedAsRoot(container)) {
                if (container._reactRootContainer) {
                  error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
                } else {
                  error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
                }
              }
            }
          }
          var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
          var topLevelUpdateWarnings;
          {
            topLevelUpdateWarnings = function(container) {
              if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
                var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
                if (hostInstance) {
                  if (hostInstance.parentNode !== container) {
                    error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                  }
                }
              }
              var isRootRenderedBySomeReact = !!container._reactRootContainer;
              var rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
              if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
                error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
              }
              if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
                error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
              }
            };
          }
          function getReactRootElementInContainer(container) {
            if (!container) {
              return null;
            }
            if (container.nodeType === DOCUMENT_NODE) {
              return container.documentElement;
            } else {
              return container.firstChild;
            }
          }
          function noopOnRecoverableError() {
          }
          function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
            if (isHydrationContainer) {
              if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                  var instance = getPublicRootInstance(root2);
                  originalCallback.call(instance);
                };
              }
              var root2 = createHydrationContainer(
                initialChildren,
                callback,
                container,
                LegacyRoot,
                null,
                false,
                false,
                "",
                noopOnRecoverableError
              );
              container._reactRootContainer = root2;
              markContainerAsRoot(root2.current, container);
              var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
              listenToAllSupportedEvents(rootContainerElement);
              flushSync();
              return root2;
            } else {
              var rootSibling;
              while (rootSibling = container.lastChild) {
                container.removeChild(rootSibling);
              }
              if (typeof callback === "function") {
                var _originalCallback = callback;
                callback = function() {
                  var instance = getPublicRootInstance(_root);
                  _originalCallback.call(instance);
                };
              }
              var _root = createContainer(
                container,
                LegacyRoot,
                null,
                false,
                false,
                "",
                noopOnRecoverableError
              );
              container._reactRootContainer = _root;
              markContainerAsRoot(_root.current, container);
              var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
              listenToAllSupportedEvents(_rootContainerElement);
              flushSync(function() {
                updateContainer(initialChildren, _root, parentComponent, callback);
              });
              return _root;
            }
          }
          function warnOnInvalidCallback$1(callback, callerName) {
            {
              if (callback !== null && typeof callback !== "function") {
                error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
              }
            }
          }
          function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
            {
              topLevelUpdateWarnings(container);
              warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
            }
            var maybeRoot = container._reactRootContainer;
            var root2;
            if (!maybeRoot) {
              root2 = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
            } else {
              root2 = maybeRoot;
              if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                  var instance = getPublicRootInstance(root2);
                  originalCallback.call(instance);
                };
              }
              updateContainer(children, root2, parentComponent, callback);
            }
            return getPublicRootInstance(root2);
          }
          function findDOMNode(componentOrElement) {
            {
              var owner = ReactCurrentOwner$3.current;
              if (owner !== null && owner.stateNode !== null) {
                var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
                if (!warnedAboutRefsInRender) {
                  error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
                }
                owner.stateNode._warnedAboutRefsInRender = true;
              }
            }
            if (componentOrElement == null) {
              return null;
            }
            if (componentOrElement.nodeType === ELEMENT_NODE) {
              return componentOrElement;
            }
            {
              return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
            }
          }
          function hydrate(element, container, callback) {
            {
              error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
            }
            if (!isValidContainerLegacy(container)) {
              throw new Error("Target container is not a DOM element.");
            }
            {
              var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
              if (isModernRoot) {
                error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
              }
            }
            return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
          }
          function render(element, container, callback) {
            {
              error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
            }
            if (!isValidContainerLegacy(container)) {
              throw new Error("Target container is not a DOM element.");
            }
            {
              var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
              if (isModernRoot) {
                error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
              }
            }
            return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
          }
          function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
            {
              error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
            }
            if (!isValidContainerLegacy(containerNode)) {
              throw new Error("Target container is not a DOM element.");
            }
            if (parentComponent == null || !has(parentComponent)) {
              throw new Error("parentComponent must be a valid React Component");
            }
            return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
          }
          function unmountComponentAtNode(container) {
            if (!isValidContainerLegacy(container)) {
              throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
            }
            {
              var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
              if (isModernRoot) {
                error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
              }
            }
            if (container._reactRootContainer) {
              {
                var rootEl = getReactRootElementInContainer(container);
                var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
                if (renderedByDifferentReact) {
                  error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
                }
              }
              flushSync(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                  container._reactRootContainer = null;
                  unmarkContainerAsRoot(container);
                });
              });
              return true;
            } else {
              {
                var _rootEl = getReactRootElementInContainer(container);
                var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
                var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
                if (hasNonRootReactChild) {
                  error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
                }
              }
              return false;
            }
          }
          setAttemptSynchronousHydration(attemptSynchronousHydration$1);
          setAttemptContinuousHydration(attemptContinuousHydration$1);
          setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
          setGetCurrentUpdatePriority(getCurrentUpdatePriority);
          setAttemptHydrationAtPriority(runWithPriority);
          {
            if (typeof Map !== "function" || Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
              error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
          }
          setRestoreImplementation(restoreControlledState$3);
          setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
          function createPortal$1(children, container) {
            var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            if (!isValidContainer(container)) {
              throw new Error("Target container is not a DOM element.");
            }
            return createPortal(children, container, null, key);
          }
          function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
            return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
          }
          var Internals = {
            usingClientEntryPoint: false,
            Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
          };
          function createRoot$1(container, options2) {
            {
              if (!Internals.usingClientEntryPoint && true) {
                error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
              }
            }
            return createRoot(container, options2);
          }
          function hydrateRoot$1(container, initialChildren, options2) {
            {
              if (!Internals.usingClientEntryPoint && true) {
                error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
              }
            }
            return hydrateRoot(container, initialChildren, options2);
          }
          function flushSync$1(fn2) {
            {
              if (isAlreadyRendering()) {
                error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
              }
            }
            return flushSync(fn2);
          }
          var foundDevTools = injectIntoDevTools({
            findFiberByHostInstance: getClosestInstanceFromNode,
            bundleType: 1,
            version: ReactVersion,
            rendererPackageName: "react-dom"
          });
          {
            if (!foundDevTools && canUseDOM && window.top === window.self) {
              if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
                var protocol = window.location.protocol;
                if (/^(https?|file):$/.test(protocol)) {
                  console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
                }
              }
            }
          }
          exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
          exports.createPortal = createPortal$1;
          exports.createRoot = createRoot$1;
          exports.findDOMNode = findDOMNode;
          exports.flushSync = flushSync$1;
          exports.hydrate = hydrate;
          exports.hydrateRoot = hydrateRoot$1;
          exports.render = render;
          exports.unmountComponentAtNode = unmountComponentAtNode;
          exports.unstable_batchedUpdates = batchedUpdates$1;
          exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
          exports.version = ReactVersion;
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
          }
        })();
      }
    }
  });

  // node_modules/react-dom/index.js
  var require_react_dom = __commonJS({
    "node_modules/react-dom/index.js"(exports, module) {
      "use strict";
      if (false) {
        checkDCE();
        module.exports = null;
      } else {
        module.exports = require_react_dom_development();
      }
    }
  });

  // node_modules/react-error-boundary/dist/react-error-boundary.umd.js
  var require_react_error_boundary_umd = __commonJS({
    "node_modules/react-error-boundary/dist/react-error-boundary.umd.js"(exports, module) {
      (function(global2, factory) {
        typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require_react()) : typeof define === "function" && define.amd ? define(["exports", "react"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.ReactErrorBoundary = {}, global2.React));
      })(exports, function(exports2, React6) {
        "use strict";
        function _interopNamespace(e27) {
          if (e27 && e27.__esModule)
            return e27;
          var n2 = /* @__PURE__ */ Object.create(null);
          if (e27) {
            Object.keys(e27).forEach(function(k2) {
              if (k2 !== "default") {
                var d2 = Object.getOwnPropertyDescriptor(e27, k2);
                Object.defineProperty(n2, k2, d2.get ? d2 : {
                  enumerable: true,
                  get: function() {
                    return e27[k2];
                  }
                });
              }
            });
          }
          n2["default"] = e27;
          return Object.freeze(n2);
        }
        var React__namespace = /* @__PURE__ */ _interopNamespace(React6);
        function _setPrototypeOf(o2, p2) {
          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o3, p3) {
            o3.__proto__ = p3;
            return o3;
          };
          return _setPrototypeOf(o2, p2);
        }
        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          _setPrototypeOf(subClass, superClass);
        }
        var changedArray = function changedArray2(a2, b2) {
          if (a2 === void 0) {
            a2 = [];
          }
          if (b2 === void 0) {
            b2 = [];
          }
          return a2.length !== b2.length || a2.some(function(item, index) {
            return !Object.is(item, b2[index]);
          });
        };
        var initialState = {
          error: null
        };
        var ErrorBoundary2 = /* @__PURE__ */ function(_React$Component) {
          _inheritsLoose(ErrorBoundary3, _React$Component);
          function ErrorBoundary3() {
            var _this;
            for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
              _args[_key] = arguments[_key];
            }
            _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
            _this.state = initialState;
            _this.resetErrorBoundary = function() {
              var _this$props;
              for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
              }
              _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args);
              _this.reset();
            };
            return _this;
          }
          ErrorBoundary3.getDerivedStateFromError = function getDerivedStateFromError(error) {
            return {
              error
            };
          };
          var _proto = ErrorBoundary3.prototype;
          _proto.reset = function reset() {
            this.setState(initialState);
          };
          _proto.componentDidCatch = function componentDidCatch(error, info) {
            var _this$props$onError, _this$props2;
            (_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info);
          };
          _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
            var error = this.state.error;
            var resetKeys = this.props.resetKeys;
            if (error !== null && prevState.error !== null && changedArray(prevProps.resetKeys, resetKeys)) {
              var _this$props$onResetKe, _this$props3;
              (_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys);
              this.reset();
            }
          };
          _proto.render = function render() {
            var error = this.state.error;
            var _this$props4 = this.props, fallbackRender = _this$props4.fallbackRender, FallbackComponent = _this$props4.FallbackComponent, fallback = _this$props4.fallback;
            if (error !== null) {
              var _props = {
                error,
                resetErrorBoundary: this.resetErrorBoundary
              };
              if (/* @__PURE__ */ React__namespace.isValidElement(fallback)) {
                return fallback;
              } else if (typeof fallbackRender === "function") {
                return fallbackRender(_props);
              } else if (FallbackComponent) {
                return /* @__PURE__ */ React__namespace.createElement(FallbackComponent, _props);
              } else {
                throw new Error("react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop");
              }
            }
            return this.props.children;
          };
          return ErrorBoundary3;
        }(React__namespace.Component);
        function withErrorBoundary(Component, errorBoundaryProps) {
          var Wrapped = function Wrapped2(props) {
            return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary2, errorBoundaryProps, /* @__PURE__ */ React__namespace.createElement(Component, props));
          };
          var name = Component.displayName || Component.name || "Unknown";
          Wrapped.displayName = "withErrorBoundary(" + name + ")";
          return Wrapped;
        }
        function useErrorHandler(givenError) {
          var _React$useState = React__namespace.useState(null), error = _React$useState[0], setError = _React$useState[1];
          if (givenError != null)
            throw givenError;
          if (error != null)
            throw error;
          return setError;
        }
        exports2.ErrorBoundary = ErrorBoundary2;
        exports2.useErrorHandler = useErrorHandler;
        exports2.withErrorBoundary = withErrorBoundary;
        Object.defineProperty(exports2, "__esModule", { value: true });
      });
    }
  });

  // src/client/index.tsx
  var import_react9 = __toESM(require_react());
  var import_react_dom = __toESM(require_react_dom());

  // src/client/App.tsx
  var import_react7 = __toESM(require_react());

  // node_modules/@tremor/react/dist/esm/index.js
  var e = __toESM(require_react());
  var import_react = __toESM(require_react());
  var g = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
  function v(e27) {
    return e27 && e27.__esModule && Object.prototype.hasOwnProperty.call(e27, "default") ? e27.default : e27;
  }
  var m;
  var y = { exports: {} };
  m = y, function() {
    var e27 = {}.hasOwnProperty;
    function t2() {
      for (var r2 = [], n2 = 0; n2 < arguments.length; n2++) {
        var o2 = arguments[n2];
        if (o2) {
          var i2 = typeof o2;
          if ("string" === i2 || "number" === i2)
            r2.push(o2);
          else if (Array.isArray(o2)) {
            if (o2.length) {
              var a2 = t2.apply(null, o2);
              a2 && r2.push(a2);
            }
          } else if ("object" === i2) {
            if (o2.toString !== Object.prototype.toString && !o2.toString.toString().includes("[native code]")) {
              r2.push(o2.toString());
              continue;
            }
            for (var l2 in o2)
              e27.call(o2, l2) && o2[l2] && r2.push(l2);
          }
        }
      }
      return r2.join(" ");
    }
    m.exports ? (t2.default = t2, m.exports = t2) : window.classNames = t2;
  }();
  var b = y.exports;
  var C = function(e27) {
    var t2 = typeof e27;
    return null != e27 && ("object" == t2 || "function" == t2);
  };
  function x(e27) {
    return x = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, x(e27);
  }
  var w = ["viewBox", "children"];
  var k = ["aria-activedescendant", "aria-atomic", "aria-autocomplete", "aria-busy", "aria-checked", "aria-colcount", "aria-colindex", "aria-colspan", "aria-controls", "aria-current", "aria-describedby", "aria-details", "aria-disabled", "aria-errormessage", "aria-expanded", "aria-flowto", "aria-haspopup", "aria-hidden", "aria-invalid", "aria-keyshortcuts", "aria-label", "aria-labelledby", "aria-level", "aria-live", "aria-modal", "aria-multiline", "aria-multiselectable", "aria-orientation", "aria-owns", "aria-placeholder", "aria-posinset", "aria-pressed", "aria-readonly", "aria-relevant", "aria-required", "aria-roledescription", "aria-rowcount", "aria-rowindex", "aria-rowspan", "aria-selected", "aria-setsize", "aria-sort", "aria-valuemax", "aria-valuemin", "aria-valuenow", "aria-valuetext", "className", "color", "height", "id", "lang", "max", "media", "method", "min", "name", "style", "target", "type", "width", "role", "tabIndex", "accentHeight", "accumulate", "additive", "alignmentBaseline", "allowReorder", "alphabetic", "amplitude", "arabicForm", "ascent", "attributeName", "attributeType", "autoReverse", "azimuth", "baseFrequency", "baselineShift", "baseProfile", "bbox", "begin", "bias", "by", "calcMode", "capHeight", "clip", "clipPath", "clipPathUnits", "clipRule", "colorInterpolation", "colorInterpolationFilters", "colorProfile", "colorRendering", "contentScriptType", "contentStyleType", "cursor", "cx", "cy", "d", "decelerate", "descent", "diffuseConstant", "direction", "display", "divisor", "dominantBaseline", "dur", "dx", "dy", "edgeMode", "elevation", "enableBackground", "end", "exponent", "externalResourcesRequired", "fill", "fillOpacity", "fillRule", "filter", "filterRes", "filterUnits", "floodColor", "floodOpacity", "focusable", "fontFamily", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontWeight", "format", "from", "fx", "fy", "g1", "g2", "glyphName", "glyphOrientationHorizontal", "glyphOrientationVertical", "glyphRef", "gradientTransform", "gradientUnits", "hanging", "horizAdvX", "horizOriginX", "href", "ideographic", "imageRendering", "in2", "in", "intercept", "k1", "k2", "k3", "k4", "k", "kernelMatrix", "kernelUnitLength", "kerning", "keyPoints", "keySplines", "keyTimes", "lengthAdjust", "letterSpacing", "lightingColor", "limitingConeAngle", "local", "markerEnd", "markerHeight", "markerMid", "markerStart", "markerUnits", "markerWidth", "mask", "maskContentUnits", "maskUnits", "mathematical", "mode", "numOctaves", "offset", "opacity", "operator", "order", "orient", "orientation", "origin", "overflow", "overlinePosition", "overlineThickness", "paintOrder", "panose1", "pathLength", "patternContentUnits", "patternTransform", "patternUnits", "pointerEvents", "points", "pointsAtX", "pointsAtY", "pointsAtZ", "preserveAlpha", "preserveAspectRatio", "primitiveUnits", "r", "radius", "refX", "refY", "renderingIntent", "repeatCount", "repeatDur", "requiredExtensions", "requiredFeatures", "restart", "result", "rotate", "rx", "ry", "seed", "shapeRendering", "slope", "spacing", "specularConstant", "specularExponent", "speed", "spreadMethod", "startOffset", "stdDeviation", "stemh", "stemv", "stitchTiles", "stopColor", "stopOpacity", "strikethroughPosition", "strikethroughThickness", "string", "stroke", "strokeDasharray", "strokeDashoffset", "strokeLinecap", "strokeLinejoin", "strokeMiterlimit", "strokeOpacity", "strokeWidth", "surfaceScale", "systemLanguage", "tableValues", "targetX", "targetY", "textAnchor", "textDecoration", "textLength", "textRendering", "to", "transform", "u1", "u2", "underlinePosition", "underlineThickness", "unicode", "unicodeBidi", "unicodeRange", "unitsPerEm", "vAlphabetic", "values", "vectorEffect", "version", "vertAdvY", "vertOriginX", "vertOriginY", "vHanging", "vIdeographic", "viewTarget", "visibility", "vMathematical", "widths", "wordSpacing", "writingMode", "x1", "x2", "x", "xChannelSelector", "xHeight", "xlinkActuate", "xlinkArcrole", "xlinkHref", "xlinkRole", "xlinkShow", "xlinkTitle", "xlinkType", "xmlBase", "xmlLang", "xmlns", "xmlnsXlink", "xmlSpace", "y1", "y2", "y", "yChannelSelector", "z", "zoomAndPan", "ref", "key", "angle"];
  var S = ["dangerouslySetInnerHTML", "onCopy", "onCopyCapture", "onCut", "onCutCapture", "onPaste", "onPasteCapture", "onCompositionEnd", "onCompositionEndCapture", "onCompositionStart", "onCompositionStartCapture", "onCompositionUpdate", "onCompositionUpdateCapture", "onFocus", "onFocusCapture", "onBlur", "onBlurCapture", "onChange", "onChangeCapture", "onBeforeInput", "onBeforeInputCapture", "onInput", "onInputCapture", "onReset", "onResetCapture", "onSubmit", "onSubmitCapture", "onInvalid", "onInvalidCapture", "onLoad", "onLoadCapture", "onError", "onErrorCapture", "onKeyDown", "onKeyDownCapture", "onKeyPress", "onKeyPressCapture", "onKeyUp", "onKeyUpCapture", "onAbort", "onAbortCapture", "onCanPlay", "onCanPlayCapture", "onCanPlayThrough", "onCanPlayThroughCapture", "onDurationChange", "onDurationChangeCapture", "onEmptied", "onEmptiedCapture", "onEncrypted", "onEncryptedCapture", "onEnded", "onEndedCapture", "onLoadedData", "onLoadedDataCapture", "onLoadedMetadata", "onLoadedMetadataCapture", "onLoadStart", "onLoadStartCapture", "onPause", "onPauseCapture", "onPlay", "onPlayCapture", "onPlaying", "onPlayingCapture", "onProgress", "onProgressCapture", "onRateChange", "onRateChangeCapture", "onSeeked", "onSeekedCapture", "onSeeking", "onSeekingCapture", "onStalled", "onStalledCapture", "onSuspend", "onSuspendCapture", "onTimeUpdate", "onTimeUpdateCapture", "onVolumeChange", "onVolumeChangeCapture", "onWaiting", "onWaitingCapture", "onAuxClick", "onAuxClickCapture", "onClick", "onClickCapture", "onContextMenu", "onContextMenuCapture", "onDoubleClick", "onDoubleClickCapture", "onDrag", "onDragCapture", "onDragEnd", "onDragEndCapture", "onDragEnter", "onDragEnterCapture", "onDragExit", "onDragExitCapture", "onDragLeave", "onDragLeaveCapture", "onDragOver", "onDragOverCapture", "onDragStart", "onDragStartCapture", "onDrop", "onDropCapture", "onMouseDown", "onMouseDownCapture", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseMoveCapture", "onMouseOut", "onMouseOutCapture", "onMouseOver", "onMouseOverCapture", "onMouseUp", "onMouseUpCapture", "onSelect", "onSelectCapture", "onTouchCancel", "onTouchCancelCapture", "onTouchEnd", "onTouchEndCapture", "onTouchMove", "onTouchMoveCapture", "onTouchStart", "onTouchStartCapture", "onPointerDown", "onPointerDownCapture", "onPointerMove", "onPointerMoveCapture", "onPointerUp", "onPointerUpCapture", "onPointerCancel", "onPointerCancelCapture", "onPointerEnter", "onPointerEnterCapture", "onPointerLeave", "onPointerLeaveCapture", "onPointerOver", "onPointerOverCapture", "onPointerOut", "onPointerOutCapture", "onGotPointerCapture", "onGotPointerCaptureCapture", "onLostPointerCapture", "onLostPointerCaptureCapture", "onScroll", "onScrollCapture", "onWheel", "onWheelCapture", "onAnimationStart", "onAnimationStartCapture", "onAnimationEnd", "onAnimationEndCapture", "onAnimationIteration", "onAnimationIterationCapture", "onTransitionEnd", "onTransitionEndCapture"];
  var E = function(e27, t2, n2) {
    if (!e27 || "function" == typeof e27 || "boolean" == typeof e27)
      return null;
    var o2 = e27;
    if ((0, import_react.isValidElement)(e27) && (o2 = e27.props), !C(o2))
      return null;
    var i2 = {};
    return Object.keys(o2).forEach(function(e28) {
      (k.includes(e28) || n2 && w.includes(e28) || t2 && S.includes(e28)) && (i2[e28] = o2[e28]);
    }), i2;
  };
  var T = function(e27, t2) {
    if (!e27 || "function" == typeof e27 || "boolean" == typeof e27)
      return null;
    var n2 = e27;
    if ((0, import_react.isValidElement)(e27) && (n2 = e27.props), !C(n2))
      return null;
    var o2 = {};
    return Object.keys(n2).forEach(function(e28) {
      S.includes(e28) && (o2[e28] = t2 || function(t3) {
        return n2[e28](n2, t3);
      });
    }), o2;
  };
  var R = function(e27, t2, r2) {
    if (!C(e27) || "object" !== x(e27))
      return null;
    var n2 = null;
    return Object.keys(e27).forEach(function(o2) {
      var i2 = e27[o2];
      S.includes(o2) && "function" == typeof i2 && (n2 || (n2 = {}), n2[o2] = function(e28, t3, r3) {
        return function(n3) {
          return e28(t3, r3, n3), null;
        };
      }(i2, t2, r2));
    }), n2;
  };
  function O() {
    return O = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, O.apply(this, arguments);
  }
  function _(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function P(e27) {
    var r2 = e27.children, n2 = e27.width, o2 = e27.height, i2 = e27.viewBox, a2 = e27.className, l2 = e27.style, u2 = _(e27, ["children", "width", "height", "viewBox", "className", "style"]), s2 = i2 || { width: n2, height: o2, x: 0, y: 0 }, c2 = b("recharts-surface", a2);
    return import_react.default.createElement("svg", O({}, E(u2, true, true), { className: c2, width: n2, height: o2, style: l2, viewBox: "".concat(s2.x, " ").concat(s2.y, " ").concat(s2.width, " ").concat(s2.height), version: "1.1" }), r2);
  }
  function M() {
    return M = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, M.apply(this, arguments);
  }
  function B(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function A(e27) {
    var r2 = e27.children, n2 = e27.className, o2 = B(e27, ["children", "className"]), i2 = b("recharts-layer", n2);
    return import_react.default.createElement("g", M({ className: i2 }, E(o2, true)), r2);
  }
  var N = "object" == typeof g && g && g.Object === Object && g;
  var j = N;
  var D = "object" == typeof self && self && self.Object === Object && self;
  var L = j || D || Function("return this")();
  var I = L.Symbol;
  var z = I;
  var F = Object.prototype;
  var U = F.hasOwnProperty;
  var V = F.toString;
  var W = z ? z.toStringTag : void 0;
  var H = function(e27) {
    var t2 = U.call(e27, W), r2 = e27[W];
    try {
      e27[W] = void 0;
      var n2 = true;
    } catch (e28) {
    }
    var o2 = V.call(e27);
    return n2 && (t2 ? e27[W] = r2 : delete e27[W]), o2;
  };
  var $ = Object.prototype.toString;
  var q = H;
  var Y = function(e27) {
    return $.call(e27);
  };
  var G = I ? I.toStringTag : void 0;
  var X = function(e27) {
    return null == e27 ? void 0 === e27 ? "[object Undefined]" : "[object Null]" : G && G in Object(e27) ? q(e27) : Y(e27);
  };
  var Q = X;
  var K = C;
  var Z = function(e27) {
    if (!K(e27))
      return false;
    var t2 = Q(e27);
    return "[object Function]" == t2 || "[object GeneratorFunction]" == t2 || "[object AsyncFunction]" == t2 || "[object Proxy]" == t2;
  };
  var J = function() {
    this.__data__ = [], this.size = 0;
  };
  var ee = function(e27, t2) {
    return e27 === t2 || e27 != e27 && t2 != t2;
  };
  var te = ee;
  var re = function(e27, t2) {
    for (var r2 = e27.length; r2--; )
      if (te(e27[r2][0], t2))
        return r2;
    return -1;
  };
  var ne = re;
  var oe = Array.prototype.splice;
  var ie = function(e27) {
    var t2 = this.__data__, r2 = ne(t2, e27);
    return !(r2 < 0) && (r2 == t2.length - 1 ? t2.pop() : oe.call(t2, r2, 1), --this.size, true);
  };
  var ae = re;
  var le = function(e27) {
    var t2 = this.__data__, r2 = ae(t2, e27);
    return r2 < 0 ? void 0 : t2[r2][1];
  };
  var ue = re;
  var se = re;
  var ce = function(e27, t2) {
    var r2 = this.__data__, n2 = se(r2, e27);
    return n2 < 0 ? (++this.size, r2.push([e27, t2])) : r2[n2][1] = t2, this;
  };
  var de = J;
  var fe = ie;
  var pe = le;
  var he = function(e27) {
    return ue(this.__data__, e27) > -1;
  };
  var ge = ce;
  function ve(e27) {
    var t2 = -1, r2 = null == e27 ? 0 : e27.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e27[t2];
      this.set(n2[0], n2[1]);
    }
  }
  ve.prototype.clear = de, ve.prototype.delete = fe, ve.prototype.get = pe, ve.prototype.has = he, ve.prototype.set = ge;
  var me = ve;
  var ye = me;
  var be = function() {
    this.__data__ = new ye(), this.size = 0;
  };
  var Ce = function(e27) {
    var t2 = this.__data__, r2 = t2.delete(e27);
    return this.size = t2.size, r2;
  };
  var xe = function(e27) {
    return this.__data__.get(e27);
  };
  var we;
  var ke = function(e27) {
    return this.__data__.has(e27);
  };
  var Se = L["__core-js_shared__"];
  var Ee = (we = /[^.]+$/.exec(Se && Se.keys && Se.keys.IE_PROTO || "")) ? "Symbol(src)_1." + we : "";
  var Te = function(e27) {
    return !!Ee && Ee in e27;
  };
  var Re = Function.prototype.toString;
  var Oe = function(e27) {
    if (null != e27) {
      try {
        return Re.call(e27);
      } catch (e28) {
      }
      try {
        return e27 + "";
      } catch (e28) {
      }
    }
    return "";
  };
  var _e = Z;
  var Pe = Te;
  var Me = C;
  var Be = Oe;
  var Ae = /^\[object .+?Constructor\]$/;
  var Ne = Function.prototype;
  var je = Object.prototype;
  var De = Ne.toString;
  var Le = je.hasOwnProperty;
  var Ie = RegExp("^" + De.call(Le).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var ze = function(e27, t2) {
    return null == e27 ? void 0 : e27[t2];
  };
  var Fe = function(e27) {
    return !(!Me(e27) || Pe(e27)) && (_e(e27) ? Ie : Ae).test(Be(e27));
  };
  var Ue = ze;
  var Ve = function(e27, t2) {
    var r2 = Ue(e27, t2);
    return Fe(r2) ? r2 : void 0;
  };
  var We = Ve(L, "Map");
  var He = Ve(Object, "create");
  var $e = He;
  var qe = function() {
    this.__data__ = $e ? $e(null) : {}, this.size = 0;
  };
  var Ye = function(e27) {
    var t2 = this.has(e27) && delete this.__data__[e27];
    return this.size -= t2 ? 1 : 0, t2;
  };
  var Ge = He;
  var Xe = Object.prototype.hasOwnProperty;
  var Qe = function(e27) {
    var t2 = this.__data__;
    if (Ge) {
      var r2 = t2[e27];
      return "__lodash_hash_undefined__" === r2 ? void 0 : r2;
    }
    return Xe.call(t2, e27) ? t2[e27] : void 0;
  };
  var Ke = He;
  var Ze = Object.prototype.hasOwnProperty;
  var Je = He;
  var et = qe;
  var tt = Ye;
  var rt = Qe;
  var nt = function(e27) {
    var t2 = this.__data__;
    return Ke ? void 0 !== t2[e27] : Ze.call(t2, e27);
  };
  var ot = function(e27, t2) {
    var r2 = this.__data__;
    return this.size += this.has(e27) ? 0 : 1, r2[e27] = Je && void 0 === t2 ? "__lodash_hash_undefined__" : t2, this;
  };
  function it(e27) {
    var t2 = -1, r2 = null == e27 ? 0 : e27.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e27[t2];
      this.set(n2[0], n2[1]);
    }
  }
  it.prototype.clear = et, it.prototype.delete = tt, it.prototype.get = rt, it.prototype.has = nt, it.prototype.set = ot;
  var at = it;
  var lt = me;
  var ut = We;
  var st = function(e27) {
    var t2 = typeof e27;
    return "string" == t2 || "number" == t2 || "symbol" == t2 || "boolean" == t2 ? "__proto__" !== e27 : null === e27;
  };
  var ct = function(e27, t2) {
    var r2 = e27.__data__;
    return st(t2) ? r2["string" == typeof t2 ? "string" : "hash"] : r2.map;
  };
  var dt = ct;
  var ft = ct;
  var pt = ct;
  var ht = ct;
  var gt = function() {
    this.size = 0, this.__data__ = { hash: new at(), map: new (ut || lt)(), string: new at() };
  };
  var vt = function(e27) {
    var t2 = dt(this, e27).delete(e27);
    return this.size -= t2 ? 1 : 0, t2;
  };
  var mt = function(e27) {
    return ft(this, e27).get(e27);
  };
  var yt = function(e27) {
    return pt(this, e27).has(e27);
  };
  var bt = function(e27, t2) {
    var r2 = ht(this, e27), n2 = r2.size;
    return r2.set(e27, t2), this.size += r2.size == n2 ? 0 : 1, this;
  };
  function Ct(e27) {
    var t2 = -1, r2 = null == e27 ? 0 : e27.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e27[t2];
      this.set(n2[0], n2[1]);
    }
  }
  Ct.prototype.clear = gt, Ct.prototype.delete = vt, Ct.prototype.get = mt, Ct.prototype.has = yt, Ct.prototype.set = bt;
  var xt = Ct;
  var wt = me;
  var kt = We;
  var St = xt;
  var Et = me;
  var Tt = be;
  var Rt = Ce;
  var Ot = xe;
  var _t = ke;
  var Pt = function(e27, t2) {
    var r2 = this.__data__;
    if (r2 instanceof wt) {
      var n2 = r2.__data__;
      if (!kt || n2.length < 199)
        return n2.push([e27, t2]), this.size = ++r2.size, this;
      r2 = this.__data__ = new St(n2);
    }
    return r2.set(e27, t2), this.size = r2.size, this;
  };
  function Mt(e27) {
    var t2 = this.__data__ = new Et(e27);
    this.size = t2.size;
  }
  Mt.prototype.clear = Tt, Mt.prototype.delete = Rt, Mt.prototype.get = Ot, Mt.prototype.has = _t, Mt.prototype.set = Pt;
  var Bt = Mt;
  var At = xt;
  var Nt = function(e27) {
    return this.__data__.set(e27, "__lodash_hash_undefined__"), this;
  };
  var jt = function(e27) {
    return this.__data__.has(e27);
  };
  function Dt(e27) {
    var t2 = -1, r2 = null == e27 ? 0 : e27.length;
    for (this.__data__ = new At(); ++t2 < r2; )
      this.add(e27[t2]);
  }
  Dt.prototype.add = Dt.prototype.push = Nt, Dt.prototype.has = jt;
  var Lt = Dt;
  var It = function(e27, t2) {
    for (var r2 = -1, n2 = null == e27 ? 0 : e27.length; ++r2 < n2; )
      if (t2(e27[r2], r2, e27))
        return true;
    return false;
  };
  var zt = function(e27, t2) {
    return e27.has(t2);
  };
  var Ft = Lt;
  var Ut = It;
  var Vt = zt;
  var Wt = function(e27, t2, r2, n2, o2, i2) {
    var a2 = 1 & r2, l2 = e27.length, u2 = t2.length;
    if (l2 != u2 && !(a2 && u2 > l2))
      return false;
    var s2 = i2.get(e27), c2 = i2.get(t2);
    if (s2 && c2)
      return s2 == t2 && c2 == e27;
    var d2 = -1, f2 = true, p2 = 2 & r2 ? new Ft() : void 0;
    for (i2.set(e27, t2), i2.set(t2, e27); ++d2 < l2; ) {
      var h2 = e27[d2], g2 = t2[d2];
      if (n2)
        var v2 = a2 ? n2(g2, h2, d2, t2, e27, i2) : n2(h2, g2, d2, e27, t2, i2);
      if (void 0 !== v2) {
        if (v2)
          continue;
        f2 = false;
        break;
      }
      if (p2) {
        if (!Ut(t2, function(e28, t3) {
          if (!Vt(p2, t3) && (h2 === e28 || o2(h2, e28, r2, n2, i2)))
            return p2.push(t3);
        })) {
          f2 = false;
          break;
        }
      } else if (h2 !== g2 && !o2(h2, g2, r2, n2, i2)) {
        f2 = false;
        break;
      }
    }
    return i2.delete(e27), i2.delete(t2), f2;
  };
  var Ht = function(e27) {
    var t2 = -1, r2 = Array(e27.size);
    return e27.forEach(function(e28, n2) {
      r2[++t2] = [n2, e28];
    }), r2;
  };
  var $t = function(e27) {
    var t2 = -1, r2 = Array(e27.size);
    return e27.forEach(function(e28) {
      r2[++t2] = e28;
    }), r2;
  };
  var qt = L.Uint8Array;
  var Yt = ee;
  var Gt = Wt;
  var Xt = Ht;
  var Qt = $t;
  var Kt = I ? I.prototype : void 0;
  var Zt = Kt ? Kt.valueOf : void 0;
  var Jt = function(e27, t2, r2, n2, o2, i2, a2) {
    switch (r2) {
      case "[object DataView]":
        if (e27.byteLength != t2.byteLength || e27.byteOffset != t2.byteOffset)
          return false;
        e27 = e27.buffer, t2 = t2.buffer;
      case "[object ArrayBuffer]":
        return !(e27.byteLength != t2.byteLength || !i2(new qt(e27), new qt(t2)));
      case "[object Boolean]":
      case "[object Date]":
      case "[object Number]":
        return Yt(+e27, +t2);
      case "[object Error]":
        return e27.name == t2.name && e27.message == t2.message;
      case "[object RegExp]":
      case "[object String]":
        return e27 == t2 + "";
      case "[object Map]":
        var l2 = Xt;
      case "[object Set]":
        var u2 = 1 & n2;
        if (l2 || (l2 = Qt), e27.size != t2.size && !u2)
          return false;
        var s2 = a2.get(e27);
        if (s2)
          return s2 == t2;
        n2 |= 2, a2.set(e27, t2);
        var c2 = Gt(l2(e27), l2(t2), n2, o2, i2, a2);
        return a2.delete(e27), c2;
      case "[object Symbol]":
        if (Zt)
          return Zt.call(e27) == Zt.call(t2);
    }
    return false;
  };
  var er = function(e27, t2) {
    for (var r2 = -1, n2 = t2.length, o2 = e27.length; ++r2 < n2; )
      e27[o2 + r2] = t2[r2];
    return e27;
  };
  var tr = Array.isArray;
  var rr = er;
  var nr = tr;
  var or = function(e27, t2, r2) {
    var n2 = t2(e27);
    return nr(e27) ? n2 : rr(n2, r2(e27));
  };
  var ir = function(e27, t2) {
    for (var r2 = -1, n2 = null == e27 ? 0 : e27.length, o2 = 0, i2 = []; ++r2 < n2; ) {
      var a2 = e27[r2];
      t2(a2, r2, e27) && (i2[o2++] = a2);
    }
    return i2;
  };
  var ar = ir;
  var lr = function() {
    return [];
  };
  var ur = Object.prototype.propertyIsEnumerable;
  var sr = Object.getOwnPropertySymbols;
  var cr = sr ? function(e27) {
    return null == e27 ? [] : (e27 = Object(e27), ar(sr(e27), function(t2) {
      return ur.call(e27, t2);
    }));
  } : lr;
  var dr = cr;
  var fr = function(e27, t2) {
    for (var r2 = -1, n2 = Array(e27); ++r2 < e27; )
      n2[r2] = t2(r2);
    return n2;
  };
  var pr = function(e27) {
    return null != e27 && "object" == typeof e27;
  };
  var hr = X;
  var gr = pr;
  var vr = function(e27) {
    return gr(e27) && "[object Arguments]" == hr(e27);
  };
  var mr = pr;
  var yr = Object.prototype;
  var br = yr.hasOwnProperty;
  var Cr = yr.propertyIsEnumerable;
  var xr = vr(function() {
    return arguments;
  }()) ? vr : function(e27) {
    return mr(e27) && br.call(e27, "callee") && !Cr.call(e27, "callee");
  };
  var wr = { exports: {} };
  var kr = function() {
    return false;
  };
  !function(e27, t2) {
    var r2 = L, n2 = kr, o2 = t2 && !t2.nodeType && t2, i2 = o2 && e27 && !e27.nodeType && e27, a2 = i2 && i2.exports === o2 ? r2.Buffer : void 0, l2 = (a2 ? a2.isBuffer : void 0) || n2;
    e27.exports = l2;
  }(wr, wr.exports);
  var Sr = /^(?:0|[1-9]\d*)$/;
  var Er = function(e27, t2) {
    var r2 = typeof e27;
    return !!(t2 = null == t2 ? 9007199254740991 : t2) && ("number" == r2 || "symbol" != r2 && Sr.test(e27)) && e27 > -1 && e27 % 1 == 0 && e27 < t2;
  };
  var Tr = function(e27) {
    return "number" == typeof e27 && e27 > -1 && e27 % 1 == 0 && e27 <= 9007199254740991;
  };
  var Rr = X;
  var Or = Tr;
  var _r = pr;
  var Pr = {};
  Pr["[object Float32Array]"] = Pr["[object Float64Array]"] = Pr["[object Int8Array]"] = Pr["[object Int16Array]"] = Pr["[object Int32Array]"] = Pr["[object Uint8Array]"] = Pr["[object Uint8ClampedArray]"] = Pr["[object Uint16Array]"] = Pr["[object Uint32Array]"] = true, Pr["[object Arguments]"] = Pr["[object Array]"] = Pr["[object ArrayBuffer]"] = Pr["[object Boolean]"] = Pr["[object DataView]"] = Pr["[object Date]"] = Pr["[object Error]"] = Pr["[object Function]"] = Pr["[object Map]"] = Pr["[object Number]"] = Pr["[object Object]"] = Pr["[object RegExp]"] = Pr["[object Set]"] = Pr["[object String]"] = Pr["[object WeakMap]"] = false;
  var Mr = function(e27) {
    return _r(e27) && Or(e27.length) && !!Pr[Rr(e27)];
  };
  var Br = function(e27) {
    return function(t2) {
      return e27(t2);
    };
  };
  var Ar = { exports: {} };
  !function(e27, t2) {
    var r2 = N, n2 = t2 && !t2.nodeType && t2, o2 = n2 && e27 && !e27.nodeType && e27, i2 = o2 && o2.exports === n2 && r2.process, a2 = function() {
      try {
        var e28 = o2 && o2.require && o2.require("util").types;
        return e28 || i2 && i2.binding && i2.binding("util");
      } catch (e29) {
      }
    }();
    e27.exports = a2;
  }(Ar, Ar.exports);
  var Nr = Mr;
  var jr = Br;
  var Dr = Ar.exports;
  var Lr = Dr && Dr.isTypedArray;
  var Ir = Lr ? jr(Lr) : Nr;
  var zr = fr;
  var Fr = xr;
  var Ur = tr;
  var Vr = wr.exports;
  var Wr = Er;
  var Hr = Ir;
  var $r = Object.prototype.hasOwnProperty;
  var qr = function(e27, t2) {
    var r2 = Ur(e27), n2 = !r2 && Fr(e27), o2 = !r2 && !n2 && Vr(e27), i2 = !r2 && !n2 && !o2 && Hr(e27), a2 = r2 || n2 || o2 || i2, l2 = a2 ? zr(e27.length, String) : [], u2 = l2.length;
    for (var s2 in e27)
      !t2 && !$r.call(e27, s2) || a2 && ("length" == s2 || o2 && ("offset" == s2 || "parent" == s2) || i2 && ("buffer" == s2 || "byteLength" == s2 || "byteOffset" == s2) || Wr(s2, u2)) || l2.push(s2);
    return l2;
  };
  var Yr = Object.prototype;
  var Gr = function(e27) {
    var t2 = e27 && e27.constructor;
    return e27 === ("function" == typeof t2 && t2.prototype || Yr);
  };
  var Xr = function(e27, t2) {
    return function(r2) {
      return e27(t2(r2));
    };
  };
  var Qr = Xr(Object.keys, Object);
  var Kr = Gr;
  var Zr = Qr;
  var Jr = Object.prototype.hasOwnProperty;
  var en = function(e27) {
    if (!Kr(e27))
      return Zr(e27);
    var t2 = [];
    for (var r2 in Object(e27))
      Jr.call(e27, r2) && "constructor" != r2 && t2.push(r2);
    return t2;
  };
  var tn = Z;
  var rn = Tr;
  var nn = function(e27) {
    return null != e27 && rn(e27.length) && !tn(e27);
  };
  var on = qr;
  var an = en;
  var ln = nn;
  var un = function(e27) {
    return ln(e27) ? on(e27) : an(e27);
  };
  var sn = or;
  var cn = dr;
  var dn = un;
  var fn = function(e27) {
    return sn(e27, dn, cn);
  };
  var pn = fn;
  var hn = Object.prototype.hasOwnProperty;
  var gn = function(e27, t2, r2, n2, o2, i2) {
    var a2 = 1 & r2, l2 = pn(e27), u2 = l2.length;
    if (u2 != pn(t2).length && !a2)
      return false;
    for (var s2 = u2; s2--; ) {
      var c2 = l2[s2];
      if (!(a2 ? c2 in t2 : hn.call(t2, c2)))
        return false;
    }
    var d2 = i2.get(e27), f2 = i2.get(t2);
    if (d2 && f2)
      return d2 == t2 && f2 == e27;
    var p2 = true;
    i2.set(e27, t2), i2.set(t2, e27);
    for (var h2 = a2; ++s2 < u2; ) {
      var g2 = e27[c2 = l2[s2]], v2 = t2[c2];
      if (n2)
        var m2 = a2 ? n2(v2, g2, c2, t2, e27, i2) : n2(g2, v2, c2, e27, t2, i2);
      if (!(void 0 === m2 ? g2 === v2 || o2(g2, v2, r2, n2, i2) : m2)) {
        p2 = false;
        break;
      }
      h2 || (h2 = "constructor" == c2);
    }
    if (p2 && !h2) {
      var y2 = e27.constructor, b2 = t2.constructor;
      y2 == b2 || !("constructor" in e27) || !("constructor" in t2) || "function" == typeof y2 && y2 instanceof y2 && "function" == typeof b2 && b2 instanceof b2 || (p2 = false);
    }
    return i2.delete(e27), i2.delete(t2), p2;
  };
  var vn = Ve(L, "DataView");
  var mn = Ve(L, "Promise");
  var yn = Ve(L, "Set");
  var bn = vn;
  var Cn = We;
  var xn = mn;
  var wn = yn;
  var kn = Ve(L, "WeakMap");
  var Sn = X;
  var En = Oe;
  var Tn = En(bn);
  var Rn = En(Cn);
  var On = En(xn);
  var _n = En(wn);
  var Pn = En(kn);
  var Mn = Sn;
  (bn && "[object DataView]" != Mn(new bn(new ArrayBuffer(1))) || Cn && "[object Map]" != Mn(new Cn()) || xn && "[object Promise]" != Mn(xn.resolve()) || wn && "[object Set]" != Mn(new wn()) || kn && "[object WeakMap]" != Mn(new kn())) && (Mn = function(e27) {
    var t2 = Sn(e27), r2 = "[object Object]" == t2 ? e27.constructor : void 0, n2 = r2 ? En(r2) : "";
    if (n2)
      switch (n2) {
        case Tn:
          return "[object DataView]";
        case Rn:
          return "[object Map]";
        case On:
          return "[object Promise]";
        case _n:
          return "[object Set]";
        case Pn:
          return "[object WeakMap]";
      }
    return t2;
  });
  var Bn = Bt;
  var An = Wt;
  var Nn = Jt;
  var jn = gn;
  var Dn = Mn;
  var Ln = tr;
  var In = wr.exports;
  var zn = Ir;
  var Fn = Object.prototype.hasOwnProperty;
  var Un = function(e27, t2, r2, n2, o2, i2) {
    var a2 = Ln(e27), l2 = Ln(t2), u2 = a2 ? "[object Array]" : Dn(e27), s2 = l2 ? "[object Array]" : Dn(t2), c2 = "[object Object]" == (u2 = "[object Arguments]" == u2 ? "[object Object]" : u2), d2 = "[object Object]" == (s2 = "[object Arguments]" == s2 ? "[object Object]" : s2), f2 = u2 == s2;
    if (f2 && In(e27)) {
      if (!In(t2))
        return false;
      a2 = true, c2 = false;
    }
    if (f2 && !c2)
      return i2 || (i2 = new Bn()), a2 || zn(e27) ? An(e27, t2, r2, n2, o2, i2) : Nn(e27, t2, u2, r2, n2, o2, i2);
    if (!(1 & r2)) {
      var p2 = c2 && Fn.call(e27, "__wrapped__"), h2 = d2 && Fn.call(t2, "__wrapped__");
      if (p2 || h2) {
        var g2 = p2 ? e27.value() : e27, v2 = h2 ? t2.value() : t2;
        return i2 || (i2 = new Bn()), o2(g2, v2, r2, n2, i2);
      }
    }
    return !!f2 && (i2 || (i2 = new Bn()), jn(e27, t2, r2, n2, o2, i2));
  };
  var Vn = Un;
  var Wn = pr;
  var Hn = function e2(t2, r2, n2, o2, i2) {
    return t2 === r2 || (null == t2 || null == r2 || !Wn(t2) && !Wn(r2) ? t2 != t2 && r2 != r2 : Vn(t2, r2, n2, o2, e2, i2));
  };
  var $n = Bt;
  var qn = Hn;
  var Yn = function(e27, t2, r2, n2) {
    var o2 = r2.length, i2 = o2, a2 = !n2;
    if (null == e27)
      return !i2;
    for (e27 = Object(e27); o2--; ) {
      var l2 = r2[o2];
      if (a2 && l2[2] ? l2[1] !== e27[l2[0]] : !(l2[0] in e27))
        return false;
    }
    for (; ++o2 < i2; ) {
      var u2 = (l2 = r2[o2])[0], s2 = e27[u2], c2 = l2[1];
      if (a2 && l2[2]) {
        if (void 0 === s2 && !(u2 in e27))
          return false;
      } else {
        var d2 = new $n();
        if (n2)
          var f2 = n2(s2, c2, u2, e27, t2, d2);
        if (!(void 0 === f2 ? qn(c2, s2, 3, n2, d2) : f2))
          return false;
      }
    }
    return true;
  };
  var Gn = C;
  var Xn = function(e27) {
    return e27 == e27 && !Gn(e27);
  };
  var Qn = Xn;
  var Kn = un;
  var Zn = function(e27) {
    for (var t2 = Kn(e27), r2 = t2.length; r2--; ) {
      var n2 = t2[r2], o2 = e27[n2];
      t2[r2] = [n2, o2, Qn(o2)];
    }
    return t2;
  };
  var Jn = function(e27, t2) {
    return function(r2) {
      return null != r2 && (r2[e27] === t2 && (void 0 !== t2 || e27 in Object(r2)));
    };
  };
  var eo = Yn;
  var to = Zn;
  var ro = Jn;
  var no = function(e27) {
    var t2 = to(e27);
    return 1 == t2.length && t2[0][2] ? ro(t2[0][0], t2[0][1]) : function(r2) {
      return r2 === e27 || eo(r2, e27, t2);
    };
  };
  var oo = X;
  var io = pr;
  var ao = function(e27) {
    return "symbol" == typeof e27 || io(e27) && "[object Symbol]" == oo(e27);
  };
  var lo = tr;
  var uo = ao;
  var so = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
  var co = /^\w*$/;
  var fo = function(e27, t2) {
    if (lo(e27))
      return false;
    var r2 = typeof e27;
    return !("number" != r2 && "symbol" != r2 && "boolean" != r2 && null != e27 && !uo(e27)) || (co.test(e27) || !so.test(e27) || null != t2 && e27 in Object(t2));
  };
  var po = xt;
  function ho(e27, t2) {
    if ("function" != typeof e27 || null != t2 && "function" != typeof t2)
      throw new TypeError("Expected a function");
    var r2 = function() {
      var n2 = arguments, o2 = t2 ? t2.apply(this, n2) : n2[0], i2 = r2.cache;
      if (i2.has(o2))
        return i2.get(o2);
      var a2 = e27.apply(this, n2);
      return r2.cache = i2.set(o2, a2) || i2, a2;
    };
    return r2.cache = new (ho.Cache || po)(), r2;
  }
  ho.Cache = po;
  var go = ho;
  var vo = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var mo = /\\(\\)?/g;
  var yo = function(e27) {
    var t2 = go(e27, function(e28) {
      return 500 === r2.size && r2.clear(), e28;
    }), r2 = t2.cache;
    return t2;
  }(function(e27) {
    var t2 = [];
    return 46 === e27.charCodeAt(0) && t2.push(""), e27.replace(vo, function(e28, r2, n2, o2) {
      t2.push(n2 ? o2.replace(mo, "$1") : r2 || e28);
    }), t2;
  });
  var bo = yo;
  var Co = function(e27, t2) {
    for (var r2 = -1, n2 = null == e27 ? 0 : e27.length, o2 = Array(n2); ++r2 < n2; )
      o2[r2] = t2(e27[r2], r2, e27);
    return o2;
  };
  var xo = Co;
  var wo = tr;
  var ko = ao;
  var So = I ? I.prototype : void 0;
  var Eo = So ? So.toString : void 0;
  var To = function e3(t2) {
    if ("string" == typeof t2)
      return t2;
    if (wo(t2))
      return xo(t2, e3) + "";
    if (ko(t2))
      return Eo ? Eo.call(t2) : "";
    var r2 = t2 + "";
    return "0" == r2 && 1 / t2 == -Infinity ? "-0" : r2;
  };
  var Ro = To;
  var Oo = function(e27) {
    return null == e27 ? "" : Ro(e27);
  };
  var _o = tr;
  var Po = fo;
  var Mo = bo;
  var Bo = Oo;
  var Ao = function(e27, t2) {
    return _o(e27) ? e27 : Po(e27, t2) ? [e27] : Mo(Bo(e27));
  };
  var No = ao;
  var jo = function(e27) {
    if ("string" == typeof e27 || No(e27))
      return e27;
    var t2 = e27 + "";
    return "0" == t2 && 1 / e27 == -Infinity ? "-0" : t2;
  };
  var Do = Ao;
  var Lo = jo;
  var Io = function(e27, t2) {
    for (var r2 = 0, n2 = (t2 = Do(t2, e27)).length; null != e27 && r2 < n2; )
      e27 = e27[Lo(t2[r2++])];
    return r2 && r2 == n2 ? e27 : void 0;
  };
  var zo = Io;
  var Fo = function(e27, t2, r2) {
    var n2 = null == e27 ? void 0 : zo(e27, t2);
    return void 0 === n2 ? r2 : n2;
  };
  var Uo = function(e27, t2) {
    return null != e27 && t2 in Object(e27);
  };
  var Vo = Ao;
  var Wo = xr;
  var Ho = tr;
  var $o = Er;
  var qo = Tr;
  var Yo = jo;
  var Go = function(e27, t2, r2) {
    for (var n2 = -1, o2 = (t2 = Vo(t2, e27)).length, i2 = false; ++n2 < o2; ) {
      var a2 = Yo(t2[n2]);
      if (!(i2 = null != e27 && r2(e27, a2)))
        break;
      e27 = e27[a2];
    }
    return i2 || ++n2 != o2 ? i2 : !!(o2 = null == e27 ? 0 : e27.length) && qo(o2) && $o(a2, o2) && (Ho(e27) || Wo(e27));
  };
  var Xo = Uo;
  var Qo = Go;
  var Ko = function(e27, t2) {
    return null != e27 && Qo(e27, t2, Xo);
  };
  var Zo = Hn;
  var Jo = Fo;
  var ei = Ko;
  var ti = fo;
  var ri = Xn;
  var ni = Jn;
  var oi = jo;
  var ii = function(e27, t2) {
    return ti(e27) && ri(t2) ? ni(oi(e27), t2) : function(r2) {
      var n2 = Jo(r2, e27);
      return void 0 === n2 && n2 === t2 ? ei(r2, e27) : Zo(t2, n2, 3);
    };
  };
  var ai = function(e27) {
    return e27;
  };
  var li = function(e27) {
    return function(t2) {
      return null == t2 ? void 0 : t2[e27];
    };
  };
  var ui = Io;
  var si = function(e27) {
    return function(t2) {
      return ui(t2, e27);
    };
  };
  var ci = li;
  var di = si;
  var fi = fo;
  var pi = jo;
  var hi = function(e27) {
    return fi(e27) ? ci(pi(e27)) : di(e27);
  };
  var gi = no;
  var vi = ii;
  var mi = ai;
  var yi = tr;
  var bi = hi;
  var Ci = function(e27) {
    return "function" == typeof e27 ? e27 : null == e27 ? mi : "object" == typeof e27 ? yi(e27) ? vi(e27[0], e27[1]) : gi(e27) : bi(e27);
  };
  var xi = function(e27, t2, r2, n2) {
    for (var o2 = e27.length, i2 = r2 + (n2 ? 1 : -1); n2 ? i2-- : ++i2 < o2; )
      if (t2(e27[i2], i2, e27))
        return i2;
    return -1;
  };
  var wi = function(e27, t2, r2) {
    for (var n2 = r2 - 1, o2 = e27.length; ++n2 < o2; )
      if (e27[n2] === t2)
        return n2;
    return -1;
  };
  var ki = xi;
  var Si = function(e27) {
    return e27 != e27;
  };
  var Ei = wi;
  var Ti = function(e27, t2, r2) {
    return t2 == t2 ? Ei(e27, t2, r2) : ki(e27, Si, r2);
  };
  var Ri = Ti;
  var Oi = function(e27, t2) {
    return !!(null == e27 ? 0 : e27.length) && Ri(e27, t2, 0) > -1;
  };
  var _i = function(e27, t2, r2) {
    for (var n2 = -1, o2 = null == e27 ? 0 : e27.length; ++n2 < o2; )
      if (r2(t2, e27[n2]))
        return true;
    return false;
  };
  var Pi = yn;
  var Mi = function() {
  };
  var Bi = Pi && 1 / $t(new Pi([, -0]))[1] == 1 / 0 ? function(e27) {
    return new Pi(e27);
  } : Mi;
  var Ai = Lt;
  var Ni = Oi;
  var ji = _i;
  var Di = zt;
  var Li = Bi;
  var Ii = $t;
  var zi = function(e27, t2, r2) {
    var n2 = -1, o2 = Ni, i2 = e27.length, a2 = true, l2 = [], u2 = l2;
    if (r2)
      a2 = false, o2 = ji;
    else if (i2 >= 200) {
      var s2 = t2 ? null : Li(e27);
      if (s2)
        return Ii(s2);
      a2 = false, o2 = Di, u2 = new Ai();
    } else
      u2 = t2 ? [] : l2;
    e:
      for (; ++n2 < i2; ) {
        var c2 = e27[n2], d2 = t2 ? t2(c2) : c2;
        if (c2 = r2 || 0 !== c2 ? c2 : 0, a2 && d2 == d2) {
          for (var f2 = u2.length; f2--; )
            if (u2[f2] === d2)
              continue e;
          t2 && u2.push(d2), l2.push(c2);
        } else
          o2(u2, d2, r2) || (u2 !== l2 && u2.push(d2), l2.push(c2));
      }
    return l2;
  };
  var Fi = Ci;
  var Ui = zi;
  var Vi = function(e27, t2) {
    return e27 && e27.length ? Ui(e27, Fi(t2)) : [];
  };
  var Wi = function(e27, t2, r2) {
    var n2 = -1, o2 = e27.length;
    t2 < 0 && (t2 = -t2 > o2 ? 0 : o2 + t2), (r2 = r2 > o2 ? o2 : r2) < 0 && (r2 += o2), o2 = t2 > r2 ? 0 : r2 - t2 >>> 0, t2 >>>= 0;
    for (var i2 = Array(o2); ++n2 < o2; )
      i2[n2] = e27[n2 + t2];
    return i2;
  };
  var Hi = Wi;
  var $i = function(e27, t2, r2) {
    var n2 = e27.length;
    return r2 = void 0 === r2 ? n2 : r2, !t2 && r2 >= n2 ? e27 : Hi(e27, t2, r2);
  };
  var qi = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");
  var Yi = function(e27) {
    return qi.test(e27);
  };
  var Gi = function(e27) {
    return e27.split("");
  };
  var Xi = "[\\ud800-\\udfff]";
  var Qi = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]";
  var Ki = "\\ud83c[\\udffb-\\udfff]";
  var Zi = "[^\\ud800-\\udfff]";
  var Ji = "(?:\\ud83c[\\udde6-\\uddff]){2}";
  var ea = "[\\ud800-\\udbff][\\udc00-\\udfff]";
  var ta = "(?:" + Qi + "|" + Ki + ")?";
  var ra = "[\\ufe0e\\ufe0f]?" + ta + ("(?:\\u200d(?:" + [Zi, Ji, ea].join("|") + ")[\\ufe0e\\ufe0f]?" + ta + ")*");
  var na = "(?:" + [Zi + Qi + "?", Qi, Ji, ea, Xi].join("|") + ")";
  var oa = RegExp(Ki + "(?=" + Ki + ")|" + na + ra, "g");
  var ia = function(e27) {
    return e27.match(oa) || [];
  };
  var aa = Gi;
  var la = Yi;
  var ua = ia;
  var sa = function(e27) {
    return la(e27) ? ua(e27) : aa(e27);
  };
  var ca = $i;
  var da = Yi;
  var fa = sa;
  var pa = Oo;
  var ha = function(e27) {
    return function(t2) {
      t2 = pa(t2);
      var r2 = da(t2) ? fa(t2) : void 0, n2 = r2 ? r2[0] : t2.charAt(0), o2 = r2 ? ca(r2, 1).join("") : t2.slice(1);
      return n2[e27]() + o2;
    };
  };
  var ga = ha("toUpperCase");
  var va = Math.PI;
  var ma = 2 * va;
  var ya = ma - 1e-6;
  function ba() {
    this._x0 = this._y0 = this._x1 = this._y1 = null, this._ = "";
  }
  function Ca() {
    return new ba();
  }
  function xa(e27) {
    return function() {
      return e27;
    };
  }
  ba.prototype = Ca.prototype = { constructor: ba, moveTo: function(e27, t2) {
    this._ += "M" + (this._x0 = this._x1 = +e27) + "," + (this._y0 = this._y1 = +t2);
  }, closePath: function() {
    null !== this._x1 && (this._x1 = this._x0, this._y1 = this._y0, this._ += "Z");
  }, lineTo: function(e27, t2) {
    this._ += "L" + (this._x1 = +e27) + "," + (this._y1 = +t2);
  }, quadraticCurveTo: function(e27, t2, r2, n2) {
    this._ += "Q" + +e27 + "," + +t2 + "," + (this._x1 = +r2) + "," + (this._y1 = +n2);
  }, bezierCurveTo: function(e27, t2, r2, n2, o2, i2) {
    this._ += "C" + +e27 + "," + +t2 + "," + +r2 + "," + +n2 + "," + (this._x1 = +o2) + "," + (this._y1 = +i2);
  }, arcTo: function(e27, t2, r2, n2, o2) {
    e27 = +e27, t2 = +t2, r2 = +r2, n2 = +n2, o2 = +o2;
    var i2 = this._x1, a2 = this._y1, l2 = r2 - e27, u2 = n2 - t2, s2 = i2 - e27, c2 = a2 - t2, d2 = s2 * s2 + c2 * c2;
    if (o2 < 0)
      throw new Error("negative radius: " + o2);
    if (null === this._x1)
      this._ += "M" + (this._x1 = e27) + "," + (this._y1 = t2);
    else if (d2 > 1e-6)
      if (Math.abs(c2 * l2 - u2 * s2) > 1e-6 && o2) {
        var f2 = r2 - i2, p2 = n2 - a2, h2 = l2 * l2 + u2 * u2, g2 = f2 * f2 + p2 * p2, v2 = Math.sqrt(h2), m2 = Math.sqrt(d2), y2 = o2 * Math.tan((va - Math.acos((h2 + d2 - g2) / (2 * v2 * m2))) / 2), b2 = y2 / m2, C2 = y2 / v2;
        Math.abs(b2 - 1) > 1e-6 && (this._ += "L" + (e27 + b2 * s2) + "," + (t2 + b2 * c2)), this._ += "A" + o2 + "," + o2 + ",0,0," + +(c2 * f2 > s2 * p2) + "," + (this._x1 = e27 + C2 * l2) + "," + (this._y1 = t2 + C2 * u2);
      } else
        this._ += "L" + (this._x1 = e27) + "," + (this._y1 = t2);
    else
      ;
  }, arc: function(e27, t2, r2, n2, o2, i2) {
    e27 = +e27, t2 = +t2, i2 = !!i2;
    var a2 = (r2 = +r2) * Math.cos(n2), l2 = r2 * Math.sin(n2), u2 = e27 + a2, s2 = t2 + l2, c2 = 1 ^ i2, d2 = i2 ? n2 - o2 : o2 - n2;
    if (r2 < 0)
      throw new Error("negative radius: " + r2);
    null === this._x1 ? this._ += "M" + u2 + "," + s2 : (Math.abs(this._x1 - u2) > 1e-6 || Math.abs(this._y1 - s2) > 1e-6) && (this._ += "L" + u2 + "," + s2), r2 && (d2 < 0 && (d2 = d2 % ma + ma), d2 > ya ? this._ += "A" + r2 + "," + r2 + ",0,1," + c2 + "," + (e27 - a2) + "," + (t2 - l2) + "A" + r2 + "," + r2 + ",0,1," + c2 + "," + (this._x1 = u2) + "," + (this._y1 = s2) : d2 > 1e-6 && (this._ += "A" + r2 + "," + r2 + ",0," + +(d2 >= va) + "," + c2 + "," + (this._x1 = e27 + r2 * Math.cos(o2)) + "," + (this._y1 = t2 + r2 * Math.sin(o2))));
  }, rect: function(e27, t2, r2, n2) {
    this._ += "M" + (this._x0 = this._x1 = +e27) + "," + (this._y0 = this._y1 = +t2) + "h" + +r2 + "v" + +n2 + "h" + -r2 + "Z";
  }, toString: function() {
    return this._;
  } };
  var wa = Math.cos;
  var ka = Math.sin;
  var Sa = Math.sqrt;
  var Ea = Math.PI;
  var Ta = 2 * Ea;
  function Ra(e27) {
    return "object" == typeof e27 && "length" in e27 ? e27 : Array.from(e27);
  }
  function Oa(e27) {
    this._context = e27;
  }
  function _a(e27) {
    return new Oa(e27);
  }
  function Pa(e27) {
    return e27[0];
  }
  function Ma(e27) {
    return e27[1];
  }
  function Ba(e27, t2) {
    var r2 = xa(true), n2 = null, o2 = _a, i2 = null;
    function a2(a3) {
      var l2, u2, s2, c2 = (a3 = Ra(a3)).length, d2 = false;
      for (null == n2 && (i2 = o2(s2 = Ca())), l2 = 0; l2 <= c2; ++l2)
        !(l2 < c2 && r2(u2 = a3[l2], l2, a3)) === d2 && ((d2 = !d2) ? i2.lineStart() : i2.lineEnd()), d2 && i2.point(+e27(u2, l2, a3), +t2(u2, l2, a3));
      if (s2)
        return i2 = null, s2 + "" || null;
    }
    return e27 = "function" == typeof e27 ? e27 : void 0 === e27 ? Pa : xa(e27), t2 = "function" == typeof t2 ? t2 : void 0 === t2 ? Ma : xa(t2), a2.x = function(t3) {
      return arguments.length ? (e27 = "function" == typeof t3 ? t3 : xa(+t3), a2) : e27;
    }, a2.y = function(e28) {
      return arguments.length ? (t2 = "function" == typeof e28 ? e28 : xa(+e28), a2) : t2;
    }, a2.defined = function(e28) {
      return arguments.length ? (r2 = "function" == typeof e28 ? e28 : xa(!!e28), a2) : r2;
    }, a2.curve = function(e28) {
      return arguments.length ? (o2 = e28, null != n2 && (i2 = o2(n2)), a2) : o2;
    }, a2.context = function(e28) {
      return arguments.length ? (null == e28 ? n2 = i2 = null : i2 = o2(n2 = e28), a2) : n2;
    }, a2;
  }
  function Aa(e27, t2, r2) {
    var n2 = null, o2 = xa(true), i2 = null, a2 = _a, l2 = null;
    function u2(u3) {
      var s3, c2, d2, f2, p2, h2 = (u3 = Ra(u3)).length, g2 = false, v2 = new Array(h2), m2 = new Array(h2);
      for (null == i2 && (l2 = a2(p2 = Ca())), s3 = 0; s3 <= h2; ++s3) {
        if (!(s3 < h2 && o2(f2 = u3[s3], s3, u3)) === g2)
          if (g2 = !g2)
            c2 = s3, l2.areaStart(), l2.lineStart();
          else {
            for (l2.lineEnd(), l2.lineStart(), d2 = s3 - 1; d2 >= c2; --d2)
              l2.point(v2[d2], m2[d2]);
            l2.lineEnd(), l2.areaEnd();
          }
        g2 && (v2[s3] = +e27(f2, s3, u3), m2[s3] = +t2(f2, s3, u3), l2.point(n2 ? +n2(f2, s3, u3) : v2[s3], r2 ? +r2(f2, s3, u3) : m2[s3]));
      }
      if (p2)
        return l2 = null, p2 + "" || null;
    }
    function s2() {
      return Ba().defined(o2).curve(a2).context(i2);
    }
    return e27 = "function" == typeof e27 ? e27 : void 0 === e27 ? Pa : xa(+e27), t2 = "function" == typeof t2 ? t2 : xa(void 0 === t2 ? 0 : +t2), r2 = "function" == typeof r2 ? r2 : void 0 === r2 ? Ma : xa(+r2), u2.x = function(t3) {
      return arguments.length ? (e27 = "function" == typeof t3 ? t3 : xa(+t3), n2 = null, u2) : e27;
    }, u2.x0 = function(t3) {
      return arguments.length ? (e27 = "function" == typeof t3 ? t3 : xa(+t3), u2) : e27;
    }, u2.x1 = function(e28) {
      return arguments.length ? (n2 = null == e28 ? null : "function" == typeof e28 ? e28 : xa(+e28), u2) : n2;
    }, u2.y = function(e28) {
      return arguments.length ? (t2 = "function" == typeof e28 ? e28 : xa(+e28), r2 = null, u2) : t2;
    }, u2.y0 = function(e28) {
      return arguments.length ? (t2 = "function" == typeof e28 ? e28 : xa(+e28), u2) : t2;
    }, u2.y1 = function(e28) {
      return arguments.length ? (r2 = null == e28 ? null : "function" == typeof e28 ? e28 : xa(+e28), u2) : r2;
    }, u2.lineX0 = u2.lineY0 = function() {
      return s2().x(e27).y(t2);
    }, u2.lineY1 = function() {
      return s2().x(e27).y(r2);
    }, u2.lineX1 = function() {
      return s2().x(n2).y(t2);
    }, u2.defined = function(e28) {
      return arguments.length ? (o2 = "function" == typeof e28 ? e28 : xa(!!e28), u2) : o2;
    }, u2.curve = function(e28) {
      return arguments.length ? (a2 = e28, null != i2 && (l2 = a2(i2)), u2) : a2;
    }, u2.context = function(e28) {
      return arguments.length ? (null == e28 ? i2 = l2 = null : l2 = a2(i2 = e28), u2) : i2;
    }, u2;
  }
  Oa.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._point = 0;
  }, lineEnd: function() {
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(e27, t2) {
    switch (e27 = +e27, t2 = +t2, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e27, t2) : this._context.moveTo(e27, t2);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(e27, t2);
    }
  } };
  var Na = { draw(e27, t2) {
    const r2 = Sa(t2 / Ea);
    e27.moveTo(r2, 0), e27.arc(0, 0, r2, 0, Ta);
  } };
  var ja = { draw(e27, t2) {
    const r2 = Sa(t2 / 5) / 2;
    e27.moveTo(-3 * r2, -r2), e27.lineTo(-r2, -r2), e27.lineTo(-r2, -3 * r2), e27.lineTo(r2, -3 * r2), e27.lineTo(r2, -r2), e27.lineTo(3 * r2, -r2), e27.lineTo(3 * r2, r2), e27.lineTo(r2, r2), e27.lineTo(r2, 3 * r2), e27.lineTo(-r2, 3 * r2), e27.lineTo(-r2, r2), e27.lineTo(-3 * r2, r2), e27.closePath();
  } };
  var Da = Sa(1 / 3);
  var La = 2 * Da;
  var Ia = { draw(e27, t2) {
    const r2 = Sa(t2 / La), n2 = r2 * Da;
    e27.moveTo(0, -r2), e27.lineTo(n2, 0), e27.lineTo(0, r2), e27.lineTo(-n2, 0), e27.closePath();
  } };
  var za = { draw(e27, t2) {
    const r2 = Sa(t2), n2 = -r2 / 2;
    e27.rect(n2, n2, r2, r2);
  } };
  var Fa = ka(Ea / 10) / ka(7 * Ea / 10);
  var Ua = ka(Ta / 10) * Fa;
  var Va = -wa(Ta / 10) * Fa;
  var Wa = { draw(e27, t2) {
    const r2 = Sa(0.8908130915292852 * t2), n2 = Ua * r2, o2 = Va * r2;
    e27.moveTo(0, -r2), e27.lineTo(n2, o2);
    for (let t3 = 1; t3 < 5; ++t3) {
      const i2 = Ta * t3 / 5, a2 = wa(i2), l2 = ka(i2);
      e27.lineTo(l2 * r2, -a2 * r2), e27.lineTo(a2 * n2 - l2 * o2, l2 * n2 + a2 * o2);
    }
    e27.closePath();
  } };
  var Ha = Sa(3);
  var $a = { draw(e27, t2) {
    const r2 = -Sa(t2 / (3 * Ha));
    e27.moveTo(0, 2 * r2), e27.lineTo(-Ha * r2, -r2), e27.lineTo(Ha * r2, -r2), e27.closePath();
  } };
  var qa = -0.5;
  var Ya = Sa(3) / 2;
  var Ga = 1 / Sa(12);
  var Xa = 3 * (Ga / 2 + 1);
  var Qa = { draw(e27, t2) {
    const r2 = Sa(t2 / Xa), n2 = r2 / 2, o2 = r2 * Ga, i2 = n2, a2 = r2 * Ga + r2, l2 = -i2, u2 = a2;
    e27.moveTo(n2, o2), e27.lineTo(i2, a2), e27.lineTo(l2, u2), e27.lineTo(qa * n2 - Ya * o2, Ya * n2 + qa * o2), e27.lineTo(qa * i2 - Ya * a2, Ya * i2 + qa * a2), e27.lineTo(qa * l2 - Ya * u2, Ya * l2 + qa * u2), e27.lineTo(qa * n2 + Ya * o2, qa * o2 - Ya * n2), e27.lineTo(qa * i2 + Ya * a2, qa * a2 - Ya * i2), e27.lineTo(qa * l2 + Ya * u2, qa * u2 - Ya * l2), e27.closePath();
  } };
  function Ka() {
  }
  function Za(e27, t2, r2) {
    e27._context.bezierCurveTo((2 * e27._x0 + e27._x1) / 3, (2 * e27._y0 + e27._y1) / 3, (e27._x0 + 2 * e27._x1) / 3, (e27._y0 + 2 * e27._y1) / 3, (e27._x0 + 4 * e27._x1 + t2) / 6, (e27._y0 + 4 * e27._y1 + r2) / 6);
  }
  function Ja(e27) {
    this._context = e27;
  }
  function el(e27) {
    this._context = e27;
  }
  function tl(e27) {
    this._context = e27;
  }
  function rl(e27) {
    this._context = e27;
  }
  function nl(e27) {
    return e27 < 0 ? -1 : 1;
  }
  function ol(e27, t2, r2) {
    var n2 = e27._x1 - e27._x0, o2 = t2 - e27._x1, i2 = (e27._y1 - e27._y0) / (n2 || o2 < 0 && -0), a2 = (r2 - e27._y1) / (o2 || n2 < 0 && -0), l2 = (i2 * o2 + a2 * n2) / (n2 + o2);
    return (nl(i2) + nl(a2)) * Math.min(Math.abs(i2), Math.abs(a2), 0.5 * Math.abs(l2)) || 0;
  }
  function il(e27, t2) {
    var r2 = e27._x1 - e27._x0;
    return r2 ? (3 * (e27._y1 - e27._y0) / r2 - t2) / 2 : t2;
  }
  function al(e27, t2, r2) {
    var n2 = e27._x0, o2 = e27._y0, i2 = e27._x1, a2 = e27._y1, l2 = (i2 - n2) / 3;
    e27._context.bezierCurveTo(n2 + l2, o2 + l2 * t2, i2 - l2, a2 - l2 * r2, i2, a2);
  }
  function ll(e27) {
    this._context = e27;
  }
  function ul(e27) {
    this._context = new sl(e27);
  }
  function sl(e27) {
    this._context = e27;
  }
  function cl(e27) {
    this._context = e27;
  }
  function dl(e27) {
    var t2, r2, n2 = e27.length - 1, o2 = new Array(n2), i2 = new Array(n2), a2 = new Array(n2);
    for (o2[0] = 0, i2[0] = 2, a2[0] = e27[0] + 2 * e27[1], t2 = 1; t2 < n2 - 1; ++t2)
      o2[t2] = 1, i2[t2] = 4, a2[t2] = 4 * e27[t2] + 2 * e27[t2 + 1];
    for (o2[n2 - 1] = 2, i2[n2 - 1] = 7, a2[n2 - 1] = 8 * e27[n2 - 1] + e27[n2], t2 = 1; t2 < n2; ++t2)
      r2 = o2[t2] / i2[t2 - 1], i2[t2] -= r2, a2[t2] -= r2 * a2[t2 - 1];
    for (o2[n2 - 1] = a2[n2 - 1] / i2[n2 - 1], t2 = n2 - 2; t2 >= 0; --t2)
      o2[t2] = (a2[t2] - o2[t2 + 1]) / i2[t2];
    for (i2[n2 - 1] = (e27[n2] + o2[n2 - 1]) / 2, t2 = 0; t2 < n2 - 1; ++t2)
      i2[t2] = 2 * e27[t2 + 1] - o2[t2 + 1];
    return [o2, i2];
  }
  function fl(e27, t2) {
    this._context = e27, this._t = t2;
  }
  function pl(e27, t2) {
    if ((o2 = e27.length) > 1)
      for (var r2, n2, o2, i2 = 1, a2 = e27[t2[0]], l2 = a2.length; i2 < o2; ++i2)
        for (n2 = a2, a2 = e27[t2[i2]], r2 = 0; r2 < l2; ++r2)
          a2[r2][1] += a2[r2][0] = isNaN(n2[r2][1]) ? n2[r2][0] : n2[r2][1];
  }
  function hl(e27) {
    for (var t2 = e27.length, r2 = new Array(t2); --t2 >= 0; )
      r2[t2] = t2;
    return r2;
  }
  function gl(e27, t2) {
    return e27[t2];
  }
  function vl(e27) {
    const t2 = [];
    return t2.key = e27, t2;
  }
  function ml(e27) {
    return ml = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, ml(e27);
  }
  function yl() {
    return yl = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, yl.apply(this, arguments);
  }
  function bl(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function Cl(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function xl(e27, t2) {
    return xl = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, xl(e27, t2);
  }
  function wl(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = Sl(e27);
      if (t2) {
        var o2 = Sl(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return kl(this, r2);
    };
  }
  function kl(e27, t2) {
    return !t2 || "object" !== ml(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function Sl(e27) {
    return Sl = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, Sl(e27);
  }
  Ja.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 3:
        Za(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(e27, t2) {
    switch (e27 = +e27, t2 = +t2, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e27, t2) : this._context.moveTo(e27, t2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        Za(this, e27, t2);
    }
    this._x0 = this._x1, this._x1 = e27, this._y0 = this._y1, this._y1 = t2;
  } }, el.prototype = { areaStart: Ka, areaEnd: Ka, lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 1:
        this._context.moveTo(this._x2, this._y2), this._context.closePath();
        break;
      case 2:
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3), this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3), this._context.closePath();
        break;
      case 3:
        this.point(this._x2, this._y2), this.point(this._x3, this._y3), this.point(this._x4, this._y4);
    }
  }, point: function(e27, t2) {
    switch (e27 = +e27, t2 = +t2, this._point) {
      case 0:
        this._point = 1, this._x2 = e27, this._y2 = t2;
        break;
      case 1:
        this._point = 2, this._x3 = e27, this._y3 = t2;
        break;
      case 2:
        this._point = 3, this._x4 = e27, this._y4 = t2, this._context.moveTo((this._x0 + 4 * this._x1 + e27) / 6, (this._y0 + 4 * this._y1 + t2) / 6);
        break;
      default:
        Za(this, e27, t2);
    }
    this._x0 = this._x1, this._x1 = e27, this._y0 = this._y1, this._y1 = t2;
  } }, tl.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN, this._point = 0;
  }, lineEnd: function() {
    (this._line || 0 !== this._line && 3 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(e27, t2) {
    switch (e27 = +e27, t2 = +t2, this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var r2 = (this._x0 + 4 * this._x1 + e27) / 6, n2 = (this._y0 + 4 * this._y1 + t2) / 6;
        this._line ? this._context.lineTo(r2, n2) : this._context.moveTo(r2, n2);
        break;
      case 3:
        this._point = 4;
      default:
        Za(this, e27, t2);
    }
    this._x0 = this._x1, this._x1 = e27, this._y0 = this._y1, this._y1 = t2;
  } }, rl.prototype = { areaStart: Ka, areaEnd: Ka, lineStart: function() {
    this._point = 0;
  }, lineEnd: function() {
    this._point && this._context.closePath();
  }, point: function(e27, t2) {
    e27 = +e27, t2 = +t2, this._point ? this._context.lineTo(e27, t2) : (this._point = 1, this._context.moveTo(e27, t2));
  } }, ll.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN, this._point = 0;
  }, lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        al(this, this._t0, il(this, this._t0));
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line;
  }, point: function(e27, t2) {
    var r2 = NaN;
    if (t2 = +t2, (e27 = +e27) !== this._x1 || t2 !== this._y1) {
      switch (this._point) {
        case 0:
          this._point = 1, this._line ? this._context.lineTo(e27, t2) : this._context.moveTo(e27, t2);
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3, al(this, il(this, r2 = ol(this, e27, t2)), r2);
          break;
        default:
          al(this, this._t0, r2 = ol(this, e27, t2));
      }
      this._x0 = this._x1, this._x1 = e27, this._y0 = this._y1, this._y1 = t2, this._t0 = r2;
    }
  } }, (ul.prototype = Object.create(ll.prototype)).point = function(e27, t2) {
    ll.prototype.point.call(this, t2, e27);
  }, sl.prototype = { moveTo: function(e27, t2) {
    this._context.moveTo(t2, e27);
  }, closePath: function() {
    this._context.closePath();
  }, lineTo: function(e27, t2) {
    this._context.lineTo(t2, e27);
  }, bezierCurveTo: function(e27, t2, r2, n2, o2, i2) {
    this._context.bezierCurveTo(t2, e27, n2, r2, i2, o2);
  } }, cl.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x = [], this._y = [];
  }, lineEnd: function() {
    var e27 = this._x, t2 = this._y, r2 = e27.length;
    if (r2)
      if (this._line ? this._context.lineTo(e27[0], t2[0]) : this._context.moveTo(e27[0], t2[0]), 2 === r2)
        this._context.lineTo(e27[1], t2[1]);
      else
        for (var n2 = dl(e27), o2 = dl(t2), i2 = 0, a2 = 1; a2 < r2; ++i2, ++a2)
          this._context.bezierCurveTo(n2[0][i2], o2[0][i2], n2[1][i2], o2[1][i2], e27[a2], t2[a2]);
    (this._line || 0 !== this._line && 1 === r2) && this._context.closePath(), this._line = 1 - this._line, this._x = this._y = null;
  }, point: function(e27, t2) {
    this._x.push(+e27), this._y.push(+t2);
  } }, fl.prototype = { areaStart: function() {
    this._line = 0;
  }, areaEnd: function() {
    this._line = NaN;
  }, lineStart: function() {
    this._x = this._y = NaN, this._point = 0;
  }, lineEnd: function() {
    0 < this._t && this._t < 1 && 2 === this._point && this._context.lineTo(this._x, this._y), (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line >= 0 && (this._t = 1 - this._t, this._line = 1 - this._line);
  }, point: function(e27, t2) {
    switch (e27 = +e27, t2 = +t2, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e27, t2) : this._context.moveTo(e27, t2);
        break;
      case 1:
        this._point = 2;
      default:
        if (this._t <= 0)
          this._context.lineTo(this._x, t2), this._context.lineTo(e27, t2);
        else {
          var r2 = this._x * (1 - this._t) + e27 * this._t;
          this._context.lineTo(r2, this._y), this._context.lineTo(r2, t2);
        }
    }
    this._x = e27, this._y = t2;
  } };
  var El = { symbolCircle: Na, symbolCross: ja, symbolDiamond: Ia, symbolSquare: za, symbolStar: Wa, symbolTriangle: $a, symbolWye: Qa };
  var Tl = Math.PI / 180;
  var Rl = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && xl(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = wl(l2);
    function l2() {
      return bl(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "getPath", value: function() {
      var e28 = this.props, t2 = e28.size, r3 = e28.sizeType, n2 = e28.type, o3 = function(e29) {
        var t3 = "symbol".concat(ga(e29));
        return El[t3] || Na;
      }(n2), i3 = function(e29, t3) {
        let r4 = null;
        function n3() {
          let n4;
          if (r4 || (r4 = n4 = Ca()), e29.apply(this, arguments).draw(r4, +t3.apply(this, arguments)), n4)
            return r4 = null, n4 + "" || null;
        }
        return e29 = "function" == typeof e29 ? e29 : xa(e29 || Na), t3 = "function" == typeof t3 ? t3 : xa(void 0 === t3 ? 64 : +t3), n3.type = function(t4) {
          return arguments.length ? (e29 = "function" == typeof t4 ? t4 : xa(t4), n3) : e29;
        }, n3.size = function(e30) {
          return arguments.length ? (t3 = "function" == typeof e30 ? e30 : xa(+e30), n3) : t3;
        }, n3.context = function(e30) {
          return arguments.length ? (r4 = null == e30 ? null : e30, n3) : r4;
        }, n3;
      }().type(o3).size(function(e29, t3, r4) {
        if ("area" === t3)
          return e29;
        switch (r4) {
          case "cross":
            return 5 * e29 * e29 / 9;
          case "diamond":
            return 0.5 * e29 * e29 / Math.sqrt(3);
          case "square":
            return e29 * e29;
          case "star":
            var n3 = 18 * Tl;
            return 1.25 * e29 * e29 * (Math.tan(n3) - Math.tan(2 * n3) * Math.pow(Math.tan(n3), 2));
          case "triangle":
            return Math.sqrt(3) * e29 * e29 / 4;
          case "wye":
            return (21 - 10 * Math.sqrt(3)) * e29 * e29 / 8;
          default:
            return Math.PI * e29 * e29 / 4;
        }
      }(t2, r3, n2));
      return i3();
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.className, n2 = e28.cx, o3 = e28.cy, i3 = e28.size;
      return n2 === +n2 && o3 === +o3 && i3 === +i3 ? import_react.default.createElement("path", yl({}, E(this.props, true), { className: b("recharts-symbols", r3), transform: "translate(".concat(n2, ", ").concat(o3, ")"), d: this.getPath() })) : null;
    } }], o2 && Cl(r2.prototype, o2), i2 && Cl(r2, i2), l2;
  }();
  function Ol(e27) {
    return Ol = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, Ol(e27);
  }
  function _l() {
    return _l = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, _l.apply(this, arguments);
  }
  function Pl(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function Ml(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function Bl(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function Al(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function Nl(e27, t2) {
    return Nl = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, Nl(e27, t2);
  }
  function jl(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = Ll(e27);
      if (t2) {
        var o2 = Ll(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return Dl(this, r2);
    };
  }
  function Dl(e27, t2) {
    return !t2 || "object" !== Ol(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function Ll(e27) {
    return Ll = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, Ll(e27);
  }
  Rl.defaultProps = { type: "circle", size: 64, sizeType: "area" }, Rl.registerSymbol = function(e27, t2) {
    El["symbol".concat(ga(e27))] = t2;
  };
  var Il = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && Nl(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = jl(l2);
    function l2() {
      return Bl(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "renderIcon", value: function(e28) {
      var r3 = this.props.inactiveColor, n2 = 16, o3 = 32 / 6, i3 = 32 / 3, a3 = e28.inactive ? r3 : e28.color;
      if ("plainline" === e28.type)
        return import_react.default.createElement("line", { strokeWidth: 4, fill: "none", stroke: a3, strokeDasharray: e28.payload.strokeDasharray, x1: 0, y1: n2, x2: 32, y2: n2, className: "recharts-legend-icon" });
      if ("line" === e28.type)
        return import_react.default.createElement("path", { strokeWidth: 4, fill: "none", stroke: a3, d: "M0,".concat(n2, "h").concat(i3, "\n            A").concat(o3, ",").concat(o3, ",0,1,1,").concat(2 * i3, ",").concat(n2, "\n            H").concat(32, "M").concat(2 * i3, ",").concat(n2, "\n            A").concat(o3, ",").concat(o3, ",0,1,1,").concat(i3, ",").concat(n2), className: "recharts-legend-icon" });
      if ("rect" === e28.type)
        return import_react.default.createElement("path", { stroke: "none", fill: a3, d: "M0,".concat(4, "h").concat(32, "v").concat(24, "h").concat(-32, "z"), className: "recharts-legend-icon" });
      if (import_react.default.isValidElement(e28.legendIcon)) {
        var l3 = function(e29) {
          for (var t2 = 1; t2 < arguments.length; t2++) {
            var r4 = null != arguments[t2] ? arguments[t2] : {};
            t2 % 2 ? Pl(Object(r4), true).forEach(function(t3) {
              Ml(e29, t3, r4[t3]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e29, Object.getOwnPropertyDescriptors(r4)) : Pl(Object(r4)).forEach(function(t3) {
              Object.defineProperty(e29, t3, Object.getOwnPropertyDescriptor(r4, t3));
            });
          }
          return e29;
        }({}, e28);
        return delete l3.legendIcon, import_react.default.cloneElement(e28.legendIcon, l3);
      }
      return import_react.default.createElement(Rl, { fill: a3, cx: n2, cy: n2, size: 32, sizeType: "diameter", type: e28.type });
    } }, { key: "renderItems", value: function() {
      var e28 = this, r3 = this.props, n2 = r3.payload, o3 = r3.iconSize, i3 = r3.layout, a3 = r3.formatter, l3 = r3.inactiveColor, u2 = { x: 0, y: 0, width: 32, height: 32 }, s2 = { display: "horizontal" === i3 ? "inline-block" : "block", marginRight: 10 }, c2 = { display: "inline-block", verticalAlign: "middle", marginRight: 4 };
      return n2.map(function(r4, n3) {
        var i4, d2 = r4.formatter || a3, f2 = b((Ml(i4 = { "recharts-legend-item": true }, "legend-item-".concat(n3), true), Ml(i4, "inactive", r4.inactive), i4));
        if ("none" === r4.type)
          return null;
        var p2 = r4.inactive ? l3 : r4.color;
        return import_react.default.createElement("li", _l({ className: f2, style: s2, key: "legend-item-".concat(n3) }, R(e28.props, r4, n3)), import_react.default.createElement(P, { width: o3, height: o3, viewBox: u2, style: c2 }, e28.renderIcon(r4)), import_react.default.createElement("span", { className: "recharts-legend-item-text", style: { color: p2 } }, d2 ? d2(r4.value, r4, n3) : r4.value));
      });
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.payload, n2 = e28.layout, o3 = e28.align;
      if (!r3 || !r3.length)
        return null;
      var i3 = { padding: 0, margin: 0, textAlign: "horizontal" === n2 ? o3 : "left" };
      return import_react.default.createElement("ul", { className: "recharts-default-legend", style: i3 }, this.renderItems());
    } }], o2 && Al(r2.prototype, o2), i2 && Al(r2, i2), l2;
  }();
  Il.displayName = "Legend", Il.defaultProps = { iconSize: 14, layout: "horizontal", align: "center", verticalAlign: "middle", inactiveColor: "#ccc" };
  var zl = X;
  var Fl = pr;
  var Ul = function(e27) {
    return "number" == typeof e27 || Fl(e27) && "[object Number]" == zl(e27);
  };
  var Vl = Ul;
  var Wl = function(e27) {
    return Vl(e27) && e27 != +e27;
  };
  var Hl = X;
  var $l = tr;
  var ql = pr;
  var Yl = function(e27) {
    return "string" == typeof e27 || !$l(e27) && ql(e27) && "[object String]" == Hl(e27);
  };
  var Gl = function(e27) {
    return 0 === e27 ? 0 : e27 > 0 ? 1 : -1;
  };
  var Xl = function(e27) {
    return Yl(e27) && e27.indexOf("%") === e27.length - 1;
  };
  var Ql = function(e27) {
    return Ul(e27) && !Wl(e27);
  };
  var Kl = function(e27) {
    return Ql(e27) || Yl(e27);
  };
  var Zl = 0;
  var Jl = function(e27) {
    var t2 = ++Zl;
    return "".concat(e27 || "").concat(t2);
  };
  var eu = function(e27, t2) {
    var r2, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, o2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
    if (!Ql(e27) && !Yl(e27))
      return n2;
    if (Xl(e27)) {
      var i2 = e27.indexOf("%");
      r2 = t2 * parseFloat(e27.slice(0, i2)) / 100;
    } else
      r2 = +e27;
    return Wl(r2) && (r2 = n2), o2 && r2 > t2 && (r2 = t2), r2;
  };
  var tu = function(e27) {
    if (!e27)
      return null;
    var t2 = Object.keys(e27);
    return t2 && t2.length ? e27[t2[0]] : null;
  };
  var ru = function(e27, t2) {
    return Ql(e27) && Ql(t2) ? function(r2) {
      return e27 + r2 * (t2 - e27);
    } : function() {
      return t2;
    };
  };
  function nu(e27, t2, r2) {
    return e27 && e27.length ? e27.find(function(e28) {
      return e28 && ("function" == typeof t2 ? t2(e28) : Fo(e28, t2)) === r2;
    }) : null;
  }
  function ou(e27) {
    return ou = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, ou(e27);
  }
  function iu(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function au(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? iu(Object(r2), true).forEach(function(t3) {
        lu(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : iu(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function lu(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function uu(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function su(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function cu(e27, t2) {
    return cu = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, cu(e27, t2);
  }
  function du(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = pu(e27);
      if (t2) {
        var o2 = pu(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return fu(this, r2);
    };
  }
  function fu(e27, t2) {
    return !t2 || "object" !== ou(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function pu(e27) {
    return pu = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, pu(e27);
  }
  function hu(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function gu(e27) {
    return e27.value;
  }
  function vu(e27, t2) {
    return true === e27 ? Vi(t2, gu) : Z(e27) ? Vi(t2, e27) : t2;
  }
  var mu = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && cu(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = du(l2);
    function l2() {
      var e28;
      uu(this, l2);
      for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
        r3[n2] = arguments[n2];
      return (e28 = a2.call.apply(a2, [this].concat(r3))).wrapperNode = void 0, e28.state = { boxWidth: -1, boxHeight: -1 }, e28;
    }
    return r2 = l2, i2 = [{ key: "getWithHeight", value: function(e28, t2) {
      var r3 = e28.props.layout;
      return "vertical" === r3 && Ql(e28.props.height) ? { height: e28.props.height } : "horizontal" === r3 ? { width: e28.props.width || t2 } : null;
    } }], (o2 = [{ key: "componentDidMount", value: function() {
      this.updateBBox();
    } }, { key: "componentDidUpdate", value: function() {
      this.updateBBox();
    } }, { key: "getBBox", value: function() {
      return this.wrapperNode && this.wrapperNode.getBoundingClientRect ? this.wrapperNode.getBoundingClientRect() : null;
    } }, { key: "getBBoxSnapshot", value: function() {
      var e28 = this.state, t2 = e28.boxWidth, r3 = e28.boxHeight;
      return t2 >= 0 && r3 >= 0 ? { width: t2, height: r3 } : null;
    } }, { key: "getDefaultPosition", value: function(e28) {
      var t2, r3, n2 = this.props, o3 = n2.layout, i3 = n2.align, a3 = n2.verticalAlign, l3 = n2.margin, u2 = n2.chartWidth, s2 = n2.chartHeight;
      return e28 && (void 0 !== e28.left && null !== e28.left || void 0 !== e28.right && null !== e28.right) || (t2 = "center" === i3 && "vertical" === o3 ? { left: ((u2 || 0) - (this.getBBoxSnapshot() || { width: 0 }).width) / 2 } : "right" === i3 ? { right: l3 && l3.right || 0 } : { left: l3 && l3.left || 0 }), e28 && (void 0 !== e28.top && null !== e28.top || void 0 !== e28.bottom && null !== e28.bottom) || (r3 = "middle" === a3 ? { top: ((s2 || 0) - (this.getBBoxSnapshot() || { height: 0 }).height) / 2 } : "bottom" === a3 ? { bottom: l3 && l3.bottom || 0 } : { top: l3 && l3.top || 0 }), au(au({}, t2), r3);
    } }, { key: "updateBBox", value: function() {
      var e28 = this.state, t2 = e28.boxWidth, r3 = e28.boxHeight, n2 = this.props.onBBoxUpdate;
      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
        var o3 = this.wrapperNode.getBoundingClientRect();
        (Math.abs(o3.width - t2) > 1 || Math.abs(o3.height - r3) > 1) && this.setState({ boxWidth: o3.width, boxHeight: o3.height }, function() {
          n2 && n2(o3);
        });
      } else
        -1 === t2 && -1 === r3 || this.setState({ boxWidth: -1, boxHeight: -1 }, function() {
          n2 && n2(null);
        });
    } }, { key: "render", value: function() {
      var e28 = this, r3 = this.props, n2 = r3.content, o3 = r3.width, i3 = r3.height, a3 = r3.wrapperStyle, l3 = r3.payloadUniqBy, u2 = r3.payload, s2 = au(au({ position: "absolute", width: o3 || "auto", height: i3 || "auto" }, this.getDefaultPosition(a3)), a3);
      return import_react.default.createElement("div", { className: "recharts-legend-wrapper", style: s2, ref: function(t2) {
        e28.wrapperNode = t2;
      } }, function(e29, r4) {
        if (import_react.default.isValidElement(e29))
          return import_react.default.cloneElement(e29, r4);
        if (Z(e29))
          return import_react.default.createElement(e29, r4);
        r4.ref;
        var n3 = hu(r4, ["ref"]);
        return import_react.default.createElement(Il, n3);
      }(n2, au(au({}, this.props), {}, { payload: vu(l3, u2) })));
    } }]) && su(r2.prototype, o2), i2 && su(r2, i2), l2;
  }();
  mu.displayName = "Legend", mu.defaultProps = { iconSize: 14, layout: "horizontal", align: "center", verticalAlign: "bottom" };
  var yu = function(e27) {
    return null == e27;
  };
  var bu = { exports: {} };
  var Cu = { exports: {} };
  var xu = {};
  var wu = "function" == typeof Symbol && Symbol.for;
  var ku = wu ? Symbol.for("react.element") : 60103;
  var Su = wu ? Symbol.for("react.portal") : 60106;
  var Eu = wu ? Symbol.for("react.fragment") : 60107;
  var Tu = wu ? Symbol.for("react.strict_mode") : 60108;
  var Ru = wu ? Symbol.for("react.profiler") : 60114;
  var Ou = wu ? Symbol.for("react.provider") : 60109;
  var _u = wu ? Symbol.for("react.context") : 60110;
  var Pu = wu ? Symbol.for("react.async_mode") : 60111;
  var Mu = wu ? Symbol.for("react.concurrent_mode") : 60111;
  var Bu = wu ? Symbol.for("react.forward_ref") : 60112;
  var Au = wu ? Symbol.for("react.suspense") : 60113;
  var Nu = wu ? Symbol.for("react.suspense_list") : 60120;
  var ju = wu ? Symbol.for("react.memo") : 60115;
  var Du = wu ? Symbol.for("react.lazy") : 60116;
  var Lu = wu ? Symbol.for("react.block") : 60121;
  var Iu = wu ? Symbol.for("react.fundamental") : 60117;
  var zu = wu ? Symbol.for("react.responder") : 60118;
  var Fu = wu ? Symbol.for("react.scope") : 60119;
  function Uu(e27) {
    if ("object" == typeof e27 && null !== e27) {
      var t2 = e27.$$typeof;
      switch (t2) {
        case ku:
          switch (e27 = e27.type) {
            case Pu:
            case Mu:
            case Eu:
            case Ru:
            case Tu:
            case Au:
              return e27;
            default:
              switch (e27 = e27 && e27.$$typeof) {
                case _u:
                case Bu:
                case Du:
                case ju:
                case Ou:
                  return e27;
                default:
                  return t2;
              }
          }
        case Su:
          return t2;
      }
    }
  }
  function Vu(e27) {
    return Uu(e27) === Mu;
  }
  xu.AsyncMode = Pu, xu.ConcurrentMode = Mu, xu.ContextConsumer = _u, xu.ContextProvider = Ou, xu.Element = ku, xu.ForwardRef = Bu, xu.Fragment = Eu, xu.Lazy = Du, xu.Memo = ju, xu.Portal = Su, xu.Profiler = Ru, xu.StrictMode = Tu, xu.Suspense = Au, xu.isAsyncMode = function(e27) {
    return Vu(e27) || Uu(e27) === Pu;
  }, xu.isConcurrentMode = Vu, xu.isContextConsumer = function(e27) {
    return Uu(e27) === _u;
  }, xu.isContextProvider = function(e27) {
    return Uu(e27) === Ou;
  }, xu.isElement = function(e27) {
    return "object" == typeof e27 && null !== e27 && e27.$$typeof === ku;
  }, xu.isForwardRef = function(e27) {
    return Uu(e27) === Bu;
  }, xu.isFragment = function(e27) {
    return Uu(e27) === Eu;
  }, xu.isLazy = function(e27) {
    return Uu(e27) === Du;
  }, xu.isMemo = function(e27) {
    return Uu(e27) === ju;
  }, xu.isPortal = function(e27) {
    return Uu(e27) === Su;
  }, xu.isProfiler = function(e27) {
    return Uu(e27) === Ru;
  }, xu.isStrictMode = function(e27) {
    return Uu(e27) === Tu;
  }, xu.isSuspense = function(e27) {
    return Uu(e27) === Au;
  }, xu.isValidElementType = function(e27) {
    return "string" == typeof e27 || "function" == typeof e27 || e27 === Eu || e27 === Mu || e27 === Ru || e27 === Tu || e27 === Au || e27 === Nu || "object" == typeof e27 && null !== e27 && (e27.$$typeof === Du || e27.$$typeof === ju || e27.$$typeof === Ou || e27.$$typeof === _u || e27.$$typeof === Bu || e27.$$typeof === Iu || e27.$$typeof === zu || e27.$$typeof === Fu || e27.$$typeof === Lu);
  }, xu.typeOf = Uu;
  var Wu = {};
  (function() {
    var e27 = "function" == typeof Symbol && Symbol.for, t2 = e27 ? Symbol.for("react.element") : 60103, r2 = e27 ? Symbol.for("react.portal") : 60106, n2 = e27 ? Symbol.for("react.fragment") : 60107, o2 = e27 ? Symbol.for("react.strict_mode") : 60108, i2 = e27 ? Symbol.for("react.profiler") : 60114, a2 = e27 ? Symbol.for("react.provider") : 60109, l2 = e27 ? Symbol.for("react.context") : 60110, u2 = e27 ? Symbol.for("react.async_mode") : 60111, s2 = e27 ? Symbol.for("react.concurrent_mode") : 60111, c2 = e27 ? Symbol.for("react.forward_ref") : 60112, d2 = e27 ? Symbol.for("react.suspense") : 60113, f2 = e27 ? Symbol.for("react.suspense_list") : 60120, p2 = e27 ? Symbol.for("react.memo") : 60115, h2 = e27 ? Symbol.for("react.lazy") : 60116, g2 = e27 ? Symbol.for("react.block") : 60121, v2 = e27 ? Symbol.for("react.fundamental") : 60117, m2 = e27 ? Symbol.for("react.responder") : 60118, y2 = e27 ? Symbol.for("react.scope") : 60119;
    function b2(e28) {
      if ("object" == typeof e28 && null !== e28) {
        var f3 = e28.$$typeof;
        switch (f3) {
          case t2:
            var g3 = e28.type;
            switch (g3) {
              case u2:
              case s2:
              case n2:
              case i2:
              case o2:
              case d2:
                return g3;
              default:
                var v3 = g3 && g3.$$typeof;
                switch (v3) {
                  case l2:
                  case c2:
                  case h2:
                  case p2:
                  case a2:
                    return v3;
                  default:
                    return f3;
                }
            }
          case r2:
            return f3;
        }
      }
    }
    var C2 = u2, x2 = s2, w2 = l2, k2 = a2, S2 = t2, E2 = c2, T2 = n2, R2 = h2, O2 = p2, _2 = r2, P2 = i2, M2 = o2, B2 = d2, A2 = false;
    function N2(e28) {
      return b2(e28) === s2;
    }
    Wu.AsyncMode = C2, Wu.ConcurrentMode = x2, Wu.ContextConsumer = w2, Wu.ContextProvider = k2, Wu.Element = S2, Wu.ForwardRef = E2, Wu.Fragment = T2, Wu.Lazy = R2, Wu.Memo = O2, Wu.Portal = _2, Wu.Profiler = P2, Wu.StrictMode = M2, Wu.Suspense = B2, Wu.isAsyncMode = function(e28) {
      return A2 || (A2 = true, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), N2(e28) || b2(e28) === u2;
    }, Wu.isConcurrentMode = N2, Wu.isContextConsumer = function(e28) {
      return b2(e28) === l2;
    }, Wu.isContextProvider = function(e28) {
      return b2(e28) === a2;
    }, Wu.isElement = function(e28) {
      return "object" == typeof e28 && null !== e28 && e28.$$typeof === t2;
    }, Wu.isForwardRef = function(e28) {
      return b2(e28) === c2;
    }, Wu.isFragment = function(e28) {
      return b2(e28) === n2;
    }, Wu.isLazy = function(e28) {
      return b2(e28) === h2;
    }, Wu.isMemo = function(e28) {
      return b2(e28) === p2;
    }, Wu.isPortal = function(e28) {
      return b2(e28) === r2;
    }, Wu.isProfiler = function(e28) {
      return b2(e28) === i2;
    }, Wu.isStrictMode = function(e28) {
      return b2(e28) === o2;
    }, Wu.isSuspense = function(e28) {
      return b2(e28) === d2;
    }, Wu.isValidElementType = function(e28) {
      return "string" == typeof e28 || "function" == typeof e28 || e28 === n2 || e28 === s2 || e28 === i2 || e28 === o2 || e28 === d2 || e28 === f2 || "object" == typeof e28 && null !== e28 && (e28.$$typeof === h2 || e28.$$typeof === p2 || e28.$$typeof === a2 || e28.$$typeof === l2 || e28.$$typeof === c2 || e28.$$typeof === v2 || e28.$$typeof === m2 || e28.$$typeof === y2 || e28.$$typeof === g2);
    }, Wu.typeOf = b2;
  })(), false ? Cu.exports = xu : Cu.exports = Wu;
  var Hu = Object.getOwnPropertySymbols;
  var $u = Object.prototype.hasOwnProperty;
  var qu = Object.prototype.propertyIsEnumerable;
  function Yu(e27) {
    if (null == e27)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(e27);
  }
  var Gu = function() {
    try {
      if (!Object.assign)
        return false;
      var e27 = new String("abc");
      if (e27[5] = "de", "5" === Object.getOwnPropertyNames(e27)[0])
        return false;
      for (var t2 = {}, r2 = 0; r2 < 10; r2++)
        t2["_" + String.fromCharCode(r2)] = r2;
      var n2 = Object.getOwnPropertyNames(t2).map(function(e28) {
        return t2[e28];
      });
      if ("0123456789" !== n2.join(""))
        return false;
      var o2 = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(e28) {
        o2[e28] = e28;
      }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, o2)).join("");
    } catch (e28) {
      return false;
    }
  }() ? Object.assign : function(e27, t2) {
    for (var r2, n2, o2 = Yu(e27), i2 = 1; i2 < arguments.length; i2++) {
      for (var a2 in r2 = Object(arguments[i2]))
        $u.call(r2, a2) && (o2[a2] = r2[a2]);
      if (Hu) {
        n2 = Hu(r2);
        for (var l2 = 0; l2 < n2.length; l2++)
          qu.call(r2, n2[l2]) && (o2[n2[l2]] = r2[n2[l2]]);
      }
    }
    return o2;
  };
  var Xu = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  var Qu = Function.call.bind(Object.prototype.hasOwnProperty);
  var Ku = function() {
  };
  if (true) {
    Zu = Xu, Ju = {}, es = Qu;
    Ku = function(e27) {
      var t2 = "Warning: " + e27;
      "undefined" != typeof console && console.error(t2);
      try {
        throw new Error(t2);
      } catch (e28) {
      }
    };
  }
  var Zu;
  var Ju;
  var es;
  function ts(e27, t2, r2, n2, o2) {
    if (true) {
      for (var i2 in e27)
        if (es(e27, i2)) {
          var a2;
          try {
            if ("function" != typeof e27[i2]) {
              var l2 = Error((n2 || "React class") + ": " + r2 + " type `" + i2 + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof e27[i2] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
              throw l2.name = "Invariant Violation", l2;
            }
            a2 = e27[i2](t2, i2, n2, r2, null, Zu);
          } catch (e28) {
            a2 = e28;
          }
          if (!a2 || a2 instanceof Error || Ku((n2 || "React class") + ": type specification of " + r2 + " `" + i2 + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof a2 + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."), a2 instanceof Error && !(a2.message in Ju)) {
            Ju[a2.message] = true;
            var u2 = o2 ? o2() : "";
            Ku("Failed " + r2 + " type: " + a2.message + (null != u2 ? u2 : ""));
          }
        }
    }
  }
  ts.resetWarningCache = function() {
    Ju = {};
  };
  var rs = ts;
  var ns = Cu.exports;
  var os = Gu;
  var is = Xu;
  var as = Qu;
  var ls = rs;
  var us = function() {
  };
  function ss() {
    return null;
  }
  us = function(e27) {
    var t2 = "Warning: " + e27;
    "undefined" != typeof console && console.error(t2);
    try {
      throw new Error(t2);
    } catch (e28) {
    }
  };
  function cs() {
  }
  function ds() {
  }
  ds.resetWarningCache = cs;
  if (true) {
    fs = Cu.exports;
    bu.exports = function(e27, t2) {
      var r2 = "function" == typeof Symbol && Symbol.iterator, n2 = "<<anonymous>>", o2 = { array: u2("array"), bigint: u2("bigint"), bool: u2("boolean"), func: u2("function"), number: u2("number"), object: u2("object"), string: u2("string"), symbol: u2("symbol"), any: l2(ss), arrayOf: function(e28) {
        return l2(function(t3, r3, n3, o3, i3) {
          if ("function" != typeof e28)
            return new a2("Property `" + i3 + "` of component `" + n3 + "` has invalid PropType notation inside arrayOf.");
          var l3 = t3[r3];
          if (!Array.isArray(l3))
            return new a2("Invalid " + o3 + " `" + i3 + "` of type `" + d2(l3) + "` supplied to `" + n3 + "`, expected an array.");
          for (var u3 = 0; u3 < l3.length; u3++) {
            var s3 = e28(l3, u3, n3, o3, i3 + "[" + u3 + "]", is);
            if (s3 instanceof Error)
              return s3;
          }
          return null;
        });
      }, element: l2(function(t3, r3, n3, o3, i3) {
        var l3 = t3[r3];
        return e27(l3) ? null : new a2("Invalid " + o3 + " `" + i3 + "` of type `" + d2(l3) + "` supplied to `" + n3 + "`, expected a single ReactElement.");
      }), elementType: l2(function(e28, t3, r3, n3, o3) {
        var i3 = e28[t3];
        return ns.isValidElementType(i3) ? null : new a2("Invalid " + n3 + " `" + o3 + "` of type `" + d2(i3) + "` supplied to `" + r3 + "`, expected a single ReactElement type.");
      }), instanceOf: function(e28) {
        return l2(function(t3, r3, o3, i3, l3) {
          if (!(t3[r3] instanceof e28)) {
            var u3 = e28.name || n2;
            return new a2("Invalid " + i3 + " `" + l3 + "` of type `" + ((s3 = t3[r3]).constructor && s3.constructor.name ? s3.constructor.name : n2) + "` supplied to `" + o3 + "`, expected instance of `" + u3 + "`.");
          }
          var s3;
          return null;
        });
      }, node: l2(function(e28, t3, r3, n3, o3) {
        return c2(e28[t3]) ? null : new a2("Invalid " + n3 + " `" + o3 + "` supplied to `" + r3 + "`, expected a ReactNode.");
      }), objectOf: function(e28) {
        return l2(function(t3, r3, n3, o3, i3) {
          if ("function" != typeof e28)
            return new a2("Property `" + i3 + "` of component `" + n3 + "` has invalid PropType notation inside objectOf.");
          var l3 = t3[r3], u3 = d2(l3);
          if ("object" !== u3)
            return new a2("Invalid " + o3 + " `" + i3 + "` of type `" + u3 + "` supplied to `" + n3 + "`, expected an object.");
          for (var s3 in l3)
            if (as(l3, s3)) {
              var c3 = e28(l3, s3, n3, o3, i3 + "." + s3, is);
              if (c3 instanceof Error)
                return c3;
            }
          return null;
        });
      }, oneOf: function(e28) {
        if (!Array.isArray(e28))
          return us(arguments.length > 1 ? "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])." : "Invalid argument supplied to oneOf, expected an array."), ss;
        function t3(t4, r3, n3, o3, l3) {
          for (var u3 = t4[r3], s3 = 0; s3 < e28.length; s3++)
            if (i2(u3, e28[s3]))
              return null;
          var c3 = JSON.stringify(e28, function(e29, t5) {
            return "symbol" === f2(t5) ? String(t5) : t5;
          });
          return new a2("Invalid " + o3 + " `" + l3 + "` of value `" + String(u3) + "` supplied to `" + n3 + "`, expected one of " + c3 + ".");
        }
        return l2(t3);
      }, oneOfType: function(e28) {
        if (!Array.isArray(e28))
          return us("Invalid argument supplied to oneOfType, expected an instance of array."), ss;
        for (var t3 = 0; t3 < e28.length; t3++) {
          var r3 = e28[t3];
          if ("function" != typeof r3)
            return us("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + p2(r3) + " at index " + t3 + "."), ss;
        }
        return l2(function(t4, r4, n3, o3, i3) {
          for (var l3 = [], u3 = 0; u3 < e28.length; u3++) {
            var s3 = (0, e28[u3])(t4, r4, n3, o3, i3, is);
            if (null == s3)
              return null;
            s3.data && as(s3.data, "expectedType") && l3.push(s3.data.expectedType);
          }
          return new a2("Invalid " + o3 + " `" + i3 + "` supplied to `" + n3 + "`" + (l3.length > 0 ? ", expected one of type [" + l3.join(", ") + "]" : "") + ".");
        });
      }, shape: function(e28) {
        return l2(function(t3, r3, n3, o3, i3) {
          var l3 = t3[r3], u3 = d2(l3);
          if ("object" !== u3)
            return new a2("Invalid " + o3 + " `" + i3 + "` of type `" + u3 + "` supplied to `" + n3 + "`, expected `object`.");
          for (var c3 in e28) {
            var p3 = e28[c3];
            if ("function" != typeof p3)
              return s2(n3, o3, i3, c3, f2(p3));
            var h2 = p3(l3, c3, n3, o3, i3 + "." + c3, is);
            if (h2)
              return h2;
          }
          return null;
        });
      }, exact: function(e28) {
        return l2(function(t3, r3, n3, o3, i3) {
          var l3 = t3[r3], u3 = d2(l3);
          if ("object" !== u3)
            return new a2("Invalid " + o3 + " `" + i3 + "` of type `" + u3 + "` supplied to `" + n3 + "`, expected `object`.");
          var c3 = os({}, t3[r3], e28);
          for (var p3 in c3) {
            var h2 = e28[p3];
            if (as(e28, p3) && "function" != typeof h2)
              return s2(n3, o3, i3, p3, f2(h2));
            if (!h2)
              return new a2("Invalid " + o3 + " `" + i3 + "` key `" + p3 + "` supplied to `" + n3 + "`.\nBad object: " + JSON.stringify(t3[r3], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(e28), null, "  "));
            var g2 = h2(l3, p3, n3, o3, i3 + "." + p3, is);
            if (g2)
              return g2;
          }
          return null;
        });
      } };
      function i2(e28, t3) {
        return e28 === t3 ? 0 !== e28 || 1 / e28 == 1 / t3 : e28 != e28 && t3 != t3;
      }
      function a2(e28, t3) {
        this.message = e28, this.data = t3 && "object" == typeof t3 ? t3 : {}, this.stack = "";
      }
      function l2(e28) {
        if (true)
          var r3 = {}, o3 = 0;
        function i3(i4, l4, u3, s3, c3, d3, f3) {
          if (s3 = s3 || n2, d3 = d3 || u3, f3 !== is) {
            if (t2) {
              var p3 = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              throw p3.name = "Invariant Violation", p3;
            }
            if ("undefined" != typeof console) {
              var h2 = s3 + ":" + u3;
              !r3[h2] && o3 < 3 && (us("You are manually calling a React.PropTypes validation function for the `" + d3 + "` prop on `" + s3 + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."), r3[h2] = true, o3++);
            }
          }
          return null == l4[u3] ? i4 ? null === l4[u3] ? new a2("The " + c3 + " `" + d3 + "` is marked as required in `" + s3 + "`, but its value is `null`.") : new a2("The " + c3 + " `" + d3 + "` is marked as required in `" + s3 + "`, but its value is `undefined`.") : null : e28(l4, u3, s3, c3, d3);
        }
        var l3 = i3.bind(null, false);
        return l3.isRequired = i3.bind(null, true), l3;
      }
      function u2(e28) {
        return l2(function(t3, r3, n3, o3, i3, l3) {
          var u3 = t3[r3];
          return d2(u3) !== e28 ? new a2("Invalid " + o3 + " `" + i3 + "` of type `" + f2(u3) + "` supplied to `" + n3 + "`, expected `" + e28 + "`.", { expectedType: e28 }) : null;
        });
      }
      function s2(e28, t3, r3, n3, o3) {
        return new a2((e28 || "React class") + ": " + t3 + " type `" + r3 + "." + n3 + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + o3 + "`.");
      }
      function c2(t3) {
        switch (typeof t3) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !t3;
          case "object":
            if (Array.isArray(t3))
              return t3.every(c2);
            if (null === t3 || e27(t3))
              return true;
            var n3 = function(e28) {
              var t4 = e28 && (r2 && e28[r2] || e28["@@iterator"]);
              if ("function" == typeof t4)
                return t4;
            }(t3);
            if (!n3)
              return false;
            var o3, i3 = n3.call(t3);
            if (n3 !== t3.entries) {
              for (; !(o3 = i3.next()).done; )
                if (!c2(o3.value))
                  return false;
            } else
              for (; !(o3 = i3.next()).done; ) {
                var a3 = o3.value;
                if (a3 && !c2(a3[1]))
                  return false;
              }
            return true;
          default:
            return false;
        }
      }
      function d2(e28) {
        var t3 = typeof e28;
        return Array.isArray(e28) ? "array" : e28 instanceof RegExp ? "object" : function(e29, t4) {
          return "symbol" === e29 || !!t4 && ("Symbol" === t4["@@toStringTag"] || "function" == typeof Symbol && t4 instanceof Symbol);
        }(t3, e28) ? "symbol" : t3;
      }
      function f2(e28) {
        if (null == e28)
          return "" + e28;
        var t3 = d2(e28);
        if ("object" === t3) {
          if (e28 instanceof Date)
            return "date";
          if (e28 instanceof RegExp)
            return "regexp";
        }
        return t3;
      }
      function p2(e28) {
        var t3 = f2(e28);
        switch (t3) {
          case "array":
          case "object":
            return "an " + t3;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + t3;
          default:
            return t3;
        }
      }
      return a2.prototype = Error.prototype, o2.checkPropTypes = ls, o2.resetWarningCache = ls.resetWarningCache, o2.PropTypes = o2, o2;
    }(fs.isElement, true);
  } else
    bu.exports = function() {
      function e27(e28, t3, r3, n2, o2, i2) {
        if ("SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED" !== i2) {
          var a2 = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
          throw a2.name = "Invariant Violation", a2;
        }
      }
      function t2() {
        return e27;
      }
      e27.isRequired = e27;
      var r2 = { array: e27, bigint: e27, bool: e27, func: e27, number: e27, object: e27, string: e27, symbol: e27, any: e27, arrayOf: t2, element: e27, elementType: e27, instanceOf: t2, node: e27, objectOf: t2, oneOf: t2, oneOfType: t2, shape: t2, exact: t2, checkPropTypes: ds, resetWarningCache: cs };
      return r2.PropTypes = r2, r2;
    }();
  var fs;
  var ps = bu.exports;
  var hs = "function" == typeof WeakSet;
  var gs = Object.keys;
  function vs(e27, t2) {
    return e27 === t2 || e27 != e27 && t2 != t2;
  }
  function ms(e27) {
    return e27.constructor === Object || null == e27.constructor;
  }
  function ys(e27) {
    return !!e27 && "function" == typeof e27.then;
  }
  function bs(e27) {
    return !(!e27 || !e27.$$typeof);
  }
  function Cs() {
    var e27 = [];
    return { add: function(t2) {
      e27.push(t2);
    }, has: function(t2) {
      return -1 !== e27.indexOf(t2);
    } };
  }
  var xs = hs ? function() {
    return /* @__PURE__ */ new WeakSet();
  } : Cs;
  function ws(e27) {
    return function(t2) {
      var r2 = e27 || t2;
      return function(e28, t3, n2) {
        void 0 === n2 && (n2 = xs());
        var o2 = !!e28 && "object" == typeof e28, i2 = !!t3 && "object" == typeof t3;
        if (o2 || i2) {
          var a2 = o2 && n2.has(e28), l2 = i2 && n2.has(t3);
          if (a2 || l2)
            return a2 && l2;
          o2 && n2.add(e28), i2 && n2.add(t3);
        }
        return r2(e28, t3, n2);
      };
    };
  }
  var ks = Function.prototype.bind.call(Function.prototype.call, Object.prototype.hasOwnProperty);
  function Ss(e27, t2, r2, n2) {
    var o2 = gs(e27), i2 = o2.length;
    if (gs(t2).length !== i2)
      return false;
    if (i2)
      for (var a2 = void 0; i2-- > 0; ) {
        if ("_owner" === (a2 = o2[i2])) {
          var l2 = bs(e27), u2 = bs(t2);
          if ((l2 || u2) && l2 !== u2)
            return false;
        }
        if (!ks(t2, a2) || !r2(e27[a2], t2[a2], n2))
          return false;
      }
    return true;
  }
  var Es = "function" == typeof Map;
  var Ts = "function" == typeof Set;
  function Rs(e27) {
    var t2 = "function" == typeof e27 ? e27(r2) : r2;
    function r2(e28, r3, n2) {
      if (e28 === r3)
        return true;
      if (e28 && r3 && "object" == typeof e28 && "object" == typeof r3) {
        if (ms(e28) && ms(r3))
          return Ss(e28, r3, t2, n2);
        var o2 = Array.isArray(e28), i2 = Array.isArray(r3);
        return o2 || i2 ? o2 === i2 && function(e29, t3, r4, n3) {
          var o3 = e29.length;
          if (t3.length !== o3)
            return false;
          for (; o3-- > 0; )
            if (!r4(e29[o3], t3[o3], n3))
              return false;
          return true;
        }(e28, r3, t2, n2) : (o2 = e28 instanceof Date, i2 = r3 instanceof Date, o2 || i2 ? o2 === i2 && vs(e28.getTime(), r3.getTime()) : (o2 = e28 instanceof RegExp, i2 = r3 instanceof RegExp, o2 || i2 ? o2 === i2 && function(e29, t3) {
          return e29.source === t3.source && e29.global === t3.global && e29.ignoreCase === t3.ignoreCase && e29.multiline === t3.multiline && e29.unicode === t3.unicode && e29.sticky === t3.sticky && e29.lastIndex === t3.lastIndex;
        }(e28, r3) : ys(e28) || ys(r3) ? e28 === r3 : Es && (o2 = e28 instanceof Map, i2 = r3 instanceof Map, o2 || i2) ? o2 === i2 && function(e29, t3, r4, n3) {
          var o3 = e29.size === t3.size;
          if (o3 && e29.size) {
            var i3 = {};
            e29.forEach(function(e30, a2) {
              if (o3) {
                var l2 = false, u2 = 0;
                t3.forEach(function(t4, o4) {
                  l2 || i3[u2] || (l2 = r4(a2, o4, n3) && r4(e30, t4, n3)) && (i3[u2] = true), u2++;
                }), o3 = l2;
              }
            });
          }
          return o3;
        }(e28, r3, t2, n2) : Ts && (o2 = e28 instanceof Set, i2 = r3 instanceof Set, o2 || i2) ? o2 === i2 && function(e29, t3, r4, n3) {
          var o3 = e29.size === t3.size;
          if (o3 && e29.size) {
            var i3 = {};
            e29.forEach(function(e30) {
              if (o3) {
                var a2 = false, l2 = 0;
                t3.forEach(function(t4) {
                  a2 || i3[l2] || (a2 = r4(e30, t4, n3)) && (i3[l2] = true), l2++;
                }), o3 = a2;
              }
            });
          }
          return o3;
        }(e28, r3, t2, n2) : Ss(e28, r3, t2, n2)));
      }
      return e28 != e28 && r3 != r3;
    }
    return r2;
  }
  var Os = Rs();
  function _s(e27) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = -1, n2 = function n3(o2) {
      r2 < 0 && (r2 = o2), o2 - r2 > t2 ? (e27(o2), r2 = -1) : requestAnimationFrame(n3);
    };
    requestAnimationFrame(n2);
  }
  function Ps(e27) {
    return Ps = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, Ps(e27);
  }
  function Ms(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return Bs(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return Bs(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function Bs(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function As() {
    var e27 = function() {
      return null;
    }, t2 = false, r2 = function r3(n2) {
      if (!t2) {
        if (Array.isArray(n2)) {
          if (!n2.length)
            return;
          var o2 = Ms(n2), i2 = o2[0], a2 = o2.slice(1);
          return "number" == typeof i2 ? void _s(r3.bind(null, a2), i2) : (r3(i2), void _s(r3.bind(null, a2)));
        }
        "object" === Ps(n2) && e27(n2), "function" == typeof n2 && n2();
      }
    };
    return { stop: function() {
      t2 = true;
    }, start: function(e28) {
      t2 = false, r2(e28);
    }, subscribe: function(t3) {
      return e27 = t3, function() {
        e27 = function() {
          return null;
        };
      };
    } };
  }
  function Ns(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function js(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? Ns(Object(r2), true).forEach(function(t3) {
        Ds(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : Ns(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function Ds(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  Rs(function() {
    return vs;
  }), Rs(ws()), Rs(ws(vs));
  var Ls = ["Webkit", "Moz", "O", "ms"];
  var Is = ["-webkit-", "-moz-", "-o-", "-ms-"];
  var zs = ["transform", "transformOrigin", "transition"];
  var Fs = function(e27) {
    return e27;
  };
  var Us = function(e27, t2) {
    return Object.keys(t2).reduce(function(r2, n2) {
      return js(js({}, r2), {}, Ds({}, n2, e27(n2, t2[n2])));
    }, {});
  };
  var Vs = function(e27) {
    return Object.keys(e27).reduce(function(e28, t2) {
      return js(js({}, e28), function(e29, t3) {
        if (-1 === zs.indexOf(e29))
          return Ds({}, e29, t3);
        var r2 = "transition" === e29, n2 = e29.replace(/(\w)/, function(e30) {
          return e30.toUpperCase();
        }), o2 = t3;
        return Ls.reduce(function(e30, i2, a2) {
          return r2 && (o2 = t3.replace(/(transform|transform-origin)/gim, "".concat(Is[a2], "$1"))), js(js({}, e30), {}, Ds({}, i2 + n2, o2));
        }, {});
      }(t2, e28[t2]));
    }, e27);
  };
  var Ws = function(e27, t2, r2) {
    return e27.map(function(e28) {
      return "".concat((n2 = e28, n2.replace(/([A-Z])/g, function(e29) {
        return "-".concat(e29.toLowerCase());
      })), " ").concat(t2, "ms ").concat(r2);
      var n2;
    }).join(",");
  };
  var Hs = true;
  var $s = function(e27, t2, r2, n2, o2, i2, a2, l2) {
    if (Hs && "undefined" != typeof console && console.warn && (void 0 === t2 && console.warn("LogUtils requires an error message argument"), !e27))
      if (void 0 === t2)
        console.warn("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      else {
        var u2 = [r2, n2, o2, i2, a2, l2], s2 = 0;
        console.warn(t2.replace(/%s/g, function() {
          return u2[s2++];
        }));
      }
  };
  function qs(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || Gs(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function Ys(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return Xs(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || Gs(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function Gs(e27, t2) {
    if (e27) {
      if ("string" == typeof e27)
        return Xs(e27, t2);
      var r2 = Object.prototype.toString.call(e27).slice(8, -1);
      return "Object" === r2 && e27.constructor && (r2 = e27.constructor.name), "Map" === r2 || "Set" === r2 ? Array.from(e27) : "Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2) ? Xs(e27, t2) : void 0;
    }
  }
  function Xs(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  var Qs = function(e27, t2) {
    return [0, 3 * e27, 3 * t2 - 6 * e27, 3 * e27 - 3 * t2 + 1];
  };
  var Ks = function(e27, t2) {
    return e27.map(function(e28, r2) {
      return e28 * Math.pow(t2, r2);
    }).reduce(function(e28, t3) {
      return e28 + t3;
    });
  };
  var Zs = function(e27, t2) {
    return function(r2) {
      var n2 = Qs(e27, t2);
      return Ks(n2, r2);
    };
  };
  var Js = function(e27, t2) {
    return function(r2) {
      var n2 = Qs(e27, t2), o2 = [].concat(Ys(n2.map(function(e28, t3) {
        return e28 * t3;
      }).slice(1)), [0]);
      return Ks(o2, r2);
    };
  };
  var ec = function() {
    for (var e27 = arguments.length, t2 = new Array(e27), r2 = 0; r2 < e27; r2++)
      t2[r2] = arguments[r2];
    var n2 = t2[0], o2 = t2[1], i2 = t2[2], a2 = t2[3];
    if (1 === t2.length)
      switch (t2[0]) {
        case "linear":
          n2 = 0, o2 = 0, i2 = 1, a2 = 1;
          break;
        case "ease":
          n2 = 0.25, o2 = 0.1, i2 = 0.25, a2 = 1;
          break;
        case "ease-in":
          n2 = 0.42, o2 = 0, i2 = 1, a2 = 1;
          break;
        case "ease-out":
          n2 = 0.42, o2 = 0, i2 = 0.58, a2 = 1;
          break;
        case "ease-in-out":
          n2 = 0, o2 = 0, i2 = 0.58, a2 = 1;
          break;
        default:
          var l2 = t2[0].split("(");
          if ("cubic-bezier" === l2[0] && 4 === l2[1].split(")")[0].split(",").length) {
            var u2 = l2[1].split(")")[0].split(",").map(function(e28) {
              return parseFloat(e28);
            }), s2 = qs(u2, 4);
            n2 = s2[0], o2 = s2[1], i2 = s2[2], a2 = s2[3];
          } else
            $s(false, "[configBezier]: arguments should be one of oneOf 'linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', instead received %s", t2);
      }
    $s([n2, i2, o2, a2].every(function(e28) {
      return "number" == typeof e28 && e28 >= 0 && e28 <= 1;
    }), "[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s", t2);
    var c2 = Zs(n2, i2), d2 = Zs(o2, a2), f2 = Js(n2, i2), p2 = function(e28) {
      return e28 > 1 ? 1 : e28 < 0 ? 0 : e28;
    }, h2 = function(e28) {
      for (var t3 = e28 > 1 ? 1 : e28, r3 = t3, n3 = 0; n3 < 8; ++n3) {
        var o3 = c2(r3) - t3, i3 = f2(r3);
        if (Math.abs(o3 - t3) < 1e-4 || i3 < 1e-4)
          return d2(r3);
        r3 = p2(r3 - o3 / i3);
      }
      return d2(r3);
    };
    return h2.isStepper = false, h2;
  };
  var tc = function() {
    var e27 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t2 = e27.stiff, r2 = void 0 === t2 ? 100 : t2, n2 = e27.damping, o2 = void 0 === n2 ? 8 : n2, i2 = e27.dt, a2 = void 0 === i2 ? 17 : i2, l2 = function(e28, t3, n3) {
      var i3 = n3 + (-(e28 - t3) * r2 - n3 * o2) * a2 / 1e3, l3 = n3 * a2 / 1e3 + e28;
      return Math.abs(l3 - t3) < 1e-4 && Math.abs(i3) < 1e-4 ? [t3, 0] : [l3, i3];
    };
    return l2.isStepper = true, l2.dt = a2, l2;
  };
  function rc(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return uc(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || lc(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function nc(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function oc(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? nc(Object(r2), true).forEach(function(t3) {
        ic(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : nc(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function ic(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function ac(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || lc(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function lc(e27, t2) {
    if (e27) {
      if ("string" == typeof e27)
        return uc(e27, t2);
      var r2 = Object.prototype.toString.call(e27).slice(8, -1);
      return "Object" === r2 && e27.constructor && (r2 = e27.constructor.name), "Map" === r2 || "Set" === r2 ? Array.from(e27) : "Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2) ? uc(e27, t2) : void 0;
    }
  }
  function uc(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  var sc = function(e27, t2, r2) {
    return e27 + (t2 - e27) * r2;
  };
  var cc = function(e27) {
    return e27.from !== e27.to;
  };
  var dc = function e4(t2, r2, n2) {
    var o2 = Us(function(e27, r3) {
      if (cc(r3)) {
        var n3 = ac(t2(r3.from, r3.to, r3.velocity), 2), o3 = n3[0], i2 = n3[1];
        return oc(oc({}, r3), {}, { from: o3, velocity: i2 });
      }
      return r3;
    }, r2);
    return n2 < 1 ? Us(function(e27, t3) {
      return cc(t3) ? oc(oc({}, t3), {}, { velocity: sc(t3.velocity, o2[e27].velocity, n2), from: sc(t3.from, o2[e27].from, n2) }) : t3;
    }, r2) : e4(t2, o2, n2 - 1);
  };
  var fc = function(e27, t2, r2, n2, o2) {
    var i2, a2, l2, u2, s2 = (i2 = e27, a2 = t2, [Object.keys(i2), Object.keys(a2)].reduce(function(e28, t3) {
      return e28.filter(function(e29) {
        return t3.includes(e29);
      });
    })), c2 = s2.reduce(function(r3, n3) {
      return oc(oc({}, r3), {}, ic({}, n3, [e27[n3], t2[n3]]));
    }, {}), d2 = s2.reduce(function(r3, n3) {
      return oc(oc({}, r3), {}, ic({}, n3, { from: e27[n3], velocity: 0, to: t2[n3] }));
    }, {}), f2 = -1, p2 = function() {
      return null;
    };
    return p2 = r2.isStepper ? function(n3) {
      l2 || (l2 = n3);
      var i3 = (n3 - l2) / r2.dt;
      d2 = dc(r2, d2, i3), o2(oc(oc(oc({}, e27), t2), Us(function(e28, t3) {
        return t3.from;
      }, d2))), l2 = n3, Object.values(d2).filter(cc).length && (f2 = requestAnimationFrame(p2));
    } : function(i3) {
      u2 || (u2 = i3);
      var a3 = (i3 - u2) / n2, l3 = Us(function(e28, t3) {
        return sc.apply(void 0, rc(t3).concat([r2(a3)]));
      }, c2);
      if (o2(oc(oc(oc({}, e27), t2), l3)), a3 < 1)
        f2 = requestAnimationFrame(p2);
      else {
        var s3 = Us(function(e28, t3) {
          return sc.apply(void 0, rc(t3).concat([r2(1)]));
        }, c2);
        o2(oc(oc(oc({}, e27), t2), s3));
      }
    }, function() {
      return requestAnimationFrame(p2), function() {
        cancelAnimationFrame(f2);
      };
    };
  };
  function pc(e27) {
    return pc = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, pc(e27);
  }
  function hc(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function gc(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return vc(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return vc(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return vc(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function vc(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function mc(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function yc(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? mc(Object(r2), true).forEach(function(t3) {
        bc(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : mc(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function bc(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function Cc(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function xc(e27, t2) {
    return xc = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, xc(e27, t2);
  }
  function wc(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = Ec(e27);
      if (t2) {
        var o2 = Ec(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return kc(this, r2);
    };
  }
  function kc(e27, t2) {
    return !t2 || "object" !== pc(t2) && "function" != typeof t2 ? Sc(e27) : t2;
  }
  function Sc(e27) {
    if (void 0 === e27)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e27;
  }
  function Ec(e27) {
    return Ec = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, Ec(e27);
  }
  var Tc = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && xc(e28, t2);
    }(s2, import_react.PureComponent);
    var r2, a2, l2, u2 = wc(s2);
    function s2(e28, t2) {
      var r3;
      !function(e29, t3) {
        if (!(e29 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }(this, s2);
      var n2 = (r3 = u2.call(this, e28, t2)).props, o2 = n2.isActive, i2 = n2.attributeName, a3 = n2.from, l3 = n2.to, c2 = n2.steps, d2 = n2.children;
      if (r3.handleStyleChange = r3.handleStyleChange.bind(Sc(r3)), r3.changeStyle = r3.changeStyle.bind(Sc(r3)), !o2)
        return r3.state = { style: {} }, "function" == typeof d2 && (r3.state = { style: l3 }), kc(r3);
      if (c2 && c2.length)
        r3.state = { style: c2[0].style };
      else if (a3) {
        if ("function" == typeof d2)
          return r3.state = { style: a3 }, kc(r3);
        r3.state = { style: i2 ? bc({}, i2, a3) : a3 };
      } else
        r3.state = { style: {} };
      return r3;
    }
    return r2 = s2, a2 = [{ key: "componentDidMount", value: function() {
      var e28 = this.props, t2 = e28.isActive, r3 = e28.canBegin;
      this.mounted = true, t2 && r3 && this.runAnimation(this.props);
    } }, { key: "componentDidUpdate", value: function(e28) {
      var t2 = this.props, r3 = t2.isActive, n2 = t2.canBegin, o2 = t2.attributeName, i2 = t2.shouldReAnimate;
      if (n2)
        if (r3) {
          if (!(Os(e28.to, this.props.to) && e28.canBegin && e28.isActive)) {
            var a3 = !e28.canBegin || !e28.isActive;
            this.manager && this.manager.stop(), this.stopJSAnimation && this.stopJSAnimation();
            var l3 = a3 || i2 ? this.props.from : e28.to;
            if (this.state && this.state.style) {
              var u3 = { style: o2 ? bc({}, o2, l3) : l3 };
              (o2 && this.state.style[o2] !== l3 || !o2 && this.state.style !== l3) && this.setState(u3);
            }
            this.runAnimation(yc(yc({}, this.props), {}, { from: l3, begin: 0 }));
          }
        } else {
          var s3 = { style: o2 ? bc({}, o2, this.props.to) : this.props.to };
          this.state && this.state.style && (o2 && this.state.style[o2] !== this.props.to || !o2 && this.state.style !== this.props.to) && this.setState(s3);
        }
    } }, { key: "componentWillUnmount", value: function() {
      this.mounted = false, this.unSubscribe && this.unSubscribe(), this.manager && (this.manager.stop(), this.manager = null), this.stopJSAnimation && this.stopJSAnimation();
    } }, { key: "runJSAnimation", value: function(e28) {
      var t2 = this, r3 = e28.from, n2 = e28.to, o2 = e28.duration, i2 = e28.easing, a3 = e28.begin, l3 = e28.onAnimationEnd, u3 = e28.onAnimationStart, s3 = fc(r3, n2, function() {
        for (var e29 = arguments.length, t3 = new Array(e29), r4 = 0; r4 < e29; r4++)
          t3[r4] = arguments[r4];
        var n3 = t3[0];
        if ("string" == typeof n3)
          switch (n3) {
            case "ease":
            case "ease-in-out":
            case "ease-out":
            case "ease-in":
            case "linear":
              return ec(n3);
            case "spring":
              return tc();
            default:
              if ("cubic-bezier" === n3.split("(")[0])
                return ec(n3);
              $s(false, "[configEasing]: first argument should be one of 'ease', 'ease-in', 'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', 'linear' and 'spring', instead  received %s", t3);
          }
        return "function" == typeof n3 ? n3 : ($s(false, "[configEasing]: first argument type should be function or string, instead received %s", t3), null);
      }(i2), o2, this.changeStyle);
      this.manager.start([u3, a3, function() {
        t2.stopJSAnimation = s3();
      }, o2, l3]);
    } }, { key: "runStepAnimation", value: function(e28) {
      var t2 = this, r3 = e28.steps, n2 = e28.begin, o2 = e28.onAnimationStart, i2 = r3[0], a3 = i2.style, l3 = i2.duration, u3 = void 0 === l3 ? 0 : l3;
      return this.manager.start([o2].concat(gc(r3.reduce(function(e29, n3, o3) {
        if (0 === o3)
          return e29;
        var i3 = n3.duration, a4 = n3.easing, l4 = void 0 === a4 ? "ease" : a4, u4 = n3.style, s3 = n3.properties, c2 = n3.onAnimationEnd, d2 = o3 > 0 ? r3[o3 - 1] : n3, f2 = s3 || Object.keys(u4);
        if ("function" == typeof l4 || "spring" === l4)
          return [].concat(gc(e29), [t2.runJSAnimation.bind(t2, { from: d2.style, to: u4, duration: i3, easing: l4 }), i3]);
        var p2 = Ws(f2, i3, l4), h2 = yc(yc(yc({}, d2.style), u4), {}, { transition: p2 });
        return [].concat(gc(e29), [h2, i3, c2]).filter(Fs);
      }, [a3, Math.max(u3, n2)])), [e28.onAnimationEnd]));
    } }, { key: "runAnimation", value: function(e28) {
      this.manager || (this.manager = As());
      var t2 = e28.begin, r3 = e28.duration, n2 = e28.attributeName, o2 = e28.to, i2 = e28.easing, a3 = e28.onAnimationStart, l3 = e28.onAnimationEnd, u3 = e28.steps, s3 = e28.children, c2 = this.manager;
      if (this.unSubscribe = c2.subscribe(this.handleStyleChange), "function" != typeof i2 && "function" != typeof s3 && "spring" !== i2)
        if (u3.length > 1)
          this.runStepAnimation(e28);
        else {
          var d2 = n2 ? bc({}, n2, o2) : o2, f2 = Ws(Object.keys(d2), r3, i2);
          c2.start([a3, t2, yc(yc({}, d2), {}, { transition: f2 }), r3, l3]);
        }
      else
        this.runJSAnimation(e28);
    } }, { key: "handleStyleChange", value: function(e28) {
      this.changeStyle(e28);
    } }, { key: "changeStyle", value: function(e28) {
      this.mounted && this.setState({ style: e28 });
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.children;
      e28.begin, e28.duration, e28.attributeName, e28.easing;
      var n2 = e28.isActive;
      e28.steps, e28.from, e28.to, e28.canBegin, e28.onAnimationEnd, e28.shouldReAnimate, e28.onAnimationReStart;
      var a3 = hc(e28, ["children", "begin", "duration", "attributeName", "easing", "isActive", "steps", "from", "to", "canBegin", "onAnimationEnd", "shouldReAnimate", "onAnimationReStart"]), l3 = import_react.Children.count(r3), u3 = Vs(this.state.style);
      if ("function" == typeof r3)
        return r3(u3);
      if (!n2 || 0 === l3)
        return r3;
      var s3 = function(e29) {
        var t2 = e29.props, r4 = t2.style, n3 = void 0 === r4 ? {} : r4, o2 = t2.className;
        return (0, import_react.cloneElement)(e29, yc(yc({}, a3), {}, { style: yc(yc({}, n3), u3), className: o2 }));
      };
      return 1 === l3 ? s3(import_react.Children.only(r3)) : import_react.default.createElement("div", null, import_react.Children.map(r3, function(e29) {
        return s3(e29);
      }));
    } }], a2 && Cc(r2.prototype, a2), l2 && Cc(r2, l2), s2;
  }();
  Tc.displayName = "Animate", Tc.propTypes = { from: ps.oneOfType([ps.object, ps.string]), to: ps.oneOfType([ps.object, ps.string]), attributeName: ps.string, duration: ps.number, begin: ps.number, easing: ps.oneOfType([ps.string, ps.func]), steps: ps.arrayOf(ps.shape({ duration: ps.number.isRequired, style: ps.object.isRequired, easing: ps.oneOfType([ps.oneOf(["ease", "ease-in", "ease-out", "ease-in-out", "linear"]), ps.func]), properties: ps.arrayOf("string"), onAnimationEnd: ps.func })), children: ps.oneOfType([ps.node, ps.func]), isActive: ps.bool, canBegin: ps.bool, onAnimationEnd: ps.func, shouldReAnimate: ps.bool, onAnimationStart: ps.func, onAnimationReStart: ps.func }, Tc.defaultProps = { begin: 0, duration: 1e3, from: "", to: "", attributeName: "", easing: "ease", isActive: true, canBegin: true, steps: [], onAnimationEnd: function() {
  }, onAnimationStart: function() {
  } };
  var Rc = { exports: {} };
  var Oc = {};
  var _c = { exports: {} };
  var Pc = {};
  !function(e27) {
    function t2(e28, t3) {
      var r3 = e28.length;
      e28.push(t3);
      e:
        for (; 0 < r3; ) {
          var n3 = r3 - 1 >>> 1, i3 = e28[n3];
          if (!(0 < o2(i3, t3)))
            break e;
          e28[n3] = t3, e28[r3] = i3, r3 = n3;
        }
    }
    function r2(e28) {
      return 0 === e28.length ? null : e28[0];
    }
    function n2(e28) {
      if (0 === e28.length)
        return null;
      var t3 = e28[0], r3 = e28.pop();
      if (r3 !== t3) {
        e28[0] = r3;
        e:
          for (var n3 = 0, i3 = e28.length, a3 = i3 >>> 1; n3 < a3; ) {
            var l3 = 2 * (n3 + 1) - 1, u3 = e28[l3], s3 = l3 + 1, c3 = e28[s3];
            if (0 > o2(u3, r3))
              s3 < i3 && 0 > o2(c3, u3) ? (e28[n3] = c3, e28[s3] = r3, n3 = s3) : (e28[n3] = u3, e28[l3] = r3, n3 = l3);
            else {
              if (!(s3 < i3 && 0 > o2(c3, r3)))
                break e;
              e28[n3] = c3, e28[s3] = r3, n3 = s3;
            }
          }
      }
      return t3;
    }
    function o2(e28, t3) {
      var r3 = e28.sortIndex - t3.sortIndex;
      return 0 !== r3 ? r3 : e28.id - t3.id;
    }
    if ("object" == typeof performance && "function" == typeof performance.now) {
      var i2 = performance;
      e27.unstable_now = function() {
        return i2.now();
      };
    } else {
      var a2 = Date, l2 = a2.now();
      e27.unstable_now = function() {
        return a2.now() - l2;
      };
    }
    var u2 = [], s2 = [], c2 = 1, d2 = null, f2 = 3, p2 = false, h2 = false, g2 = false, v2 = "function" == typeof setTimeout ? setTimeout : null, m2 = "function" == typeof clearTimeout ? clearTimeout : null, y2 = "undefined" != typeof setImmediate ? setImmediate : null;
    function b2(e28) {
      for (var o3 = r2(s2); null !== o3; ) {
        if (null === o3.callback)
          n2(s2);
        else {
          if (!(o3.startTime <= e28))
            break;
          n2(s2), o3.sortIndex = o3.expirationTime, t2(u2, o3);
        }
        o3 = r2(s2);
      }
    }
    function C2(e28) {
      if (g2 = false, b2(e28), !h2)
        if (null !== r2(u2))
          h2 = true, B2(x2);
        else {
          var t3 = r2(s2);
          null !== t3 && A2(C2, t3.startTime - e28);
        }
    }
    function x2(t3, o3) {
      h2 = false, g2 && (g2 = false, m2(E2), E2 = -1), p2 = true;
      var i3 = f2;
      try {
        for (b2(o3), d2 = r2(u2); null !== d2 && (!(d2.expirationTime > o3) || t3 && !O2()); ) {
          var a3 = d2.callback;
          if ("function" == typeof a3) {
            d2.callback = null, f2 = d2.priorityLevel;
            var l3 = a3(d2.expirationTime <= o3);
            o3 = e27.unstable_now(), "function" == typeof l3 ? d2.callback = l3 : d2 === r2(u2) && n2(u2), b2(o3);
          } else
            n2(u2);
          d2 = r2(u2);
        }
        if (null !== d2)
          var c3 = true;
        else {
          var v3 = r2(s2);
          null !== v3 && A2(C2, v3.startTime - o3), c3 = false;
        }
        return c3;
      } finally {
        d2 = null, f2 = i3, p2 = false;
      }
    }
    "undefined" != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    var w2, k2 = false, S2 = null, E2 = -1, T2 = 5, R2 = -1;
    function O2() {
      return !(e27.unstable_now() - R2 < T2);
    }
    function _2() {
      if (null !== S2) {
        var t3 = e27.unstable_now();
        R2 = t3;
        var r3 = true;
        try {
          r3 = S2(true, t3);
        } finally {
          r3 ? w2() : (k2 = false, S2 = null);
        }
      } else
        k2 = false;
    }
    if ("function" == typeof y2)
      w2 = function() {
        y2(_2);
      };
    else if ("undefined" != typeof MessageChannel) {
      var P2 = new MessageChannel(), M2 = P2.port2;
      P2.port1.onmessage = _2, w2 = function() {
        M2.postMessage(null);
      };
    } else
      w2 = function() {
        v2(_2, 0);
      };
    function B2(e28) {
      S2 = e28, k2 || (k2 = true, w2());
    }
    function A2(t3, r3) {
      E2 = v2(function() {
        t3(e27.unstable_now());
      }, r3);
    }
    e27.unstable_IdlePriority = 5, e27.unstable_ImmediatePriority = 1, e27.unstable_LowPriority = 4, e27.unstable_NormalPriority = 3, e27.unstable_Profiling = null, e27.unstable_UserBlockingPriority = 2, e27.unstable_cancelCallback = function(e28) {
      e28.callback = null;
    }, e27.unstable_continueExecution = function() {
      h2 || p2 || (h2 = true, B2(x2));
    }, e27.unstable_forceFrameRate = function(e28) {
      0 > e28 || 125 < e28 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : T2 = 0 < e28 ? Math.floor(1e3 / e28) : 5;
    }, e27.unstable_getCurrentPriorityLevel = function() {
      return f2;
    }, e27.unstable_getFirstCallbackNode = function() {
      return r2(u2);
    }, e27.unstable_next = function(e28) {
      switch (f2) {
        case 1:
        case 2:
        case 3:
          var t3 = 3;
          break;
        default:
          t3 = f2;
      }
      var r3 = f2;
      f2 = t3;
      try {
        return e28();
      } finally {
        f2 = r3;
      }
    }, e27.unstable_pauseExecution = function() {
    }, e27.unstable_requestPaint = function() {
    }, e27.unstable_runWithPriority = function(e28, t3) {
      switch (e28) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          e28 = 3;
      }
      var r3 = f2;
      f2 = e28;
      try {
        return t3();
      } finally {
        f2 = r3;
      }
    }, e27.unstable_scheduleCallback = function(n3, o3, i3) {
      var a3 = e27.unstable_now();
      switch ("object" == typeof i3 && null !== i3 ? i3 = "number" == typeof (i3 = i3.delay) && 0 < i3 ? a3 + i3 : a3 : i3 = a3, n3) {
        case 1:
          var l3 = -1;
          break;
        case 2:
          l3 = 250;
          break;
        case 5:
          l3 = 1073741823;
          break;
        case 4:
          l3 = 1e4;
          break;
        default:
          l3 = 5e3;
      }
      return n3 = { id: c2++, callback: o3, priorityLevel: n3, startTime: i3, expirationTime: l3 = i3 + l3, sortIndex: -1 }, i3 > a3 ? (n3.sortIndex = i3, t2(s2, n3), null === r2(u2) && n3 === r2(s2) && (g2 ? (m2(E2), E2 = -1) : g2 = true, A2(C2, i3 - a3))) : (n3.sortIndex = l3, t2(u2, n3), h2 || p2 || (h2 = true, B2(x2))), n3;
    }, e27.unstable_shouldYield = O2, e27.unstable_wrapCallback = function(e28) {
      var t3 = f2;
      return function() {
        var r3 = f2;
        f2 = t3;
        try {
          return e28.apply(this, arguments);
        } finally {
          f2 = r3;
        }
      };
    };
  }(Pc);
  var Mc;
  var Bc = {};
  Mc = Bc, function() {
    function e27(e28, t3) {
      var r3 = e28.length;
      e28.push(t3), function(e29, t4, r4) {
        for (var o3 = r4; o3 > 0; ) {
          var i3 = o3 - 1 >>> 1, a3 = e29[i3];
          if (!(n2(a3, t4) > 0))
            return;
          e29[i3] = t4, e29[o3] = a3, o3 = i3;
        }
      }(e28, t3, r3);
    }
    function t2(e28) {
      return 0 === e28.length ? null : e28[0];
    }
    function r2(e28) {
      if (0 === e28.length)
        return null;
      var t3 = e28[0], r3 = e28.pop();
      return r3 !== t3 && (e28[0] = r3, function(e29, t4, r4) {
        for (var o3 = r4, i3 = e29.length, a3 = i3 >>> 1; o3 < a3; ) {
          var l3 = 2 * (o3 + 1) - 1, u3 = e29[l3], s3 = l3 + 1, c3 = e29[s3];
          if (n2(u3, t4) < 0)
            s3 < i3 && n2(c3, u3) < 0 ? (e29[o3] = c3, e29[s3] = t4, o3 = s3) : (e29[o3] = u3, e29[l3] = t4, o3 = l3);
          else {
            if (!(s3 < i3 && n2(c3, t4) < 0))
              return;
            e29[o3] = c3, e29[s3] = t4, o3 = s3;
          }
        }
      }(e28, r3, 0)), t3;
    }
    function n2(e28, t3) {
      var r3 = e28.sortIndex - t3.sortIndex;
      return 0 !== r3 ? r3 : e28.id - t3.id;
    }
    if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error()), "object" == typeof performance && "function" == typeof performance.now) {
      var o2 = performance;
      Mc.unstable_now = function() {
        return o2.now();
      };
    } else {
      var i2 = Date, a2 = i2.now();
      Mc.unstable_now = function() {
        return i2.now() - a2;
      };
    }
    var l2 = [], u2 = [], s2 = 1, c2 = null, d2 = 3, f2 = false, p2 = false, h2 = false, g2 = "function" == typeof setTimeout ? setTimeout : null, v2 = "function" == typeof clearTimeout ? clearTimeout : null, m2 = "undefined" != typeof setImmediate ? setImmediate : null;
    function y2(n3) {
      for (var o3 = t2(u2); null !== o3; ) {
        if (null === o3.callback)
          r2(u2);
        else {
          if (!(o3.startTime <= n3))
            return;
          r2(u2), o3.sortIndex = o3.expirationTime, e27(l2, o3);
        }
        o3 = t2(u2);
      }
    }
    function b2(e28) {
      if (h2 = false, y2(e28), !p2)
        if (null !== t2(l2))
          p2 = true, M2(C2);
        else {
          var r3 = t2(u2);
          null !== r3 && B2(b2, r3.startTime - e28);
        }
    }
    function C2(e28, n3) {
      p2 = false, h2 && (h2 = false, A2()), f2 = true;
      var o3 = d2;
      try {
        return function(e29, n4) {
          var o4 = n4;
          for (y2(o4), c2 = t2(l2); null !== c2 && (!(c2.expirationTime > o4) || e29 && !T2()); ) {
            var i3 = c2.callback;
            if ("function" == typeof i3) {
              c2.callback = null, d2 = c2.priorityLevel;
              var a3 = i3(c2.expirationTime <= o4);
              o4 = Mc.unstable_now(), "function" == typeof a3 ? c2.callback = a3 : c2 === t2(l2) && r2(l2), y2(o4);
            } else
              r2(l2);
            c2 = t2(l2);
          }
          if (null !== c2)
            return true;
          var s3 = t2(u2);
          return null !== s3 && B2(b2, s3.startTime - o4), false;
        }(e28, n3);
      } finally {
        c2 = null, d2 = o3, f2 = false;
      }
    }
    "undefined" != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    var x2 = false, w2 = null, k2 = -1, S2 = 5, E2 = -1;
    function T2() {
      return !(Mc.unstable_now() - E2 < S2);
    }
    var R2, O2 = function() {
      if (null !== w2) {
        var e28 = Mc.unstable_now();
        E2 = e28;
        var t3 = true;
        try {
          t3 = w2(true, e28);
        } finally {
          t3 ? R2() : (x2 = false, w2 = null);
        }
      } else
        x2 = false;
    };
    if ("function" == typeof m2)
      R2 = function() {
        m2(O2);
      };
    else if ("undefined" != typeof MessageChannel) {
      var _2 = new MessageChannel(), P2 = _2.port2;
      _2.port1.onmessage = O2, R2 = function() {
        P2.postMessage(null);
      };
    } else
      R2 = function() {
        g2(O2, 0);
      };
    function M2(e28) {
      w2 = e28, x2 || (x2 = true, R2());
    }
    function B2(e28, t3) {
      k2 = g2(function() {
        e28(Mc.unstable_now());
      }, t3);
    }
    function A2() {
      v2(k2), k2 = -1;
    }
    var N2 = function() {
    };
    Mc.unstable_IdlePriority = 5, Mc.unstable_ImmediatePriority = 1, Mc.unstable_LowPriority = 4, Mc.unstable_NormalPriority = 3, Mc.unstable_Profiling = null, Mc.unstable_UserBlockingPriority = 2, Mc.unstable_cancelCallback = function(e28) {
      e28.callback = null;
    }, Mc.unstable_continueExecution = function() {
      p2 || f2 || (p2 = true, M2(C2));
    }, Mc.unstable_forceFrameRate = function(e28) {
      e28 < 0 || e28 > 125 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : S2 = e28 > 0 ? Math.floor(1e3 / e28) : 5;
    }, Mc.unstable_getCurrentPriorityLevel = function() {
      return d2;
    }, Mc.unstable_getFirstCallbackNode = function() {
      return t2(l2);
    }, Mc.unstable_next = function(e28) {
      var t3;
      switch (d2) {
        case 1:
        case 2:
        case 3:
          t3 = 3;
          break;
        default:
          t3 = d2;
      }
      var r3 = d2;
      d2 = t3;
      try {
        return e28();
      } finally {
        d2 = r3;
      }
    }, Mc.unstable_pauseExecution = function() {
    }, Mc.unstable_requestPaint = N2, Mc.unstable_runWithPriority = function(e28, t3) {
      switch (e28) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          e28 = 3;
      }
      var r3 = d2;
      d2 = e28;
      try {
        return t3();
      } finally {
        d2 = r3;
      }
    }, Mc.unstable_scheduleCallback = function(r3, n3, o3) {
      var i3, a3, c3 = Mc.unstable_now();
      if ("object" == typeof o3 && null !== o3) {
        var d3 = o3.delay;
        i3 = "number" == typeof d3 && d3 > 0 ? c3 + d3 : c3;
      } else
        i3 = c3;
      switch (r3) {
        case 1:
          a3 = -1;
          break;
        case 2:
          a3 = 250;
          break;
        case 5:
          a3 = 1073741823;
          break;
        case 4:
          a3 = 1e4;
          break;
        default:
          a3 = 5e3;
      }
      var g3 = i3 + a3, v3 = { id: s2++, callback: n3, priorityLevel: r3, startTime: i3, expirationTime: g3, sortIndex: -1 };
      return i3 > c3 ? (v3.sortIndex = i3, e27(u2, v3), null === t2(l2) && v3 === t2(u2) && (h2 ? A2() : h2 = true, B2(b2, i3 - c3))) : (v3.sortIndex = g3, e27(l2, v3), p2 || f2 || (p2 = true, M2(C2))), v3;
    }, Mc.unstable_shouldYield = T2, Mc.unstable_wrapCallback = function(e28) {
      var t3 = d2;
      return function() {
        var r3 = d2;
        d2 = t3;
        try {
          return e28.apply(this, arguments);
        } finally {
          d2 = r3;
        }
      };
    }, "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }(), false ? _c.exports = Pc : _c.exports = Bc;
  var Ac = import_react.default;
  var Nc = _c.exports;
  function jc(e27) {
    for (var t2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + e27, r2 = 1; r2 < arguments.length; r2++)
      t2 += "&args[]=" + encodeURIComponent(arguments[r2]);
    return "Minified React error #" + e27 + "; visit " + t2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var Dc = /* @__PURE__ */ new Set();
  var Lc = {};
  function Ic(e27, t2) {
    zc(e27, t2), zc(e27 + "Capture", t2);
  }
  function zc(e27, t2) {
    for (Lc[e27] = t2, e27 = 0; e27 < t2.length; e27++)
      Dc.add(t2[e27]);
  }
  var Fc = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement);
  var Uc = Object.prototype.hasOwnProperty;
  var Vc = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/;
  var Wc = {};
  var Hc = {};
  function $c(e27, t2, r2, n2, o2, i2, a2) {
    this.acceptsBooleans = 2 === t2 || 3 === t2 || 4 === t2, this.attributeName = n2, this.attributeNamespace = o2, this.mustUseProperty = r2, this.propertyName = e27, this.type = t2, this.sanitizeURL = i2, this.removeEmptyString = a2;
  }
  var qc = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e27) {
    qc[e27] = new $c(e27, 0, false, e27, null, false, false);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(e27) {
    var t2 = e27[0];
    qc[t2] = new $c(t2, 1, false, e27[1], null, false, false);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(e27) {
    qc[e27] = new $c(e27, 2, false, e27.toLowerCase(), null, false, false);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(e27) {
    qc[e27] = new $c(e27, 2, false, e27, null, false, false);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e27) {
    qc[e27] = new $c(e27, 3, false, e27.toLowerCase(), null, false, false);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(e27) {
    qc[e27] = new $c(e27, 3, true, e27, null, false, false);
  }), ["capture", "download"].forEach(function(e27) {
    qc[e27] = new $c(e27, 4, false, e27, null, false, false);
  }), ["cols", "rows", "size", "span"].forEach(function(e27) {
    qc[e27] = new $c(e27, 6, false, e27, null, false, false);
  }), ["rowSpan", "start"].forEach(function(e27) {
    qc[e27] = new $c(e27, 5, false, e27.toLowerCase(), null, false, false);
  });
  var Yc = /[\-:]([a-z])/g;
  function Gc(e27) {
    return e27[1].toUpperCase();
  }
  function Xc(e27, t2, r2, n2) {
    var o2 = qc.hasOwnProperty(t2) ? qc[t2] : null;
    (null !== o2 ? 0 !== o2.type : n2 || !(2 < t2.length) || "o" !== t2[0] && "O" !== t2[0] || "n" !== t2[1] && "N" !== t2[1]) && (function(e28, t3, r3, n3) {
      if (null == t3 || function(e29, t4, r4, n4) {
        if (null !== r4 && 0 === r4.type)
          return false;
        switch (typeof t4) {
          case "function":
          case "symbol":
            return true;
          case "boolean":
            return !n4 && (null !== r4 ? !r4.acceptsBooleans : "data-" !== (e29 = e29.toLowerCase().slice(0, 5)) && "aria-" !== e29);
          default:
            return false;
        }
      }(e28, t3, r3, n3))
        return true;
      if (n3)
        return false;
      if (null !== r3)
        switch (r3.type) {
          case 3:
            return !t3;
          case 4:
            return false === t3;
          case 5:
            return isNaN(t3);
          case 6:
            return isNaN(t3) || 1 > t3;
        }
      return false;
    }(t2, r2, o2, n2) && (r2 = null), n2 || null === o2 ? function(e28) {
      return !!Uc.call(Hc, e28) || !Uc.call(Wc, e28) && (Vc.test(e28) ? Hc[e28] = true : (Wc[e28] = true, false));
    }(t2) && (null === r2 ? e27.removeAttribute(t2) : e27.setAttribute(t2, "" + r2)) : o2.mustUseProperty ? e27[o2.propertyName] = null === r2 ? 3 !== o2.type && "" : r2 : (t2 = o2.attributeName, n2 = o2.attributeNamespace, null === r2 ? e27.removeAttribute(t2) : (r2 = 3 === (o2 = o2.type) || 4 === o2 && true === r2 ? "" : "" + r2, n2 ? e27.setAttributeNS(n2, t2, r2) : e27.setAttribute(t2, r2))));
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e27) {
    var t2 = e27.replace(Yc, Gc);
    qc[t2] = new $c(t2, 1, false, e27, null, false, false);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e27) {
    var t2 = e27.replace(Yc, Gc);
    qc[t2] = new $c(t2, 1, false, e27, "http://www.w3.org/1999/xlink", false, false);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(e27) {
    var t2 = e27.replace(Yc, Gc);
    qc[t2] = new $c(t2, 1, false, e27, "http://www.w3.org/XML/1998/namespace", false, false);
  }), ["tabIndex", "crossOrigin"].forEach(function(e27) {
    qc[e27] = new $c(e27, 1, false, e27.toLowerCase(), null, false, false);
  }), qc.xlinkHref = new $c("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false), ["src", "href", "action", "formAction"].forEach(function(e27) {
    qc[e27] = new $c(e27, 1, false, e27.toLowerCase(), null, true, true);
  });
  var Qc = Ac.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  var Kc = Symbol.for("react.element");
  var Zc = Symbol.for("react.portal");
  var Jc = Symbol.for("react.fragment");
  var ed = Symbol.for("react.strict_mode");
  var td = Symbol.for("react.profiler");
  var rd = Symbol.for("react.provider");
  var nd = Symbol.for("react.context");
  var od = Symbol.for("react.forward_ref");
  var id = Symbol.for("react.suspense");
  var ad = Symbol.for("react.suspense_list");
  var ld = Symbol.for("react.memo");
  var ud = Symbol.for("react.lazy");
  var sd = Symbol.for("react.offscreen");
  var cd = Symbol.iterator;
  function dd(e27) {
    return null === e27 || "object" != typeof e27 ? null : "function" == typeof (e27 = cd && e27[cd] || e27["@@iterator"]) ? e27 : null;
  }
  var fd;
  var pd = Object.assign;
  function hd(e27) {
    if (void 0 === fd)
      try {
        throw Error();
      } catch (e28) {
        var t2 = e28.stack.trim().match(/\n( *(at )?)/);
        fd = t2 && t2[1] || "";
      }
    return "\n" + fd + e27;
  }
  var gd = false;
  function vd(e27, t2) {
    if (!e27 || gd)
      return "";
    gd = true;
    var r2 = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (t2)
        if (t2 = function() {
          throw Error();
        }, Object.defineProperty(t2.prototype, "props", { set: function() {
          throw Error();
        } }), "object" == typeof Reflect && Reflect.construct) {
          try {
            Reflect.construct(t2, []);
          } catch (e28) {
            var n2 = e28;
          }
          Reflect.construct(e27, [], t2);
        } else {
          try {
            t2.call();
          } catch (e28) {
            n2 = e28;
          }
          e27.call(t2.prototype);
        }
      else {
        try {
          throw Error();
        } catch (e28) {
          n2 = e28;
        }
        e27();
      }
    } catch (t3) {
      if (t3 && n2 && "string" == typeof t3.stack) {
        for (var o2 = t3.stack.split("\n"), i2 = n2.stack.split("\n"), a2 = o2.length - 1, l2 = i2.length - 1; 1 <= a2 && 0 <= l2 && o2[a2] !== i2[l2]; )
          l2--;
        for (; 1 <= a2 && 0 <= l2; a2--, l2--)
          if (o2[a2] !== i2[l2]) {
            if (1 !== a2 || 1 !== l2)
              do {
                if (a2--, 0 > --l2 || o2[a2] !== i2[l2]) {
                  var u2 = "\n" + o2[a2].replace(" at new ", " at ");
                  return e27.displayName && u2.includes("<anonymous>") && (u2 = u2.replace("<anonymous>", e27.displayName)), u2;
                }
              } while (1 <= a2 && 0 <= l2);
            break;
          }
      }
    } finally {
      gd = false, Error.prepareStackTrace = r2;
    }
    return (e27 = e27 ? e27.displayName || e27.name : "") ? hd(e27) : "";
  }
  function md(e27) {
    switch (e27.tag) {
      case 5:
        return hd(e27.type);
      case 16:
        return hd("Lazy");
      case 13:
        return hd("Suspense");
      case 19:
        return hd("SuspenseList");
      case 0:
      case 2:
      case 15:
        return e27 = vd(e27.type, false);
      case 11:
        return e27 = vd(e27.type.render, false);
      case 1:
        return e27 = vd(e27.type, true);
      default:
        return "";
    }
  }
  function yd(e27) {
    if (null == e27)
      return null;
    if ("function" == typeof e27)
      return e27.displayName || e27.name || null;
    if ("string" == typeof e27)
      return e27;
    switch (e27) {
      case Jc:
        return "Fragment";
      case Zc:
        return "Portal";
      case td:
        return "Profiler";
      case ed:
        return "StrictMode";
      case id:
        return "Suspense";
      case ad:
        return "SuspenseList";
    }
    if ("object" == typeof e27)
      switch (e27.$$typeof) {
        case nd:
          return (e27.displayName || "Context") + ".Consumer";
        case rd:
          return (e27._context.displayName || "Context") + ".Provider";
        case od:
          var t2 = e27.render;
          return (e27 = e27.displayName) || (e27 = "" !== (e27 = t2.displayName || t2.name || "") ? "ForwardRef(" + e27 + ")" : "ForwardRef"), e27;
        case ld:
          return null !== (t2 = e27.displayName || null) ? t2 : yd(e27.type) || "Memo";
        case ud:
          t2 = e27._payload, e27 = e27._init;
          try {
            return yd(e27(t2));
          } catch (e28) {
          }
      }
    return null;
  }
  function bd(e27) {
    var t2 = e27.type;
    switch (e27.tag) {
      case 24:
        return "Cache";
      case 9:
        return (t2.displayName || "Context") + ".Consumer";
      case 10:
        return (t2._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return e27 = (e27 = t2.render).displayName || e27.name || "", t2.displayName || ("" !== e27 ? "ForwardRef(" + e27 + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return t2;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return yd(t2);
      case 8:
        return t2 === ed ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if ("function" == typeof t2)
          return t2.displayName || t2.name || null;
        if ("string" == typeof t2)
          return t2;
    }
    return null;
  }
  function Cd(e27) {
    switch (typeof e27) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
      case "object":
        return e27;
      default:
        return "";
    }
  }
  function xd(e27) {
    var t2 = e27.type;
    return (e27 = e27.nodeName) && "input" === e27.toLowerCase() && ("checkbox" === t2 || "radio" === t2);
  }
  function wd(e27) {
    e27._valueTracker || (e27._valueTracker = function(e28) {
      var t2 = xd(e28) ? "checked" : "value", r2 = Object.getOwnPropertyDescriptor(e28.constructor.prototype, t2), n2 = "" + e28[t2];
      if (!e28.hasOwnProperty(t2) && void 0 !== r2 && "function" == typeof r2.get && "function" == typeof r2.set) {
        var o2 = r2.get, i2 = r2.set;
        return Object.defineProperty(e28, t2, { configurable: true, get: function() {
          return o2.call(this);
        }, set: function(e29) {
          n2 = "" + e29, i2.call(this, e29);
        } }), Object.defineProperty(e28, t2, { enumerable: r2.enumerable }), { getValue: function() {
          return n2;
        }, setValue: function(e29) {
          n2 = "" + e29;
        }, stopTracking: function() {
          e28._valueTracker = null, delete e28[t2];
        } };
      }
    }(e27));
  }
  function kd(e27) {
    if (!e27)
      return false;
    var t2 = e27._valueTracker;
    if (!t2)
      return true;
    var r2 = t2.getValue(), n2 = "";
    return e27 && (n2 = xd(e27) ? e27.checked ? "true" : "false" : e27.value), (e27 = n2) !== r2 && (t2.setValue(e27), true);
  }
  function Sd(e27) {
    if (void 0 === (e27 = e27 || ("undefined" != typeof document ? document : void 0)))
      return null;
    try {
      return e27.activeElement || e27.body;
    } catch (t2) {
      return e27.body;
    }
  }
  function Ed(e27, t2) {
    var r2 = t2.checked;
    return pd({}, t2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != r2 ? r2 : e27._wrapperState.initialChecked });
  }
  function Td(e27, t2) {
    var r2 = null == t2.defaultValue ? "" : t2.defaultValue, n2 = null != t2.checked ? t2.checked : t2.defaultChecked;
    r2 = Cd(null != t2.value ? t2.value : r2), e27._wrapperState = { initialChecked: n2, initialValue: r2, controlled: "checkbox" === t2.type || "radio" === t2.type ? null != t2.checked : null != t2.value };
  }
  function Rd(e27, t2) {
    null != (t2 = t2.checked) && Xc(e27, "checked", t2, false);
  }
  function Od(e27, t2) {
    Rd(e27, t2);
    var r2 = Cd(t2.value), n2 = t2.type;
    if (null != r2)
      "number" === n2 ? (0 === r2 && "" === e27.value || e27.value != r2) && (e27.value = "" + r2) : e27.value !== "" + r2 && (e27.value = "" + r2);
    else if ("submit" === n2 || "reset" === n2)
      return void e27.removeAttribute("value");
    t2.hasOwnProperty("value") ? Pd(e27, t2.type, r2) : t2.hasOwnProperty("defaultValue") && Pd(e27, t2.type, Cd(t2.defaultValue)), null == t2.checked && null != t2.defaultChecked && (e27.defaultChecked = !!t2.defaultChecked);
  }
  function _d(e27, t2, r2) {
    if (t2.hasOwnProperty("value") || t2.hasOwnProperty("defaultValue")) {
      var n2 = t2.type;
      if (!("submit" !== n2 && "reset" !== n2 || void 0 !== t2.value && null !== t2.value))
        return;
      t2 = "" + e27._wrapperState.initialValue, r2 || t2 === e27.value || (e27.value = t2), e27.defaultValue = t2;
    }
    "" !== (r2 = e27.name) && (e27.name = ""), e27.defaultChecked = !!e27._wrapperState.initialChecked, "" !== r2 && (e27.name = r2);
  }
  function Pd(e27, t2, r2) {
    "number" === t2 && Sd(e27.ownerDocument) === e27 || (null == r2 ? e27.defaultValue = "" + e27._wrapperState.initialValue : e27.defaultValue !== "" + r2 && (e27.defaultValue = "" + r2));
  }
  var Md = Array.isArray;
  function Bd(e27, t2, r2, n2) {
    if (e27 = e27.options, t2) {
      t2 = {};
      for (var o2 = 0; o2 < r2.length; o2++)
        t2["$" + r2[o2]] = true;
      for (r2 = 0; r2 < e27.length; r2++)
        o2 = t2.hasOwnProperty("$" + e27[r2].value), e27[r2].selected !== o2 && (e27[r2].selected = o2), o2 && n2 && (e27[r2].defaultSelected = true);
    } else {
      for (r2 = "" + Cd(r2), t2 = null, o2 = 0; o2 < e27.length; o2++) {
        if (e27[o2].value === r2)
          return e27[o2].selected = true, void (n2 && (e27[o2].defaultSelected = true));
        null !== t2 || e27[o2].disabled || (t2 = e27[o2]);
      }
      null !== t2 && (t2.selected = true);
    }
  }
  function Ad(e27, t2) {
    if (null != t2.dangerouslySetInnerHTML)
      throw Error(jc(91));
    return pd({}, t2, { value: void 0, defaultValue: void 0, children: "" + e27._wrapperState.initialValue });
  }
  function Nd(e27, t2) {
    var r2 = t2.value;
    if (null == r2) {
      if (r2 = t2.children, t2 = t2.defaultValue, null != r2) {
        if (null != t2)
          throw Error(jc(92));
        if (Md(r2)) {
          if (1 < r2.length)
            throw Error(jc(93));
          r2 = r2[0];
        }
        t2 = r2;
      }
      null == t2 && (t2 = ""), r2 = t2;
    }
    e27._wrapperState = { initialValue: Cd(r2) };
  }
  function jd(e27, t2) {
    var r2 = Cd(t2.value), n2 = Cd(t2.defaultValue);
    null != r2 && ((r2 = "" + r2) !== e27.value && (e27.value = r2), null == t2.defaultValue && e27.defaultValue !== r2 && (e27.defaultValue = r2)), null != n2 && (e27.defaultValue = "" + n2);
  }
  function Dd(e27) {
    var t2 = e27.textContent;
    t2 === e27._wrapperState.initialValue && "" !== t2 && null !== t2 && (e27.value = t2);
  }
  function Ld(e27) {
    switch (e27) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function Id(e27, t2) {
    return null == e27 || "http://www.w3.org/1999/xhtml" === e27 ? Ld(t2) : "http://www.w3.org/2000/svg" === e27 && "foreignObject" === t2 ? "http://www.w3.org/1999/xhtml" : e27;
  }
  var zd;
  var Fd = function(e27) {
    return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(t2, r2, n2, o2) {
      MSApp.execUnsafeLocalFunction(function() {
        return e27(t2, r2);
      });
    } : e27;
  }(function(e27, t2) {
    if ("http://www.w3.org/2000/svg" !== e27.namespaceURI || "innerHTML" in e27)
      e27.innerHTML = t2;
    else {
      for ((zd = zd || document.createElement("div")).innerHTML = "<svg>" + t2.valueOf().toString() + "</svg>", t2 = zd.firstChild; e27.firstChild; )
        e27.removeChild(e27.firstChild);
      for (; t2.firstChild; )
        e27.appendChild(t2.firstChild);
    }
  });
  function Ud(e27, t2) {
    if (t2) {
      var r2 = e27.firstChild;
      if (r2 && r2 === e27.lastChild && 3 === r2.nodeType)
        return void (r2.nodeValue = t2);
    }
    e27.textContent = t2;
  }
  var Vd = { animationIterationCount: true, aspectRatio: true, borderImageOutset: true, borderImageSlice: true, borderImageWidth: true, boxFlex: true, boxFlexGroup: true, boxOrdinalGroup: true, columnCount: true, columns: true, flex: true, flexGrow: true, flexPositive: true, flexShrink: true, flexNegative: true, flexOrder: true, gridArea: true, gridRow: true, gridRowEnd: true, gridRowSpan: true, gridRowStart: true, gridColumn: true, gridColumnEnd: true, gridColumnSpan: true, gridColumnStart: true, fontWeight: true, lineClamp: true, lineHeight: true, opacity: true, order: true, orphans: true, tabSize: true, widows: true, zIndex: true, zoom: true, fillOpacity: true, floodOpacity: true, stopOpacity: true, strokeDasharray: true, strokeDashoffset: true, strokeMiterlimit: true, strokeOpacity: true, strokeWidth: true };
  var Wd = ["Webkit", "ms", "Moz", "O"];
  function Hd(e27, t2, r2) {
    return null == t2 || "boolean" == typeof t2 || "" === t2 ? "" : r2 || "number" != typeof t2 || 0 === t2 || Vd.hasOwnProperty(e27) && Vd[e27] ? ("" + t2).trim() : t2 + "px";
  }
  function $d(e27, t2) {
    for (var r2 in e27 = e27.style, t2)
      if (t2.hasOwnProperty(r2)) {
        var n2 = 0 === r2.indexOf("--"), o2 = Hd(r2, t2[r2], n2);
        "float" === r2 && (r2 = "cssFloat"), n2 ? e27.setProperty(r2, o2) : e27[r2] = o2;
      }
  }
  Object.keys(Vd).forEach(function(e27) {
    Wd.forEach(function(t2) {
      t2 = t2 + e27.charAt(0).toUpperCase() + e27.substring(1), Vd[t2] = Vd[e27];
    });
  });
  var qd = pd({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
  function Yd(e27, t2) {
    if (t2) {
      if (qd[e27] && (null != t2.children || null != t2.dangerouslySetInnerHTML))
        throw Error(jc(137, e27));
      if (null != t2.dangerouslySetInnerHTML) {
        if (null != t2.children)
          throw Error(jc(60));
        if ("object" != typeof t2.dangerouslySetInnerHTML || !("__html" in t2.dangerouslySetInnerHTML))
          throw Error(jc(61));
      }
      if (null != t2.style && "object" != typeof t2.style)
        throw Error(jc(62));
    }
  }
  function Gd(e27, t2) {
    if (-1 === e27.indexOf("-"))
      return "string" == typeof t2.is;
    switch (e27) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return false;
      default:
        return true;
    }
  }
  var Xd = null;
  function Qd(e27) {
    return (e27 = e27.target || e27.srcElement || window).correspondingUseElement && (e27 = e27.correspondingUseElement), 3 === e27.nodeType ? e27.parentNode : e27;
  }
  var Kd = null;
  var Zd = null;
  var Jd = null;
  function ef(e27) {
    if (e27 = $g(e27)) {
      if ("function" != typeof Kd)
        throw Error(jc(280));
      var t2 = e27.stateNode;
      t2 && (t2 = Yg(t2), Kd(e27.stateNode, e27.type, t2));
    }
  }
  function tf(e27) {
    Zd ? Jd ? Jd.push(e27) : Jd = [e27] : Zd = e27;
  }
  function rf() {
    if (Zd) {
      var e27 = Zd, t2 = Jd;
      if (Jd = Zd = null, ef(e27), t2)
        for (e27 = 0; e27 < t2.length; e27++)
          ef(t2[e27]);
    }
  }
  function nf(e27, t2) {
    return e27(t2);
  }
  function of() {
  }
  var af = false;
  function lf(e27, t2, r2) {
    if (af)
      return e27(t2, r2);
    af = true;
    try {
      return nf(e27, t2, r2);
    } finally {
      af = false, (null !== Zd || null !== Jd) && (of(), rf());
    }
  }
  function uf(e27, t2) {
    var r2 = e27.stateNode;
    if (null === r2)
      return null;
    var n2 = Yg(r2);
    if (null === n2)
      return null;
    r2 = n2[t2];
    e:
      switch (t2) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (n2 = !n2.disabled) || (n2 = !("button" === (e27 = e27.type) || "input" === e27 || "select" === e27 || "textarea" === e27)), e27 = !n2;
          break e;
        default:
          e27 = false;
      }
    if (e27)
      return null;
    if (r2 && "function" != typeof r2)
      throw Error(jc(231, t2, typeof r2));
    return r2;
  }
  var sf = false;
  if (Fc)
    try {
      cf = {};
      Object.defineProperty(cf, "passive", { get: function() {
        sf = true;
      } }), window.addEventListener("test", cf, cf), window.removeEventListener("test", cf, cf);
    } catch (Xa2) {
      sf = false;
    }
  var cf;
  function df(e27, t2, r2, n2, o2, i2, a2, l2, u2) {
    var s2 = Array.prototype.slice.call(arguments, 3);
    try {
      t2.apply(r2, s2);
    } catch (e28) {
      this.onError(e28);
    }
  }
  var ff = false;
  var pf = null;
  var hf = false;
  var gf = null;
  var vf = { onError: function(e27) {
    ff = true, pf = e27;
  } };
  function mf(e27, t2, r2, n2, o2, i2, a2, l2, u2) {
    ff = false, pf = null, df.apply(vf, arguments);
  }
  function yf(e27) {
    var t2 = e27, r2 = e27;
    if (e27.alternate)
      for (; t2.return; )
        t2 = t2.return;
    else {
      e27 = t2;
      do {
        0 != (4098 & (t2 = e27).flags) && (r2 = t2.return), e27 = t2.return;
      } while (e27);
    }
    return 3 === t2.tag ? r2 : null;
  }
  function bf(e27) {
    if (13 === e27.tag) {
      var t2 = e27.memoizedState;
      if (null === t2 && (null !== (e27 = e27.alternate) && (t2 = e27.memoizedState)), null !== t2)
        return t2.dehydrated;
    }
    return null;
  }
  function Cf(e27) {
    if (yf(e27) !== e27)
      throw Error(jc(188));
  }
  function xf(e27) {
    return e27 = function(e28) {
      var t2 = e28.alternate;
      if (!t2) {
        if (null === (t2 = yf(e28)))
          throw Error(jc(188));
        return t2 !== e28 ? null : e28;
      }
      for (var r2 = e28, n2 = t2; ; ) {
        var o2 = r2.return;
        if (null === o2)
          break;
        var i2 = o2.alternate;
        if (null === i2) {
          if (null !== (n2 = o2.return)) {
            r2 = n2;
            continue;
          }
          break;
        }
        if (o2.child === i2.child) {
          for (i2 = o2.child; i2; ) {
            if (i2 === r2)
              return Cf(o2), e28;
            if (i2 === n2)
              return Cf(o2), t2;
            i2 = i2.sibling;
          }
          throw Error(jc(188));
        }
        if (r2.return !== n2.return)
          r2 = o2, n2 = i2;
        else {
          for (var a2 = false, l2 = o2.child; l2; ) {
            if (l2 === r2) {
              a2 = true, r2 = o2, n2 = i2;
              break;
            }
            if (l2 === n2) {
              a2 = true, n2 = o2, r2 = i2;
              break;
            }
            l2 = l2.sibling;
          }
          if (!a2) {
            for (l2 = i2.child; l2; ) {
              if (l2 === r2) {
                a2 = true, r2 = i2, n2 = o2;
                break;
              }
              if (l2 === n2) {
                a2 = true, n2 = i2, r2 = o2;
                break;
              }
              l2 = l2.sibling;
            }
            if (!a2)
              throw Error(jc(189));
          }
        }
        if (r2.alternate !== n2)
          throw Error(jc(190));
      }
      if (3 !== r2.tag)
        throw Error(jc(188));
      return r2.stateNode.current === r2 ? e28 : t2;
    }(e27), null !== e27 ? wf(e27) : null;
  }
  function wf(e27) {
    if (5 === e27.tag || 6 === e27.tag)
      return e27;
    for (e27 = e27.child; null !== e27; ) {
      var t2 = wf(e27);
      if (null !== t2)
        return t2;
      e27 = e27.sibling;
    }
    return null;
  }
  var kf = Nc.unstable_scheduleCallback;
  var Sf = Nc.unstable_cancelCallback;
  var Ef = Nc.unstable_shouldYield;
  var Tf = Nc.unstable_requestPaint;
  var Rf = Nc.unstable_now;
  var Of = Nc.unstable_getCurrentPriorityLevel;
  var _f = Nc.unstable_ImmediatePriority;
  var Pf = Nc.unstable_UserBlockingPriority;
  var Mf = Nc.unstable_NormalPriority;
  var Bf = Nc.unstable_LowPriority;
  var Af = Nc.unstable_IdlePriority;
  var Nf = null;
  var jf = null;
  var Df = Math.clz32 ? Math.clz32 : function(e27) {
    return 0 === (e27 >>>= 0) ? 32 : 31 - (Lf(e27) / If | 0) | 0;
  };
  var Lf = Math.log;
  var If = Math.LN2;
  var zf = 64;
  var Ff = 4194304;
  function Uf(e27) {
    switch (e27 & -e27) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return 4194240 & e27;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return 130023424 & e27;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return e27;
    }
  }
  function Vf(e27, t2) {
    var r2 = e27.pendingLanes;
    if (0 === r2)
      return 0;
    var n2 = 0, o2 = e27.suspendedLanes, i2 = e27.pingedLanes, a2 = 268435455 & r2;
    if (0 !== a2) {
      var l2 = a2 & ~o2;
      0 !== l2 ? n2 = Uf(l2) : 0 !== (i2 &= a2) && (n2 = Uf(i2));
    } else
      0 !== (a2 = r2 & ~o2) ? n2 = Uf(a2) : 0 !== i2 && (n2 = Uf(i2));
    if (0 === n2)
      return 0;
    if (0 !== t2 && t2 !== n2 && 0 == (t2 & o2) && ((o2 = n2 & -n2) >= (i2 = t2 & -t2) || 16 === o2 && 0 != (4194240 & i2)))
      return t2;
    if (0 != (4 & n2) && (n2 |= 16 & r2), 0 !== (t2 = e27.entangledLanes))
      for (e27 = e27.entanglements, t2 &= n2; 0 < t2; )
        o2 = 1 << (r2 = 31 - Df(t2)), n2 |= e27[r2], t2 &= ~o2;
    return n2;
  }
  function Wf(e27, t2) {
    switch (e27) {
      case 1:
      case 2:
      case 4:
        return t2 + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return t2 + 5e3;
      default:
        return -1;
    }
  }
  function Hf(e27) {
    return 0 !== (e27 = -1073741825 & e27.pendingLanes) ? e27 : 1073741824 & e27 ? 1073741824 : 0;
  }
  function $f(e27) {
    for (var t2 = [], r2 = 0; 31 > r2; r2++)
      t2.push(e27);
    return t2;
  }
  function qf(e27, t2, r2) {
    e27.pendingLanes |= t2, 536870912 !== t2 && (e27.suspendedLanes = 0, e27.pingedLanes = 0), (e27 = e27.eventTimes)[t2 = 31 - Df(t2)] = r2;
  }
  function Yf(e27, t2) {
    var r2 = e27.entangledLanes |= t2;
    for (e27 = e27.entanglements; r2; ) {
      var n2 = 31 - Df(r2), o2 = 1 << n2;
      o2 & t2 | e27[n2] & t2 && (e27[n2] |= t2), r2 &= ~o2;
    }
  }
  var Gf = 0;
  function Xf(e27) {
    return 1 < (e27 &= -e27) ? 4 < e27 ? 0 != (268435455 & e27) ? 16 : 536870912 : 4 : 1;
  }
  var Qf;
  var Kf;
  var Zf;
  var Jf;
  var ep;
  var tp = false;
  var rp = [];
  var np = null;
  var op = null;
  var ip = null;
  var ap = /* @__PURE__ */ new Map();
  var lp = /* @__PURE__ */ new Map();
  var up = [];
  var sp = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function cp(e27, t2) {
    switch (e27) {
      case "focusin":
      case "focusout":
        np = null;
        break;
      case "dragenter":
      case "dragleave":
        op = null;
        break;
      case "mouseover":
      case "mouseout":
        ip = null;
        break;
      case "pointerover":
      case "pointerout":
        ap.delete(t2.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        lp.delete(t2.pointerId);
    }
  }
  function dp(e27, t2, r2, n2, o2, i2) {
    return null === e27 || e27.nativeEvent !== i2 ? (e27 = { blockedOn: t2, domEventName: r2, eventSystemFlags: n2, nativeEvent: i2, targetContainers: [o2] }, null !== t2 && (null !== (t2 = $g(t2)) && Kf(t2)), e27) : (e27.eventSystemFlags |= n2, t2 = e27.targetContainers, null !== o2 && -1 === t2.indexOf(o2) && t2.push(o2), e27);
  }
  function fp(e27) {
    var t2 = Hg(e27.target);
    if (null !== t2) {
      var r2 = yf(t2);
      if (null !== r2) {
        if (13 === (t2 = r2.tag)) {
          if (null !== (t2 = bf(r2)))
            return e27.blockedOn = t2, void ep(e27.priority, function() {
              Zf(r2);
            });
        } else if (3 === t2 && r2.stateNode.current.memoizedState.isDehydrated)
          return void (e27.blockedOn = 3 === r2.tag ? r2.stateNode.containerInfo : null);
      }
    }
    e27.blockedOn = null;
  }
  function pp(e27) {
    if (null !== e27.blockedOn)
      return false;
    for (var t2 = e27.targetContainers; 0 < t2.length; ) {
      var r2 = kp(e27.domEventName, e27.eventSystemFlags, t2[0], e27.nativeEvent);
      if (null !== r2)
        return null !== (t2 = $g(r2)) && Kf(t2), e27.blockedOn = r2, false;
      var n2 = new (r2 = e27.nativeEvent).constructor(r2.type, r2);
      Xd = n2, r2.target.dispatchEvent(n2), Xd = null, t2.shift();
    }
    return true;
  }
  function hp(e27, t2, r2) {
    pp(e27) && r2.delete(t2);
  }
  function gp() {
    tp = false, null !== np && pp(np) && (np = null), null !== op && pp(op) && (op = null), null !== ip && pp(ip) && (ip = null), ap.forEach(hp), lp.forEach(hp);
  }
  function vp(e27, t2) {
    e27.blockedOn === t2 && (e27.blockedOn = null, tp || (tp = true, Nc.unstable_scheduleCallback(Nc.unstable_NormalPriority, gp)));
  }
  function mp(e27) {
    function t2(t3) {
      return vp(t3, e27);
    }
    if (0 < rp.length) {
      vp(rp[0], e27);
      for (var r2 = 1; r2 < rp.length; r2++) {
        var n2 = rp[r2];
        n2.blockedOn === e27 && (n2.blockedOn = null);
      }
    }
    for (null !== np && vp(np, e27), null !== op && vp(op, e27), null !== ip && vp(ip, e27), ap.forEach(t2), lp.forEach(t2), r2 = 0; r2 < up.length; r2++)
      (n2 = up[r2]).blockedOn === e27 && (n2.blockedOn = null);
    for (; 0 < up.length && null === (r2 = up[0]).blockedOn; )
      fp(r2), null === r2.blockedOn && up.shift();
  }
  var yp = Qc.ReactCurrentBatchConfig;
  function bp(e27, t2, r2, n2) {
    var o2 = Gf, i2 = yp.transition;
    yp.transition = null;
    try {
      Gf = 1, xp(e27, t2, r2, n2);
    } finally {
      Gf = o2, yp.transition = i2;
    }
  }
  function Cp(e27, t2, r2, n2) {
    var o2 = Gf, i2 = yp.transition;
    yp.transition = null;
    try {
      Gf = 4, xp(e27, t2, r2, n2);
    } finally {
      Gf = o2, yp.transition = i2;
    }
  }
  function xp(e27, t2, r2, n2) {
    var o2 = kp(e27, t2, r2, n2);
    if (null === o2)
      mg(e27, t2, n2, wp, r2), cp(e27, n2);
    else if (function(e28, t3, r3, n3, o3) {
      switch (t3) {
        case "focusin":
          return np = dp(np, e28, t3, r3, n3, o3), true;
        case "dragenter":
          return op = dp(op, e28, t3, r3, n3, o3), true;
        case "mouseover":
          return ip = dp(ip, e28, t3, r3, n3, o3), true;
        case "pointerover":
          var i3 = o3.pointerId;
          return ap.set(i3, dp(ap.get(i3) || null, e28, t3, r3, n3, o3)), true;
        case "gotpointercapture":
          return i3 = o3.pointerId, lp.set(i3, dp(lp.get(i3) || null, e28, t3, r3, n3, o3)), true;
      }
      return false;
    }(o2, e27, t2, r2, n2))
      n2.stopPropagation();
    else if (cp(e27, n2), 4 & t2 && -1 < sp.indexOf(e27)) {
      for (; null !== o2; ) {
        var i2 = $g(o2);
        if (null !== i2 && Qf(i2), null === (i2 = kp(e27, t2, r2, n2)) && mg(e27, t2, n2, wp, r2), i2 === o2)
          break;
        o2 = i2;
      }
      null !== o2 && n2.stopPropagation();
    } else
      mg(e27, t2, n2, null, r2);
  }
  var wp = null;
  function kp(e27, t2, r2, n2) {
    if (wp = null, null !== (e27 = Hg(e27 = Qd(n2))))
      if (null === (t2 = yf(e27)))
        e27 = null;
      else if (13 === (r2 = t2.tag)) {
        if (null !== (e27 = bf(t2)))
          return e27;
        e27 = null;
      } else if (3 === r2) {
        if (t2.stateNode.current.memoizedState.isDehydrated)
          return 3 === t2.tag ? t2.stateNode.containerInfo : null;
        e27 = null;
      } else
        t2 !== e27 && (e27 = null);
    return wp = e27, null;
  }
  function Sp(e27) {
    switch (e27) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (Of()) {
          case _f:
            return 1;
          case Pf:
            return 4;
          case Mf:
          case Bf:
            return 16;
          case Af:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var Ep = null;
  var Tp = null;
  var Rp = null;
  function Op() {
    if (Rp)
      return Rp;
    var e27, t2, r2 = Tp, n2 = r2.length, o2 = "value" in Ep ? Ep.value : Ep.textContent, i2 = o2.length;
    for (e27 = 0; e27 < n2 && r2[e27] === o2[e27]; e27++)
      ;
    var a2 = n2 - e27;
    for (t2 = 1; t2 <= a2 && r2[n2 - t2] === o2[i2 - t2]; t2++)
      ;
    return Rp = o2.slice(e27, 1 < t2 ? 1 - t2 : void 0);
  }
  function _p(e27) {
    var t2 = e27.keyCode;
    return "charCode" in e27 ? 0 === (e27 = e27.charCode) && 13 === t2 && (e27 = 13) : e27 = t2, 10 === e27 && (e27 = 13), 32 <= e27 || 13 === e27 ? e27 : 0;
  }
  function Pp() {
    return true;
  }
  function Mp() {
    return false;
  }
  function Bp(e27) {
    function t2(t3, r2, n2, o2, i2) {
      for (var a2 in this._reactName = t3, this._targetInst = n2, this.type = r2, this.nativeEvent = o2, this.target = i2, this.currentTarget = null, e27)
        e27.hasOwnProperty(a2) && (t3 = e27[a2], this[a2] = t3 ? t3(o2) : o2[a2]);
      return this.isDefaultPrevented = (null != o2.defaultPrevented ? o2.defaultPrevented : false === o2.returnValue) ? Pp : Mp, this.isPropagationStopped = Mp, this;
    }
    return pd(t2.prototype, { preventDefault: function() {
      this.defaultPrevented = true;
      var e28 = this.nativeEvent;
      e28 && (e28.preventDefault ? e28.preventDefault() : "unknown" != typeof e28.returnValue && (e28.returnValue = false), this.isDefaultPrevented = Pp);
    }, stopPropagation: function() {
      var e28 = this.nativeEvent;
      e28 && (e28.stopPropagation ? e28.stopPropagation() : "unknown" != typeof e28.cancelBubble && (e28.cancelBubble = true), this.isPropagationStopped = Pp);
    }, persist: function() {
    }, isPersistent: Pp }), t2;
  }
  var Ap;
  var Np;
  var jp;
  var Dp = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(e27) {
    return e27.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 };
  var Lp = Bp(Dp);
  var Ip = pd({}, Dp, { view: 0, detail: 0 });
  var zp = Bp(Ip);
  var Fp = pd({}, Ip, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Zp, button: 0, buttons: 0, relatedTarget: function(e27) {
    return void 0 === e27.relatedTarget ? e27.fromElement === e27.srcElement ? e27.toElement : e27.fromElement : e27.relatedTarget;
  }, movementX: function(e27) {
    return "movementX" in e27 ? e27.movementX : (e27 !== jp && (jp && "mousemove" === e27.type ? (Ap = e27.screenX - jp.screenX, Np = e27.screenY - jp.screenY) : Np = Ap = 0, jp = e27), Ap);
  }, movementY: function(e27) {
    return "movementY" in e27 ? e27.movementY : Np;
  } });
  var Up = Bp(Fp);
  var Vp = Bp(pd({}, Fp, { dataTransfer: 0 }));
  var Wp = Bp(pd({}, Ip, { relatedTarget: 0 }));
  var Hp = Bp(pd({}, Dp, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }));
  var $p = pd({}, Dp, { clipboardData: function(e27) {
    return "clipboardData" in e27 ? e27.clipboardData : window.clipboardData;
  } });
  var qp = Bp($p);
  var Yp = Bp(pd({}, Dp, { data: 0 }));
  var Gp = { Esc: "Escape", Spacebar: " ", Left: "ArrowLeft", Up: "ArrowUp", Right: "ArrowRight", Down: "ArrowDown", Del: "Delete", Win: "OS", Menu: "ContextMenu", Apps: "ContextMenu", Scroll: "ScrollLock", MozPrintableKey: "Unidentified" };
  var Xp = { 8: "Backspace", 9: "Tab", 12: "Clear", 13: "Enter", 16: "Shift", 17: "Control", 18: "Alt", 19: "Pause", 20: "CapsLock", 27: "Escape", 32: " ", 33: "PageUp", 34: "PageDown", 35: "End", 36: "Home", 37: "ArrowLeft", 38: "ArrowUp", 39: "ArrowRight", 40: "ArrowDown", 45: "Insert", 46: "Delete", 112: "F1", 113: "F2", 114: "F3", 115: "F4", 116: "F5", 117: "F6", 118: "F7", 119: "F8", 120: "F9", 121: "F10", 122: "F11", 123: "F12", 144: "NumLock", 145: "ScrollLock", 224: "Meta" };
  var Qp = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function Kp(e27) {
    var t2 = this.nativeEvent;
    return t2.getModifierState ? t2.getModifierState(e27) : !!(e27 = Qp[e27]) && !!t2[e27];
  }
  function Zp() {
    return Kp;
  }
  var Jp = pd({}, Ip, { key: function(e27) {
    if (e27.key) {
      var t2 = Gp[e27.key] || e27.key;
      if ("Unidentified" !== t2)
        return t2;
    }
    return "keypress" === e27.type ? 13 === (e27 = _p(e27)) ? "Enter" : String.fromCharCode(e27) : "keydown" === e27.type || "keyup" === e27.type ? Xp[e27.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Zp, charCode: function(e27) {
    return "keypress" === e27.type ? _p(e27) : 0;
  }, keyCode: function(e27) {
    return "keydown" === e27.type || "keyup" === e27.type ? e27.keyCode : 0;
  }, which: function(e27) {
    return "keypress" === e27.type ? _p(e27) : "keydown" === e27.type || "keyup" === e27.type ? e27.keyCode : 0;
  } });
  var eh = Bp(Jp);
  var th = Bp(pd({}, Fp, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }));
  var rh = Bp(pd({}, Ip, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Zp }));
  var nh = Bp(pd({}, Dp, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }));
  var oh = pd({}, Fp, { deltaX: function(e27) {
    return "deltaX" in e27 ? e27.deltaX : "wheelDeltaX" in e27 ? -e27.wheelDeltaX : 0;
  }, deltaY: function(e27) {
    return "deltaY" in e27 ? e27.deltaY : "wheelDeltaY" in e27 ? -e27.wheelDeltaY : "wheelDelta" in e27 ? -e27.wheelDelta : 0;
  }, deltaZ: 0, deltaMode: 0 });
  var ih = Bp(oh);
  var ah = [9, 13, 27, 32];
  var lh = Fc && "CompositionEvent" in window;
  var uh = null;
  Fc && "documentMode" in document && (uh = document.documentMode);
  var sh = Fc && "TextEvent" in window && !uh;
  var ch = Fc && (!lh || uh && 8 < uh && 11 >= uh);
  var dh = String.fromCharCode(32);
  var fh = false;
  function ph(e27, t2) {
    switch (e27) {
      case "keyup":
        return -1 !== ah.indexOf(t2.keyCode);
      case "keydown":
        return 229 !== t2.keyCode;
      case "keypress":
      case "mousedown":
      case "focusout":
        return true;
      default:
        return false;
    }
  }
  function hh(e27) {
    return "object" == typeof (e27 = e27.detail) && "data" in e27 ? e27.data : null;
  }
  var gh = false;
  var vh = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
  function mh(e27) {
    var t2 = e27 && e27.nodeName && e27.nodeName.toLowerCase();
    return "input" === t2 ? !!vh[e27.type] : "textarea" === t2;
  }
  function yh(e27, t2, r2, n2) {
    tf(n2), 0 < (t2 = bg(t2, "onChange")).length && (r2 = new Lp("onChange", "change", null, r2, n2), e27.push({ event: r2, listeners: t2 }));
  }
  var bh = null;
  var Ch = null;
  function xh(e27) {
    dg(e27, 0);
  }
  function wh(e27) {
    if (kd(qg(e27)))
      return e27;
  }
  function kh(e27, t2) {
    if ("change" === e27)
      return t2;
  }
  var Sh = false;
  if (Fc) {
    if (Fc) {
      Th = "oninput" in document;
      if (!Th) {
        Rh = document.createElement("div");
        Rh.setAttribute("oninput", "return;"), Th = "function" == typeof Rh.oninput;
      }
      Eh = Th;
    } else
      Eh = false;
    Sh = Eh && (!document.documentMode || 9 < document.documentMode);
  }
  var Eh;
  var Th;
  var Rh;
  function Oh() {
    bh && (bh.detachEvent("onpropertychange", _h), Ch = bh = null);
  }
  function _h(e27) {
    if ("value" === e27.propertyName && wh(Ch)) {
      var t2 = [];
      yh(t2, Ch, e27, Qd(e27)), lf(xh, t2);
    }
  }
  function Ph(e27, t2, r2) {
    "focusin" === e27 ? (Oh(), Ch = r2, (bh = t2).attachEvent("onpropertychange", _h)) : "focusout" === e27 && Oh();
  }
  function Mh(e27) {
    if ("selectionchange" === e27 || "keyup" === e27 || "keydown" === e27)
      return wh(Ch);
  }
  function Bh(e27, t2) {
    if ("click" === e27)
      return wh(t2);
  }
  function Ah(e27, t2) {
    if ("input" === e27 || "change" === e27)
      return wh(t2);
  }
  var Nh = "function" == typeof Object.is ? Object.is : function(e27, t2) {
    return e27 === t2 && (0 !== e27 || 1 / e27 == 1 / t2) || e27 != e27 && t2 != t2;
  };
  function jh(e27, t2) {
    if (Nh(e27, t2))
      return true;
    if ("object" != typeof e27 || null === e27 || "object" != typeof t2 || null === t2)
      return false;
    var r2 = Object.keys(e27), n2 = Object.keys(t2);
    if (r2.length !== n2.length)
      return false;
    for (n2 = 0; n2 < r2.length; n2++) {
      var o2 = r2[n2];
      if (!Uc.call(t2, o2) || !Nh(e27[o2], t2[o2]))
        return false;
    }
    return true;
  }
  function Dh(e27) {
    for (; e27 && e27.firstChild; )
      e27 = e27.firstChild;
    return e27;
  }
  function Lh(e27, t2) {
    var r2, n2 = Dh(e27);
    for (e27 = 0; n2; ) {
      if (3 === n2.nodeType) {
        if (r2 = e27 + n2.textContent.length, e27 <= t2 && r2 >= t2)
          return { node: n2, offset: t2 - e27 };
        e27 = r2;
      }
      e: {
        for (; n2; ) {
          if (n2.nextSibling) {
            n2 = n2.nextSibling;
            break e;
          }
          n2 = n2.parentNode;
        }
        n2 = void 0;
      }
      n2 = Dh(n2);
    }
  }
  function Ih(e27, t2) {
    return !(!e27 || !t2) && (e27 === t2 || (!e27 || 3 !== e27.nodeType) && (t2 && 3 === t2.nodeType ? Ih(e27, t2.parentNode) : "contains" in e27 ? e27.contains(t2) : !!e27.compareDocumentPosition && !!(16 & e27.compareDocumentPosition(t2))));
  }
  function zh() {
    for (var e27 = window, t2 = Sd(); t2 instanceof e27.HTMLIFrameElement; ) {
      try {
        var r2 = "string" == typeof t2.contentWindow.location.href;
      } catch (e28) {
        r2 = false;
      }
      if (!r2)
        break;
      t2 = Sd((e27 = t2.contentWindow).document);
    }
    return t2;
  }
  function Fh(e27) {
    var t2 = e27 && e27.nodeName && e27.nodeName.toLowerCase();
    return t2 && ("input" === t2 && ("text" === e27.type || "search" === e27.type || "tel" === e27.type || "url" === e27.type || "password" === e27.type) || "textarea" === t2 || "true" === e27.contentEditable);
  }
  function Uh(e27) {
    var t2 = zh(), r2 = e27.focusedElem, n2 = e27.selectionRange;
    if (t2 !== r2 && r2 && r2.ownerDocument && Ih(r2.ownerDocument.documentElement, r2)) {
      if (null !== n2 && Fh(r2)) {
        if (t2 = n2.start, void 0 === (e27 = n2.end) && (e27 = t2), "selectionStart" in r2)
          r2.selectionStart = t2, r2.selectionEnd = Math.min(e27, r2.value.length);
        else if ((e27 = (t2 = r2.ownerDocument || document) && t2.defaultView || window).getSelection) {
          e27 = e27.getSelection();
          var o2 = r2.textContent.length, i2 = Math.min(n2.start, o2);
          n2 = void 0 === n2.end ? i2 : Math.min(n2.end, o2), !e27.extend && i2 > n2 && (o2 = n2, n2 = i2, i2 = o2), o2 = Lh(r2, i2);
          var a2 = Lh(r2, n2);
          o2 && a2 && (1 !== e27.rangeCount || e27.anchorNode !== o2.node || e27.anchorOffset !== o2.offset || e27.focusNode !== a2.node || e27.focusOffset !== a2.offset) && ((t2 = t2.createRange()).setStart(o2.node, o2.offset), e27.removeAllRanges(), i2 > n2 ? (e27.addRange(t2), e27.extend(a2.node, a2.offset)) : (t2.setEnd(a2.node, a2.offset), e27.addRange(t2)));
        }
      }
      for (t2 = [], e27 = r2; e27 = e27.parentNode; )
        1 === e27.nodeType && t2.push({ element: e27, left: e27.scrollLeft, top: e27.scrollTop });
      for ("function" == typeof r2.focus && r2.focus(), r2 = 0; r2 < t2.length; r2++)
        (e27 = t2[r2]).element.scrollLeft = e27.left, e27.element.scrollTop = e27.top;
    }
  }
  var Vh = Fc && "documentMode" in document && 11 >= document.documentMode;
  var Wh = null;
  var Hh = null;
  var $h = null;
  var qh = false;
  function Yh(e27, t2, r2) {
    var n2 = r2.window === r2 ? r2.document : 9 === r2.nodeType ? r2 : r2.ownerDocument;
    qh || null == Wh || Wh !== Sd(n2) || ("selectionStart" in (n2 = Wh) && Fh(n2) ? n2 = { start: n2.selectionStart, end: n2.selectionEnd } : n2 = { anchorNode: (n2 = (n2.ownerDocument && n2.ownerDocument.defaultView || window).getSelection()).anchorNode, anchorOffset: n2.anchorOffset, focusNode: n2.focusNode, focusOffset: n2.focusOffset }, $h && jh($h, n2) || ($h = n2, 0 < (n2 = bg(Hh, "onSelect")).length && (t2 = new Lp("onSelect", "select", null, t2, r2), e27.push({ event: t2, listeners: n2 }), t2.target = Wh)));
  }
  function Gh(e27, t2) {
    var r2 = {};
    return r2[e27.toLowerCase()] = t2.toLowerCase(), r2["Webkit" + e27] = "webkit" + t2, r2["Moz" + e27] = "moz" + t2, r2;
  }
  var Xh = { animationend: Gh("Animation", "AnimationEnd"), animationiteration: Gh("Animation", "AnimationIteration"), animationstart: Gh("Animation", "AnimationStart"), transitionend: Gh("Transition", "TransitionEnd") };
  var Qh = {};
  var Kh = {};
  function Zh(e27) {
    if (Qh[e27])
      return Qh[e27];
    if (!Xh[e27])
      return e27;
    var t2, r2 = Xh[e27];
    for (t2 in r2)
      if (r2.hasOwnProperty(t2) && t2 in Kh)
        return Qh[e27] = r2[t2];
    return e27;
  }
  Fc && (Kh = document.createElement("div").style, "AnimationEvent" in window || (delete Xh.animationend.animation, delete Xh.animationiteration.animation, delete Xh.animationstart.animation), "TransitionEvent" in window || delete Xh.transitionend.transition);
  var Jh = Zh("animationend");
  var eg = Zh("animationiteration");
  var tg = Zh("animationstart");
  var rg = Zh("transitionend");
  var ng = /* @__PURE__ */ new Map();
  var og = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function ig(e27, t2) {
    ng.set(e27, t2), Ic(t2, [e27]);
  }
  for (ag = 0; ag < og.length; ag++) {
    lg = og[ag];
    ig(lg.toLowerCase(), "on" + (lg[0].toUpperCase() + lg.slice(1)));
  }
  var lg;
  var ag;
  ig(Jh, "onAnimationEnd"), ig(eg, "onAnimationIteration"), ig(tg, "onAnimationStart"), ig("dblclick", "onDoubleClick"), ig("focusin", "onFocus"), ig("focusout", "onBlur"), ig(rg, "onTransitionEnd"), zc("onMouseEnter", ["mouseout", "mouseover"]), zc("onMouseLeave", ["mouseout", "mouseover"]), zc("onPointerEnter", ["pointerout", "pointerover"]), zc("onPointerLeave", ["pointerout", "pointerover"]), Ic("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), Ic("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), Ic("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), Ic("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), Ic("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), Ic("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var ug = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");
  var sg = new Set("cancel close invalid load scroll toggle".split(" ").concat(ug));
  function cg(e27, t2, r2) {
    var n2 = e27.type || "unknown-event";
    e27.currentTarget = r2, function(e28, t3, r3, n3, o2, i2, a2, l2, u2) {
      if (mf.apply(this, arguments), ff) {
        if (!ff)
          throw Error(jc(198));
        var s2 = pf;
        ff = false, pf = null, hf || (hf = true, gf = s2);
      }
    }(n2, t2, void 0, e27), e27.currentTarget = null;
  }
  function dg(e27, t2) {
    t2 = 0 != (4 & t2);
    for (var r2 = 0; r2 < e27.length; r2++) {
      var n2 = e27[r2], o2 = n2.event;
      n2 = n2.listeners;
      e: {
        var i2 = void 0;
        if (t2)
          for (var a2 = n2.length - 1; 0 <= a2; a2--) {
            var l2 = n2[a2], u2 = l2.instance, s2 = l2.currentTarget;
            if (l2 = l2.listener, u2 !== i2 && o2.isPropagationStopped())
              break e;
            cg(o2, l2, s2), i2 = u2;
          }
        else
          for (a2 = 0; a2 < n2.length; a2++) {
            if (u2 = (l2 = n2[a2]).instance, s2 = l2.currentTarget, l2 = l2.listener, u2 !== i2 && o2.isPropagationStopped())
              break e;
            cg(o2, l2, s2), i2 = u2;
          }
      }
    }
    if (hf)
      throw e27 = gf, hf = false, gf = null, e27;
  }
  function fg(e27, t2) {
    var r2 = t2[Ug];
    void 0 === r2 && (r2 = t2[Ug] = /* @__PURE__ */ new Set());
    var n2 = e27 + "__bubble";
    r2.has(n2) || (vg(t2, e27, 2, false), r2.add(n2));
  }
  function pg(e27, t2, r2) {
    var n2 = 0;
    t2 && (n2 |= 4), vg(r2, e27, n2, t2);
  }
  var hg = "_reactListening" + Math.random().toString(36).slice(2);
  function gg(e27) {
    if (!e27[hg]) {
      e27[hg] = true, Dc.forEach(function(t3) {
        "selectionchange" !== t3 && (sg.has(t3) || pg(t3, false, e27), pg(t3, true, e27));
      });
      var t2 = 9 === e27.nodeType ? e27 : e27.ownerDocument;
      null === t2 || t2[hg] || (t2[hg] = true, pg("selectionchange", false, t2));
    }
  }
  function vg(e27, t2, r2, n2) {
    switch (Sp(t2)) {
      case 1:
        var o2 = bp;
        break;
      case 4:
        o2 = Cp;
        break;
      default:
        o2 = xp;
    }
    r2 = o2.bind(null, t2, r2, e27), o2 = void 0, !sf || "touchstart" !== t2 && "touchmove" !== t2 && "wheel" !== t2 || (o2 = true), n2 ? void 0 !== o2 ? e27.addEventListener(t2, r2, { capture: true, passive: o2 }) : e27.addEventListener(t2, r2, true) : void 0 !== o2 ? e27.addEventListener(t2, r2, { passive: o2 }) : e27.addEventListener(t2, r2, false);
  }
  function mg(e27, t2, r2, n2, o2) {
    var i2 = n2;
    if (0 == (1 & t2) && 0 == (2 & t2) && null !== n2)
      e:
        for (; ; ) {
          if (null === n2)
            return;
          var a2 = n2.tag;
          if (3 === a2 || 4 === a2) {
            var l2 = n2.stateNode.containerInfo;
            if (l2 === o2 || 8 === l2.nodeType && l2.parentNode === o2)
              break;
            if (4 === a2)
              for (a2 = n2.return; null !== a2; ) {
                var u2 = a2.tag;
                if ((3 === u2 || 4 === u2) && ((u2 = a2.stateNode.containerInfo) === o2 || 8 === u2.nodeType && u2.parentNode === o2))
                  return;
                a2 = a2.return;
              }
            for (; null !== l2; ) {
              if (null === (a2 = Hg(l2)))
                return;
              if (5 === (u2 = a2.tag) || 6 === u2) {
                n2 = i2 = a2;
                continue e;
              }
              l2 = l2.parentNode;
            }
          }
          n2 = n2.return;
        }
    lf(function() {
      var n3 = i2, o3 = Qd(r2), a3 = [];
      e: {
        var l3 = ng.get(e27);
        if (void 0 !== l3) {
          var u3 = Lp, s2 = e27;
          switch (e27) {
            case "keypress":
              if (0 === _p(r2))
                break e;
            case "keydown":
            case "keyup":
              u3 = eh;
              break;
            case "focusin":
              s2 = "focus", u3 = Wp;
              break;
            case "focusout":
              s2 = "blur", u3 = Wp;
              break;
            case "beforeblur":
            case "afterblur":
              u3 = Wp;
              break;
            case "click":
              if (2 === r2.button)
                break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              u3 = Up;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              u3 = Vp;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              u3 = rh;
              break;
            case Jh:
            case eg:
            case tg:
              u3 = Hp;
              break;
            case rg:
              u3 = nh;
              break;
            case "scroll":
              u3 = zp;
              break;
            case "wheel":
              u3 = ih;
              break;
            case "copy":
            case "cut":
            case "paste":
              u3 = qp;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              u3 = th;
          }
          var c2 = 0 != (4 & t2), d2 = !c2 && "scroll" === e27, f2 = c2 ? null !== l3 ? l3 + "Capture" : null : l3;
          c2 = [];
          for (var p2, h2 = n3; null !== h2; ) {
            var g2 = (p2 = h2).stateNode;
            if (5 === p2.tag && null !== g2 && (p2 = g2, null !== f2 && (null != (g2 = uf(h2, f2)) && c2.push(yg(h2, g2, p2)))), d2)
              break;
            h2 = h2.return;
          }
          0 < c2.length && (l3 = new u3(l3, s2, null, r2, o3), a3.push({ event: l3, listeners: c2 }));
        }
      }
      if (0 == (7 & t2)) {
        if (u3 = "mouseout" === e27 || "pointerout" === e27, (!(l3 = "mouseover" === e27 || "pointerover" === e27) || r2 === Xd || !(s2 = r2.relatedTarget || r2.fromElement) || !Hg(s2) && !s2[Fg]) && (u3 || l3) && (l3 = o3.window === o3 ? o3 : (l3 = o3.ownerDocument) ? l3.defaultView || l3.parentWindow : window, u3 ? (u3 = n3, null !== (s2 = (s2 = r2.relatedTarget || r2.toElement) ? Hg(s2) : null) && (s2 !== (d2 = yf(s2)) || 5 !== s2.tag && 6 !== s2.tag) && (s2 = null)) : (u3 = null, s2 = n3), u3 !== s2)) {
          if (c2 = Up, g2 = "onMouseLeave", f2 = "onMouseEnter", h2 = "mouse", "pointerout" !== e27 && "pointerover" !== e27 || (c2 = th, g2 = "onPointerLeave", f2 = "onPointerEnter", h2 = "pointer"), d2 = null == u3 ? l3 : qg(u3), p2 = null == s2 ? l3 : qg(s2), (l3 = new c2(g2, h2 + "leave", u3, r2, o3)).target = d2, l3.relatedTarget = p2, g2 = null, Hg(o3) === n3 && ((c2 = new c2(f2, h2 + "enter", s2, r2, o3)).target = p2, c2.relatedTarget = d2, g2 = c2), d2 = g2, u3 && s2)
            e: {
              for (f2 = s2, h2 = 0, p2 = c2 = u3; p2; p2 = Cg(p2))
                h2++;
              for (p2 = 0, g2 = f2; g2; g2 = Cg(g2))
                p2++;
              for (; 0 < h2 - p2; )
                c2 = Cg(c2), h2--;
              for (; 0 < p2 - h2; )
                f2 = Cg(f2), p2--;
              for (; h2--; ) {
                if (c2 === f2 || null !== f2 && c2 === f2.alternate)
                  break e;
                c2 = Cg(c2), f2 = Cg(f2);
              }
              c2 = null;
            }
          else
            c2 = null;
          null !== u3 && xg(a3, l3, u3, c2, false), null !== s2 && null !== d2 && xg(a3, d2, s2, c2, true);
        }
        if ("select" === (u3 = (l3 = n3 ? qg(n3) : window).nodeName && l3.nodeName.toLowerCase()) || "input" === u3 && "file" === l3.type)
          var v2 = kh;
        else if (mh(l3))
          if (Sh)
            v2 = Ah;
          else {
            v2 = Mh;
            var m2 = Ph;
          }
        else
          (u3 = l3.nodeName) && "input" === u3.toLowerCase() && ("checkbox" === l3.type || "radio" === l3.type) && (v2 = Bh);
        switch (v2 && (v2 = v2(e27, n3)) ? yh(a3, v2, r2, o3) : (m2 && m2(e27, l3, n3), "focusout" === e27 && (m2 = l3._wrapperState) && m2.controlled && "number" === l3.type && Pd(l3, "number", l3.value)), m2 = n3 ? qg(n3) : window, e27) {
          case "focusin":
            (mh(m2) || "true" === m2.contentEditable) && (Wh = m2, Hh = n3, $h = null);
            break;
          case "focusout":
            $h = Hh = Wh = null;
            break;
          case "mousedown":
            qh = true;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            qh = false, Yh(a3, r2, o3);
            break;
          case "selectionchange":
            if (Vh)
              break;
          case "keydown":
          case "keyup":
            Yh(a3, r2, o3);
        }
        var y2;
        if (lh)
          e: {
            switch (e27) {
              case "compositionstart":
                var b2 = "onCompositionStart";
                break e;
              case "compositionend":
                b2 = "onCompositionEnd";
                break e;
              case "compositionupdate":
                b2 = "onCompositionUpdate";
                break e;
            }
            b2 = void 0;
          }
        else
          gh ? ph(e27, r2) && (b2 = "onCompositionEnd") : "keydown" === e27 && 229 === r2.keyCode && (b2 = "onCompositionStart");
        b2 && (ch && "ko" !== r2.locale && (gh || "onCompositionStart" !== b2 ? "onCompositionEnd" === b2 && gh && (y2 = Op()) : (Tp = "value" in (Ep = o3) ? Ep.value : Ep.textContent, gh = true)), 0 < (m2 = bg(n3, b2)).length && (b2 = new Yp(b2, e27, null, r2, o3), a3.push({ event: b2, listeners: m2 }), y2 ? b2.data = y2 : null !== (y2 = hh(r2)) && (b2.data = y2))), (y2 = sh ? function(e28, t3) {
          switch (e28) {
            case "compositionend":
              return hh(t3);
            case "keypress":
              return 32 !== t3.which ? null : (fh = true, dh);
            case "textInput":
              return (e28 = t3.data) === dh && fh ? null : e28;
            default:
              return null;
          }
        }(e27, r2) : function(e28, t3) {
          if (gh)
            return "compositionend" === e28 || !lh && ph(e28, t3) ? (e28 = Op(), Rp = Tp = Ep = null, gh = false, e28) : null;
          switch (e28) {
            case "paste":
            default:
              return null;
            case "keypress":
              if (!(t3.ctrlKey || t3.altKey || t3.metaKey) || t3.ctrlKey && t3.altKey) {
                if (t3.char && 1 < t3.char.length)
                  return t3.char;
                if (t3.which)
                  return String.fromCharCode(t3.which);
              }
              return null;
            case "compositionend":
              return ch && "ko" !== t3.locale ? null : t3.data;
          }
        }(e27, r2)) && (0 < (n3 = bg(n3, "onBeforeInput")).length && (o3 = new Yp("onBeforeInput", "beforeinput", null, r2, o3), a3.push({ event: o3, listeners: n3 }), o3.data = y2));
      }
      dg(a3, t2);
    });
  }
  function yg(e27, t2, r2) {
    return { instance: e27, listener: t2, currentTarget: r2 };
  }
  function bg(e27, t2) {
    for (var r2 = t2 + "Capture", n2 = []; null !== e27; ) {
      var o2 = e27, i2 = o2.stateNode;
      5 === o2.tag && null !== i2 && (o2 = i2, null != (i2 = uf(e27, r2)) && n2.unshift(yg(e27, i2, o2)), null != (i2 = uf(e27, t2)) && n2.push(yg(e27, i2, o2))), e27 = e27.return;
    }
    return n2;
  }
  function Cg(e27) {
    if (null === e27)
      return null;
    do {
      e27 = e27.return;
    } while (e27 && 5 !== e27.tag);
    return e27 || null;
  }
  function xg(e27, t2, r2, n2, o2) {
    for (var i2 = t2._reactName, a2 = []; null !== r2 && r2 !== n2; ) {
      var l2 = r2, u2 = l2.alternate, s2 = l2.stateNode;
      if (null !== u2 && u2 === n2)
        break;
      5 === l2.tag && null !== s2 && (l2 = s2, o2 ? null != (u2 = uf(r2, i2)) && a2.unshift(yg(r2, u2, l2)) : o2 || null != (u2 = uf(r2, i2)) && a2.push(yg(r2, u2, l2))), r2 = r2.return;
    }
    0 !== a2.length && e27.push({ event: t2, listeners: a2 });
  }
  var wg = /\r\n?/g;
  var kg = /\u0000|\uFFFD/g;
  function Sg(e27) {
    return ("string" == typeof e27 ? e27 : "" + e27).replace(wg, "\n").replace(kg, "");
  }
  function Eg(e27, t2, r2) {
    if (t2 = Sg(t2), Sg(e27) !== t2 && r2)
      throw Error(jc(425));
  }
  function Tg() {
  }
  var Rg = null;
  function Og(e27, t2) {
    return "textarea" === e27 || "noscript" === e27 || "string" == typeof t2.children || "number" == typeof t2.children || "object" == typeof t2.dangerouslySetInnerHTML && null !== t2.dangerouslySetInnerHTML && null != t2.dangerouslySetInnerHTML.__html;
  }
  var _g = "function" == typeof setTimeout ? setTimeout : void 0;
  var Pg = "function" == typeof clearTimeout ? clearTimeout : void 0;
  var Mg = "function" == typeof Promise ? Promise : void 0;
  var Bg = "function" == typeof queueMicrotask ? queueMicrotask : void 0 !== Mg ? function(e27) {
    return Mg.resolve(null).then(e27).catch(Ag);
  } : _g;
  function Ag(e27) {
    setTimeout(function() {
      throw e27;
    });
  }
  function Ng(e27, t2) {
    var r2 = t2, n2 = 0;
    do {
      var o2 = r2.nextSibling;
      if (e27.removeChild(r2), o2 && 8 === o2.nodeType)
        if ("/$" === (r2 = o2.data)) {
          if (0 === n2)
            return e27.removeChild(o2), void mp(t2);
          n2--;
        } else
          "$" !== r2 && "$?" !== r2 && "$!" !== r2 || n2++;
      r2 = o2;
    } while (r2);
    mp(t2);
  }
  function jg(e27) {
    for (; null != e27; e27 = e27.nextSibling) {
      var t2 = e27.nodeType;
      if (1 === t2 || 3 === t2)
        break;
      if (8 === t2) {
        if ("$" === (t2 = e27.data) || "$!" === t2 || "$?" === t2)
          break;
        if ("/$" === t2)
          return null;
      }
    }
    return e27;
  }
  function Dg(e27) {
    e27 = e27.previousSibling;
    for (var t2 = 0; e27; ) {
      if (8 === e27.nodeType) {
        var r2 = e27.data;
        if ("$" === r2 || "$!" === r2 || "$?" === r2) {
          if (0 === t2)
            return e27;
          t2--;
        } else
          "/$" === r2 && t2++;
      }
      e27 = e27.previousSibling;
    }
    return null;
  }
  var Lg = Math.random().toString(36).slice(2);
  var Ig = "__reactFiber$" + Lg;
  var zg = "__reactProps$" + Lg;
  var Fg = "__reactContainer$" + Lg;
  var Ug = "__reactEvents$" + Lg;
  var Vg = "__reactListeners$" + Lg;
  var Wg = "__reactHandles$" + Lg;
  function Hg(e27) {
    var t2 = e27[Ig];
    if (t2)
      return t2;
    for (var r2 = e27.parentNode; r2; ) {
      if (t2 = r2[Fg] || r2[Ig]) {
        if (r2 = t2.alternate, null !== t2.child || null !== r2 && null !== r2.child)
          for (e27 = Dg(e27); null !== e27; ) {
            if (r2 = e27[Ig])
              return r2;
            e27 = Dg(e27);
          }
        return t2;
      }
      r2 = (e27 = r2).parentNode;
    }
    return null;
  }
  function $g(e27) {
    return !(e27 = e27[Ig] || e27[Fg]) || 5 !== e27.tag && 6 !== e27.tag && 13 !== e27.tag && 3 !== e27.tag ? null : e27;
  }
  function qg(e27) {
    if (5 === e27.tag || 6 === e27.tag)
      return e27.stateNode;
    throw Error(jc(33));
  }
  function Yg(e27) {
    return e27[zg] || null;
  }
  var Gg = [];
  var Xg = -1;
  function Qg(e27) {
    return { current: e27 };
  }
  function Kg(e27) {
    0 > Xg || (e27.current = Gg[Xg], Gg[Xg] = null, Xg--);
  }
  function Zg(e27, t2) {
    Xg++, Gg[Xg] = e27.current, e27.current = t2;
  }
  var Jg = {};
  var ev = Qg(Jg);
  var tv = Qg(false);
  var rv = Jg;
  function nv(e27, t2) {
    var r2 = e27.type.contextTypes;
    if (!r2)
      return Jg;
    var n2 = e27.stateNode;
    if (n2 && n2.__reactInternalMemoizedUnmaskedChildContext === t2)
      return n2.__reactInternalMemoizedMaskedChildContext;
    var o2, i2 = {};
    for (o2 in r2)
      i2[o2] = t2[o2];
    return n2 && ((e27 = e27.stateNode).__reactInternalMemoizedUnmaskedChildContext = t2, e27.__reactInternalMemoizedMaskedChildContext = i2), i2;
  }
  function ov(e27) {
    return null != (e27 = e27.childContextTypes);
  }
  function iv() {
    Kg(tv), Kg(ev);
  }
  function av(e27, t2, r2) {
    if (ev.current !== Jg)
      throw Error(jc(168));
    Zg(ev, t2), Zg(tv, r2);
  }
  function lv(e27, t2, r2) {
    var n2 = e27.stateNode;
    if (t2 = t2.childContextTypes, "function" != typeof n2.getChildContext)
      return r2;
    for (var o2 in n2 = n2.getChildContext())
      if (!(o2 in t2))
        throw Error(jc(108, bd(e27) || "Unknown", o2));
    return pd({}, r2, n2);
  }
  function uv(e27) {
    return e27 = (e27 = e27.stateNode) && e27.__reactInternalMemoizedMergedChildContext || Jg, rv = ev.current, Zg(ev, e27), Zg(tv, tv.current), true;
  }
  function sv(e27, t2, r2) {
    var n2 = e27.stateNode;
    if (!n2)
      throw Error(jc(169));
    r2 ? (e27 = lv(e27, t2, rv), n2.__reactInternalMemoizedMergedChildContext = e27, Kg(tv), Kg(ev), Zg(ev, e27)) : Kg(tv), Zg(tv, r2);
  }
  var cv = null;
  var dv = false;
  var fv = false;
  function pv(e27) {
    null === cv ? cv = [e27] : cv.push(e27);
  }
  function hv() {
    if (!fv && null !== cv) {
      fv = true;
      var e27 = 0, t2 = Gf;
      try {
        var r2 = cv;
        for (Gf = 1; e27 < r2.length; e27++) {
          var n2 = r2[e27];
          do {
            n2 = n2(true);
          } while (null !== n2);
        }
        cv = null, dv = false;
      } catch (t3) {
        throw null !== cv && (cv = cv.slice(e27 + 1)), kf(_f, hv), t3;
      } finally {
        Gf = t2, fv = false;
      }
    }
    return null;
  }
  var gv = Qc.ReactCurrentBatchConfig;
  function vv(e27, t2) {
    if (e27 && e27.defaultProps) {
      for (var r2 in t2 = pd({}, t2), e27 = e27.defaultProps)
        void 0 === t2[r2] && (t2[r2] = e27[r2]);
      return t2;
    }
    return t2;
  }
  var mv = Qg(null);
  var yv = null;
  var bv = null;
  var Cv = null;
  function xv() {
    Cv = bv = yv = null;
  }
  function wv(e27) {
    var t2 = mv.current;
    Kg(mv), e27._currentValue = t2;
  }
  function kv(e27, t2, r2) {
    for (; null !== e27; ) {
      var n2 = e27.alternate;
      if ((e27.childLanes & t2) !== t2 ? (e27.childLanes |= t2, null !== n2 && (n2.childLanes |= t2)) : null !== n2 && (n2.childLanes & t2) !== t2 && (n2.childLanes |= t2), e27 === r2)
        break;
      e27 = e27.return;
    }
  }
  function Sv(e27, t2) {
    yv = e27, Cv = bv = null, null !== (e27 = e27.dependencies) && null !== e27.firstContext && (0 != (e27.lanes & t2) && ($y = true), e27.firstContext = null);
  }
  function Ev(e27) {
    var t2 = e27._currentValue;
    if (Cv !== e27)
      if (e27 = { context: e27, memoizedValue: t2, next: null }, null === bv) {
        if (null === yv)
          throw Error(jc(308));
        bv = e27, yv.dependencies = { lanes: 0, firstContext: e27 };
      } else
        bv = bv.next = e27;
    return t2;
  }
  var Tv = null;
  var Rv = false;
  function Ov(e27) {
    e27.updateQueue = { baseState: e27.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function _v(e27, t2) {
    e27 = e27.updateQueue, t2.updateQueue === e27 && (t2.updateQueue = { baseState: e27.baseState, firstBaseUpdate: e27.firstBaseUpdate, lastBaseUpdate: e27.lastBaseUpdate, shared: e27.shared, effects: e27.effects });
  }
  function Pv(e27, t2) {
    return { eventTime: e27, lane: t2, tag: 0, payload: null, callback: null, next: null };
  }
  function Mv(e27, t2) {
    var r2 = e27.updateQueue;
    null !== r2 && (r2 = r2.shared, null !== qb && 0 != (1 & e27.mode) && 0 == (2 & $b) ? (null === (e27 = r2.interleaved) ? (t2.next = t2, null === Tv ? Tv = [r2] : Tv.push(r2)) : (t2.next = e27.next, e27.next = t2), r2.interleaved = t2) : (null === (e27 = r2.pending) ? t2.next = t2 : (t2.next = e27.next, e27.next = t2), r2.pending = t2));
  }
  function Bv(e27, t2, r2) {
    if (null !== (t2 = t2.updateQueue) && (t2 = t2.shared, 0 != (4194240 & r2))) {
      var n2 = t2.lanes;
      r2 |= n2 &= e27.pendingLanes, t2.lanes = r2, Yf(e27, r2);
    }
  }
  function Av(e27, t2) {
    var r2 = e27.updateQueue, n2 = e27.alternate;
    if (null !== n2 && r2 === (n2 = n2.updateQueue)) {
      var o2 = null, i2 = null;
      if (null !== (r2 = r2.firstBaseUpdate)) {
        do {
          var a2 = { eventTime: r2.eventTime, lane: r2.lane, tag: r2.tag, payload: r2.payload, callback: r2.callback, next: null };
          null === i2 ? o2 = i2 = a2 : i2 = i2.next = a2, r2 = r2.next;
        } while (null !== r2);
        null === i2 ? o2 = i2 = t2 : i2 = i2.next = t2;
      } else
        o2 = i2 = t2;
      return r2 = { baseState: n2.baseState, firstBaseUpdate: o2, lastBaseUpdate: i2, shared: n2.shared, effects: n2.effects }, void (e27.updateQueue = r2);
    }
    null === (e27 = r2.lastBaseUpdate) ? r2.firstBaseUpdate = t2 : e27.next = t2, r2.lastBaseUpdate = t2;
  }
  function Nv(e27, t2, r2, n2) {
    var o2 = e27.updateQueue;
    Rv = false;
    var i2 = o2.firstBaseUpdate, a2 = o2.lastBaseUpdate, l2 = o2.shared.pending;
    if (null !== l2) {
      o2.shared.pending = null;
      var u2 = l2, s2 = u2.next;
      u2.next = null, null === a2 ? i2 = s2 : a2.next = s2, a2 = u2;
      var c2 = e27.alternate;
      null !== c2 && ((l2 = (c2 = c2.updateQueue).lastBaseUpdate) !== a2 && (null === l2 ? c2.firstBaseUpdate = s2 : l2.next = s2, c2.lastBaseUpdate = u2));
    }
    if (null !== i2) {
      var d2 = o2.baseState;
      for (a2 = 0, c2 = s2 = u2 = null, l2 = i2; ; ) {
        var f2 = l2.lane, p2 = l2.eventTime;
        if ((n2 & f2) === f2) {
          null !== c2 && (c2 = c2.next = { eventTime: p2, lane: 0, tag: l2.tag, payload: l2.payload, callback: l2.callback, next: null });
          e: {
            var h2 = e27, g2 = l2;
            switch (f2 = t2, p2 = r2, g2.tag) {
              case 1:
                if ("function" == typeof (h2 = g2.payload)) {
                  d2 = h2.call(p2, d2, f2);
                  break e;
                }
                d2 = h2;
                break e;
              case 3:
                h2.flags = -65537 & h2.flags | 128;
              case 0:
                if (null == (f2 = "function" == typeof (h2 = g2.payload) ? h2.call(p2, d2, f2) : h2))
                  break e;
                d2 = pd({}, d2, f2);
                break e;
              case 2:
                Rv = true;
            }
          }
          null !== l2.callback && 0 !== l2.lane && (e27.flags |= 64, null === (f2 = o2.effects) ? o2.effects = [l2] : f2.push(l2));
        } else
          p2 = { eventTime: p2, lane: f2, tag: l2.tag, payload: l2.payload, callback: l2.callback, next: null }, null === c2 ? (s2 = c2 = p2, u2 = d2) : c2 = c2.next = p2, a2 |= f2;
        if (null === (l2 = l2.next)) {
          if (null === (l2 = o2.shared.pending))
            break;
          l2 = (f2 = l2).next, f2.next = null, o2.lastBaseUpdate = f2, o2.shared.pending = null;
        }
      }
      if (null === c2 && (u2 = d2), o2.baseState = u2, o2.firstBaseUpdate = s2, o2.lastBaseUpdate = c2, null !== (t2 = o2.shared.interleaved)) {
        o2 = t2;
        do {
          a2 |= o2.lane, o2 = o2.next;
        } while (o2 !== t2);
      } else
        null === i2 && (o2.shared.lanes = 0);
      Jb |= a2, e27.lanes = a2, e27.memoizedState = d2;
    }
  }
  function jv(e27, t2, r2) {
    if (e27 = t2.effects, t2.effects = null, null !== e27)
      for (t2 = 0; t2 < e27.length; t2++) {
        var n2 = e27[t2], o2 = n2.callback;
        if (null !== o2) {
          if (n2.callback = null, n2 = r2, "function" != typeof o2)
            throw Error(jc(191, o2));
          o2.call(n2);
        }
      }
  }
  var Dv = new Ac.Component().refs;
  function Lv(e27, t2, r2, n2) {
    r2 = null == (r2 = r2(n2, t2 = e27.memoizedState)) ? t2 : pd({}, t2, r2), e27.memoizedState = r2, 0 === e27.lanes && (e27.updateQueue.baseState = r2);
  }
  var Iv = { isMounted: function(e27) {
    return !!(e27 = e27._reactInternals) && yf(e27) === e27;
  }, enqueueSetState: function(e27, t2, r2) {
    e27 = e27._reactInternals;
    var n2 = vC(), o2 = mC(e27), i2 = Pv(n2, o2);
    i2.payload = t2, null != r2 && (i2.callback = r2), Mv(e27, i2), null !== (t2 = yC(e27, o2, n2)) && Bv(t2, e27, o2);
  }, enqueueReplaceState: function(e27, t2, r2) {
    e27 = e27._reactInternals;
    var n2 = vC(), o2 = mC(e27), i2 = Pv(n2, o2);
    i2.tag = 1, i2.payload = t2, null != r2 && (i2.callback = r2), Mv(e27, i2), null !== (t2 = yC(e27, o2, n2)) && Bv(t2, e27, o2);
  }, enqueueForceUpdate: function(e27, t2) {
    e27 = e27._reactInternals;
    var r2 = vC(), n2 = mC(e27), o2 = Pv(r2, n2);
    o2.tag = 2, null != t2 && (o2.callback = t2), Mv(e27, o2), null !== (t2 = yC(e27, n2, r2)) && Bv(t2, e27, n2);
  } };
  function zv(e27, t2, r2, n2, o2, i2, a2) {
    return "function" == typeof (e27 = e27.stateNode).shouldComponentUpdate ? e27.shouldComponentUpdate(n2, i2, a2) : !t2.prototype || !t2.prototype.isPureReactComponent || (!jh(r2, n2) || !jh(o2, i2));
  }
  function Fv(e27, t2, r2) {
    var n2 = false, o2 = Jg, i2 = t2.contextType;
    return "object" == typeof i2 && null !== i2 ? i2 = Ev(i2) : (o2 = ov(t2) ? rv : ev.current, i2 = (n2 = null != (n2 = t2.contextTypes)) ? nv(e27, o2) : Jg), t2 = new t2(r2, i2), e27.memoizedState = null !== t2.state && void 0 !== t2.state ? t2.state : null, t2.updater = Iv, e27.stateNode = t2, t2._reactInternals = e27, n2 && ((e27 = e27.stateNode).__reactInternalMemoizedUnmaskedChildContext = o2, e27.__reactInternalMemoizedMaskedChildContext = i2), t2;
  }
  function Uv(e27, t2, r2, n2) {
    e27 = t2.state, "function" == typeof t2.componentWillReceiveProps && t2.componentWillReceiveProps(r2, n2), "function" == typeof t2.UNSAFE_componentWillReceiveProps && t2.UNSAFE_componentWillReceiveProps(r2, n2), t2.state !== e27 && Iv.enqueueReplaceState(t2, t2.state, null);
  }
  function Vv(e27, t2, r2, n2) {
    var o2 = e27.stateNode;
    o2.props = r2, o2.state = e27.memoizedState, o2.refs = Dv, Ov(e27);
    var i2 = t2.contextType;
    "object" == typeof i2 && null !== i2 ? o2.context = Ev(i2) : (i2 = ov(t2) ? rv : ev.current, o2.context = nv(e27, i2)), o2.state = e27.memoizedState, "function" == typeof (i2 = t2.getDerivedStateFromProps) && (Lv(e27, t2, i2, r2), o2.state = e27.memoizedState), "function" == typeof t2.getDerivedStateFromProps || "function" == typeof o2.getSnapshotBeforeUpdate || "function" != typeof o2.UNSAFE_componentWillMount && "function" != typeof o2.componentWillMount || (t2 = o2.state, "function" == typeof o2.componentWillMount && o2.componentWillMount(), "function" == typeof o2.UNSAFE_componentWillMount && o2.UNSAFE_componentWillMount(), t2 !== o2.state && Iv.enqueueReplaceState(o2, o2.state, null), Nv(e27, r2, o2, n2), o2.state = e27.memoizedState), "function" == typeof o2.componentDidMount && (e27.flags |= 4194308);
  }
  var Wv = [];
  var Hv = 0;
  var $v = null;
  var qv = 0;
  var Yv = [];
  var Gv = 0;
  var Xv = null;
  var Qv = 1;
  var Kv = "";
  function Zv(e27, t2) {
    Wv[Hv++] = qv, Wv[Hv++] = $v, $v = e27, qv = t2;
  }
  function Jv(e27, t2, r2) {
    Yv[Gv++] = Qv, Yv[Gv++] = Kv, Yv[Gv++] = Xv, Xv = e27;
    var n2 = Qv;
    e27 = Kv;
    var o2 = 32 - Df(n2) - 1;
    n2 &= ~(1 << o2), r2 += 1;
    var i2 = 32 - Df(t2) + o2;
    if (30 < i2) {
      var a2 = o2 - o2 % 5;
      i2 = (n2 & (1 << a2) - 1).toString(32), n2 >>= a2, o2 -= a2, Qv = 1 << 32 - Df(t2) + o2 | r2 << o2 | n2, Kv = i2 + e27;
    } else
      Qv = 1 << i2 | r2 << o2 | n2, Kv = e27;
  }
  function em(e27) {
    null !== e27.return && (Zv(e27, 1), Jv(e27, 1, 0));
  }
  function tm(e27) {
    for (; e27 === $v; )
      $v = Wv[--Hv], Wv[Hv] = null, qv = Wv[--Hv], Wv[Hv] = null;
    for (; e27 === Xv; )
      Xv = Yv[--Gv], Yv[Gv] = null, Kv = Yv[--Gv], Yv[Gv] = null, Qv = Yv[--Gv], Yv[Gv] = null;
  }
  var rm = null;
  var nm = null;
  var om = false;
  var im = null;
  function am(e27, t2) {
    var r2 = GC(5, null, null, 0);
    r2.elementType = "DELETED", r2.stateNode = t2, r2.return = e27, null === (t2 = e27.deletions) ? (e27.deletions = [r2], e27.flags |= 16) : t2.push(r2);
  }
  function lm(e27, t2) {
    switch (e27.tag) {
      case 5:
        var r2 = e27.type;
        return null !== (t2 = 1 !== t2.nodeType || r2.toLowerCase() !== t2.nodeName.toLowerCase() ? null : t2) && (e27.stateNode = t2, rm = e27, nm = jg(t2.firstChild), true);
      case 6:
        return null !== (t2 = "" === e27.pendingProps || 3 !== t2.nodeType ? null : t2) && (e27.stateNode = t2, rm = e27, nm = null, true);
      case 13:
        return null !== (t2 = 8 !== t2.nodeType ? null : t2) && (r2 = null !== Xv ? { id: Qv, overflow: Kv } : null, e27.memoizedState = { dehydrated: t2, treeContext: r2, retryLane: 1073741824 }, (r2 = GC(18, null, null, 0)).stateNode = t2, r2.return = e27, e27.child = r2, rm = e27, nm = null, true);
      default:
        return false;
    }
  }
  function um(e27) {
    return 0 != (1 & e27.mode) && 0 == (128 & e27.flags);
  }
  function sm(e27) {
    if (om) {
      var t2 = nm;
      if (t2) {
        var r2 = t2;
        if (!lm(e27, t2)) {
          if (um(e27))
            throw Error(jc(418));
          t2 = jg(r2.nextSibling);
          var n2 = rm;
          t2 && lm(e27, t2) ? am(n2, r2) : (e27.flags = -4097 & e27.flags | 2, om = false, rm = e27);
        }
      } else {
        if (um(e27))
          throw Error(jc(418));
        e27.flags = -4097 & e27.flags | 2, om = false, rm = e27;
      }
    }
  }
  function cm(e27) {
    for (e27 = e27.return; null !== e27 && 5 !== e27.tag && 3 !== e27.tag && 13 !== e27.tag; )
      e27 = e27.return;
    rm = e27;
  }
  function dm(e27) {
    if (e27 !== rm)
      return false;
    if (!om)
      return cm(e27), om = true, false;
    var t2;
    if ((t2 = 3 !== e27.tag) && !(t2 = 5 !== e27.tag) && (t2 = "head" !== (t2 = e27.type) && "body" !== t2 && !Og(e27.type, e27.memoizedProps)), t2 && (t2 = nm)) {
      if (um(e27)) {
        for (e27 = nm; e27; )
          e27 = jg(e27.nextSibling);
        throw Error(jc(418));
      }
      for (; t2; )
        am(e27, t2), t2 = jg(t2.nextSibling);
    }
    if (cm(e27), 13 === e27.tag) {
      if (!(e27 = null !== (e27 = e27.memoizedState) ? e27.dehydrated : null))
        throw Error(jc(317));
      e: {
        for (e27 = e27.nextSibling, t2 = 0; e27; ) {
          if (8 === e27.nodeType) {
            var r2 = e27.data;
            if ("/$" === r2) {
              if (0 === t2) {
                nm = jg(e27.nextSibling);
                break e;
              }
              t2--;
            } else
              "$" !== r2 && "$!" !== r2 && "$?" !== r2 || t2++;
          }
          e27 = e27.nextSibling;
        }
        nm = null;
      }
    } else
      nm = rm ? jg(e27.stateNode.nextSibling) : null;
    return true;
  }
  function fm() {
    nm = rm = null, om = false;
  }
  function pm(e27) {
    null === im ? im = [e27] : im.push(e27);
  }
  function hm(e27, t2, r2) {
    if (null !== (e27 = r2.ref) && "function" != typeof e27 && "object" != typeof e27) {
      if (r2._owner) {
        if (r2 = r2._owner) {
          if (1 !== r2.tag)
            throw Error(jc(309));
          var n2 = r2.stateNode;
        }
        if (!n2)
          throw Error(jc(147, e27));
        var o2 = n2, i2 = "" + e27;
        return null !== t2 && null !== t2.ref && "function" == typeof t2.ref && t2.ref._stringRef === i2 ? t2.ref : (t2 = function(e28) {
          var t3 = o2.refs;
          t3 === Dv && (t3 = o2.refs = {}), null === e28 ? delete t3[i2] : t3[i2] = e28;
        }, t2._stringRef = i2, t2);
      }
      if ("string" != typeof e27)
        throw Error(jc(284));
      if (!r2._owner)
        throw Error(jc(290, e27));
    }
    return e27;
  }
  function gm(e27, t2) {
    throw e27 = Object.prototype.toString.call(t2), Error(jc(31, "[object Object]" === e27 ? "object with keys {" + Object.keys(t2).join(", ") + "}" : e27));
  }
  function vm(e27) {
    return (0, e27._init)(e27._payload);
  }
  function mm(e27) {
    function t2(t3, r3) {
      if (e27) {
        var n3 = t3.deletions;
        null === n3 ? (t3.deletions = [r3], t3.flags |= 16) : n3.push(r3);
      }
    }
    function r2(r3, n3) {
      if (!e27)
        return null;
      for (; null !== n3; )
        t2(r3, n3), n3 = n3.sibling;
      return null;
    }
    function n2(e28, t3) {
      for (e28 = /* @__PURE__ */ new Map(); null !== t3; )
        null !== t3.key ? e28.set(t3.key, t3) : e28.set(t3.index, t3), t3 = t3.sibling;
      return e28;
    }
    function o2(e28, t3) {
      return (e28 = QC(e28, t3)).index = 0, e28.sibling = null, e28;
    }
    function i2(t3, r3, n3) {
      return t3.index = n3, e27 ? null !== (n3 = t3.alternate) ? (n3 = n3.index) < r3 ? (t3.flags |= 2, r3) : n3 : (t3.flags |= 2, r3) : (t3.flags |= 1048576, r3);
    }
    function a2(t3) {
      return e27 && null === t3.alternate && (t3.flags |= 2), t3;
    }
    function l2(e28, t3, r3, n3) {
      return null === t3 || 6 !== t3.tag ? ((t3 = ex(r3, e28.mode, n3)).return = e28, t3) : ((t3 = o2(t3, r3)).return = e28, t3);
    }
    function u2(e28, t3, r3, n3) {
      var i3 = r3.type;
      return i3 === Jc ? c2(e28, t3, r3.props.children, n3, r3.key) : null !== t3 && (t3.elementType === i3 || "object" == typeof i3 && null !== i3 && i3.$$typeof === ud && vm(i3) === t3.type) ? ((n3 = o2(t3, r3.props)).ref = hm(e28, t3, r3), n3.return = e28, n3) : ((n3 = KC(r3.type, r3.key, r3.props, null, e28.mode, n3)).ref = hm(e28, t3, r3), n3.return = e28, n3);
    }
    function s2(e28, t3, r3, n3) {
      return null === t3 || 4 !== t3.tag || t3.stateNode.containerInfo !== r3.containerInfo || t3.stateNode.implementation !== r3.implementation ? ((t3 = tx(r3, e28.mode, n3)).return = e28, t3) : ((t3 = o2(t3, r3.children || [])).return = e28, t3);
    }
    function c2(e28, t3, r3, n3, i3) {
      return null === t3 || 7 !== t3.tag ? ((t3 = ZC(r3, e28.mode, n3, i3)).return = e28, t3) : ((t3 = o2(t3, r3)).return = e28, t3);
    }
    function d2(e28, t3, r3) {
      if ("string" == typeof t3 && "" !== t3 || "number" == typeof t3)
        return (t3 = ex("" + t3, e28.mode, r3)).return = e28, t3;
      if ("object" == typeof t3 && null !== t3) {
        switch (t3.$$typeof) {
          case Kc:
            return (r3 = KC(t3.type, t3.key, t3.props, null, e28.mode, r3)).ref = hm(e28, null, t3), r3.return = e28, r3;
          case Zc:
            return (t3 = tx(t3, e28.mode, r3)).return = e28, t3;
          case ud:
            return d2(e28, (0, t3._init)(t3._payload), r3);
        }
        if (Md(t3) || dd(t3))
          return (t3 = ZC(t3, e28.mode, r3, null)).return = e28, t3;
        gm(e28, t3);
      }
      return null;
    }
    function f2(e28, t3, r3, n3) {
      var o3 = null !== t3 ? t3.key : null;
      if ("string" == typeof r3 && "" !== r3 || "number" == typeof r3)
        return null !== o3 ? null : l2(e28, t3, "" + r3, n3);
      if ("object" == typeof r3 && null !== r3) {
        switch (r3.$$typeof) {
          case Kc:
            return r3.key === o3 ? u2(e28, t3, r3, n3) : null;
          case Zc:
            return r3.key === o3 ? s2(e28, t3, r3, n3) : null;
          case ud:
            return f2(e28, t3, (o3 = r3._init)(r3._payload), n3);
        }
        if (Md(r3) || dd(r3))
          return null !== o3 ? null : c2(e28, t3, r3, n3, null);
        gm(e28, r3);
      }
      return null;
    }
    function p2(e28, t3, r3, n3, o3) {
      if ("string" == typeof n3 && "" !== n3 || "number" == typeof n3)
        return l2(t3, e28 = e28.get(r3) || null, "" + n3, o3);
      if ("object" == typeof n3 && null !== n3) {
        switch (n3.$$typeof) {
          case Kc:
            return u2(t3, e28 = e28.get(null === n3.key ? r3 : n3.key) || null, n3, o3);
          case Zc:
            return s2(t3, e28 = e28.get(null === n3.key ? r3 : n3.key) || null, n3, o3);
          case ud:
            return p2(e28, t3, r3, (0, n3._init)(n3._payload), o3);
        }
        if (Md(n3) || dd(n3))
          return c2(t3, e28 = e28.get(r3) || null, n3, o3, null);
        gm(t3, n3);
      }
      return null;
    }
    function h2(o3, a3, l3, u3) {
      for (var s3 = null, c3 = null, h3 = a3, g3 = a3 = 0, v2 = null; null !== h3 && g3 < l3.length; g3++) {
        h3.index > g3 ? (v2 = h3, h3 = null) : v2 = h3.sibling;
        var m2 = f2(o3, h3, l3[g3], u3);
        if (null === m2) {
          null === h3 && (h3 = v2);
          break;
        }
        e27 && h3 && null === m2.alternate && t2(o3, h3), a3 = i2(m2, a3, g3), null === c3 ? s3 = m2 : c3.sibling = m2, c3 = m2, h3 = v2;
      }
      if (g3 === l3.length)
        return r2(o3, h3), om && Zv(o3, g3), s3;
      if (null === h3) {
        for (; g3 < l3.length; g3++)
          null !== (h3 = d2(o3, l3[g3], u3)) && (a3 = i2(h3, a3, g3), null === c3 ? s3 = h3 : c3.sibling = h3, c3 = h3);
        return om && Zv(o3, g3), s3;
      }
      for (h3 = n2(o3, h3); g3 < l3.length; g3++)
        null !== (v2 = p2(h3, o3, g3, l3[g3], u3)) && (e27 && null !== v2.alternate && h3.delete(null === v2.key ? g3 : v2.key), a3 = i2(v2, a3, g3), null === c3 ? s3 = v2 : c3.sibling = v2, c3 = v2);
      return e27 && h3.forEach(function(e28) {
        return t2(o3, e28);
      }), om && Zv(o3, g3), s3;
    }
    function g2(o3, a3, l3, u3) {
      var s3 = dd(l3);
      if ("function" != typeof s3)
        throw Error(jc(150));
      if (null == (l3 = s3.call(l3)))
        throw Error(jc(151));
      for (var c3 = s3 = null, h3 = a3, g3 = a3 = 0, v2 = null, m2 = l3.next(); null !== h3 && !m2.done; g3++, m2 = l3.next()) {
        h3.index > g3 ? (v2 = h3, h3 = null) : v2 = h3.sibling;
        var y2 = f2(o3, h3, m2.value, u3);
        if (null === y2) {
          null === h3 && (h3 = v2);
          break;
        }
        e27 && h3 && null === y2.alternate && t2(o3, h3), a3 = i2(y2, a3, g3), null === c3 ? s3 = y2 : c3.sibling = y2, c3 = y2, h3 = v2;
      }
      if (m2.done)
        return r2(o3, h3), om && Zv(o3, g3), s3;
      if (null === h3) {
        for (; !m2.done; g3++, m2 = l3.next())
          null !== (m2 = d2(o3, m2.value, u3)) && (a3 = i2(m2, a3, g3), null === c3 ? s3 = m2 : c3.sibling = m2, c3 = m2);
        return om && Zv(o3, g3), s3;
      }
      for (h3 = n2(o3, h3); !m2.done; g3++, m2 = l3.next())
        null !== (m2 = p2(h3, o3, g3, m2.value, u3)) && (e27 && null !== m2.alternate && h3.delete(null === m2.key ? g3 : m2.key), a3 = i2(m2, a3, g3), null === c3 ? s3 = m2 : c3.sibling = m2, c3 = m2);
      return e27 && h3.forEach(function(e28) {
        return t2(o3, e28);
      }), om && Zv(o3, g3), s3;
    }
    return function e28(n3, i3, l3, u3) {
      if ("object" == typeof l3 && null !== l3 && l3.type === Jc && null === l3.key && (l3 = l3.props.children), "object" == typeof l3 && null !== l3) {
        switch (l3.$$typeof) {
          case Kc:
            e: {
              for (var s3 = l3.key, c3 = i3; null !== c3; ) {
                if (c3.key === s3) {
                  if ((s3 = l3.type) === Jc) {
                    if (7 === c3.tag) {
                      r2(n3, c3.sibling), (i3 = o2(c3, l3.props.children)).return = n3, n3 = i3;
                      break e;
                    }
                  } else if (c3.elementType === s3 || "object" == typeof s3 && null !== s3 && s3.$$typeof === ud && vm(s3) === c3.type) {
                    r2(n3, c3.sibling), (i3 = o2(c3, l3.props)).ref = hm(n3, c3, l3), i3.return = n3, n3 = i3;
                    break e;
                  }
                  r2(n3, c3);
                  break;
                }
                t2(n3, c3), c3 = c3.sibling;
              }
              l3.type === Jc ? ((i3 = ZC(l3.props.children, n3.mode, u3, l3.key)).return = n3, n3 = i3) : ((u3 = KC(l3.type, l3.key, l3.props, null, n3.mode, u3)).ref = hm(n3, i3, l3), u3.return = n3, n3 = u3);
            }
            return a2(n3);
          case Zc:
            e: {
              for (c3 = l3.key; null !== i3; ) {
                if (i3.key === c3) {
                  if (4 === i3.tag && i3.stateNode.containerInfo === l3.containerInfo && i3.stateNode.implementation === l3.implementation) {
                    r2(n3, i3.sibling), (i3 = o2(i3, l3.children || [])).return = n3, n3 = i3;
                    break e;
                  }
                  r2(n3, i3);
                  break;
                }
                t2(n3, i3), i3 = i3.sibling;
              }
              (i3 = tx(l3, n3.mode, u3)).return = n3, n3 = i3;
            }
            return a2(n3);
          case ud:
            return e28(n3, i3, (c3 = l3._init)(l3._payload), u3);
        }
        if (Md(l3))
          return h2(n3, i3, l3, u3);
        if (dd(l3))
          return g2(n3, i3, l3, u3);
        gm(n3, l3);
      }
      return "string" == typeof l3 && "" !== l3 || "number" == typeof l3 ? (l3 = "" + l3, null !== i3 && 6 === i3.tag ? (r2(n3, i3.sibling), (i3 = o2(i3, l3)).return = n3, n3 = i3) : (r2(n3, i3), (i3 = ex(l3, n3.mode, u3)).return = n3, n3 = i3), a2(n3)) : r2(n3, i3);
    };
  }
  var ym = mm(true);
  var bm = mm(false);
  var Cm = {};
  var xm = Qg(Cm);
  var wm = Qg(Cm);
  var km = Qg(Cm);
  function Sm(e27) {
    if (e27 === Cm)
      throw Error(jc(174));
    return e27;
  }
  function Em(e27, t2) {
    switch (Zg(km, t2), Zg(wm, e27), Zg(xm, Cm), e27 = t2.nodeType) {
      case 9:
      case 11:
        t2 = (t2 = t2.documentElement) ? t2.namespaceURI : Id(null, "");
        break;
      default:
        t2 = Id(t2 = (e27 = 8 === e27 ? t2.parentNode : t2).namespaceURI || null, e27 = e27.tagName);
    }
    Kg(xm), Zg(xm, t2);
  }
  function Tm() {
    Kg(xm), Kg(wm), Kg(km);
  }
  function Rm(e27) {
    Sm(km.current);
    var t2 = Sm(xm.current), r2 = Id(t2, e27.type);
    t2 !== r2 && (Zg(wm, e27), Zg(xm, r2));
  }
  function Om(e27) {
    wm.current === e27 && (Kg(xm), Kg(wm));
  }
  var _m = Qg(0);
  function Pm(e27) {
    for (var t2 = e27; null !== t2; ) {
      if (13 === t2.tag) {
        var r2 = t2.memoizedState;
        if (null !== r2 && (null === (r2 = r2.dehydrated) || "$?" === r2.data || "$!" === r2.data))
          return t2;
      } else if (19 === t2.tag && void 0 !== t2.memoizedProps.revealOrder) {
        if (0 != (128 & t2.flags))
          return t2;
      } else if (null !== t2.child) {
        t2.child.return = t2, t2 = t2.child;
        continue;
      }
      if (t2 === e27)
        break;
      for (; null === t2.sibling; ) {
        if (null === t2.return || t2.return === e27)
          return null;
        t2 = t2.return;
      }
      t2.sibling.return = t2.return, t2 = t2.sibling;
    }
    return null;
  }
  var Mm = [];
  function Bm() {
    for (var e27 = 0; e27 < Mm.length; e27++)
      Mm[e27]._workInProgressVersionPrimary = null;
    Mm.length = 0;
  }
  var Am = Qc.ReactCurrentDispatcher;
  var Nm = Qc.ReactCurrentBatchConfig;
  var jm = 0;
  var Dm = null;
  var Lm = null;
  var Im = null;
  var zm = false;
  var Fm = false;
  var Um = 0;
  var Vm = 0;
  function Wm() {
    throw Error(jc(321));
  }
  function Hm(e27, t2) {
    if (null === t2)
      return false;
    for (var r2 = 0; r2 < t2.length && r2 < e27.length; r2++)
      if (!Nh(e27[r2], t2[r2]))
        return false;
    return true;
  }
  function $m(e27, t2, r2, n2, o2, i2) {
    if (jm = i2, Dm = t2, t2.memoizedState = null, t2.updateQueue = null, t2.lanes = 0, Am.current = null === e27 || null === e27.memoizedState ? Ry : Oy, e27 = r2(n2, o2), Fm) {
      i2 = 0;
      do {
        if (Fm = false, Um = 0, 25 <= i2)
          throw Error(jc(301));
        i2 += 1, Im = Lm = null, t2.updateQueue = null, Am.current = _y, e27 = r2(n2, o2);
      } while (Fm);
    }
    if (Am.current = Ty, t2 = null !== Lm && null !== Lm.next, jm = 0, Im = Lm = Dm = null, zm = false, t2)
      throw Error(jc(300));
    return e27;
  }
  function qm() {
    var e27 = 0 !== Um;
    return Um = 0, e27;
  }
  function Ym() {
    var e27 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return null === Im ? Dm.memoizedState = Im = e27 : Im = Im.next = e27, Im;
  }
  function Gm() {
    if (null === Lm) {
      var e27 = Dm.alternate;
      e27 = null !== e27 ? e27.memoizedState : null;
    } else
      e27 = Lm.next;
    var t2 = null === Im ? Dm.memoizedState : Im.next;
    if (null !== t2)
      Im = t2, Lm = e27;
    else {
      if (null === e27)
        throw Error(jc(310));
      e27 = { memoizedState: (Lm = e27).memoizedState, baseState: Lm.baseState, baseQueue: Lm.baseQueue, queue: Lm.queue, next: null }, null === Im ? Dm.memoizedState = Im = e27 : Im = Im.next = e27;
    }
    return Im;
  }
  function Xm(e27, t2) {
    return "function" == typeof t2 ? t2(e27) : t2;
  }
  function Qm(e27) {
    var t2 = Gm(), r2 = t2.queue;
    if (null === r2)
      throw Error(jc(311));
    r2.lastRenderedReducer = e27;
    var n2 = Lm, o2 = n2.baseQueue, i2 = r2.pending;
    if (null !== i2) {
      if (null !== o2) {
        var a2 = o2.next;
        o2.next = i2.next, i2.next = a2;
      }
      n2.baseQueue = o2 = i2, r2.pending = null;
    }
    if (null !== o2) {
      i2 = o2.next, n2 = n2.baseState;
      var l2 = a2 = null, u2 = null, s2 = i2;
      do {
        var c2 = s2.lane;
        if ((jm & c2) === c2)
          null !== u2 && (u2 = u2.next = { lane: 0, action: s2.action, hasEagerState: s2.hasEagerState, eagerState: s2.eagerState, next: null }), n2 = s2.hasEagerState ? s2.eagerState : e27(n2, s2.action);
        else {
          var d2 = { lane: c2, action: s2.action, hasEagerState: s2.hasEagerState, eagerState: s2.eagerState, next: null };
          null === u2 ? (l2 = u2 = d2, a2 = n2) : u2 = u2.next = d2, Dm.lanes |= c2, Jb |= c2;
        }
        s2 = s2.next;
      } while (null !== s2 && s2 !== i2);
      null === u2 ? a2 = n2 : u2.next = l2, Nh(n2, t2.memoizedState) || ($y = true), t2.memoizedState = n2, t2.baseState = a2, t2.baseQueue = u2, r2.lastRenderedState = n2;
    }
    if (null !== (e27 = r2.interleaved)) {
      o2 = e27;
      do {
        i2 = o2.lane, Dm.lanes |= i2, Jb |= i2, o2 = o2.next;
      } while (o2 !== e27);
    } else
      null === o2 && (r2.lanes = 0);
    return [t2.memoizedState, r2.dispatch];
  }
  function Km(e27) {
    var t2 = Gm(), r2 = t2.queue;
    if (null === r2)
      throw Error(jc(311));
    r2.lastRenderedReducer = e27;
    var n2 = r2.dispatch, o2 = r2.pending, i2 = t2.memoizedState;
    if (null !== o2) {
      r2.pending = null;
      var a2 = o2 = o2.next;
      do {
        i2 = e27(i2, a2.action), a2 = a2.next;
      } while (a2 !== o2);
      Nh(i2, t2.memoizedState) || ($y = true), t2.memoizedState = i2, null === t2.baseQueue && (t2.baseState = i2), r2.lastRenderedState = i2;
    }
    return [i2, n2];
  }
  function Zm() {
  }
  function Jm(e27, t2) {
    var r2 = Dm, n2 = Gm(), o2 = t2(), i2 = !Nh(n2.memoizedState, o2);
    if (i2 && (n2.memoizedState = o2, $y = true), n2 = n2.queue, cy(ry.bind(null, r2, n2, e27), [e27]), n2.getSnapshot !== t2 || i2 || null !== Im && 1 & Im.memoizedState.tag) {
      if (r2.flags |= 2048, iy(9, ty.bind(null, r2, n2, o2, t2), void 0, null), null === qb)
        throw Error(jc(349));
      0 != (30 & jm) || ey(r2, t2, o2);
    }
    return o2;
  }
  function ey(e27, t2, r2) {
    e27.flags |= 16384, e27 = { getSnapshot: t2, value: r2 }, null === (t2 = Dm.updateQueue) ? (t2 = { lastEffect: null, stores: null }, Dm.updateQueue = t2, t2.stores = [e27]) : null === (r2 = t2.stores) ? t2.stores = [e27] : r2.push(e27);
  }
  function ty(e27, t2, r2, n2) {
    t2.value = r2, t2.getSnapshot = n2, ny(t2) && yC(e27, 1, -1);
  }
  function ry(e27, t2, r2) {
    return r2(function() {
      ny(t2) && yC(e27, 1, -1);
    });
  }
  function ny(e27) {
    var t2 = e27.getSnapshot;
    e27 = e27.value;
    try {
      var r2 = t2();
      return !Nh(e27, r2);
    } catch (e28) {
      return true;
    }
  }
  function oy(e27) {
    var t2 = Ym();
    return "function" == typeof e27 && (e27 = e27()), t2.memoizedState = t2.baseState = e27, e27 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Xm, lastRenderedState: e27 }, t2.queue = e27, e27 = e27.dispatch = xy.bind(null, Dm, e27), [t2.memoizedState, e27];
  }
  function iy(e27, t2, r2, n2) {
    return e27 = { tag: e27, create: t2, destroy: r2, deps: n2, next: null }, null === (t2 = Dm.updateQueue) ? (t2 = { lastEffect: null, stores: null }, Dm.updateQueue = t2, t2.lastEffect = e27.next = e27) : null === (r2 = t2.lastEffect) ? t2.lastEffect = e27.next = e27 : (n2 = r2.next, r2.next = e27, e27.next = n2, t2.lastEffect = e27), e27;
  }
  function ay() {
    return Gm().memoizedState;
  }
  function ly(e27, t2, r2, n2) {
    var o2 = Ym();
    Dm.flags |= e27, o2.memoizedState = iy(1 | t2, r2, void 0, void 0 === n2 ? null : n2);
  }
  function uy(e27, t2, r2, n2) {
    var o2 = Gm();
    n2 = void 0 === n2 ? null : n2;
    var i2 = void 0;
    if (null !== Lm) {
      var a2 = Lm.memoizedState;
      if (i2 = a2.destroy, null !== n2 && Hm(n2, a2.deps))
        return void (o2.memoizedState = iy(t2, r2, i2, n2));
    }
    Dm.flags |= e27, o2.memoizedState = iy(1 | t2, r2, i2, n2);
  }
  function sy(e27, t2) {
    return ly(8390656, 8, e27, t2);
  }
  function cy(e27, t2) {
    return uy(2048, 8, e27, t2);
  }
  function dy(e27, t2) {
    return uy(4, 2, e27, t2);
  }
  function fy(e27, t2) {
    return uy(4, 4, e27, t2);
  }
  function py(e27, t2) {
    return "function" == typeof t2 ? (e27 = e27(), t2(e27), function() {
      t2(null);
    }) : null != t2 ? (e27 = e27(), t2.current = e27, function() {
      t2.current = null;
    }) : void 0;
  }
  function hy(e27, t2, r2) {
    return r2 = null != r2 ? r2.concat([e27]) : null, uy(4, 4, py.bind(null, t2, e27), r2);
  }
  function gy() {
  }
  function vy(e27, t2) {
    var r2 = Gm();
    t2 = void 0 === t2 ? null : t2;
    var n2 = r2.memoizedState;
    return null !== n2 && null !== t2 && Hm(t2, n2[1]) ? n2[0] : (r2.memoizedState = [e27, t2], e27);
  }
  function my(e27, t2) {
    var r2 = Gm();
    t2 = void 0 === t2 ? null : t2;
    var n2 = r2.memoizedState;
    return null !== n2 && null !== t2 && Hm(t2, n2[1]) ? n2[0] : (e27 = e27(), r2.memoizedState = [e27, t2], e27);
  }
  function yy(e27, t2) {
    var r2 = Gf;
    Gf = 0 !== r2 && 4 > r2 ? r2 : 4, e27(true);
    var n2 = Nm.transition;
    Nm.transition = {};
    try {
      e27(false), t2();
    } finally {
      Gf = r2, Nm.transition = n2;
    }
  }
  function by() {
    return Gm().memoizedState;
  }
  function Cy(e27, t2, r2) {
    var n2 = mC(e27);
    r2 = { lane: n2, action: r2, hasEagerState: false, eagerState: null, next: null }, wy(e27) ? ky(t2, r2) : (Sy(e27, t2, r2), null !== (e27 = yC(e27, n2, r2 = vC())) && Ey(e27, t2, n2));
  }
  function xy(e27, t2, r2) {
    var n2 = mC(e27), o2 = { lane: n2, action: r2, hasEagerState: false, eagerState: null, next: null };
    if (wy(e27))
      ky(t2, o2);
    else {
      Sy(e27, t2, o2);
      var i2 = e27.alternate;
      if (0 === e27.lanes && (null === i2 || 0 === i2.lanes) && null !== (i2 = t2.lastRenderedReducer))
        try {
          var a2 = t2.lastRenderedState, l2 = i2(a2, r2);
          if (o2.hasEagerState = true, o2.eagerState = l2, Nh(l2, a2))
            return;
        } catch (e28) {
        }
      null !== (e27 = yC(e27, n2, r2 = vC())) && Ey(e27, t2, n2);
    }
  }
  function wy(e27) {
    var t2 = e27.alternate;
    return e27 === Dm || null !== t2 && t2 === Dm;
  }
  function ky(e27, t2) {
    Fm = zm = true;
    var r2 = e27.pending;
    null === r2 ? t2.next = t2 : (t2.next = r2.next, r2.next = t2), e27.pending = t2;
  }
  function Sy(e27, t2, r2) {
    null !== qb && 0 != (1 & e27.mode) && 0 == (2 & $b) ? (null === (e27 = t2.interleaved) ? (r2.next = r2, null === Tv ? Tv = [t2] : Tv.push(t2)) : (r2.next = e27.next, e27.next = r2), t2.interleaved = r2) : (null === (e27 = t2.pending) ? r2.next = r2 : (r2.next = e27.next, e27.next = r2), t2.pending = r2);
  }
  function Ey(e27, t2, r2) {
    if (0 != (4194240 & r2)) {
      var n2 = t2.lanes;
      r2 |= n2 &= e27.pendingLanes, t2.lanes = r2, Yf(e27, r2);
    }
  }
  var Ty = { readContext: Ev, useCallback: Wm, useContext: Wm, useEffect: Wm, useImperativeHandle: Wm, useInsertionEffect: Wm, useLayoutEffect: Wm, useMemo: Wm, useReducer: Wm, useRef: Wm, useState: Wm, useDebugValue: Wm, useDeferredValue: Wm, useTransition: Wm, useMutableSource: Wm, useSyncExternalStore: Wm, useId: Wm, unstable_isNewReconciler: false };
  var Ry = { readContext: Ev, useCallback: function(e27, t2) {
    return Ym().memoizedState = [e27, void 0 === t2 ? null : t2], e27;
  }, useContext: Ev, useEffect: sy, useImperativeHandle: function(e27, t2, r2) {
    return r2 = null != r2 ? r2.concat([e27]) : null, ly(4194308, 4, py.bind(null, t2, e27), r2);
  }, useLayoutEffect: function(e27, t2) {
    return ly(4194308, 4, e27, t2);
  }, useInsertionEffect: function(e27, t2) {
    return ly(4, 2, e27, t2);
  }, useMemo: function(e27, t2) {
    var r2 = Ym();
    return t2 = void 0 === t2 ? null : t2, e27 = e27(), r2.memoizedState = [e27, t2], e27;
  }, useReducer: function(e27, t2, r2) {
    var n2 = Ym();
    return t2 = void 0 !== r2 ? r2(t2) : t2, n2.memoizedState = n2.baseState = t2, e27 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: e27, lastRenderedState: t2 }, n2.queue = e27, e27 = e27.dispatch = Cy.bind(null, Dm, e27), [n2.memoizedState, e27];
  }, useRef: function(e27) {
    return e27 = { current: e27 }, Ym().memoizedState = e27;
  }, useState: oy, useDebugValue: gy, useDeferredValue: function(e27) {
    var t2 = oy(e27), r2 = t2[0], n2 = t2[1];
    return sy(function() {
      var t3 = Nm.transition;
      Nm.transition = {};
      try {
        n2(e27);
      } finally {
        Nm.transition = t3;
      }
    }, [e27]), r2;
  }, useTransition: function() {
    var e27 = oy(false), t2 = e27[0];
    return e27 = yy.bind(null, e27[1]), Ym().memoizedState = e27, [t2, e27];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(e27, t2, r2) {
    var n2 = Dm, o2 = Ym();
    if (om) {
      if (void 0 === r2)
        throw Error(jc(407));
      r2 = r2();
    } else {
      if (r2 = t2(), null === qb)
        throw Error(jc(349));
      0 != (30 & jm) || ey(n2, t2, r2);
    }
    o2.memoizedState = r2;
    var i2 = { value: r2, getSnapshot: t2 };
    return o2.queue = i2, sy(ry.bind(null, n2, i2, e27), [e27]), n2.flags |= 2048, iy(9, ty.bind(null, n2, i2, r2, t2), void 0, null), r2;
  }, useId: function() {
    var e27 = Ym(), t2 = qb.identifierPrefix;
    if (om) {
      var r2 = Kv;
      t2 = ":" + t2 + "R" + (r2 = (Qv & ~(1 << 32 - Df(Qv) - 1)).toString(32) + r2), 0 < (r2 = Um++) && (t2 += "H" + r2.toString(32)), t2 += ":";
    } else
      t2 = ":" + t2 + "r" + (r2 = Vm++).toString(32) + ":";
    return e27.memoizedState = t2;
  }, unstable_isNewReconciler: false };
  var Oy = { readContext: Ev, useCallback: vy, useContext: Ev, useEffect: cy, useImperativeHandle: hy, useInsertionEffect: dy, useLayoutEffect: fy, useMemo: my, useReducer: Qm, useRef: ay, useState: function() {
    return Qm(Xm);
  }, useDebugValue: gy, useDeferredValue: function(e27) {
    var t2 = Qm(Xm), r2 = t2[0], n2 = t2[1];
    return cy(function() {
      var t3 = Nm.transition;
      Nm.transition = {};
      try {
        n2(e27);
      } finally {
        Nm.transition = t3;
      }
    }, [e27]), r2;
  }, useTransition: function() {
    return [Qm(Xm)[0], Gm().memoizedState];
  }, useMutableSource: Zm, useSyncExternalStore: Jm, useId: by, unstable_isNewReconciler: false };
  var _y = { readContext: Ev, useCallback: vy, useContext: Ev, useEffect: cy, useImperativeHandle: hy, useInsertionEffect: dy, useLayoutEffect: fy, useMemo: my, useReducer: Km, useRef: ay, useState: function() {
    return Km(Xm);
  }, useDebugValue: gy, useDeferredValue: function(e27) {
    var t2 = Km(Xm), r2 = t2[0], n2 = t2[1];
    return cy(function() {
      var t3 = Nm.transition;
      Nm.transition = {};
      try {
        n2(e27);
      } finally {
        Nm.transition = t3;
      }
    }, [e27]), r2;
  }, useTransition: function() {
    return [Km(Xm)[0], Gm().memoizedState];
  }, useMutableSource: Zm, useSyncExternalStore: Jm, useId: by, unstable_isNewReconciler: false };
  function Py(e27, t2) {
    try {
      var r2 = "", n2 = t2;
      do {
        r2 += md(n2), n2 = n2.return;
      } while (n2);
      var o2 = r2;
    } catch (e28) {
      o2 = "\nError generating stack: " + e28.message + "\n" + e28.stack;
    }
    return { value: e27, source: t2, stack: o2 };
  }
  function My(e27, t2) {
    try {
      console.error(t2.value);
    } catch (e28) {
      setTimeout(function() {
        throw e28;
      });
    }
  }
  var By;
  var Ay;
  var Ny;
  var jy = "function" == typeof WeakMap ? WeakMap : Map;
  function Dy(e27, t2, r2) {
    (r2 = Pv(-1, r2)).tag = 3, r2.payload = { element: null };
    var n2 = t2.value;
    return r2.callback = function() {
      aC || (aC = true, lC = n2), My(0, t2);
    }, r2;
  }
  function Ly(e27, t2, r2) {
    (r2 = Pv(-1, r2)).tag = 3;
    var n2 = e27.type.getDerivedStateFromError;
    if ("function" == typeof n2) {
      var o2 = t2.value;
      r2.payload = function() {
        return n2(o2);
      }, r2.callback = function() {
        My(0, t2);
      };
    }
    var i2 = e27.stateNode;
    return null !== i2 && "function" == typeof i2.componentDidCatch && (r2.callback = function() {
      My(0, t2), "function" != typeof n2 && (null === uC ? uC = /* @__PURE__ */ new Set([this]) : uC.add(this));
      var e28 = t2.stack;
      this.componentDidCatch(t2.value, { componentStack: null !== e28 ? e28 : "" });
    }), r2;
  }
  function Iy(e27, t2, r2) {
    var n2 = e27.pingCache;
    if (null === n2) {
      n2 = e27.pingCache = new jy();
      var o2 = /* @__PURE__ */ new Set();
      n2.set(t2, o2);
    } else
      void 0 === (o2 = n2.get(t2)) && (o2 = /* @__PURE__ */ new Set(), n2.set(t2, o2));
    o2.has(r2) || (o2.add(r2), e27 = VC.bind(null, e27, t2, r2), t2.then(e27, e27));
  }
  function zy(e27) {
    do {
      var t2;
      if ((t2 = 13 === e27.tag) && (t2 = null === (t2 = e27.memoizedState) || null !== t2.dehydrated), t2)
        return e27;
      e27 = e27.return;
    } while (null !== e27);
    return null;
  }
  function Fy(e27, t2, r2, n2, o2) {
    return 0 == (1 & e27.mode) ? (e27 === t2 ? e27.flags |= 65536 : (e27.flags |= 128, r2.flags |= 131072, r2.flags &= -52805, 1 === r2.tag && (null === r2.alternate ? r2.tag = 17 : ((t2 = Pv(-1, 1)).tag = 2, Mv(r2, t2))), r2.lanes |= 1), e27) : (e27.flags |= 65536, e27.lanes = o2, e27);
  }
  function Uy(e27, t2) {
    if (!om)
      switch (e27.tailMode) {
        case "hidden":
          t2 = e27.tail;
          for (var r2 = null; null !== t2; )
            null !== t2.alternate && (r2 = t2), t2 = t2.sibling;
          null === r2 ? e27.tail = null : r2.sibling = null;
          break;
        case "collapsed":
          r2 = e27.tail;
          for (var n2 = null; null !== r2; )
            null !== r2.alternate && (n2 = r2), r2 = r2.sibling;
          null === n2 ? t2 || null === e27.tail ? e27.tail = null : e27.tail.sibling = null : n2.sibling = null;
      }
  }
  function Vy(e27) {
    var t2 = null !== e27.alternate && e27.alternate.child === e27.child, r2 = 0, n2 = 0;
    if (t2)
      for (var o2 = e27.child; null !== o2; )
        r2 |= o2.lanes | o2.childLanes, n2 |= 14680064 & o2.subtreeFlags, n2 |= 14680064 & o2.flags, o2.return = e27, o2 = o2.sibling;
    else
      for (o2 = e27.child; null !== o2; )
        r2 |= o2.lanes | o2.childLanes, n2 |= o2.subtreeFlags, n2 |= o2.flags, o2.return = e27, o2 = o2.sibling;
    return e27.subtreeFlags |= n2, e27.childLanes = r2, t2;
  }
  function Wy(e27, t2, r2) {
    var n2 = t2.pendingProps;
    switch (tm(t2), t2.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return Vy(t2), null;
      case 1:
      case 17:
        return ov(t2.type) && iv(), Vy(t2), null;
      case 3:
        return n2 = t2.stateNode, Tm(), Kg(tv), Kg(ev), Bm(), n2.pendingContext && (n2.context = n2.pendingContext, n2.pendingContext = null), null !== e27 && null !== e27.child || (dm(t2) ? t2.flags |= 4 : null === e27 || e27.memoizedState.isDehydrated && 0 == (256 & t2.flags) || (t2.flags |= 1024, null !== im && (kC(im), im = null))), Vy(t2), null;
      case 5:
        Om(t2);
        var o2 = Sm(km.current);
        if (r2 = t2.type, null !== e27 && null != t2.stateNode)
          Ay(e27, t2, r2, n2), e27.ref !== t2.ref && (t2.flags |= 512, t2.flags |= 2097152);
        else {
          if (!n2) {
            if (null === t2.stateNode)
              throw Error(jc(166));
            return Vy(t2), null;
          }
          if (e27 = Sm(xm.current), dm(t2)) {
            n2 = t2.stateNode, r2 = t2.type;
            var i2 = t2.memoizedProps;
            switch (n2[Ig] = t2, n2[zg] = i2, e27 = 0 != (1 & t2.mode), r2) {
              case "dialog":
                fg("cancel", n2), fg("close", n2);
                break;
              case "iframe":
              case "object":
              case "embed":
                fg("load", n2);
                break;
              case "video":
              case "audio":
                for (o2 = 0; o2 < ug.length; o2++)
                  fg(ug[o2], n2);
                break;
              case "source":
                fg("error", n2);
                break;
              case "img":
              case "image":
              case "link":
                fg("error", n2), fg("load", n2);
                break;
              case "details":
                fg("toggle", n2);
                break;
              case "input":
                Td(n2, i2), fg("invalid", n2);
                break;
              case "select":
                n2._wrapperState = { wasMultiple: !!i2.multiple }, fg("invalid", n2);
                break;
              case "textarea":
                Nd(n2, i2), fg("invalid", n2);
            }
            for (var a2 in Yd(r2, i2), o2 = null, i2)
              if (i2.hasOwnProperty(a2)) {
                var l2 = i2[a2];
                "children" === a2 ? "string" == typeof l2 ? n2.textContent !== l2 && (Eg(n2.textContent, l2, e27), o2 = ["children", l2]) : "number" == typeof l2 && n2.textContent !== "" + l2 && (Eg(n2.textContent, l2, e27), o2 = ["children", "" + l2]) : Lc.hasOwnProperty(a2) && null != l2 && "onScroll" === a2 && fg("scroll", n2);
              }
            switch (r2) {
              case "input":
                wd(n2), _d(n2, i2, true);
                break;
              case "textarea":
                wd(n2), Dd(n2);
                break;
              case "select":
              case "option":
                break;
              default:
                "function" == typeof i2.onClick && (n2.onclick = Tg);
            }
            n2 = o2, t2.updateQueue = n2, null !== n2 && (t2.flags |= 4);
          } else {
            a2 = 9 === o2.nodeType ? o2 : o2.ownerDocument, "http://www.w3.org/1999/xhtml" === e27 && (e27 = Ld(r2)), "http://www.w3.org/1999/xhtml" === e27 ? "script" === r2 ? ((e27 = a2.createElement("div")).innerHTML = "<script><\/script>", e27 = e27.removeChild(e27.firstChild)) : "string" == typeof n2.is ? e27 = a2.createElement(r2, { is: n2.is }) : (e27 = a2.createElement(r2), "select" === r2 && (a2 = e27, n2.multiple ? a2.multiple = true : n2.size && (a2.size = n2.size))) : e27 = a2.createElementNS(e27, r2), e27[Ig] = t2, e27[zg] = n2, By(e27, t2), t2.stateNode = e27;
            e: {
              switch (a2 = Gd(r2, n2), r2) {
                case "dialog":
                  fg("cancel", e27), fg("close", e27), o2 = n2;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  fg("load", e27), o2 = n2;
                  break;
                case "video":
                case "audio":
                  for (o2 = 0; o2 < ug.length; o2++)
                    fg(ug[o2], e27);
                  o2 = n2;
                  break;
                case "source":
                  fg("error", e27), o2 = n2;
                  break;
                case "img":
                case "image":
                case "link":
                  fg("error", e27), fg("load", e27), o2 = n2;
                  break;
                case "details":
                  fg("toggle", e27), o2 = n2;
                  break;
                case "input":
                  Td(e27, n2), o2 = Ed(e27, n2), fg("invalid", e27);
                  break;
                case "option":
                default:
                  o2 = n2;
                  break;
                case "select":
                  e27._wrapperState = { wasMultiple: !!n2.multiple }, o2 = pd({}, n2, { value: void 0 }), fg("invalid", e27);
                  break;
                case "textarea":
                  Nd(e27, n2), o2 = Ad(e27, n2), fg("invalid", e27);
              }
              for (i2 in Yd(r2, o2), l2 = o2)
                if (l2.hasOwnProperty(i2)) {
                  var u2 = l2[i2];
                  "style" === i2 ? $d(e27, u2) : "dangerouslySetInnerHTML" === i2 ? null != (u2 = u2 ? u2.__html : void 0) && Fd(e27, u2) : "children" === i2 ? "string" == typeof u2 ? ("textarea" !== r2 || "" !== u2) && Ud(e27, u2) : "number" == typeof u2 && Ud(e27, "" + u2) : "suppressContentEditableWarning" !== i2 && "suppressHydrationWarning" !== i2 && "autoFocus" !== i2 && (Lc.hasOwnProperty(i2) ? null != u2 && "onScroll" === i2 && fg("scroll", e27) : null != u2 && Xc(e27, i2, u2, a2));
                }
              switch (r2) {
                case "input":
                  wd(e27), _d(e27, n2, false);
                  break;
                case "textarea":
                  wd(e27), Dd(e27);
                  break;
                case "option":
                  null != n2.value && e27.setAttribute("value", "" + Cd(n2.value));
                  break;
                case "select":
                  e27.multiple = !!n2.multiple, null != (i2 = n2.value) ? Bd(e27, !!n2.multiple, i2, false) : null != n2.defaultValue && Bd(e27, !!n2.multiple, n2.defaultValue, true);
                  break;
                default:
                  "function" == typeof o2.onClick && (e27.onclick = Tg);
              }
              switch (r2) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  n2 = !!n2.autoFocus;
                  break e;
                case "img":
                  n2 = true;
                  break e;
                default:
                  n2 = false;
              }
            }
            n2 && (t2.flags |= 4);
          }
          null !== t2.ref && (t2.flags |= 512, t2.flags |= 2097152);
        }
        return Vy(t2), null;
      case 6:
        if (e27 && null != t2.stateNode)
          Ny(0, t2, e27.memoizedProps, n2);
        else {
          if ("string" != typeof n2 && null === t2.stateNode)
            throw Error(jc(166));
          if (r2 = Sm(km.current), Sm(xm.current), dm(t2)) {
            if (n2 = t2.stateNode, r2 = t2.memoizedProps, n2[Ig] = t2, (i2 = n2.nodeValue !== r2) && null !== (e27 = rm))
              switch (a2 = 0 != (1 & e27.mode), e27.tag) {
                case 3:
                  Eg(n2.nodeValue, r2, a2);
                  break;
                case 5:
                  true !== e27.memoizedProps[void 0] && Eg(n2.nodeValue, r2, a2);
              }
            i2 && (t2.flags |= 4);
          } else
            (n2 = (9 === r2.nodeType ? r2 : r2.ownerDocument).createTextNode(n2))[Ig] = t2, t2.stateNode = n2;
        }
        return Vy(t2), null;
      case 13:
        if (Kg(_m), n2 = t2.memoizedState, om && null !== nm && 0 != (1 & t2.mode) && 0 == (128 & t2.flags)) {
          for (n2 = nm; n2; )
            n2 = jg(n2.nextSibling);
          return fm(), t2.flags |= 98560, t2;
        }
        if (null !== n2 && null !== n2.dehydrated) {
          if (n2 = dm(t2), null === e27) {
            if (!n2)
              throw Error(jc(318));
            if (!(n2 = null !== (n2 = t2.memoizedState) ? n2.dehydrated : null))
              throw Error(jc(317));
            n2[Ig] = t2;
          } else
            fm(), 0 == (128 & t2.flags) && (t2.memoizedState = null), t2.flags |= 4;
          return Vy(t2), null;
        }
        return null !== im && (kC(im), im = null), 0 != (128 & t2.flags) ? (t2.lanes = r2, t2) : (n2 = null !== n2, r2 = false, null === e27 ? dm(t2) : r2 = null !== e27.memoizedState, n2 && !r2 && (t2.child.flags |= 8192, 0 != (1 & t2.mode) && (null === e27 || 0 != (1 & _m.current) ? 0 === Kb && (Kb = 3) : BC())), null !== t2.updateQueue && (t2.flags |= 4), Vy(t2), null);
      case 4:
        return Tm(), null === e27 && gg(t2.stateNode.containerInfo), Vy(t2), null;
      case 10:
        return wv(t2.type._context), Vy(t2), null;
      case 19:
        if (Kg(_m), null === (i2 = t2.memoizedState))
          return Vy(t2), null;
        if (n2 = 0 != (128 & t2.flags), null === (a2 = i2.rendering))
          if (n2)
            Uy(i2, false);
          else {
            if (0 !== Kb || null !== e27 && 0 != (128 & e27.flags))
              for (e27 = t2.child; null !== e27; ) {
                if (null !== (a2 = Pm(e27))) {
                  for (t2.flags |= 128, Uy(i2, false), null !== (n2 = a2.updateQueue) && (t2.updateQueue = n2, t2.flags |= 4), t2.subtreeFlags = 0, n2 = r2, r2 = t2.child; null !== r2; )
                    e27 = n2, (i2 = r2).flags &= 14680066, null === (a2 = i2.alternate) ? (i2.childLanes = 0, i2.lanes = e27, i2.child = null, i2.subtreeFlags = 0, i2.memoizedProps = null, i2.memoizedState = null, i2.updateQueue = null, i2.dependencies = null, i2.stateNode = null) : (i2.childLanes = a2.childLanes, i2.lanes = a2.lanes, i2.child = a2.child, i2.subtreeFlags = 0, i2.deletions = null, i2.memoizedProps = a2.memoizedProps, i2.memoizedState = a2.memoizedState, i2.updateQueue = a2.updateQueue, i2.type = a2.type, e27 = a2.dependencies, i2.dependencies = null === e27 ? null : { lanes: e27.lanes, firstContext: e27.firstContext }), r2 = r2.sibling;
                  return Zg(_m, 1 & _m.current | 2), t2.child;
                }
                e27 = e27.sibling;
              }
            null !== i2.tail && Rf() > iC && (t2.flags |= 128, n2 = true, Uy(i2, false), t2.lanes = 4194304);
          }
        else {
          if (!n2)
            if (null !== (e27 = Pm(a2))) {
              if (t2.flags |= 128, n2 = true, null !== (r2 = e27.updateQueue) && (t2.updateQueue = r2, t2.flags |= 4), Uy(i2, true), null === i2.tail && "hidden" === i2.tailMode && !a2.alternate && !om)
                return Vy(t2), null;
            } else
              2 * Rf() - i2.renderingStartTime > iC && 1073741824 !== r2 && (t2.flags |= 128, n2 = true, Uy(i2, false), t2.lanes = 4194304);
          i2.isBackwards ? (a2.sibling = t2.child, t2.child = a2) : (null !== (r2 = i2.last) ? r2.sibling = a2 : t2.child = a2, i2.last = a2);
        }
        return null !== i2.tail ? (t2 = i2.tail, i2.rendering = t2, i2.tail = t2.sibling, i2.renderingStartTime = Rf(), t2.sibling = null, r2 = _m.current, Zg(_m, n2 ? 1 & r2 | 2 : 1 & r2), t2) : (Vy(t2), null);
      case 22:
      case 23:
        return OC(), n2 = null !== t2.memoizedState, null !== e27 && null !== e27.memoizedState !== n2 && (t2.flags |= 8192), n2 && 0 != (1 & t2.mode) ? 0 != (1073741824 & Xb) && (Vy(t2), 6 & t2.subtreeFlags && (t2.flags |= 8192)) : Vy(t2), null;
      case 24:
      case 25:
        return null;
    }
    throw Error(jc(156, t2.tag));
  }
  By = function(e27, t2) {
    for (var r2 = t2.child; null !== r2; ) {
      if (5 === r2.tag || 6 === r2.tag)
        e27.appendChild(r2.stateNode);
      else if (4 !== r2.tag && null !== r2.child) {
        r2.child.return = r2, r2 = r2.child;
        continue;
      }
      if (r2 === t2)
        break;
      for (; null === r2.sibling; ) {
        if (null === r2.return || r2.return === t2)
          return;
        r2 = r2.return;
      }
      r2.sibling.return = r2.return, r2 = r2.sibling;
    }
  }, Ay = function(e27, t2, r2, n2) {
    var o2 = e27.memoizedProps;
    if (o2 !== n2) {
      e27 = t2.stateNode, Sm(xm.current);
      var i2, a2 = null;
      switch (r2) {
        case "input":
          o2 = Ed(e27, o2), n2 = Ed(e27, n2), a2 = [];
          break;
        case "select":
          o2 = pd({}, o2, { value: void 0 }), n2 = pd({}, n2, { value: void 0 }), a2 = [];
          break;
        case "textarea":
          o2 = Ad(e27, o2), n2 = Ad(e27, n2), a2 = [];
          break;
        default:
          "function" != typeof o2.onClick && "function" == typeof n2.onClick && (e27.onclick = Tg);
      }
      for (s2 in Yd(r2, n2), r2 = null, o2)
        if (!n2.hasOwnProperty(s2) && o2.hasOwnProperty(s2) && null != o2[s2])
          if ("style" === s2) {
            var l2 = o2[s2];
            for (i2 in l2)
              l2.hasOwnProperty(i2) && (r2 || (r2 = {}), r2[i2] = "");
          } else
            "dangerouslySetInnerHTML" !== s2 && "children" !== s2 && "suppressContentEditableWarning" !== s2 && "suppressHydrationWarning" !== s2 && "autoFocus" !== s2 && (Lc.hasOwnProperty(s2) ? a2 || (a2 = []) : (a2 = a2 || []).push(s2, null));
      for (s2 in n2) {
        var u2 = n2[s2];
        if (l2 = null != o2 ? o2[s2] : void 0, n2.hasOwnProperty(s2) && u2 !== l2 && (null != u2 || null != l2))
          if ("style" === s2)
            if (l2) {
              for (i2 in l2)
                !l2.hasOwnProperty(i2) || u2 && u2.hasOwnProperty(i2) || (r2 || (r2 = {}), r2[i2] = "");
              for (i2 in u2)
                u2.hasOwnProperty(i2) && l2[i2] !== u2[i2] && (r2 || (r2 = {}), r2[i2] = u2[i2]);
            } else
              r2 || (a2 || (a2 = []), a2.push(s2, r2)), r2 = u2;
          else
            "dangerouslySetInnerHTML" === s2 ? (u2 = u2 ? u2.__html : void 0, l2 = l2 ? l2.__html : void 0, null != u2 && l2 !== u2 && (a2 = a2 || []).push(s2, u2)) : "children" === s2 ? "string" != typeof u2 && "number" != typeof u2 || (a2 = a2 || []).push(s2, "" + u2) : "suppressContentEditableWarning" !== s2 && "suppressHydrationWarning" !== s2 && (Lc.hasOwnProperty(s2) ? (null != u2 && "onScroll" === s2 && fg("scroll", e27), a2 || l2 === u2 || (a2 = [])) : (a2 = a2 || []).push(s2, u2));
      }
      r2 && (a2 = a2 || []).push("style", r2);
      var s2 = a2;
      (t2.updateQueue = s2) && (t2.flags |= 4);
    }
  }, Ny = function(e27, t2, r2, n2) {
    r2 !== n2 && (t2.flags |= 4);
  };
  var Hy = Qc.ReactCurrentOwner;
  var $y = false;
  function qy(e27, t2, r2, n2) {
    t2.child = null === e27 ? bm(t2, null, r2, n2) : ym(t2, e27.child, r2, n2);
  }
  function Yy(e27, t2, r2, n2, o2) {
    r2 = r2.render;
    var i2 = t2.ref;
    return Sv(t2, o2), n2 = $m(e27, t2, r2, n2, i2, o2), r2 = qm(), null === e27 || $y ? (om && r2 && em(t2), t2.flags |= 1, qy(e27, t2, n2, o2), t2.child) : (t2.updateQueue = e27.updateQueue, t2.flags &= -2053, e27.lanes &= ~o2, pb(e27, t2, o2));
  }
  function Gy(e27, t2, r2, n2, o2) {
    if (null === e27) {
      var i2 = r2.type;
      return "function" != typeof i2 || XC(i2) || void 0 !== i2.defaultProps || null !== r2.compare || void 0 !== r2.defaultProps ? ((e27 = KC(r2.type, null, n2, t2, t2.mode, o2)).ref = t2.ref, e27.return = t2, t2.child = e27) : (t2.tag = 15, t2.type = i2, Xy(e27, t2, i2, n2, o2));
    }
    if (i2 = e27.child, 0 == (e27.lanes & o2)) {
      var a2 = i2.memoizedProps;
      if ((r2 = null !== (r2 = r2.compare) ? r2 : jh)(a2, n2) && e27.ref === t2.ref)
        return pb(e27, t2, o2);
    }
    return t2.flags |= 1, (e27 = QC(i2, n2)).ref = t2.ref, e27.return = t2, t2.child = e27;
  }
  function Xy(e27, t2, r2, n2, o2) {
    if (null !== e27 && jh(e27.memoizedProps, n2) && e27.ref === t2.ref) {
      if ($y = false, 0 == (e27.lanes & o2))
        return t2.lanes = e27.lanes, pb(e27, t2, o2);
      0 != (131072 & e27.flags) && ($y = true);
    }
    return Zy(e27, t2, r2, n2, o2);
  }
  function Qy(e27, t2, r2) {
    var n2 = t2.pendingProps, o2 = n2.children, i2 = null !== e27 ? e27.memoizedState : null;
    if ("hidden" === n2.mode)
      if (0 == (1 & t2.mode))
        t2.memoizedState = { baseLanes: 0, cachePool: null }, Zg(Qb, Xb), Xb |= r2;
      else {
        if (0 == (1073741824 & r2))
          return e27 = null !== i2 ? i2.baseLanes | r2 : r2, t2.lanes = t2.childLanes = 1073741824, t2.memoizedState = { baseLanes: e27, cachePool: null }, t2.updateQueue = null, Zg(Qb, Xb), Xb |= e27, null;
        t2.memoizedState = { baseLanes: 0, cachePool: null }, n2 = null !== i2 ? i2.baseLanes : r2, Zg(Qb, Xb), Xb |= n2;
      }
    else
      null !== i2 ? (n2 = i2.baseLanes | r2, t2.memoizedState = null) : n2 = r2, Zg(Qb, Xb), Xb |= n2;
    return qy(e27, t2, o2, r2), t2.child;
  }
  function Ky(e27, t2) {
    var r2 = t2.ref;
    (null === e27 && null !== r2 || null !== e27 && e27.ref !== r2) && (t2.flags |= 512, t2.flags |= 2097152);
  }
  function Zy(e27, t2, r2, n2, o2) {
    var i2 = ov(r2) ? rv : ev.current;
    return i2 = nv(t2, i2), Sv(t2, o2), r2 = $m(e27, t2, r2, n2, i2, o2), n2 = qm(), null === e27 || $y ? (om && n2 && em(t2), t2.flags |= 1, qy(e27, t2, r2, o2), t2.child) : (t2.updateQueue = e27.updateQueue, t2.flags &= -2053, e27.lanes &= ~o2, pb(e27, t2, o2));
  }
  function Jy(e27, t2, r2, n2, o2) {
    if (ov(r2)) {
      var i2 = true;
      uv(t2);
    } else
      i2 = false;
    if (Sv(t2, o2), null === t2.stateNode)
      null !== e27 && (e27.alternate = null, t2.alternate = null, t2.flags |= 2), Fv(t2, r2, n2), Vv(t2, r2, n2, o2), n2 = true;
    else if (null === e27) {
      var a2 = t2.stateNode, l2 = t2.memoizedProps;
      a2.props = l2;
      var u2 = a2.context, s2 = r2.contextType;
      "object" == typeof s2 && null !== s2 ? s2 = Ev(s2) : s2 = nv(t2, s2 = ov(r2) ? rv : ev.current);
      var c2 = r2.getDerivedStateFromProps, d2 = "function" == typeof c2 || "function" == typeof a2.getSnapshotBeforeUpdate;
      d2 || "function" != typeof a2.UNSAFE_componentWillReceiveProps && "function" != typeof a2.componentWillReceiveProps || (l2 !== n2 || u2 !== s2) && Uv(t2, a2, n2, s2), Rv = false;
      var f2 = t2.memoizedState;
      a2.state = f2, Nv(t2, n2, a2, o2), u2 = t2.memoizedState, l2 !== n2 || f2 !== u2 || tv.current || Rv ? ("function" == typeof c2 && (Lv(t2, r2, c2, n2), u2 = t2.memoizedState), (l2 = Rv || zv(t2, r2, l2, n2, f2, u2, s2)) ? (d2 || "function" != typeof a2.UNSAFE_componentWillMount && "function" != typeof a2.componentWillMount || ("function" == typeof a2.componentWillMount && a2.componentWillMount(), "function" == typeof a2.UNSAFE_componentWillMount && a2.UNSAFE_componentWillMount()), "function" == typeof a2.componentDidMount && (t2.flags |= 4194308)) : ("function" == typeof a2.componentDidMount && (t2.flags |= 4194308), t2.memoizedProps = n2, t2.memoizedState = u2), a2.props = n2, a2.state = u2, a2.context = s2, n2 = l2) : ("function" == typeof a2.componentDidMount && (t2.flags |= 4194308), n2 = false);
    } else {
      a2 = t2.stateNode, _v(e27, t2), l2 = t2.memoizedProps, s2 = t2.type === t2.elementType ? l2 : vv(t2.type, l2), a2.props = s2, d2 = t2.pendingProps, f2 = a2.context, "object" == typeof (u2 = r2.contextType) && null !== u2 ? u2 = Ev(u2) : u2 = nv(t2, u2 = ov(r2) ? rv : ev.current);
      var p2 = r2.getDerivedStateFromProps;
      (c2 = "function" == typeof p2 || "function" == typeof a2.getSnapshotBeforeUpdate) || "function" != typeof a2.UNSAFE_componentWillReceiveProps && "function" != typeof a2.componentWillReceiveProps || (l2 !== d2 || f2 !== u2) && Uv(t2, a2, n2, u2), Rv = false, f2 = t2.memoizedState, a2.state = f2, Nv(t2, n2, a2, o2);
      var h2 = t2.memoizedState;
      l2 !== d2 || f2 !== h2 || tv.current || Rv ? ("function" == typeof p2 && (Lv(t2, r2, p2, n2), h2 = t2.memoizedState), (s2 = Rv || zv(t2, r2, s2, n2, f2, h2, u2) || false) ? (c2 || "function" != typeof a2.UNSAFE_componentWillUpdate && "function" != typeof a2.componentWillUpdate || ("function" == typeof a2.componentWillUpdate && a2.componentWillUpdate(n2, h2, u2), "function" == typeof a2.UNSAFE_componentWillUpdate && a2.UNSAFE_componentWillUpdate(n2, h2, u2)), "function" == typeof a2.componentDidUpdate && (t2.flags |= 4), "function" == typeof a2.getSnapshotBeforeUpdate && (t2.flags |= 1024)) : ("function" != typeof a2.componentDidUpdate || l2 === e27.memoizedProps && f2 === e27.memoizedState || (t2.flags |= 4), "function" != typeof a2.getSnapshotBeforeUpdate || l2 === e27.memoizedProps && f2 === e27.memoizedState || (t2.flags |= 1024), t2.memoizedProps = n2, t2.memoizedState = h2), a2.props = n2, a2.state = h2, a2.context = u2, n2 = s2) : ("function" != typeof a2.componentDidUpdate || l2 === e27.memoizedProps && f2 === e27.memoizedState || (t2.flags |= 4), "function" != typeof a2.getSnapshotBeforeUpdate || l2 === e27.memoizedProps && f2 === e27.memoizedState || (t2.flags |= 1024), n2 = false);
    }
    return eb(e27, t2, r2, n2, i2, o2);
  }
  function eb(e27, t2, r2, n2, o2, i2) {
    Ky(e27, t2);
    var a2 = 0 != (128 & t2.flags);
    if (!n2 && !a2)
      return o2 && sv(t2, r2, false), pb(e27, t2, i2);
    n2 = t2.stateNode, Hy.current = t2;
    var l2 = a2 && "function" != typeof r2.getDerivedStateFromError ? null : n2.render();
    return t2.flags |= 1, null !== e27 && a2 ? (t2.child = ym(t2, e27.child, null, i2), t2.child = ym(t2, null, l2, i2)) : qy(e27, t2, l2, i2), t2.memoizedState = n2.state, o2 && sv(t2, r2, true), t2.child;
  }
  function tb(e27) {
    var t2 = e27.stateNode;
    t2.pendingContext ? av(0, t2.pendingContext, t2.pendingContext !== t2.context) : t2.context && av(0, t2.context, false), Em(e27, t2.containerInfo);
  }
  function rb(e27, t2, r2, n2, o2) {
    return fm(), pm(o2), t2.flags |= 256, qy(e27, t2, r2, n2), t2.child;
  }
  var nb = { dehydrated: null, treeContext: null, retryLane: 0 };
  function ob(e27) {
    return { baseLanes: e27, cachePool: null };
  }
  function ib(e27, t2, r2) {
    var n2, o2 = t2.pendingProps, i2 = _m.current, a2 = false, l2 = 0 != (128 & t2.flags);
    if ((n2 = l2) || (n2 = (null === e27 || null !== e27.memoizedState) && 0 != (2 & i2)), n2 ? (a2 = true, t2.flags &= -129) : null !== e27 && null === e27.memoizedState || (i2 |= 1), Zg(_m, 1 & i2), null === e27)
      return sm(t2), null !== (e27 = t2.memoizedState) && null !== (e27 = e27.dehydrated) ? (0 == (1 & t2.mode) ? t2.lanes = 1 : "$!" === e27.data ? t2.lanes = 8 : t2.lanes = 1073741824, null) : (i2 = o2.children, e27 = o2.fallback, a2 ? (o2 = t2.mode, a2 = t2.child, i2 = { mode: "hidden", children: i2 }, 0 == (1 & o2) && null !== a2 ? (a2.childLanes = 0, a2.pendingProps = i2) : a2 = JC(i2, o2, 0, null), e27 = ZC(e27, o2, r2, null), a2.return = t2, e27.return = t2, a2.sibling = e27, t2.child = a2, t2.child.memoizedState = ob(r2), t2.memoizedState = nb, e27) : ab(t2, i2));
    if (null !== (i2 = e27.memoizedState)) {
      if (null !== (n2 = i2.dehydrated)) {
        if (l2)
          return 256 & t2.flags ? (t2.flags &= -257, sb(e27, t2, r2, Error(jc(422)))) : null !== t2.memoizedState ? (t2.child = e27.child, t2.flags |= 128, null) : (a2 = o2.fallback, i2 = t2.mode, o2 = JC({ mode: "visible", children: o2.children }, i2, 0, null), (a2 = ZC(a2, i2, r2, null)).flags |= 2, o2.return = t2, a2.return = t2, o2.sibling = a2, t2.child = o2, 0 != (1 & t2.mode) && ym(t2, e27.child, null, r2), t2.child.memoizedState = ob(r2), t2.memoizedState = nb, a2);
        if (0 == (1 & t2.mode))
          t2 = sb(e27, t2, r2, null);
        else if ("$!" === n2.data)
          t2 = sb(e27, t2, r2, Error(jc(419)));
        else if (o2 = 0 != (r2 & e27.childLanes), $y || o2) {
          if (null !== (o2 = qb)) {
            switch (r2 & -r2) {
              case 4:
                a2 = 2;
                break;
              case 16:
                a2 = 8;
                break;
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
              case 4194304:
              case 8388608:
              case 16777216:
              case 33554432:
              case 67108864:
                a2 = 32;
                break;
              case 536870912:
                a2 = 268435456;
                break;
              default:
                a2 = 0;
            }
            0 !== (o2 = 0 != (a2 & (o2.suspendedLanes | r2)) ? 0 : a2) && o2 !== i2.retryLane && (i2.retryLane = o2, yC(e27, o2, -1));
          }
          BC(), t2 = sb(e27, t2, r2, Error(jc(421)));
        } else
          "$?" === n2.data ? (t2.flags |= 128, t2.child = e27.child, t2 = HC.bind(null, e27), n2._reactRetry = t2, t2 = null) : (r2 = i2.treeContext, nm = jg(n2.nextSibling), rm = t2, om = true, im = null, null !== r2 && (Yv[Gv++] = Qv, Yv[Gv++] = Kv, Yv[Gv++] = Xv, Qv = r2.id, Kv = r2.overflow, Xv = t2), (t2 = ab(t2, t2.pendingProps.children)).flags |= 4096);
        return t2;
      }
      return a2 ? (o2 = ub(e27, t2, o2.children, o2.fallback, r2), a2 = t2.child, i2 = e27.child.memoizedState, a2.memoizedState = null === i2 ? ob(r2) : { baseLanes: i2.baseLanes | r2, cachePool: null }, a2.childLanes = e27.childLanes & ~r2, t2.memoizedState = nb, o2) : (r2 = lb(e27, t2, o2.children, r2), t2.memoizedState = null, r2);
    }
    return a2 ? (o2 = ub(e27, t2, o2.children, o2.fallback, r2), a2 = t2.child, i2 = e27.child.memoizedState, a2.memoizedState = null === i2 ? ob(r2) : { baseLanes: i2.baseLanes | r2, cachePool: null }, a2.childLanes = e27.childLanes & ~r2, t2.memoizedState = nb, o2) : (r2 = lb(e27, t2, o2.children, r2), t2.memoizedState = null, r2);
  }
  function ab(e27, t2) {
    return (t2 = JC({ mode: "visible", children: t2 }, e27.mode, 0, null)).return = e27, e27.child = t2;
  }
  function lb(e27, t2, r2, n2) {
    var o2 = e27.child;
    return e27 = o2.sibling, r2 = QC(o2, { mode: "visible", children: r2 }), 0 == (1 & t2.mode) && (r2.lanes = n2), r2.return = t2, r2.sibling = null, null !== e27 && (null === (n2 = t2.deletions) ? (t2.deletions = [e27], t2.flags |= 16) : n2.push(e27)), t2.child = r2;
  }
  function ub(e27, t2, r2, n2, o2) {
    var i2 = t2.mode, a2 = (e27 = e27.child).sibling, l2 = { mode: "hidden", children: r2 };
    return 0 == (1 & i2) && t2.child !== e27 ? ((r2 = t2.child).childLanes = 0, r2.pendingProps = l2, t2.deletions = null) : (r2 = QC(e27, l2)).subtreeFlags = 14680064 & e27.subtreeFlags, null !== a2 ? n2 = QC(a2, n2) : (n2 = ZC(n2, i2, o2, null)).flags |= 2, n2.return = t2, r2.return = t2, r2.sibling = n2, t2.child = r2, n2;
  }
  function sb(e27, t2, r2, n2) {
    return null !== n2 && pm(n2), ym(t2, e27.child, null, r2), (e27 = ab(t2, t2.pendingProps.children)).flags |= 2, t2.memoizedState = null, e27;
  }
  function cb(e27, t2, r2) {
    e27.lanes |= t2;
    var n2 = e27.alternate;
    null !== n2 && (n2.lanes |= t2), kv(e27.return, t2, r2);
  }
  function db(e27, t2, r2, n2, o2) {
    var i2 = e27.memoizedState;
    null === i2 ? e27.memoizedState = { isBackwards: t2, rendering: null, renderingStartTime: 0, last: n2, tail: r2, tailMode: o2 } : (i2.isBackwards = t2, i2.rendering = null, i2.renderingStartTime = 0, i2.last = n2, i2.tail = r2, i2.tailMode = o2);
  }
  function fb(e27, t2, r2) {
    var n2 = t2.pendingProps, o2 = n2.revealOrder, i2 = n2.tail;
    if (qy(e27, t2, n2.children, r2), 0 != (2 & (n2 = _m.current)))
      n2 = 1 & n2 | 2, t2.flags |= 128;
    else {
      if (null !== e27 && 0 != (128 & e27.flags))
        e:
          for (e27 = t2.child; null !== e27; ) {
            if (13 === e27.tag)
              null !== e27.memoizedState && cb(e27, r2, t2);
            else if (19 === e27.tag)
              cb(e27, r2, t2);
            else if (null !== e27.child) {
              e27.child.return = e27, e27 = e27.child;
              continue;
            }
            if (e27 === t2)
              break e;
            for (; null === e27.sibling; ) {
              if (null === e27.return || e27.return === t2)
                break e;
              e27 = e27.return;
            }
            e27.sibling.return = e27.return, e27 = e27.sibling;
          }
      n2 &= 1;
    }
    if (Zg(_m, n2), 0 == (1 & t2.mode))
      t2.memoizedState = null;
    else
      switch (o2) {
        case "forwards":
          for (r2 = t2.child, o2 = null; null !== r2; )
            null !== (e27 = r2.alternate) && null === Pm(e27) && (o2 = r2), r2 = r2.sibling;
          null === (r2 = o2) ? (o2 = t2.child, t2.child = null) : (o2 = r2.sibling, r2.sibling = null), db(t2, false, o2, r2, i2);
          break;
        case "backwards":
          for (r2 = null, o2 = t2.child, t2.child = null; null !== o2; ) {
            if (null !== (e27 = o2.alternate) && null === Pm(e27)) {
              t2.child = o2;
              break;
            }
            e27 = o2.sibling, o2.sibling = r2, r2 = o2, o2 = e27;
          }
          db(t2, true, r2, null, i2);
          break;
        case "together":
          db(t2, false, null, null, void 0);
          break;
        default:
          t2.memoizedState = null;
      }
    return t2.child;
  }
  function pb(e27, t2, r2) {
    if (null !== e27 && (t2.dependencies = e27.dependencies), Jb |= t2.lanes, 0 == (r2 & t2.childLanes))
      return null;
    if (null !== e27 && t2.child !== e27.child)
      throw Error(jc(153));
    if (null !== t2.child) {
      for (r2 = QC(e27 = t2.child, e27.pendingProps), t2.child = r2, r2.return = t2; null !== e27.sibling; )
        e27 = e27.sibling, (r2 = r2.sibling = QC(e27, e27.pendingProps)).return = t2;
      r2.sibling = null;
    }
    return t2.child;
  }
  function hb(e27, t2) {
    switch (tm(t2), t2.tag) {
      case 1:
        return ov(t2.type) && iv(), 65536 & (e27 = t2.flags) ? (t2.flags = -65537 & e27 | 128, t2) : null;
      case 3:
        return Tm(), Kg(tv), Kg(ev), Bm(), 0 != (65536 & (e27 = t2.flags)) && 0 == (128 & e27) ? (t2.flags = -65537 & e27 | 128, t2) : null;
      case 5:
        return Om(t2), null;
      case 13:
        if (Kg(_m), null !== (e27 = t2.memoizedState) && null !== e27.dehydrated) {
          if (null === t2.alternate)
            throw Error(jc(340));
          fm();
        }
        return 65536 & (e27 = t2.flags) ? (t2.flags = -65537 & e27 | 128, t2) : null;
      case 19:
        return Kg(_m), null;
      case 4:
        return Tm(), null;
      case 10:
        return wv(t2.type._context), null;
      case 22:
      case 23:
        return OC(), null;
      default:
        return null;
    }
  }
  var gb = false;
  var vb = false;
  var mb = "function" == typeof WeakSet ? WeakSet : Set;
  var yb = null;
  function bb(e27, t2) {
    var r2 = e27.ref;
    if (null !== r2)
      if ("function" == typeof r2)
        try {
          r2(null);
        } catch (r3) {
          UC(e27, t2, r3);
        }
      else
        r2.current = null;
  }
  function Cb(e27, t2, r2) {
    try {
      r2();
    } catch (r3) {
      UC(e27, t2, r3);
    }
  }
  var xb = false;
  function wb(e27, t2, r2) {
    var n2 = t2.updateQueue;
    if (null !== (n2 = null !== n2 ? n2.lastEffect : null)) {
      var o2 = n2 = n2.next;
      do {
        if ((o2.tag & e27) === e27) {
          var i2 = o2.destroy;
          o2.destroy = void 0, void 0 !== i2 && Cb(t2, r2, i2);
        }
        o2 = o2.next;
      } while (o2 !== n2);
    }
  }
  function kb(e27, t2) {
    if (null !== (t2 = null !== (t2 = t2.updateQueue) ? t2.lastEffect : null)) {
      var r2 = t2 = t2.next;
      do {
        if ((r2.tag & e27) === e27) {
          var n2 = r2.create;
          r2.destroy = n2();
        }
        r2 = r2.next;
      } while (r2 !== t2);
    }
  }
  function Sb(e27) {
    var t2 = e27.ref;
    if (null !== t2) {
      var r2 = e27.stateNode;
      e27.tag, e27 = r2, "function" == typeof t2 ? t2(e27) : t2.current = e27;
    }
  }
  function Eb(e27, t2, r2) {
    if (jf && "function" == typeof jf.onCommitFiberUnmount)
      try {
        jf.onCommitFiberUnmount(Nf, t2);
      } catch (e28) {
      }
    switch (t2.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (null !== (e27 = t2.updateQueue) && null !== (e27 = e27.lastEffect)) {
          var n2 = e27 = e27.next;
          do {
            var o2 = n2, i2 = o2.destroy;
            o2 = o2.tag, void 0 !== i2 && (0 != (2 & o2) || 0 != (4 & o2)) && Cb(t2, r2, i2), n2 = n2.next;
          } while (n2 !== e27);
        }
        break;
      case 1:
        if (bb(t2, r2), "function" == typeof (e27 = t2.stateNode).componentWillUnmount)
          try {
            e27.props = t2.memoizedProps, e27.state = t2.memoizedState, e27.componentWillUnmount();
          } catch (e28) {
            UC(t2, r2, e28);
          }
        break;
      case 5:
        bb(t2, r2);
        break;
      case 4:
        Bb(e27, t2, r2);
    }
  }
  function Tb(e27) {
    var t2 = e27.alternate;
    null !== t2 && (e27.alternate = null, Tb(t2)), e27.child = null, e27.deletions = null, e27.sibling = null, 5 === e27.tag && (null !== (t2 = e27.stateNode) && (delete t2[Ig], delete t2[zg], delete t2[Ug], delete t2[Vg], delete t2[Wg])), e27.stateNode = null, e27.return = null, e27.dependencies = null, e27.memoizedProps = null, e27.memoizedState = null, e27.pendingProps = null, e27.stateNode = null, e27.updateQueue = null;
  }
  function Rb(e27) {
    return 5 === e27.tag || 3 === e27.tag || 4 === e27.tag;
  }
  function Ob(e27) {
    e:
      for (; ; ) {
        for (; null === e27.sibling; ) {
          if (null === e27.return || Rb(e27.return))
            return null;
          e27 = e27.return;
        }
        for (e27.sibling.return = e27.return, e27 = e27.sibling; 5 !== e27.tag && 6 !== e27.tag && 18 !== e27.tag; ) {
          if (2 & e27.flags)
            continue e;
          if (null === e27.child || 4 === e27.tag)
            continue e;
          e27.child.return = e27, e27 = e27.child;
        }
        if (!(2 & e27.flags))
          return e27.stateNode;
      }
  }
  function _b(e27) {
    e: {
      for (var t2 = e27.return; null !== t2; ) {
        if (Rb(t2))
          break e;
        t2 = t2.return;
      }
      throw Error(jc(160));
    }
    var r2 = t2;
    switch (r2.tag) {
      case 5:
        t2 = r2.stateNode, 32 & r2.flags && (Ud(t2, ""), r2.flags &= -33), Mb(e27, r2 = Ob(e27), t2);
        break;
      case 3:
      case 4:
        t2 = r2.stateNode.containerInfo, Pb(e27, r2 = Ob(e27), t2);
        break;
      default:
        throw Error(jc(161));
    }
  }
  function Pb(e27, t2, r2) {
    var n2 = e27.tag;
    if (5 === n2 || 6 === n2)
      e27 = e27.stateNode, t2 ? 8 === r2.nodeType ? r2.parentNode.insertBefore(e27, t2) : r2.insertBefore(e27, t2) : (8 === r2.nodeType ? (t2 = r2.parentNode).insertBefore(e27, r2) : (t2 = r2).appendChild(e27), null != (r2 = r2._reactRootContainer) || null !== t2.onclick || (t2.onclick = Tg));
    else if (4 !== n2 && null !== (e27 = e27.child))
      for (Pb(e27, t2, r2), e27 = e27.sibling; null !== e27; )
        Pb(e27, t2, r2), e27 = e27.sibling;
  }
  function Mb(e27, t2, r2) {
    var n2 = e27.tag;
    if (5 === n2 || 6 === n2)
      e27 = e27.stateNode, t2 ? r2.insertBefore(e27, t2) : r2.appendChild(e27);
    else if (4 !== n2 && null !== (e27 = e27.child))
      for (Mb(e27, t2, r2), e27 = e27.sibling; null !== e27; )
        Mb(e27, t2, r2), e27 = e27.sibling;
  }
  function Bb(e27, t2, r2) {
    for (var n2, o2, i2 = t2, a2 = false; ; ) {
      if (!a2) {
        a2 = i2.return;
        e:
          for (; ; ) {
            if (null === a2)
              throw Error(jc(160));
            switch (n2 = a2.stateNode, a2.tag) {
              case 5:
                o2 = false;
                break e;
              case 3:
              case 4:
                n2 = n2.containerInfo, o2 = true;
                break e;
            }
            a2 = a2.return;
          }
        a2 = true;
      }
      if (5 === i2.tag || 6 === i2.tag) {
        e:
          for (var l2 = e27, u2 = i2, s2 = r2, c2 = u2; ; )
            if (Eb(l2, c2, s2), null !== c2.child && 4 !== c2.tag)
              c2.child.return = c2, c2 = c2.child;
            else {
              if (c2 === u2)
                break e;
              for (; null === c2.sibling; ) {
                if (null === c2.return || c2.return === u2)
                  break e;
                c2 = c2.return;
              }
              c2.sibling.return = c2.return, c2 = c2.sibling;
            }
        o2 ? (l2 = n2, u2 = i2.stateNode, 8 === l2.nodeType ? l2.parentNode.removeChild(u2) : l2.removeChild(u2)) : n2.removeChild(i2.stateNode);
      } else if (18 === i2.tag)
        o2 ? (l2 = n2, u2 = i2.stateNode, 8 === l2.nodeType ? Ng(l2.parentNode, u2) : 1 === l2.nodeType && Ng(l2, u2), mp(l2)) : Ng(n2, i2.stateNode);
      else if (4 === i2.tag) {
        if (null !== i2.child) {
          n2 = i2.stateNode.containerInfo, o2 = true, i2.child.return = i2, i2 = i2.child;
          continue;
        }
      } else if (Eb(e27, i2, r2), null !== i2.child) {
        i2.child.return = i2, i2 = i2.child;
        continue;
      }
      if (i2 === t2)
        break;
      for (; null === i2.sibling; ) {
        if (null === i2.return || i2.return === t2)
          return;
        4 === (i2 = i2.return).tag && (a2 = false);
      }
      i2.sibling.return = i2.return, i2 = i2.sibling;
    }
  }
  function Ab(e27, t2) {
    switch (t2.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        return wb(3, t2, t2.return), kb(3, t2), void wb(5, t2, t2.return);
      case 1:
      case 12:
      case 17:
        return;
      case 5:
        var r2 = t2.stateNode;
        if (null != r2) {
          var n2 = t2.memoizedProps, o2 = null !== e27 ? e27.memoizedProps : n2;
          e27 = t2.type;
          var i2 = t2.updateQueue;
          if (t2.updateQueue = null, null !== i2) {
            for ("input" === e27 && "radio" === n2.type && null != n2.name && Rd(r2, n2), Gd(e27, o2), t2 = Gd(e27, n2), o2 = 0; o2 < i2.length; o2 += 2) {
              var a2 = i2[o2], l2 = i2[o2 + 1];
              "style" === a2 ? $d(r2, l2) : "dangerouslySetInnerHTML" === a2 ? Fd(r2, l2) : "children" === a2 ? Ud(r2, l2) : Xc(r2, a2, l2, t2);
            }
            switch (e27) {
              case "input":
                Od(r2, n2);
                break;
              case "textarea":
                jd(r2, n2);
                break;
              case "select":
                e27 = r2._wrapperState.wasMultiple, r2._wrapperState.wasMultiple = !!n2.multiple, null != (i2 = n2.value) ? Bd(r2, !!n2.multiple, i2, false) : e27 !== !!n2.multiple && (null != n2.defaultValue ? Bd(r2, !!n2.multiple, n2.defaultValue, true) : Bd(r2, !!n2.multiple, n2.multiple ? [] : "", false));
            }
            r2[zg] = n2;
          }
        }
        return;
      case 6:
        if (null === t2.stateNode)
          throw Error(jc(162));
        return void (t2.stateNode.nodeValue = t2.memoizedProps);
      case 3:
        return void (null !== e27 && e27.memoizedState.isDehydrated && mp(t2.stateNode.containerInfo));
      case 13:
      case 19:
        return void Nb(t2);
    }
    throw Error(jc(163));
  }
  function Nb(e27) {
    var t2 = e27.updateQueue;
    if (null !== t2) {
      e27.updateQueue = null;
      var r2 = e27.stateNode;
      null === r2 && (r2 = e27.stateNode = new mb()), t2.forEach(function(t3) {
        var n2 = $C.bind(null, e27, t3);
        r2.has(t3) || (r2.add(t3), t3.then(n2, n2));
      });
    }
  }
  function jb(e27, t2, r2) {
    yb = e27, Db(e27);
  }
  function Db(e27, t2, r2) {
    for (var n2 = 0 != (1 & e27.mode); null !== yb; ) {
      var o2 = yb, i2 = o2.child;
      if (22 === o2.tag && n2) {
        var a2 = null !== o2.memoizedState || gb;
        if (!a2) {
          var l2 = o2.alternate, u2 = null !== l2 && null !== l2.memoizedState || vb;
          l2 = gb;
          var s2 = vb;
          if (gb = a2, (vb = u2) && !s2)
            for (yb = o2; null !== yb; )
              u2 = (a2 = yb).child, 22 === a2.tag && null !== a2.memoizedState ? zb(o2) : null !== u2 ? (u2.return = a2, yb = u2) : zb(o2);
          for (; null !== i2; )
            yb = i2, Db(i2), i2 = i2.sibling;
          yb = o2, gb = l2, vb = s2;
        }
        Lb(e27);
      } else
        0 != (8772 & o2.subtreeFlags) && null !== i2 ? (i2.return = o2, yb = i2) : Lb(e27);
    }
  }
  function Lb(e27) {
    for (; null !== yb; ) {
      var t2 = yb;
      if (0 != (8772 & t2.flags)) {
        var r2 = t2.alternate;
        try {
          if (0 != (8772 & t2.flags))
            switch (t2.tag) {
              case 0:
              case 11:
              case 15:
                vb || kb(5, t2);
                break;
              case 1:
                var n2 = t2.stateNode;
                if (4 & t2.flags && !vb)
                  if (null === r2)
                    n2.componentDidMount();
                  else {
                    var o2 = t2.elementType === t2.type ? r2.memoizedProps : vv(t2.type, r2.memoizedProps);
                    n2.componentDidUpdate(o2, r2.memoizedState, n2.__reactInternalSnapshotBeforeUpdate);
                  }
                var i2 = t2.updateQueue;
                null !== i2 && jv(t2, i2, n2);
                break;
              case 3:
                var a2 = t2.updateQueue;
                if (null !== a2) {
                  if (r2 = null, null !== t2.child)
                    switch (t2.child.tag) {
                      case 5:
                      case 1:
                        r2 = t2.child.stateNode;
                    }
                  jv(t2, a2, r2);
                }
                break;
              case 5:
                var l2 = t2.stateNode;
                if (null === r2 && 4 & t2.flags) {
                  r2 = l2;
                  var u2 = t2.memoizedProps;
                  switch (t2.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      u2.autoFocus && r2.focus();
                      break;
                    case "img":
                      u2.src && (r2.src = u2.src);
                  }
                }
                break;
              case 6:
              case 4:
              case 12:
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
                break;
              case 13:
                if (null === t2.memoizedState) {
                  var s2 = t2.alternate;
                  if (null !== s2) {
                    var c2 = s2.memoizedState;
                    if (null !== c2) {
                      var d2 = c2.dehydrated;
                      null !== d2 && mp(d2);
                    }
                  }
                }
                break;
              default:
                throw Error(jc(163));
            }
          vb || 512 & t2.flags && Sb(t2);
        } catch (e28) {
          UC(t2, t2.return, e28);
        }
      }
      if (t2 === e27) {
        yb = null;
        break;
      }
      if (null !== (r2 = t2.sibling)) {
        r2.return = t2.return, yb = r2;
        break;
      }
      yb = t2.return;
    }
  }
  function Ib(e27) {
    for (; null !== yb; ) {
      var t2 = yb;
      if (t2 === e27) {
        yb = null;
        break;
      }
      var r2 = t2.sibling;
      if (null !== r2) {
        r2.return = t2.return, yb = r2;
        break;
      }
      yb = t2.return;
    }
  }
  function zb(e27) {
    for (; null !== yb; ) {
      var t2 = yb;
      try {
        switch (t2.tag) {
          case 0:
          case 11:
          case 15:
            var r2 = t2.return;
            try {
              kb(4, t2);
            } catch (e28) {
              UC(t2, r2, e28);
            }
            break;
          case 1:
            var n2 = t2.stateNode;
            if ("function" == typeof n2.componentDidMount) {
              var o2 = t2.return;
              try {
                n2.componentDidMount();
              } catch (e28) {
                UC(t2, o2, e28);
              }
            }
            var i2 = t2.return;
            try {
              Sb(t2);
            } catch (e28) {
              UC(t2, i2, e28);
            }
            break;
          case 5:
            var a2 = t2.return;
            try {
              Sb(t2);
            } catch (e28) {
              UC(t2, a2, e28);
            }
        }
      } catch (e28) {
        UC(t2, t2.return, e28);
      }
      if (t2 === e27) {
        yb = null;
        break;
      }
      var l2 = t2.sibling;
      if (null !== l2) {
        l2.return = t2.return, yb = l2;
        break;
      }
      yb = t2.return;
    }
  }
  var Fb;
  var Ub = Math.ceil;
  var Vb = Qc.ReactCurrentDispatcher;
  var Wb = Qc.ReactCurrentOwner;
  var Hb = Qc.ReactCurrentBatchConfig;
  var $b = 0;
  var qb = null;
  var Yb = null;
  var Gb = 0;
  var Xb = 0;
  var Qb = Qg(0);
  var Kb = 0;
  var Zb = null;
  var Jb = 0;
  var eC = 0;
  var tC = 0;
  var rC = null;
  var nC = null;
  var oC = 0;
  var iC = 1 / 0;
  var aC = false;
  var lC = null;
  var uC = null;
  var sC = false;
  var cC = null;
  var dC = 0;
  var fC = 0;
  var pC = null;
  var hC = -1;
  var gC = 0;
  function vC() {
    return 0 != (6 & $b) ? Rf() : -1 !== hC ? hC : hC = Rf();
  }
  function mC(e27) {
    return 0 == (1 & e27.mode) ? 1 : 0 != (2 & $b) && 0 !== Gb ? Gb & -Gb : null !== gv.transition ? (0 === gC && (e27 = zf, 0 == (4194240 & (zf <<= 1)) && (zf = 64), gC = e27), gC) : 0 !== (e27 = Gf) ? e27 : e27 = void 0 === (e27 = window.event) ? 16 : Sp(e27.type);
  }
  function yC(e27, t2, r2) {
    if (50 < fC)
      throw fC = 0, pC = null, Error(jc(185));
    var n2 = bC(e27, t2);
    return null === n2 ? null : (qf(n2, t2, r2), 0 != (2 & $b) && n2 === qb || (n2 === qb && (0 == (2 & $b) && (eC |= t2), 4 === Kb && SC(n2, Gb)), CC(n2, r2), 1 === t2 && 0 === $b && 0 == (1 & e27.mode) && (iC = Rf() + 500, dv && hv())), n2);
  }
  function bC(e27, t2) {
    e27.lanes |= t2;
    var r2 = e27.alternate;
    for (null !== r2 && (r2.lanes |= t2), r2 = e27, e27 = e27.return; null !== e27; )
      e27.childLanes |= t2, null !== (r2 = e27.alternate) && (r2.childLanes |= t2), r2 = e27, e27 = e27.return;
    return 3 === r2.tag ? r2.stateNode : null;
  }
  function CC(e27, t2) {
    var r2 = e27.callbackNode;
    !function(e28, t3) {
      for (var r3 = e28.suspendedLanes, n3 = e28.pingedLanes, o2 = e28.expirationTimes, i2 = e28.pendingLanes; 0 < i2; ) {
        var a2 = 31 - Df(i2), l2 = 1 << a2, u2 = o2[a2];
        -1 === u2 ? 0 != (l2 & r3) && 0 == (l2 & n3) || (o2[a2] = Wf(l2, t3)) : u2 <= t3 && (e28.expiredLanes |= l2), i2 &= ~l2;
      }
    }(e27, t2);
    var n2 = Vf(e27, e27 === qb ? Gb : 0);
    if (0 === n2)
      null !== r2 && Sf(r2), e27.callbackNode = null, e27.callbackPriority = 0;
    else if (t2 = n2 & -n2, e27.callbackPriority !== t2) {
      if (null != r2 && Sf(r2), 1 === t2)
        0 === e27.tag ? function(e28) {
          dv = true, pv(e28);
        }(EC.bind(null, e27)) : pv(EC.bind(null, e27)), Bg(function() {
          0 === $b && hv();
        }), r2 = null;
      else {
        switch (Xf(n2)) {
          case 1:
            r2 = _f;
            break;
          case 4:
            r2 = Pf;
            break;
          case 16:
          default:
            r2 = Mf;
            break;
          case 536870912:
            r2 = Af;
        }
        r2 = qC(r2, xC.bind(null, e27));
      }
      e27.callbackPriority = t2, e27.callbackNode = r2;
    }
  }
  function xC(e27, t2) {
    if (hC = -1, gC = 0, 0 != (6 & $b))
      throw Error(jc(327));
    var r2 = e27.callbackNode;
    if (zC() && e27.callbackNode !== r2)
      return null;
    var n2 = Vf(e27, e27 === qb ? Gb : 0);
    if (0 === n2)
      return null;
    if (0 != (30 & n2) || 0 != (n2 & e27.expiredLanes) || t2)
      t2 = AC(e27, n2);
    else {
      t2 = n2;
      var o2 = $b;
      $b |= 2;
      var i2 = MC();
      for (qb === e27 && Gb === t2 || (iC = Rf() + 500, _C(e27, t2)); ; )
        try {
          jC();
          break;
        } catch (t3) {
          PC(e27, t3);
        }
      xv(), Vb.current = i2, $b = o2, null !== Yb ? t2 = 0 : (qb = null, Gb = 0, t2 = Kb);
    }
    if (0 !== t2) {
      if (2 === t2 && (0 !== (o2 = Hf(e27)) && (n2 = o2, t2 = wC(e27, o2))), 1 === t2)
        throw r2 = Zb, _C(e27, 0), SC(e27, n2), CC(e27, Rf()), r2;
      if (6 === t2)
        SC(e27, n2);
      else {
        if (o2 = e27.current.alternate, 0 == (30 & n2) && !function(e28) {
          for (var t3 = e28; ; ) {
            if (16384 & t3.flags) {
              var r3 = t3.updateQueue;
              if (null !== r3 && null !== (r3 = r3.stores))
                for (var n3 = 0; n3 < r3.length; n3++) {
                  var o3 = r3[n3], i3 = o3.getSnapshot;
                  o3 = o3.value;
                  try {
                    if (!Nh(i3(), o3))
                      return false;
                  } catch (e29) {
                    return false;
                  }
                }
            }
            if (r3 = t3.child, 16384 & t3.subtreeFlags && null !== r3)
              r3.return = t3, t3 = r3;
            else {
              if (t3 === e28)
                break;
              for (; null === t3.sibling; ) {
                if (null === t3.return || t3.return === e28)
                  return true;
                t3 = t3.return;
              }
              t3.sibling.return = t3.return, t3 = t3.sibling;
            }
          }
          return true;
        }(o2) && (2 === (t2 = AC(e27, n2)) && (0 !== (i2 = Hf(e27)) && (n2 = i2, t2 = wC(e27, i2))), 1 === t2))
          throw r2 = Zb, _C(e27, 0), SC(e27, n2), CC(e27, Rf()), r2;
        switch (e27.finishedWork = o2, e27.finishedLanes = n2, t2) {
          case 0:
          case 1:
            throw Error(jc(345));
          case 2:
          case 5:
            IC(e27, nC);
            break;
          case 3:
            if (SC(e27, n2), (130023424 & n2) === n2 && 10 < (t2 = oC + 500 - Rf())) {
              if (0 !== Vf(e27, 0))
                break;
              if (((o2 = e27.suspendedLanes) & n2) !== n2) {
                vC(), e27.pingedLanes |= e27.suspendedLanes & o2;
                break;
              }
              e27.timeoutHandle = _g(IC.bind(null, e27, nC), t2);
              break;
            }
            IC(e27, nC);
            break;
          case 4:
            if (SC(e27, n2), (4194240 & n2) === n2)
              break;
            for (t2 = e27.eventTimes, o2 = -1; 0 < n2; ) {
              var a2 = 31 - Df(n2);
              i2 = 1 << a2, (a2 = t2[a2]) > o2 && (o2 = a2), n2 &= ~i2;
            }
            if (n2 = o2, 10 < (n2 = (120 > (n2 = Rf() - n2) ? 120 : 480 > n2 ? 480 : 1080 > n2 ? 1080 : 1920 > n2 ? 1920 : 3e3 > n2 ? 3e3 : 4320 > n2 ? 4320 : 1960 * Ub(n2 / 1960)) - n2)) {
              e27.timeoutHandle = _g(IC.bind(null, e27, nC), n2);
              break;
            }
            IC(e27, nC);
            break;
          default:
            throw Error(jc(329));
        }
      }
    }
    return CC(e27, Rf()), e27.callbackNode === r2 ? xC.bind(null, e27) : null;
  }
  function wC(e27, t2) {
    var r2 = rC;
    return e27.current.memoizedState.isDehydrated && (_C(e27, t2).flags |= 256), 2 !== (e27 = AC(e27, t2)) && (t2 = nC, nC = r2, null !== t2 && kC(t2)), e27;
  }
  function kC(e27) {
    null === nC ? nC = e27 : nC.push.apply(nC, e27);
  }
  function SC(e27, t2) {
    for (t2 &= ~tC, t2 &= ~eC, e27.suspendedLanes |= t2, e27.pingedLanes &= ~t2, e27 = e27.expirationTimes; 0 < t2; ) {
      var r2 = 31 - Df(t2), n2 = 1 << r2;
      e27[r2] = -1, t2 &= ~n2;
    }
  }
  function EC(e27) {
    if (0 != (6 & $b))
      throw Error(jc(327));
    zC();
    var t2 = Vf(e27, 0);
    if (0 == (1 & t2))
      return CC(e27, Rf()), null;
    var r2 = AC(e27, t2);
    if (0 !== e27.tag && 2 === r2) {
      var n2 = Hf(e27);
      0 !== n2 && (t2 = n2, r2 = wC(e27, n2));
    }
    if (1 === r2)
      throw r2 = Zb, _C(e27, 0), SC(e27, t2), CC(e27, Rf()), r2;
    if (6 === r2)
      throw Error(jc(345));
    return e27.finishedWork = e27.current.alternate, e27.finishedLanes = t2, IC(e27, nC), CC(e27, Rf()), null;
  }
  function TC(e27, t2) {
    var r2 = $b;
    $b |= 1;
    try {
      return e27(t2);
    } finally {
      0 === ($b = r2) && (iC = Rf() + 500, dv && hv());
    }
  }
  function RC(e27) {
    null !== cC && 0 === cC.tag && 0 == (6 & $b) && zC();
    var t2 = $b;
    $b |= 1;
    var r2 = Hb.transition, n2 = Gf;
    try {
      if (Hb.transition = null, Gf = 1, e27)
        return e27();
    } finally {
      Gf = n2, Hb.transition = r2, 0 == (6 & ($b = t2)) && hv();
    }
  }
  function OC() {
    Xb = Qb.current, Kg(Qb);
  }
  function _C(e27, t2) {
    e27.finishedWork = null, e27.finishedLanes = 0;
    var r2 = e27.timeoutHandle;
    if (-1 !== r2 && (e27.timeoutHandle = -1, Pg(r2)), null !== Yb)
      for (r2 = Yb.return; null !== r2; ) {
        var n2 = r2;
        switch (tm(n2), n2.tag) {
          case 1:
            null != (n2 = n2.type.childContextTypes) && iv();
            break;
          case 3:
            Tm(), Kg(tv), Kg(ev), Bm();
            break;
          case 5:
            Om(n2);
            break;
          case 4:
            Tm();
            break;
          case 13:
          case 19:
            Kg(_m);
            break;
          case 10:
            wv(n2.type._context);
            break;
          case 22:
          case 23:
            OC();
        }
        r2 = r2.return;
      }
    if (qb = e27, Yb = e27 = QC(e27.current, null), Gb = Xb = t2, Kb = 0, Zb = null, tC = eC = Jb = 0, nC = rC = null, null !== Tv) {
      for (t2 = 0; t2 < Tv.length; t2++)
        if (null !== (n2 = (r2 = Tv[t2]).interleaved)) {
          r2.interleaved = null;
          var o2 = n2.next, i2 = r2.pending;
          if (null !== i2) {
            var a2 = i2.next;
            i2.next = o2, n2.next = a2;
          }
          r2.pending = n2;
        }
      Tv = null;
    }
    return e27;
  }
  function PC(e27, t2) {
    for (; ; ) {
      var r2 = Yb;
      try {
        if (xv(), Am.current = Ty, zm) {
          for (var n2 = Dm.memoizedState; null !== n2; ) {
            var o2 = n2.queue;
            null !== o2 && (o2.pending = null), n2 = n2.next;
          }
          zm = false;
        }
        if (jm = 0, Im = Lm = Dm = null, Fm = false, Um = 0, Wb.current = null, null === r2 || null === r2.return) {
          Kb = 1, Zb = t2, Yb = null;
          break;
        }
        e: {
          var i2 = e27, a2 = r2.return, l2 = r2, u2 = t2;
          if (t2 = Gb, l2.flags |= 32768, null !== u2 && "object" == typeof u2 && "function" == typeof u2.then) {
            var s2 = u2, c2 = l2, d2 = c2.tag;
            if (0 == (1 & c2.mode) && (0 === d2 || 11 === d2 || 15 === d2)) {
              var f2 = c2.alternate;
              f2 ? (c2.updateQueue = f2.updateQueue, c2.memoizedState = f2.memoizedState, c2.lanes = f2.lanes) : (c2.updateQueue = null, c2.memoizedState = null);
            }
            var p2 = zy(a2);
            if (null !== p2) {
              p2.flags &= -257, Fy(p2, a2, l2, 0, t2), 1 & p2.mode && Iy(i2, s2, t2), u2 = s2;
              var h2 = (t2 = p2).updateQueue;
              if (null === h2) {
                var g2 = /* @__PURE__ */ new Set();
                g2.add(u2), t2.updateQueue = g2;
              } else
                h2.add(u2);
              break e;
            }
            if (0 == (1 & t2)) {
              Iy(i2, s2, t2), BC();
              break e;
            }
            u2 = Error(jc(426));
          } else if (om && 1 & l2.mode) {
            var v2 = zy(a2);
            if (null !== v2) {
              0 == (65536 & v2.flags) && (v2.flags |= 256), Fy(v2, a2, l2, 0, t2), pm(u2);
              break e;
            }
          }
          i2 = u2, 4 !== Kb && (Kb = 2), null === rC ? rC = [i2] : rC.push(i2), u2 = Py(u2, l2), l2 = a2;
          do {
            switch (l2.tag) {
              case 3:
                l2.flags |= 65536, t2 &= -t2, l2.lanes |= t2, Av(l2, Dy(0, u2, t2));
                break e;
              case 1:
                i2 = u2;
                var m2 = l2.type, y2 = l2.stateNode;
                if (0 == (128 & l2.flags) && ("function" == typeof m2.getDerivedStateFromError || null !== y2 && "function" == typeof y2.componentDidCatch && (null === uC || !uC.has(y2)))) {
                  l2.flags |= 65536, t2 &= -t2, l2.lanes |= t2, Av(l2, Ly(l2, i2, t2));
                  break e;
                }
            }
            l2 = l2.return;
          } while (null !== l2);
        }
        LC(r2);
      } catch (e28) {
        t2 = e28, Yb === r2 && null !== r2 && (Yb = r2 = r2.return);
        continue;
      }
      break;
    }
  }
  function MC() {
    var e27 = Vb.current;
    return Vb.current = Ty, null === e27 ? Ty : e27;
  }
  function BC() {
    0 !== Kb && 3 !== Kb && 2 !== Kb || (Kb = 4), null === qb || 0 == (268435455 & Jb) && 0 == (268435455 & eC) || SC(qb, Gb);
  }
  function AC(e27, t2) {
    var r2 = $b;
    $b |= 2;
    var n2 = MC();
    for (qb === e27 && Gb === t2 || _C(e27, t2); ; )
      try {
        NC();
        break;
      } catch (t3) {
        PC(e27, t3);
      }
    if (xv(), $b = r2, Vb.current = n2, null !== Yb)
      throw Error(jc(261));
    return qb = null, Gb = 0, Kb;
  }
  function NC() {
    for (; null !== Yb; )
      DC(Yb);
  }
  function jC() {
    for (; null !== Yb && !Ef(); )
      DC(Yb);
  }
  function DC(e27) {
    var t2 = Fb(e27.alternate, e27, Xb);
    e27.memoizedProps = e27.pendingProps, null === t2 ? LC(e27) : Yb = t2, Wb.current = null;
  }
  function LC(e27) {
    var t2 = e27;
    do {
      var r2 = t2.alternate;
      if (e27 = t2.return, 0 == (32768 & t2.flags)) {
        if (null !== (r2 = Wy(r2, t2, Xb)))
          return void (Yb = r2);
      } else {
        if (null !== (r2 = hb(r2, t2)))
          return r2.flags &= 32767, void (Yb = r2);
        if (null === e27)
          return Kb = 6, void (Yb = null);
        e27.flags |= 32768, e27.subtreeFlags = 0, e27.deletions = null;
      }
      if (null !== (t2 = t2.sibling))
        return void (Yb = t2);
      Yb = t2 = e27;
    } while (null !== t2);
    0 === Kb && (Kb = 5);
  }
  function IC(e27, t2) {
    var r2 = Gf, n2 = Hb.transition;
    try {
      Hb.transition = null, Gf = 1, function(e28, t3, r3) {
        do {
          zC();
        } while (null !== cC);
        if (0 != (6 & $b))
          throw Error(jc(327));
        var n3 = e28.finishedWork, o2 = e28.finishedLanes;
        if (null === n3)
          return null;
        if (e28.finishedWork = null, e28.finishedLanes = 0, n3 === e28.current)
          throw Error(jc(177));
        e28.callbackNode = null, e28.callbackPriority = 0;
        var i2 = n3.lanes | n3.childLanes;
        if (function(e29, t4) {
          var r4 = e29.pendingLanes & ~t4;
          e29.pendingLanes = t4, e29.suspendedLanes = 0, e29.pingedLanes = 0, e29.expiredLanes &= t4, e29.mutableReadLanes &= t4, e29.entangledLanes &= t4, t4 = e29.entanglements;
          var n4 = e29.eventTimes;
          for (e29 = e29.expirationTimes; 0 < r4; ) {
            var o3 = 31 - Df(r4), i3 = 1 << o3;
            t4[o3] = 0, n4[o3] = -1, e29[o3] = -1, r4 &= ~i3;
          }
        }(e28, i2), e28 === qb && (Yb = qb = null, Gb = 0), 0 == (2064 & n3.subtreeFlags) && 0 == (2064 & n3.flags) || sC || (sC = true, qC(Mf, function() {
          return zC(), null;
        })), i2 = 0 != (15990 & n3.flags), 0 != (15990 & n3.subtreeFlags) || i2) {
          i2 = Hb.transition, Hb.transition = null;
          var a2 = Gf;
          Gf = 1;
          var l2 = $b;
          $b |= 4, Wb.current = null, function(e29, t4) {
            if (Fh(e29 = zh())) {
              if ("selectionStart" in e29)
                var r4 = { start: e29.selectionStart, end: e29.selectionEnd };
              else
                e: {
                  var n4 = (r4 = (r4 = e29.ownerDocument) && r4.defaultView || window).getSelection && r4.getSelection();
                  if (n4 && 0 !== n4.rangeCount) {
                    r4 = n4.anchorNode;
                    var o3 = n4.anchorOffset, i3 = n4.focusNode;
                    n4 = n4.focusOffset;
                    try {
                      r4.nodeType, i3.nodeType;
                    } catch (e30) {
                      r4 = null;
                      break e;
                    }
                    var a3 = 0, l3 = -1, u2 = -1, s2 = 0, c2 = 0, d2 = e29, f2 = null;
                    t:
                      for (; ; ) {
                        for (var p2; d2 !== r4 || 0 !== o3 && 3 !== d2.nodeType || (l3 = a3 + o3), d2 !== i3 || 0 !== n4 && 3 !== d2.nodeType || (u2 = a3 + n4), 3 === d2.nodeType && (a3 += d2.nodeValue.length), null !== (p2 = d2.firstChild); )
                          f2 = d2, d2 = p2;
                        for (; ; ) {
                          if (d2 === e29)
                            break t;
                          if (f2 === r4 && ++s2 === o3 && (l3 = a3), f2 === i3 && ++c2 === n4 && (u2 = a3), null !== (p2 = d2.nextSibling))
                            break;
                          f2 = (d2 = f2).parentNode;
                        }
                        d2 = p2;
                      }
                    r4 = -1 === l3 || -1 === u2 ? null : { start: l3, end: u2 };
                  } else
                    r4 = null;
                }
              r4 = r4 || { start: 0, end: 0 };
            } else
              r4 = null;
            for (Rg = { focusedElem: e29, selectionRange: r4 }, yb = t4; null !== yb; )
              if (e29 = (t4 = yb).child, 0 != (1028 & t4.subtreeFlags) && null !== e29)
                e29.return = t4, yb = e29;
              else
                for (; null !== yb; ) {
                  t4 = yb;
                  try {
                    var h2 = t4.alternate;
                    if (0 != (1024 & t4.flags))
                      switch (t4.tag) {
                        case 0:
                        case 11:
                        case 15:
                        case 5:
                        case 6:
                        case 4:
                        case 17:
                          break;
                        case 1:
                          if (null !== h2) {
                            var g2 = h2.memoizedProps, v2 = h2.memoizedState, m2 = t4.stateNode, y2 = m2.getSnapshotBeforeUpdate(t4.elementType === t4.type ? g2 : vv(t4.type, g2), v2);
                            m2.__reactInternalSnapshotBeforeUpdate = y2;
                          }
                          break;
                        case 3:
                          var b2 = t4.stateNode.containerInfo;
                          if (1 === b2.nodeType)
                            b2.textContent = "";
                          else if (9 === b2.nodeType) {
                            var C2 = b2.body;
                            null != C2 && (C2.textContent = "");
                          }
                          break;
                        default:
                          throw Error(jc(163));
                      }
                  } catch (e30) {
                    UC(t4, t4.return, e30);
                  }
                  if (null !== (e29 = t4.sibling)) {
                    e29.return = t4.return, yb = e29;
                    break;
                  }
                  yb = t4.return;
                }
            h2 = xb, xb = false;
          }(e28, n3), function(e29, t4) {
            for (yb = t4; null !== yb; ) {
              var r4 = (t4 = yb).deletions;
              if (null !== r4)
                for (var n4 = 0; n4 < r4.length; n4++) {
                  var o3 = r4[n4];
                  try {
                    Bb(e29, o3, t4);
                    var i3 = o3.alternate;
                    null !== i3 && (i3.return = null), o3.return = null;
                  } catch (e30) {
                    UC(o3, t4, e30);
                  }
                }
              if (r4 = t4.child, 0 != (12854 & t4.subtreeFlags) && null !== r4)
                r4.return = t4, yb = r4;
              else
                for (; null !== yb; ) {
                  t4 = yb;
                  try {
                    var a3 = t4.flags;
                    if (32 & a3 && Ud(t4.stateNode, ""), 512 & a3) {
                      var l3 = t4.alternate;
                      if (null !== l3) {
                        var u2 = l3.ref;
                        null !== u2 && ("function" == typeof u2 ? u2(null) : u2.current = null);
                      }
                    }
                    if (8192 & a3)
                      switch (t4.tag) {
                        case 13:
                          if (null !== t4.memoizedState) {
                            var s2 = t4.alternate;
                            null !== s2 && null !== s2.memoizedState || (oC = Rf());
                          }
                          break;
                        case 22:
                          var c2 = null !== t4.memoizedState, d2 = t4.alternate, f2 = null !== d2 && null !== d2.memoizedState;
                          e: {
                            o3 = c2;
                            for (var p2 = null, h2 = n4 = r4 = t4; ; ) {
                              if (5 === h2.tag) {
                                if (null === p2) {
                                  p2 = h2;
                                  var g2 = h2.stateNode;
                                  if (o3) {
                                    var v2 = g2.style;
                                    "function" == typeof v2.setProperty ? v2.setProperty("display", "none", "important") : v2.display = "none";
                                  } else {
                                    var m2 = h2.stateNode, y2 = h2.memoizedProps.style, b2 = null != y2 && y2.hasOwnProperty("display") ? y2.display : null;
                                    m2.style.display = Hd("display", b2);
                                  }
                                }
                              } else if (6 === h2.tag)
                                null === p2 && (h2.stateNode.nodeValue = o3 ? "" : h2.memoizedProps);
                              else if ((22 !== h2.tag && 23 !== h2.tag || null === h2.memoizedState || h2 === n4) && null !== h2.child) {
                                h2.child.return = h2, h2 = h2.child;
                                continue;
                              }
                              if (h2 === n4)
                                break;
                              for (; null === h2.sibling; ) {
                                if (null === h2.return || h2.return === n4)
                                  break e;
                                p2 === h2 && (p2 = null), h2 = h2.return;
                              }
                              p2 === h2 && (p2 = null), h2.sibling.return = h2.return, h2 = h2.sibling;
                            }
                          }
                          if (c2 && !f2 && 0 != (1 & r4.mode)) {
                            yb = r4;
                            for (var C2 = r4.child; null !== C2; ) {
                              for (r4 = yb = C2; null !== yb; ) {
                                var x2 = (n4 = yb).child;
                                switch (n4.tag) {
                                  case 0:
                                  case 11:
                                  case 14:
                                  case 15:
                                    wb(4, n4, n4.return);
                                    break;
                                  case 1:
                                    bb(n4, n4.return);
                                    var w2 = n4.stateNode;
                                    if ("function" == typeof w2.componentWillUnmount) {
                                      var k2 = n4.return;
                                      try {
                                        w2.props = n4.memoizedProps, w2.state = n4.memoizedState, w2.componentWillUnmount();
                                      } catch (e30) {
                                        UC(n4, k2, e30);
                                      }
                                    }
                                    break;
                                  case 5:
                                    bb(n4, n4.return);
                                    break;
                                  case 22:
                                    if (null !== n4.memoizedState) {
                                      Ib(r4);
                                      continue;
                                    }
                                }
                                null !== x2 ? (x2.return = n4, yb = x2) : Ib(r4);
                              }
                              C2 = C2.sibling;
                            }
                          }
                      }
                    switch (4102 & a3) {
                      case 2:
                        _b(t4), t4.flags &= -3;
                        break;
                      case 6:
                        _b(t4), t4.flags &= -3, Ab(t4.alternate, t4);
                        break;
                      case 4096:
                        t4.flags &= -4097;
                        break;
                      case 4100:
                        t4.flags &= -4097, Ab(t4.alternate, t4);
                        break;
                      case 4:
                        Ab(t4.alternate, t4);
                    }
                  } catch (e30) {
                    UC(t4, t4.return, e30);
                  }
                  if (null !== (r4 = t4.sibling)) {
                    r4.return = t4.return, yb = r4;
                    break;
                  }
                  yb = t4.return;
                }
            }
          }(e28, n3), Uh(Rg), Rg = null, e28.current = n3, jb(n3), Tf(), $b = l2, Gf = a2, Hb.transition = i2;
        } else
          e28.current = n3;
        if (sC && (sC = false, cC = e28, dC = o2), 0 === (i2 = e28.pendingLanes) && (uC = null), function(e29) {
          if (jf && "function" == typeof jf.onCommitFiberRoot)
            try {
              jf.onCommitFiberRoot(Nf, e29, void 0, 128 == (128 & e29.current.flags));
            } catch (e30) {
            }
        }(n3.stateNode), CC(e28, Rf()), null !== t3)
          for (r3 = e28.onRecoverableError, n3 = 0; n3 < t3.length; n3++)
            r3(t3[n3]);
        if (aC)
          throw aC = false, e28 = lC, lC = null, e28;
        0 != (1 & dC) && 0 !== e28.tag && zC(), 0 != (1 & (i2 = e28.pendingLanes)) ? e28 === pC ? fC++ : (fC = 0, pC = e28) : fC = 0, hv();
      }(e27, t2, r2);
    } finally {
      Hb.transition = n2, Gf = r2;
    }
    return null;
  }
  function zC() {
    if (null !== cC) {
      var e27 = Xf(dC), t2 = Hb.transition, r2 = Gf;
      try {
        if (Hb.transition = null, Gf = 16 > e27 ? 16 : e27, null === cC)
          var n2 = false;
        else {
          if (e27 = cC, cC = null, dC = 0, 0 != (6 & $b))
            throw Error(jc(331));
          var o2 = $b;
          for ($b |= 4, yb = e27.current; null !== yb; ) {
            var i2 = yb, a2 = i2.child;
            if (0 != (16 & yb.flags)) {
              var l2 = i2.deletions;
              if (null !== l2) {
                for (var u2 = 0; u2 < l2.length; u2++) {
                  var s2 = l2[u2];
                  for (yb = s2; null !== yb; ) {
                    var c2 = yb;
                    switch (c2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        wb(8, c2, i2);
                    }
                    var d2 = c2.child;
                    if (null !== d2)
                      d2.return = c2, yb = d2;
                    else
                      for (; null !== yb; ) {
                        var f2 = (c2 = yb).sibling, p2 = c2.return;
                        if (Tb(c2), c2 === s2) {
                          yb = null;
                          break;
                        }
                        if (null !== f2) {
                          f2.return = p2, yb = f2;
                          break;
                        }
                        yb = p2;
                      }
                  }
                }
                var h2 = i2.alternate;
                if (null !== h2) {
                  var g2 = h2.child;
                  if (null !== g2) {
                    h2.child = null;
                    do {
                      var v2 = g2.sibling;
                      g2.sibling = null, g2 = v2;
                    } while (null !== g2);
                  }
                }
                yb = i2;
              }
            }
            if (0 != (2064 & i2.subtreeFlags) && null !== a2)
              a2.return = i2, yb = a2;
            else
              e:
                for (; null !== yb; ) {
                  if (0 != (2048 & (i2 = yb).flags))
                    switch (i2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        wb(9, i2, i2.return);
                    }
                  var m2 = i2.sibling;
                  if (null !== m2) {
                    m2.return = i2.return, yb = m2;
                    break e;
                  }
                  yb = i2.return;
                }
          }
          var y2 = e27.current;
          for (yb = y2; null !== yb; ) {
            var b2 = (a2 = yb).child;
            if (0 != (2064 & a2.subtreeFlags) && null !== b2)
              b2.return = a2, yb = b2;
            else
              e:
                for (a2 = y2; null !== yb; ) {
                  if (0 != (2048 & (l2 = yb).flags))
                    try {
                      switch (l2.tag) {
                        case 0:
                        case 11:
                        case 15:
                          kb(9, l2);
                      }
                    } catch (e28) {
                      UC(l2, l2.return, e28);
                    }
                  if (l2 === a2) {
                    yb = null;
                    break e;
                  }
                  var C2 = l2.sibling;
                  if (null !== C2) {
                    C2.return = l2.return, yb = C2;
                    break e;
                  }
                  yb = l2.return;
                }
          }
          if ($b = o2, hv(), jf && "function" == typeof jf.onPostCommitFiberRoot)
            try {
              jf.onPostCommitFiberRoot(Nf, e27);
            } catch (e28) {
            }
          n2 = true;
        }
        return n2;
      } finally {
        Gf = r2, Hb.transition = t2;
      }
    }
    return false;
  }
  function FC(e27, t2, r2) {
    Mv(e27, t2 = Dy(0, t2 = Py(r2, t2), 1)), t2 = vC(), null !== (e27 = bC(e27, 1)) && (qf(e27, 1, t2), CC(e27, t2));
  }
  function UC(e27, t2, r2) {
    if (3 === e27.tag)
      FC(e27, e27, r2);
    else
      for (; null !== t2; ) {
        if (3 === t2.tag) {
          FC(t2, e27, r2);
          break;
        }
        if (1 === t2.tag) {
          var n2 = t2.stateNode;
          if ("function" == typeof t2.type.getDerivedStateFromError || "function" == typeof n2.componentDidCatch && (null === uC || !uC.has(n2))) {
            Mv(t2, e27 = Ly(t2, e27 = Py(r2, e27), 1)), e27 = vC(), null !== (t2 = bC(t2, 1)) && (qf(t2, 1, e27), CC(t2, e27));
            break;
          }
        }
        t2 = t2.return;
      }
  }
  function VC(e27, t2, r2) {
    var n2 = e27.pingCache;
    null !== n2 && n2.delete(t2), t2 = vC(), e27.pingedLanes |= e27.suspendedLanes & r2, qb === e27 && (Gb & r2) === r2 && (4 === Kb || 3 === Kb && (130023424 & Gb) === Gb && 500 > Rf() - oC ? _C(e27, 0) : tC |= r2), CC(e27, t2);
  }
  function WC(e27, t2) {
    0 === t2 && (0 == (1 & e27.mode) ? t2 = 1 : (t2 = Ff, 0 == (130023424 & (Ff <<= 1)) && (Ff = 4194304)));
    var r2 = vC();
    null !== (e27 = bC(e27, t2)) && (qf(e27, t2, r2), CC(e27, r2));
  }
  function HC(e27) {
    var t2 = e27.memoizedState, r2 = 0;
    null !== t2 && (r2 = t2.retryLane), WC(e27, r2);
  }
  function $C(e27, t2) {
    var r2 = 0;
    switch (e27.tag) {
      case 13:
        var n2 = e27.stateNode, o2 = e27.memoizedState;
        null !== o2 && (r2 = o2.retryLane);
        break;
      case 19:
        n2 = e27.stateNode;
        break;
      default:
        throw Error(jc(314));
    }
    null !== n2 && n2.delete(t2), WC(e27, r2);
  }
  function qC(e27, t2) {
    return kf(e27, t2);
  }
  function YC(e27, t2, r2, n2) {
    this.tag = e27, this.key = r2, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = t2, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = n2, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function GC(e27, t2, r2, n2) {
    return new YC(e27, t2, r2, n2);
  }
  function XC(e27) {
    return !(!(e27 = e27.prototype) || !e27.isReactComponent);
  }
  function QC(e27, t2) {
    var r2 = e27.alternate;
    return null === r2 ? ((r2 = GC(e27.tag, t2, e27.key, e27.mode)).elementType = e27.elementType, r2.type = e27.type, r2.stateNode = e27.stateNode, r2.alternate = e27, e27.alternate = r2) : (r2.pendingProps = t2, r2.type = e27.type, r2.flags = 0, r2.subtreeFlags = 0, r2.deletions = null), r2.flags = 14680064 & e27.flags, r2.childLanes = e27.childLanes, r2.lanes = e27.lanes, r2.child = e27.child, r2.memoizedProps = e27.memoizedProps, r2.memoizedState = e27.memoizedState, r2.updateQueue = e27.updateQueue, t2 = e27.dependencies, r2.dependencies = null === t2 ? null : { lanes: t2.lanes, firstContext: t2.firstContext }, r2.sibling = e27.sibling, r2.index = e27.index, r2.ref = e27.ref, r2;
  }
  function KC(e27, t2, r2, n2, o2, i2) {
    var a2 = 2;
    if (n2 = e27, "function" == typeof e27)
      XC(e27) && (a2 = 1);
    else if ("string" == typeof e27)
      a2 = 5;
    else
      e:
        switch (e27) {
          case Jc:
            return ZC(r2.children, o2, i2, t2);
          case ed:
            a2 = 8, o2 |= 8;
            break;
          case td:
            return (e27 = GC(12, r2, t2, 2 | o2)).elementType = td, e27.lanes = i2, e27;
          case id:
            return (e27 = GC(13, r2, t2, o2)).elementType = id, e27.lanes = i2, e27;
          case ad:
            return (e27 = GC(19, r2, t2, o2)).elementType = ad, e27.lanes = i2, e27;
          case sd:
            return JC(r2, o2, i2, t2);
          default:
            if ("object" == typeof e27 && null !== e27)
              switch (e27.$$typeof) {
                case rd:
                  a2 = 10;
                  break e;
                case nd:
                  a2 = 9;
                  break e;
                case od:
                  a2 = 11;
                  break e;
                case ld:
                  a2 = 14;
                  break e;
                case ud:
                  a2 = 16, n2 = null;
                  break e;
              }
            throw Error(jc(130, null == e27 ? e27 : typeof e27, ""));
        }
    return (t2 = GC(a2, r2, t2, o2)).elementType = e27, t2.type = n2, t2.lanes = i2, t2;
  }
  function ZC(e27, t2, r2, n2) {
    return (e27 = GC(7, e27, n2, t2)).lanes = r2, e27;
  }
  function JC(e27, t2, r2, n2) {
    return (e27 = GC(22, e27, n2, t2)).elementType = sd, e27.lanes = r2, e27.stateNode = {}, e27;
  }
  function ex(e27, t2, r2) {
    return (e27 = GC(6, e27, null, t2)).lanes = r2, e27;
  }
  function tx(e27, t2, r2) {
    return (t2 = GC(4, null !== e27.children ? e27.children : [], e27.key, t2)).lanes = r2, t2.stateNode = { containerInfo: e27.containerInfo, pendingChildren: null, implementation: e27.implementation }, t2;
  }
  function rx(e27, t2, r2, n2, o2) {
    this.tag = t2, this.containerInfo = e27, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = $f(0), this.expirationTimes = $f(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = $f(0), this.identifierPrefix = n2, this.onRecoverableError = o2, this.mutableSourceEagerHydrationData = null;
  }
  function nx(e27, t2, r2, n2, o2, i2, a2, l2, u2) {
    return e27 = new rx(e27, t2, r2, l2, u2), 1 === t2 ? (t2 = 1, true === i2 && (t2 |= 8)) : t2 = 0, i2 = GC(3, null, null, t2), e27.current = i2, i2.stateNode = e27, i2.memoizedState = { element: n2, isDehydrated: r2, cache: null, transitions: null }, Ov(i2), e27;
  }
  function ox(e27, t2, r2) {
    var n2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
    return { $$typeof: Zc, key: null == n2 ? null : "" + n2, children: e27, containerInfo: t2, implementation: r2 };
  }
  function ix(e27) {
    if (!e27)
      return Jg;
    e: {
      if (yf(e27 = e27._reactInternals) !== e27 || 1 !== e27.tag)
        throw Error(jc(170));
      var t2 = e27;
      do {
        switch (t2.tag) {
          case 3:
            t2 = t2.stateNode.context;
            break e;
          case 1:
            if (ov(t2.type)) {
              t2 = t2.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        t2 = t2.return;
      } while (null !== t2);
      throw Error(jc(171));
    }
    if (1 === e27.tag) {
      var r2 = e27.type;
      if (ov(r2))
        return lv(e27, r2, t2);
    }
    return t2;
  }
  function ax(e27, t2, r2, n2, o2, i2, a2, l2, u2) {
    return (e27 = nx(r2, n2, true, e27, 0, i2, 0, l2, u2)).context = ix(null), r2 = e27.current, (i2 = Pv(n2 = vC(), o2 = mC(r2))).callback = null != t2 ? t2 : null, Mv(r2, i2), e27.current.lanes = o2, qf(e27, o2, n2), CC(e27, n2), e27;
  }
  function lx(e27, t2, r2, n2) {
    var o2 = t2.current, i2 = vC(), a2 = mC(o2);
    return r2 = ix(r2), null === t2.context ? t2.context = r2 : t2.pendingContext = r2, (t2 = Pv(i2, a2)).payload = { element: e27 }, null !== (n2 = void 0 === n2 ? null : n2) && (t2.callback = n2), Mv(o2, t2), null !== (e27 = yC(o2, a2, i2)) && Bv(e27, o2, a2), a2;
  }
  function ux(e27) {
    return (e27 = e27.current).child ? (e27.child.tag, e27.child.stateNode) : null;
  }
  function sx(e27, t2) {
    if (null !== (e27 = e27.memoizedState) && null !== e27.dehydrated) {
      var r2 = e27.retryLane;
      e27.retryLane = 0 !== r2 && r2 < t2 ? r2 : t2;
    }
  }
  function cx(e27, t2) {
    sx(e27, t2), (e27 = e27.alternate) && sx(e27, t2);
  }
  Fb = function(e27, t2, r2) {
    if (null !== e27)
      if (e27.memoizedProps !== t2.pendingProps || tv.current)
        $y = true;
      else {
        if (0 == (e27.lanes & r2) && 0 == (128 & t2.flags))
          return $y = false, function(e28, t3, r3) {
            switch (t3.tag) {
              case 3:
                tb(t3), fm();
                break;
              case 5:
                Rm(t3);
                break;
              case 1:
                ov(t3.type) && uv(t3);
                break;
              case 4:
                Em(t3, t3.stateNode.containerInfo);
                break;
              case 10:
                var n3 = t3.type._context, o3 = t3.memoizedProps.value;
                Zg(mv, n3._currentValue), n3._currentValue = o3;
                break;
              case 13:
                if (null !== (n3 = t3.memoizedState))
                  return null !== n3.dehydrated ? (Zg(_m, 1 & _m.current), t3.flags |= 128, null) : 0 != (r3 & t3.child.childLanes) ? ib(e28, t3, r3) : (Zg(_m, 1 & _m.current), null !== (e28 = pb(e28, t3, r3)) ? e28.sibling : null);
                Zg(_m, 1 & _m.current);
                break;
              case 19:
                if (n3 = 0 != (r3 & t3.childLanes), 0 != (128 & e28.flags)) {
                  if (n3)
                    return fb(e28, t3, r3);
                  t3.flags |= 128;
                }
                if (null !== (o3 = t3.memoizedState) && (o3.rendering = null, o3.tail = null, o3.lastEffect = null), Zg(_m, _m.current), n3)
                  break;
                return null;
              case 22:
              case 23:
                return t3.lanes = 0, Qy(e28, t3, r3);
            }
            return pb(e28, t3, r3);
          }(e27, t2, r2);
        $y = 0 != (131072 & e27.flags);
      }
    else
      $y = false, om && 0 != (1048576 & t2.flags) && Jv(t2, qv, t2.index);
    switch (t2.lanes = 0, t2.tag) {
      case 2:
        var n2 = t2.type;
        null !== e27 && (e27.alternate = null, t2.alternate = null, t2.flags |= 2), e27 = t2.pendingProps;
        var o2 = nv(t2, ev.current);
        Sv(t2, r2), o2 = $m(null, t2, n2, e27, o2, r2);
        var i2 = qm();
        return t2.flags |= 1, "object" == typeof o2 && null !== o2 && "function" == typeof o2.render && void 0 === o2.$$typeof ? (t2.tag = 1, t2.memoizedState = null, t2.updateQueue = null, ov(n2) ? (i2 = true, uv(t2)) : i2 = false, t2.memoizedState = null !== o2.state && void 0 !== o2.state ? o2.state : null, Ov(t2), o2.updater = Iv, t2.stateNode = o2, o2._reactInternals = t2, Vv(t2, n2, e27, r2), t2 = eb(null, t2, n2, true, i2, r2)) : (t2.tag = 0, om && i2 && em(t2), qy(null, t2, o2, r2), t2 = t2.child), t2;
      case 16:
        n2 = t2.elementType;
        e: {
          switch (null !== e27 && (e27.alternate = null, t2.alternate = null, t2.flags |= 2), e27 = t2.pendingProps, n2 = (o2 = n2._init)(n2._payload), t2.type = n2, o2 = t2.tag = function(e28) {
            if ("function" == typeof e28)
              return XC(e28) ? 1 : 0;
            if (null != e28) {
              if ((e28 = e28.$$typeof) === od)
                return 11;
              if (e28 === ld)
                return 14;
            }
            return 2;
          }(n2), e27 = vv(n2, e27), o2) {
            case 0:
              t2 = Zy(null, t2, n2, e27, r2);
              break e;
            case 1:
              t2 = Jy(null, t2, n2, e27, r2);
              break e;
            case 11:
              t2 = Yy(null, t2, n2, e27, r2);
              break e;
            case 14:
              t2 = Gy(null, t2, n2, vv(n2.type, e27), r2);
              break e;
          }
          throw Error(jc(306, n2, ""));
        }
        return t2;
      case 0:
        return n2 = t2.type, o2 = t2.pendingProps, Zy(e27, t2, n2, o2 = t2.elementType === n2 ? o2 : vv(n2, o2), r2);
      case 1:
        return n2 = t2.type, o2 = t2.pendingProps, Jy(e27, t2, n2, o2 = t2.elementType === n2 ? o2 : vv(n2, o2), r2);
      case 3:
        e: {
          if (tb(t2), null === e27)
            throw Error(jc(387));
          n2 = t2.pendingProps, o2 = (i2 = t2.memoizedState).element, _v(e27, t2), Nv(t2, n2, null, r2);
          var a2 = t2.memoizedState;
          if (n2 = a2.element, i2.isDehydrated) {
            if (i2 = { element: n2, isDehydrated: false, cache: a2.cache, transitions: a2.transitions }, t2.updateQueue.baseState = i2, t2.memoizedState = i2, 256 & t2.flags) {
              t2 = rb(e27, t2, n2, r2, o2 = Error(jc(423)));
              break e;
            }
            if (n2 !== o2) {
              t2 = rb(e27, t2, n2, r2, o2 = Error(jc(424)));
              break e;
            }
            for (nm = jg(t2.stateNode.containerInfo.firstChild), rm = t2, om = true, im = null, r2 = bm(t2, null, n2, r2), t2.child = r2; r2; )
              r2.flags = -3 & r2.flags | 4096, r2 = r2.sibling;
          } else {
            if (fm(), n2 === o2) {
              t2 = pb(e27, t2, r2);
              break e;
            }
            qy(e27, t2, n2, r2);
          }
          t2 = t2.child;
        }
        return t2;
      case 5:
        return Rm(t2), null === e27 && sm(t2), n2 = t2.type, o2 = t2.pendingProps, i2 = null !== e27 ? e27.memoizedProps : null, a2 = o2.children, Og(n2, o2) ? a2 = null : null !== i2 && Og(n2, i2) && (t2.flags |= 32), Ky(e27, t2), qy(e27, t2, a2, r2), t2.child;
      case 6:
        return null === e27 && sm(t2), null;
      case 13:
        return ib(e27, t2, r2);
      case 4:
        return Em(t2, t2.stateNode.containerInfo), n2 = t2.pendingProps, null === e27 ? t2.child = ym(t2, null, n2, r2) : qy(e27, t2, n2, r2), t2.child;
      case 11:
        return n2 = t2.type, o2 = t2.pendingProps, Yy(e27, t2, n2, o2 = t2.elementType === n2 ? o2 : vv(n2, o2), r2);
      case 7:
        return qy(e27, t2, t2.pendingProps, r2), t2.child;
      case 8:
      case 12:
        return qy(e27, t2, t2.pendingProps.children, r2), t2.child;
      case 10:
        e: {
          if (n2 = t2.type._context, o2 = t2.pendingProps, i2 = t2.memoizedProps, a2 = o2.value, Zg(mv, n2._currentValue), n2._currentValue = a2, null !== i2)
            if (Nh(i2.value, a2)) {
              if (i2.children === o2.children && !tv.current) {
                t2 = pb(e27, t2, r2);
                break e;
              }
            } else
              for (null !== (i2 = t2.child) && (i2.return = t2); null !== i2; ) {
                var l2 = i2.dependencies;
                if (null !== l2) {
                  a2 = i2.child;
                  for (var u2 = l2.firstContext; null !== u2; ) {
                    if (u2.context === n2) {
                      if (1 === i2.tag) {
                        (u2 = Pv(-1, r2 & -r2)).tag = 2;
                        var s2 = i2.updateQueue;
                        if (null !== s2) {
                          var c2 = (s2 = s2.shared).pending;
                          null === c2 ? u2.next = u2 : (u2.next = c2.next, c2.next = u2), s2.pending = u2;
                        }
                      }
                      i2.lanes |= r2, null !== (u2 = i2.alternate) && (u2.lanes |= r2), kv(i2.return, r2, t2), l2.lanes |= r2;
                      break;
                    }
                    u2 = u2.next;
                  }
                } else if (10 === i2.tag)
                  a2 = i2.type === t2.type ? null : i2.child;
                else if (18 === i2.tag) {
                  if (null === (a2 = i2.return))
                    throw Error(jc(341));
                  a2.lanes |= r2, null !== (l2 = a2.alternate) && (l2.lanes |= r2), kv(a2, r2, t2), a2 = i2.sibling;
                } else
                  a2 = i2.child;
                if (null !== a2)
                  a2.return = i2;
                else
                  for (a2 = i2; null !== a2; ) {
                    if (a2 === t2) {
                      a2 = null;
                      break;
                    }
                    if (null !== (i2 = a2.sibling)) {
                      i2.return = a2.return, a2 = i2;
                      break;
                    }
                    a2 = a2.return;
                  }
                i2 = a2;
              }
          qy(e27, t2, o2.children, r2), t2 = t2.child;
        }
        return t2;
      case 9:
        return o2 = t2.type, n2 = t2.pendingProps.children, Sv(t2, r2), n2 = n2(o2 = Ev(o2)), t2.flags |= 1, qy(e27, t2, n2, r2), t2.child;
      case 14:
        return o2 = vv(n2 = t2.type, t2.pendingProps), Gy(e27, t2, n2, o2 = vv(n2.type, o2), r2);
      case 15:
        return Xy(e27, t2, t2.type, t2.pendingProps, r2);
      case 17:
        return n2 = t2.type, o2 = t2.pendingProps, o2 = t2.elementType === n2 ? o2 : vv(n2, o2), null !== e27 && (e27.alternate = null, t2.alternate = null, t2.flags |= 2), t2.tag = 1, ov(n2) ? (e27 = true, uv(t2)) : e27 = false, Sv(t2, r2), Fv(t2, n2, o2), Vv(t2, n2, o2, r2), eb(null, t2, n2, true, e27, r2);
      case 19:
        return fb(e27, t2, r2);
      case 22:
        return Qy(e27, t2, r2);
    }
    throw Error(jc(156, t2.tag));
  };
  var dx = "function" == typeof reportError ? reportError : function(e27) {
    console.error(e27);
  };
  function fx(e27) {
    this._internalRoot = e27;
  }
  function px(e27) {
    this._internalRoot = e27;
  }
  function hx(e27) {
    return !(!e27 || 1 !== e27.nodeType && 9 !== e27.nodeType && 11 !== e27.nodeType);
  }
  function gx(e27) {
    return !(!e27 || 1 !== e27.nodeType && 9 !== e27.nodeType && 11 !== e27.nodeType && (8 !== e27.nodeType || " react-mount-point-unstable " !== e27.nodeValue));
  }
  function vx() {
  }
  function mx(e27, t2, r2, n2, o2) {
    var i2 = r2._reactRootContainer;
    if (i2) {
      var a2 = i2;
      if ("function" == typeof o2) {
        var l2 = o2;
        o2 = function() {
          var e28 = ux(a2);
          l2.call(e28);
        };
      }
      lx(t2, a2, e27, o2);
    } else
      a2 = function(e28, t3, r3, n3, o3) {
        if (o3) {
          if ("function" == typeof n3) {
            var i3 = n3;
            n3 = function() {
              var e29 = ux(a3);
              i3.call(e29);
            };
          }
          var a3 = ax(t3, n3, e28, 0, null, false, 0, "", vx);
          return e28._reactRootContainer = a3, e28[Fg] = a3.current, gg(8 === e28.nodeType ? e28.parentNode : e28), RC(), a3;
        }
        for (; o3 = e28.lastChild; )
          e28.removeChild(o3);
        if ("function" == typeof n3) {
          var l3 = n3;
          n3 = function() {
            var e29 = ux(u2);
            l3.call(e29);
          };
        }
        var u2 = nx(e28, 0, false, null, 0, false, 0, "", vx);
        return e28._reactRootContainer = u2, e28[Fg] = u2.current, gg(8 === e28.nodeType ? e28.parentNode : e28), RC(function() {
          lx(t3, u2, r3, n3);
        }), u2;
      }(r2, t2, e27, o2, n2);
    return ux(a2);
  }
  px.prototype.render = fx.prototype.render = function(e27) {
    var t2 = this._internalRoot;
    if (null === t2)
      throw Error(jc(409));
    lx(e27, t2, null, null);
  }, px.prototype.unmount = fx.prototype.unmount = function() {
    var e27 = this._internalRoot;
    if (null !== e27) {
      this._internalRoot = null;
      var t2 = e27.containerInfo;
      RC(function() {
        lx(null, e27, null, null);
      }), t2[Fg] = null;
    }
  }, px.prototype.unstable_scheduleHydration = function(e27) {
    if (e27) {
      var t2 = Jf();
      e27 = { blockedOn: null, target: e27, priority: t2 };
      for (var r2 = 0; r2 < up.length && 0 !== t2 && t2 < up[r2].priority; r2++)
        ;
      up.splice(r2, 0, e27), 0 === r2 && fp(e27);
    }
  }, Qf = function(e27) {
    switch (e27.tag) {
      case 3:
        var t2 = e27.stateNode;
        if (t2.current.memoizedState.isDehydrated) {
          var r2 = Uf(t2.pendingLanes);
          0 !== r2 && (Yf(t2, 1 | r2), CC(t2, Rf()), 0 == (6 & $b) && (iC = Rf() + 500, hv()));
        }
        break;
      case 13:
        var n2 = vC();
        RC(function() {
          return yC(e27, 1, n2);
        }), cx(e27, 1);
    }
  }, Kf = function(e27) {
    13 === e27.tag && (yC(e27, 134217728, vC()), cx(e27, 134217728));
  }, Zf = function(e27) {
    if (13 === e27.tag) {
      var t2 = vC(), r2 = mC(e27);
      yC(e27, r2, t2), cx(e27, r2);
    }
  }, Jf = function() {
    return Gf;
  }, ep = function(e27, t2) {
    var r2 = Gf;
    try {
      return Gf = e27, t2();
    } finally {
      Gf = r2;
    }
  }, Kd = function(e27, t2, r2) {
    switch (t2) {
      case "input":
        if (Od(e27, r2), t2 = r2.name, "radio" === r2.type && null != t2) {
          for (r2 = e27; r2.parentNode; )
            r2 = r2.parentNode;
          for (r2 = r2.querySelectorAll("input[name=" + JSON.stringify("" + t2) + '][type="radio"]'), t2 = 0; t2 < r2.length; t2++) {
            var n2 = r2[t2];
            if (n2 !== e27 && n2.form === e27.form) {
              var o2 = Yg(n2);
              if (!o2)
                throw Error(jc(90));
              kd(n2), Od(n2, o2);
            }
          }
        }
        break;
      case "textarea":
        jd(e27, r2);
        break;
      case "select":
        null != (t2 = r2.value) && Bd(e27, !!r2.multiple, t2, false);
    }
  }, nf = TC, of = RC;
  var yx = { usingClientEntryPoint: false, Events: [$g, qg, Yg, tf, rf, TC] };
  var bx = { findFiberByHostInstance: Hg, bundleType: 0, version: "18.0.0-fc46dba67-20220329", rendererPackageName: "react-dom" };
  var Cx = { bundleType: bx.bundleType, version: bx.version, rendererPackageName: bx.rendererPackageName, rendererConfig: bx.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: Qc.ReactCurrentDispatcher, findHostInstanceByFiber: function(e27) {
    return null === (e27 = xf(e27)) ? null : e27.stateNode;
  }, findFiberByHostInstance: bx.findFiberByHostInstance || function() {
    return null;
  }, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.0.0-fc46dba67-20220329" };
  if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    xx = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!xx.isDisabled && xx.supportsFiber)
      try {
        Nf = xx.inject(Cx), jf = xx;
      } catch (Xa2) {
      }
  }
  var xx;
  Oc.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = yx, Oc.createPortal = function(e27, t2) {
    var r2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
    if (!hx(t2))
      throw Error(jc(200));
    return ox(e27, t2, null, r2);
  }, Oc.createRoot = function(e27, t2) {
    if (!hx(e27))
      throw Error(jc(299));
    var r2 = false, n2 = "", o2 = dx;
    return null != t2 && (true === t2.unstable_strictMode && (r2 = true), void 0 !== t2.identifierPrefix && (n2 = t2.identifierPrefix), void 0 !== t2.onRecoverableError && (o2 = t2.onRecoverableError)), t2 = nx(e27, 1, false, null, 0, r2, 0, n2, o2), e27[Fg] = t2.current, gg(8 === e27.nodeType ? e27.parentNode : e27), new fx(t2);
  }, Oc.findDOMNode = function(e27) {
    if (null == e27)
      return null;
    if (1 === e27.nodeType)
      return e27;
    var t2 = e27._reactInternals;
    if (void 0 === t2) {
      if ("function" == typeof e27.render)
        throw Error(jc(188));
      throw e27 = Object.keys(e27).join(","), Error(jc(268, e27));
    }
    return e27 = null === (e27 = xf(t2)) ? null : e27.stateNode;
  }, Oc.flushSync = function(e27) {
    return RC(e27);
  }, Oc.hydrate = function(e27, t2, r2) {
    if (!gx(t2))
      throw Error(jc(200));
    return mx(null, e27, t2, true, r2);
  }, Oc.hydrateRoot = function(e27, t2, r2) {
    if (!hx(e27))
      throw Error(jc(405));
    var n2 = null != r2 && r2.hydratedSources || null, o2 = false, i2 = "", a2 = dx;
    if (null != r2 && (true === r2.unstable_strictMode && (o2 = true), void 0 !== r2.identifierPrefix && (i2 = r2.identifierPrefix), void 0 !== r2.onRecoverableError && (a2 = r2.onRecoverableError)), t2 = ax(t2, null, e27, 1, null != r2 ? r2 : null, o2, 0, i2, a2), e27[Fg] = t2.current, gg(e27), n2)
      for (e27 = 0; e27 < n2.length; e27++)
        o2 = (o2 = (r2 = n2[e27])._getVersion)(r2._source), null == t2.mutableSourceEagerHydrationData ? t2.mutableSourceEagerHydrationData = [r2, o2] : t2.mutableSourceEagerHydrationData.push(r2, o2);
    return new px(t2);
  }, Oc.render = function(e27, t2, r2) {
    if (!gx(t2))
      throw Error(jc(200));
    return mx(null, e27, t2, false, r2);
  }, Oc.unmountComponentAtNode = function(e27) {
    if (!gx(e27))
      throw Error(jc(40));
    return !!e27._reactRootContainer && (RC(function() {
      mx(null, null, e27, false, function() {
        e27._reactRootContainer = null, e27[Fg] = null;
      });
    }), true);
  }, Oc.unstable_batchedUpdates = TC, Oc.unstable_renderSubtreeIntoContainer = function(e27, t2, r2, n2) {
    if (!gx(r2))
      throw Error(jc(200));
    if (null == e27 || void 0 === e27._reactInternals)
      throw Error(jc(38));
    return mx(e27, t2, r2, false, n2);
  }, Oc.version = "18.0.0-fc46dba67-20220329";
  var wx = {};
  (function() {
    "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e27 = import_react.default, r2 = _c.exports, n2 = e27.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, o2 = false;
    function i2(e28) {
      if (!o2) {
        for (var t2 = arguments.length, r3 = new Array(t2 > 1 ? t2 - 1 : 0), n3 = 1; n3 < t2; n3++)
          r3[n3 - 1] = arguments[n3];
        l2("warn", e28, r3);
      }
    }
    function a2(e28) {
      if (!o2) {
        for (var t2 = arguments.length, r3 = new Array(t2 > 1 ? t2 - 1 : 0), n3 = 1; n3 < t2; n3++)
          r3[n3 - 1] = arguments[n3];
        l2("error", e28, r3);
      }
    }
    function l2(e28, t2, r3) {
      var o3 = n2.ReactDebugCurrentFrame.getStackAddendum();
      "" !== o3 && (t2 += "%s", r3 = r3.concat([o3]));
      var i3 = r3.map(function(e29) {
        return String(e29);
      });
      i3.unshift("Warning: " + t2), Function.prototype.apply.call(console[e28], console, i3);
    }
    var u2 = 10, s2 = 11, c2 = 12, d2 = 13, f2 = 14, p2 = 15, h2 = 17, g2 = 18, v2 = 19, m2 = 22, y2 = 23, b2 = false, C2 = /* @__PURE__ */ new Set(), x2 = {}, w2 = {};
    function k2(e28, t2) {
      S2(e28, t2), S2(e28 + "Capture", t2);
    }
    function S2(e28, t2) {
      x2[e28] && a2("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", e28), x2[e28] = t2;
      var r3 = e28.toLowerCase();
      w2[r3] = e28, "onDoubleClick" === e28 && (w2.ondblclick = e28);
      for (var n3 = 0; n3 < t2.length; n3++)
        C2.add(t2[n3]);
    }
    var E2 = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement), T2 = Object.prototype.hasOwnProperty;
    function R2(e28) {
      return "function" == typeof Symbol && Symbol.toStringTag && e28[Symbol.toStringTag] || e28.constructor.name || "Object";
    }
    function O2(e28) {
      try {
        return _2(e28), false;
      } catch (e29) {
        return true;
      }
    }
    function _2(e28) {
      return "" + e28;
    }
    function P2(e28, t2) {
      if (O2(e28))
        return a2("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", t2, R2(e28)), _2(e28);
    }
    function M2(e28) {
      if (O2(e28))
        return a2("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", R2(e28)), _2(e28);
    }
    function B2(e28) {
      if (O2(e28))
        return a2("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", R2(e28)), _2(e28);
    }
    var A2 = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", N2 = A2 + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", j2 = new RegExp("^[" + A2 + "][" + N2 + "]*$"), D2 = {}, L2 = {};
    function I2(e28) {
      return !!T2.call(L2, e28) || !T2.call(D2, e28) && (j2.test(e28) ? (L2[e28] = true, true) : (D2[e28] = true, a2("Invalid attribute name: `%s`", e28), false));
    }
    function z2(e28, t2, r3) {
      return null !== t2 ? 0 === t2.type : !r3 && (e28.length > 2 && ("o" === e28[0] || "O" === e28[0]) && ("n" === e28[1] || "N" === e28[1]));
    }
    function F2(e28, t2, r3, n3) {
      if (null !== r3 && 0 === r3.type)
        return false;
      switch (typeof t2) {
        case "function":
        case "symbol":
          return true;
        case "boolean":
          if (n3)
            return false;
          if (null !== r3)
            return !r3.acceptsBooleans;
          var o3 = e28.toLowerCase().slice(0, 5);
          return "data-" !== o3 && "aria-" !== o3;
        default:
          return false;
      }
    }
    function U2(e28, t2, r3, n3) {
      if (null == t2)
        return true;
      if (F2(e28, t2, r3, n3))
        return true;
      if (n3)
        return false;
      if (null !== r3)
        switch (r3.type) {
          case 3:
            return !t2;
          case 4:
            return false === t2;
          case 5:
            return isNaN(t2);
          case 6:
            return isNaN(t2) || t2 < 1;
        }
      return false;
    }
    function V2(e28) {
      return H2.hasOwnProperty(e28) ? H2[e28] : null;
    }
    function W2(e28, t2, r3, n3, o3, i3, a3) {
      this.acceptsBooleans = 2 === t2 || 3 === t2 || 4 === t2, this.attributeName = n3, this.attributeNamespace = o3, this.mustUseProperty = r3, this.propertyName = e28, this.type = t2, this.sanitizeURL = i3, this.removeEmptyString = a3;
    }
    var H2 = {};
    ["children", "dangerouslySetInnerHTML", "defaultValue", "defaultChecked", "innerHTML", "suppressContentEditableWarning", "suppressHydrationWarning", "style"].forEach(function(e28) {
      H2[e28] = new W2(e28, 0, false, e28, null, false, false);
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(e28) {
      var t2 = e28[0], r3 = e28[1];
      H2[t2] = new W2(t2, 1, false, r3, null, false, false);
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(e28) {
      H2[e28] = new W2(e28, 2, false, e28.toLowerCase(), null, false, false);
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(e28) {
      H2[e28] = new W2(e28, 2, false, e28, null, false, false);
    }), ["allowFullScreen", "async", "autoFocus", "autoPlay", "controls", "default", "defer", "disabled", "disablePictureInPicture", "disableRemotePlayback", "formNoValidate", "hidden", "loop", "noModule", "noValidate", "open", "playsInline", "readOnly", "required", "reversed", "scoped", "seamless", "itemScope"].forEach(function(e28) {
      H2[e28] = new W2(e28, 3, false, e28.toLowerCase(), null, false, false);
    }), ["checked", "multiple", "muted", "selected"].forEach(function(e28) {
      H2[e28] = new W2(e28, 3, true, e28, null, false, false);
    }), ["capture", "download"].forEach(function(e28) {
      H2[e28] = new W2(e28, 4, false, e28, null, false, false);
    }), ["cols", "rows", "size", "span"].forEach(function(e28) {
      H2[e28] = new W2(e28, 6, false, e28, null, false, false);
    }), ["rowSpan", "start"].forEach(function(e28) {
      H2[e28] = new W2(e28, 5, false, e28.toLowerCase(), null, false, false);
    });
    var $2 = /[\-\:]([a-z])/g, q2 = function(e28) {
      return e28[1].toUpperCase();
    };
    ["accent-height", "alignment-baseline", "arabic-form", "baseline-shift", "cap-height", "clip-path", "clip-rule", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "dominant-baseline", "enable-background", "fill-opacity", "fill-rule", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "glyph-name", "glyph-orientation-horizontal", "glyph-orientation-vertical", "horiz-adv-x", "horiz-origin-x", "image-rendering", "letter-spacing", "lighting-color", "marker-end", "marker-mid", "marker-start", "overline-position", "overline-thickness", "paint-order", "panose-1", "pointer-events", "rendering-intent", "shape-rendering", "stop-color", "stop-opacity", "strikethrough-position", "strikethrough-thickness", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "text-anchor", "text-decoration", "text-rendering", "underline-position", "underline-thickness", "unicode-bidi", "unicode-range", "units-per-em", "v-alphabetic", "v-hanging", "v-ideographic", "v-mathematical", "vector-effect", "vert-adv-y", "vert-origin-x", "vert-origin-y", "word-spacing", "writing-mode", "xmlns:xlink", "x-height"].forEach(function(e28) {
      var t2 = e28.replace($2, q2);
      H2[t2] = new W2(t2, 1, false, e28, null, false, false);
    }), ["xlink:actuate", "xlink:arcrole", "xlink:role", "xlink:show", "xlink:title", "xlink:type"].forEach(function(e28) {
      var t2 = e28.replace($2, q2);
      H2[t2] = new W2(t2, 1, false, e28, "http://www.w3.org/1999/xlink", false, false);
    }), ["xml:base", "xml:lang", "xml:space"].forEach(function(e28) {
      var t2 = e28.replace($2, q2);
      H2[t2] = new W2(t2, 1, false, e28, "http://www.w3.org/XML/1998/namespace", false, false);
    }), ["tabIndex", "crossOrigin"].forEach(function(e28) {
      H2[e28] = new W2(e28, 1, false, e28.toLowerCase(), null, false, false);
    });
    H2.xlinkHref = new W2("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false), ["src", "href", "action", "formAction"].forEach(function(e28) {
      H2[e28] = new W2(e28, 1, false, e28.toLowerCase(), null, true, true);
    });
    var Y2 = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, G2 = false;
    function X2(e28) {
      !G2 && Y2.test(e28) && (G2 = true, a2("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(e28)));
    }
    function Q2(e28, t2, r3, n3) {
      if (n3.mustUseProperty)
        return e28[n3.propertyName];
      P2(r3, t2), n3.sanitizeURL && X2("" + r3);
      var o3 = n3.attributeName, i3 = null;
      if (4 === n3.type) {
        if (e28.hasAttribute(o3)) {
          var a3 = e28.getAttribute(o3);
          return "" === a3 || (U2(t2, r3, n3, false) ? a3 : a3 === "" + r3 ? r3 : a3);
        }
      } else if (e28.hasAttribute(o3)) {
        if (U2(t2, r3, n3, false))
          return e28.getAttribute(o3);
        if (3 === n3.type)
          return r3;
        i3 = e28.getAttribute(o3);
      }
      return U2(t2, r3, n3, false) ? null === i3 ? r3 : i3 : i3 === "" + r3 ? r3 : i3;
    }
    function K2(e28, t2, r3) {
      if (I2(t2)) {
        if (!e28.hasAttribute(t2))
          return void 0 === r3 ? void 0 : null;
        var n3 = e28.getAttribute(t2);
        return P2(r3, t2), n3 === "" + r3 ? r3 : n3;
      }
    }
    function Z2(e28, t2, r3, n3) {
      var o3 = V2(t2);
      if (!z2(t2, o3, n3))
        if (U2(t2, r3, o3, n3) && (r3 = null), n3 || null === o3) {
          if (I2(t2)) {
            var i3 = t2;
            null === r3 ? e28.removeAttribute(i3) : (P2(r3, t2), e28.setAttribute(i3, "" + r3));
          }
        } else if (o3.mustUseProperty) {
          var a3 = o3.propertyName;
          if (null === r3) {
            var l3 = o3.type;
            e28[a3] = 3 !== l3 && "";
          } else
            e28[a3] = r3;
        } else {
          var u3 = o3.attributeName, s3 = o3.attributeNamespace;
          if (null === r3)
            e28.removeAttribute(u3);
          else {
            var c3, d3 = o3.type;
            3 === d3 || 4 === d3 && true === r3 ? c3 = "" : (P2(r3, u3), c3 = "" + r3, o3.sanitizeURL && X2(c3.toString())), s3 ? e28.setAttributeNS(s3, u3, c3) : e28.setAttribute(u3, c3);
          }
        }
    }
    var J2 = Symbol.for("react.element"), ee2 = Symbol.for("react.portal"), te2 = Symbol.for("react.fragment"), re2 = Symbol.for("react.strict_mode"), ne2 = Symbol.for("react.profiler"), oe2 = Symbol.for("react.provider"), ie2 = Symbol.for("react.context"), ae2 = Symbol.for("react.forward_ref"), le2 = Symbol.for("react.suspense"), ue2 = Symbol.for("react.suspense_list"), se2 = Symbol.for("react.memo"), ce2 = Symbol.for("react.lazy"), de2 = (Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode"), Symbol.for("react.offscreen")), fe2 = (Symbol.for("react.legacy_hidden"), Symbol.for("react.cache"), Symbol.for("react.tracing_marker"), Symbol.iterator);
    function pe2(e28) {
      if (null === e28 || "object" != typeof e28)
        return null;
      var t2 = fe2 && e28[fe2] || e28["@@iterator"];
      return "function" == typeof t2 ? t2 : null;
    }
    var he2, ge2, ve2, me2, ye2, be2, Ce2, xe2 = Object.assign, we2 = 0;
    function ke2() {
    }
    ke2.__reactDisabledLog = true;
    var Se2, Ee2 = n2.ReactCurrentDispatcher;
    function Te2(e28, t2, r3) {
      if (void 0 === Se2)
        try {
          throw Error();
        } catch (e29) {
          var n3 = e29.stack.trim().match(/\n( *(at )?)/);
          Se2 = n3 && n3[1] || "";
        }
      return "\n" + Se2 + e28;
    }
    var Re2, Oe2 = false, _e2 = "function" == typeof WeakMap ? WeakMap : Map;
    function Pe2(e28, t2) {
      if (!e28 || Oe2)
        return "";
      var r3, n3 = Re2.get(e28);
      if (void 0 !== n3)
        return n3;
      Oe2 = true;
      var o3, i3 = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0, o3 = Ee2.current, Ee2.current = null, function() {
        if (0 === we2) {
          he2 = console.log, ge2 = console.info, ve2 = console.warn, me2 = console.error, ye2 = console.group, be2 = console.groupCollapsed, Ce2 = console.groupEnd;
          var e29 = { configurable: true, enumerable: true, value: ke2, writable: true };
          Object.defineProperties(console, { info: e29, log: e29, warn: e29, error: e29, group: e29, groupCollapsed: e29, groupEnd: e29 });
        }
        we2++;
      }();
      try {
        if (t2) {
          var l3 = function() {
            throw Error();
          };
          if (Object.defineProperty(l3.prototype, "props", { set: function() {
            throw Error();
          } }), "object" == typeof Reflect && Reflect.construct) {
            try {
              Reflect.construct(l3, []);
            } catch (e29) {
              r3 = e29;
            }
            Reflect.construct(e28, [], l3);
          } else {
            try {
              l3.call();
            } catch (e29) {
              r3 = e29;
            }
            e28.call(l3.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (e29) {
            r3 = e29;
          }
          e28();
        }
      } catch (t3) {
        if (t3 && r3 && "string" == typeof t3.stack) {
          for (var u3 = t3.stack.split("\n"), s3 = r3.stack.split("\n"), c3 = u3.length - 1, d3 = s3.length - 1; c3 >= 1 && d3 >= 0 && u3[c3] !== s3[d3]; )
            d3--;
          for (; c3 >= 1 && d3 >= 0; c3--, d3--)
            if (u3[c3] !== s3[d3]) {
              if (1 !== c3 || 1 !== d3)
                do {
                  if (c3--, --d3 < 0 || u3[c3] !== s3[d3]) {
                    var f3 = "\n" + u3[c3].replace(" at new ", " at ");
                    return e28.displayName && f3.includes("<anonymous>") && (f3 = f3.replace("<anonymous>", e28.displayName)), "function" == typeof e28 && Re2.set(e28, f3), f3;
                  }
                } while (c3 >= 1 && d3 >= 0);
              break;
            }
        }
      } finally {
        Oe2 = false, Ee2.current = o3, function() {
          if (0 == --we2) {
            var e29 = { configurable: true, enumerable: true, writable: true };
            Object.defineProperties(console, { log: xe2({}, e29, { value: he2 }), info: xe2({}, e29, { value: ge2 }), warn: xe2({}, e29, { value: ve2 }), error: xe2({}, e29, { value: me2 }), group: xe2({}, e29, { value: ye2 }), groupCollapsed: xe2({}, e29, { value: be2 }), groupEnd: xe2({}, e29, { value: Ce2 }) });
          }
          we2 < 0 && a2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }(), Error.prepareStackTrace = i3;
      }
      var p3 = e28 ? e28.displayName || e28.name : "", h3 = p3 ? Te2(p3) : "";
      return "function" == typeof e28 && Re2.set(e28, h3), h3;
    }
    function Me2(e28, t2, r3) {
      return Pe2(e28, false);
    }
    function Be2(e28, t2, r3) {
      if (null == e28)
        return "";
      if ("function" == typeof e28)
        return Pe2(e28, function(e29) {
          var t3 = e29.prototype;
          return !(!t3 || !t3.isReactComponent);
        }(e28));
      if ("string" == typeof e28)
        return Te2(e28);
      switch (e28) {
        case le2:
          return Te2("Suspense");
        case ue2:
          return Te2("SuspenseList");
      }
      if ("object" == typeof e28)
        switch (e28.$$typeof) {
          case ae2:
            return Me2(e28.render);
          case se2:
            return Be2(e28.type, t2, r3);
          case ce2:
            var n3 = e28, o3 = n3._payload, i3 = n3._init;
            try {
              return Be2(i3(o3), t2, r3);
            } catch (e29) {
            }
        }
      return "";
    }
    function Ae2(e28) {
      switch (e28._debugOwner && e28._debugOwner.type, e28._debugSource, e28.tag) {
        case 5:
          return Te2(e28.type);
        case 16:
          return Te2("Lazy");
        case d2:
          return Te2("Suspense");
        case v2:
          return Te2("SuspenseList");
        case 0:
        case 2:
        case p2:
          return Me2(e28.type);
        case s2:
          return Me2(e28.type.render);
        case 1:
          return Pe2(e28.type, true);
        default:
          return "";
      }
    }
    function Ne2(e28) {
      try {
        var t2 = "", r3 = e28;
        do {
          t2 += Ae2(r3), r3 = r3.return;
        } while (r3);
        return t2;
      } catch (e29) {
        return "\nError generating stack: " + e29.message + "\n" + e29.stack;
      }
    }
    function je2(e28) {
      return e28.displayName || "Context";
    }
    function De2(e28) {
      if (null == e28)
        return null;
      if ("number" == typeof e28.tag && a2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), "function" == typeof e28)
        return e28.displayName || e28.name || null;
      if ("string" == typeof e28)
        return e28;
      switch (e28) {
        case te2:
          return "Fragment";
        case ee2:
          return "Portal";
        case ne2:
          return "Profiler";
        case re2:
          return "StrictMode";
        case le2:
          return "Suspense";
        case ue2:
          return "SuspenseList";
      }
      if ("object" == typeof e28)
        switch (e28.$$typeof) {
          case ie2:
            return je2(e28) + ".Consumer";
          case oe2:
            return je2(e28._context) + ".Provider";
          case ae2:
            return function(e29, t3, r4) {
              var n4 = e29.displayName;
              if (n4)
                return n4;
              var o4 = t3.displayName || t3.name || "";
              return "" !== o4 ? r4 + "(" + o4 + ")" : r4;
            }(e28, e28.render, "ForwardRef");
          case se2:
            var t2 = e28.displayName || null;
            return null !== t2 ? t2 : De2(e28.type) || "Memo";
          case ce2:
            var r3 = e28, n3 = r3._payload, o3 = r3._init;
            try {
              return De2(o3(n3));
            } catch (e29) {
              return null;
            }
        }
      return null;
    }
    function Le2(e28) {
      return e28.displayName || "Context";
    }
    function Ie2(e28) {
      var t2, r3, n3, o3, i3 = e28.tag, a3 = e28.type;
      switch (i3) {
        case 24:
          return "Cache";
        case 9:
          return Le2(a3) + ".Consumer";
        case u2:
          return Le2(a3._context) + ".Provider";
        case g2:
          return "DehydratedFragment";
        case s2:
          return t2 = a3, r3 = a3.render, n3 = "ForwardRef", o3 = r3.displayName || r3.name || "", t2.displayName || ("" !== o3 ? n3 + "(" + o3 + ")" : n3);
        case 7:
          return "Fragment";
        case 5:
          return a3;
        case 4:
          return "Portal";
        case 3:
          return "Root";
        case 6:
          return "Text";
        case 16:
          return De2(a3);
        case 8:
          return a3 === re2 ? "StrictMode" : "Mode";
        case m2:
          return "Offscreen";
        case c2:
          return "Profiler";
        case 21:
          return "Scope";
        case d2:
          return "Suspense";
        case v2:
          return "SuspenseList";
        case 25:
          return "TracingMarker";
        case 1:
        case 0:
        case h2:
        case 2:
        case f2:
        case p2:
          if ("function" == typeof a3)
            return a3.displayName || a3.name || null;
          if ("string" == typeof a3)
            return a3;
      }
      return null;
    }
    Re2 = new _e2();
    var ze2 = n2.ReactDebugCurrentFrame, Fe2 = null, Ue2 = false;
    function Ve2() {
      if (null === Fe2)
        return null;
      var e28 = Fe2._debugOwner;
      return null != e28 ? Ie2(e28) : null;
    }
    function We2() {
      return null === Fe2 ? "" : Ne2(Fe2);
    }
    function He2() {
      ze2.getCurrentStack = null, Fe2 = null, Ue2 = false;
    }
    function $e2(e28) {
      ze2.getCurrentStack = We2, Fe2 = e28, Ue2 = false;
    }
    function qe2(e28) {
      Ue2 = e28;
    }
    function Ye2(e28) {
      return "" + e28;
    }
    function Ge2(e28) {
      switch (typeof e28) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return e28;
        case "object":
          return B2(e28), e28;
        default:
          return "";
      }
    }
    var Xe2 = { button: true, checkbox: true, image: true, hidden: true, radio: true, reset: true, submit: true };
    function Qe2(e28, t2) {
      Xe2[t2.type] || t2.onChange || t2.onInput || t2.readOnly || t2.disabled || null == t2.value || a2("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), t2.onChange || t2.readOnly || t2.disabled || null == t2.checked || a2("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function Ke2(e28) {
      var t2 = e28.type, r3 = e28.nodeName;
      return r3 && "input" === r3.toLowerCase() && ("checkbox" === t2 || "radio" === t2);
    }
    function Ze2(e28) {
      return e28._valueTracker;
    }
    function Je2(e28) {
      Ze2(e28) || (e28._valueTracker = function(e29) {
        var t2 = Ke2(e29) ? "checked" : "value", r3 = Object.getOwnPropertyDescriptor(e29.constructor.prototype, t2);
        B2(e29[t2]);
        var n3 = "" + e29[t2];
        if (!e29.hasOwnProperty(t2) && void 0 !== r3 && "function" == typeof r3.get && "function" == typeof r3.set) {
          var o3 = r3.get, i3 = r3.set;
          Object.defineProperty(e29, t2, { configurable: true, get: function() {
            return o3.call(this);
          }, set: function(e30) {
            B2(e30), n3 = "" + e30, i3.call(this, e30);
          } }), Object.defineProperty(e29, t2, { enumerable: r3.enumerable });
          var a3 = { getValue: function() {
            return n3;
          }, setValue: function(e30) {
            B2(e30), n3 = "" + e30;
          }, stopTracking: function() {
            !function(e30) {
              e30._valueTracker = null;
            }(e29), delete e29[t2];
          } };
          return a3;
        }
      }(e28));
    }
    function et2(e28) {
      if (!e28)
        return false;
      var t2 = Ze2(e28);
      if (!t2)
        return true;
      var r3 = t2.getValue(), n3 = function(e29) {
        var t3 = "";
        return e29 ? t3 = Ke2(e29) ? e29.checked ? "true" : "false" : e29.value : t3;
      }(e28);
      return n3 !== r3 && (t2.setValue(n3), true);
    }
    function tt2(e28) {
      if (void 0 === (e28 = e28 || ("undefined" != typeof document ? document : void 0)))
        return null;
      try {
        return e28.activeElement || e28.body;
      } catch (t2) {
        return e28.body;
      }
    }
    var rt2 = false, nt2 = false, ot2 = false, it2 = false;
    function at2(e28) {
      return "checkbox" === e28.type || "radio" === e28.type ? null != e28.checked : null != e28.value;
    }
    function lt2(e28, t2) {
      var r3 = e28, n3 = t2.checked;
      return xe2({}, t2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != n3 ? n3 : r3._wrapperState.initialChecked });
    }
    function ut2(e28, t2) {
      Qe2(0, t2), void 0 === t2.checked || void 0 === t2.defaultChecked || nt2 || (a2("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", Ve2() || "A component", t2.type), nt2 = true), void 0 === t2.value || void 0 === t2.defaultValue || rt2 || (a2("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", Ve2() || "A component", t2.type), rt2 = true);
      var r3 = e28, n3 = null == t2.defaultValue ? "" : t2.defaultValue;
      r3._wrapperState = { initialChecked: null != t2.checked ? t2.checked : t2.defaultChecked, initialValue: Ge2(null != t2.value ? t2.value : n3), controlled: at2(t2) };
    }
    function st2(e28, t2) {
      var r3 = e28, n3 = t2.checked;
      null != n3 && Z2(r3, "checked", n3, false);
    }
    function ct2(e28, t2) {
      var r3 = e28, n3 = at2(t2);
      r3._wrapperState.controlled || !n3 || it2 || (a2("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), it2 = true), !r3._wrapperState.controlled || n3 || ot2 || (a2("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), ot2 = true), st2(e28, t2);
      var o3 = Ge2(t2.value), i3 = t2.type;
      if (null != o3)
        "number" === i3 ? (0 === o3 && "" === r3.value || r3.value != o3) && (r3.value = Ye2(o3)) : r3.value !== Ye2(o3) && (r3.value = Ye2(o3));
      else if ("submit" === i3 || "reset" === i3)
        return void r3.removeAttribute("value");
      t2.hasOwnProperty("value") ? pt2(r3, t2.type, o3) : t2.hasOwnProperty("defaultValue") && pt2(r3, t2.type, Ge2(t2.defaultValue)), null == t2.checked && null != t2.defaultChecked && (r3.defaultChecked = !!t2.defaultChecked);
    }
    function dt2(e28, t2, r3) {
      var n3 = e28;
      if (t2.hasOwnProperty("value") || t2.hasOwnProperty("defaultValue")) {
        var o3 = t2.type;
        if (("submit" === o3 || "reset" === o3) && (void 0 === t2.value || null === t2.value))
          return;
        var i3 = Ye2(n3._wrapperState.initialValue);
        r3 || i3 !== n3.value && (n3.value = i3), n3.defaultValue = i3;
      }
      var a3 = n3.name;
      "" !== a3 && (n3.name = ""), n3.defaultChecked = !n3.defaultChecked, n3.defaultChecked = !!n3._wrapperState.initialChecked, "" !== a3 && (n3.name = a3);
    }
    function ft2(e28, t2) {
      var r3 = e28;
      ct2(r3, t2), function(e29, t3) {
        var r4 = t3.name;
        if ("radio" === t3.type && null != r4) {
          for (var n3 = e29; n3.parentNode; )
            n3 = n3.parentNode;
          P2(r4, "name");
          for (var o3 = n3.querySelectorAll("input[name=" + JSON.stringify("" + r4) + '][type="radio"]'), i3 = 0; i3 < o3.length; i3++) {
            var a3 = o3[i3];
            if (a3 !== e29 && a3.form === e29.form) {
              var l3 = _s2(a3);
              if (!l3)
                throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
              et2(a3), ct2(a3, l3);
            }
          }
        }
      }(r3, t2);
    }
    function pt2(e28, t2, r3) {
      "number" === t2 && tt2(e28.ownerDocument) === e28 || (null == r3 ? e28.defaultValue = Ye2(e28._wrapperState.initialValue) : e28.defaultValue !== Ye2(r3) && (e28.defaultValue = Ye2(r3)));
    }
    var ht2 = false, gt2 = false, vt2 = false;
    function mt2(t2, r3) {
      null == r3.value && ("object" == typeof r3.children && null !== r3.children ? e27.Children.forEach(r3.children, function(e28) {
        null != e28 && "string" != typeof e28 && "number" != typeof e28 && (gt2 || (gt2 = true, a2("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : null != r3.dangerouslySetInnerHTML && (vt2 || (vt2 = true, a2("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), null == r3.selected || ht2 || (a2("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), ht2 = true);
    }
    var yt2, bt2 = Array.isArray;
    function Ct2(e28) {
      return bt2(e28);
    }
    function xt2() {
      var e28 = Ve2();
      return e28 ? "\n\nCheck the render method of `" + e28 + "`." : "";
    }
    yt2 = false;
    var wt2 = ["value", "defaultValue"];
    function kt2(e28, t2, r3, n3) {
      var o3 = e28.options;
      if (t2) {
        for (var i3 = r3, a3 = {}, l3 = 0; l3 < i3.length; l3++)
          a3["$" + i3[l3]] = true;
        for (var u3 = 0; u3 < o3.length; u3++) {
          var s3 = a3.hasOwnProperty("$" + o3[u3].value);
          o3[u3].selected !== s3 && (o3[u3].selected = s3), s3 && n3 && (o3[u3].defaultSelected = true);
        }
      } else {
        for (var c3 = Ye2(Ge2(r3)), d3 = null, f3 = 0; f3 < o3.length; f3++) {
          if (o3[f3].value === c3)
            return o3[f3].selected = true, void (n3 && (o3[f3].defaultSelected = true));
          null !== d3 || o3[f3].disabled || (d3 = o3[f3]);
        }
        null !== d3 && (d3.selected = true);
      }
    }
    function St2(e28, t2) {
      return xe2({}, t2, { value: void 0 });
    }
    function Et2(e28, t2) {
      var r3 = e28;
      !function(e29) {
        Qe2(0, e29);
        for (var t3 = 0; t3 < wt2.length; t3++) {
          var r4 = wt2[t3];
          if (null != e29[r4]) {
            var n3 = Ct2(e29[r4]);
            e29.multiple && !n3 ? a2("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", r4, xt2()) : !e29.multiple && n3 && a2("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", r4, xt2());
          }
        }
      }(t2), r3._wrapperState = { wasMultiple: !!t2.multiple }, void 0 === t2.value || void 0 === t2.defaultValue || yt2 || (a2("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), yt2 = true);
    }
    var Tt2 = false;
    function Rt2(e28, t2) {
      var r3 = e28;
      if (null != t2.dangerouslySetInnerHTML)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      return xe2({}, t2, { value: void 0, defaultValue: void 0, children: Ye2(r3._wrapperState.initialValue) });
    }
    function Ot2(e28, t2) {
      var r3 = e28;
      Qe2(0, t2), void 0 === t2.value || void 0 === t2.defaultValue || Tt2 || (a2("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", Ve2() || "A component"), Tt2 = true);
      var n3 = t2.value;
      if (null == n3) {
        var o3 = t2.children, i3 = t2.defaultValue;
        if (null != o3) {
          if (a2("Use the `defaultValue` or `value` props instead of setting children on <textarea>."), null != i3)
            throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
          if (Ct2(o3)) {
            if (o3.length > 1)
              throw new Error("<textarea> can only have at most one child.");
            o3 = o3[0];
          }
          i3 = o3;
        }
        null == i3 && (i3 = ""), n3 = i3;
      }
      r3._wrapperState = { initialValue: Ge2(n3) };
    }
    function _t2(e28, t2) {
      var r3 = e28, n3 = Ge2(t2.value), o3 = Ge2(t2.defaultValue);
      if (null != n3) {
        var i3 = Ye2(n3);
        i3 !== r3.value && (r3.value = i3), null == t2.defaultValue && r3.defaultValue !== i3 && (r3.defaultValue = i3);
      }
      null != o3 && (r3.defaultValue = Ye2(o3));
    }
    function Pt2(e28, t2) {
      var r3 = e28, n3 = r3.textContent;
      n3 === r3._wrapperState.initialValue && "" !== n3 && null !== n3 && (r3.value = n3);
    }
    var Mt2 = "http://www.w3.org/1999/xhtml", Bt2 = "http://www.w3.org/2000/svg";
    function At2(e28) {
      switch (e28) {
        case "svg":
          return Bt2;
        case "math":
          return "http://www.w3.org/1998/Math/MathML";
        default:
          return Mt2;
      }
    }
    function Nt2(e28, t2) {
      return null == e28 || e28 === Mt2 ? At2(t2) : e28 === Bt2 && "foreignObject" === t2 ? Mt2 : e28;
    }
    var jt2, Dt2, Lt2 = (Dt2 = function(e28, t2) {
      if (e28.namespaceURI !== Bt2 || "innerHTML" in e28)
        e28.innerHTML = t2;
      else {
        (jt2 = jt2 || document.createElement("div")).innerHTML = "<svg>" + t2.valueOf().toString() + "</svg>";
        for (var r3 = jt2.firstChild; e28.firstChild; )
          e28.removeChild(e28.firstChild);
        for (; r3.firstChild; )
          e28.appendChild(r3.firstChild);
      }
    }, "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(e28, t2, r3, n3) {
      MSApp.execUnsafeLocalFunction(function() {
        return Dt2(e28, t2, r3, n3);
      });
    } : Dt2), It2 = function(e28, t2) {
      if (t2) {
        var r3 = e28.firstChild;
        if (r3 && r3 === e28.lastChild && 3 === r3.nodeType)
          return void (r3.nodeValue = t2);
      }
      e28.textContent = t2;
    }, zt2 = { animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"], background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"], backgroundPosition: ["backgroundPositionX", "backgroundPositionY"], border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"], borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"], borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"], borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"], borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"], borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"], borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"], borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"], borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"], borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"], borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"], borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"], borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"], borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"], columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"], columns: ["columnCount", "columnWidth"], flex: ["flexBasis", "flexGrow", "flexShrink"], flexFlow: ["flexDirection", "flexWrap"], font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"], fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"], gap: ["columnGap", "rowGap"], grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"], gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"], gridColumn: ["gridColumnEnd", "gridColumnStart"], gridColumnGap: ["columnGap"], gridGap: ["columnGap", "rowGap"], gridRow: ["gridRowEnd", "gridRowStart"], gridRowGap: ["rowGap"], gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"], listStyle: ["listStyleImage", "listStylePosition", "listStyleType"], margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"], marker: ["markerEnd", "markerMid", "markerStart"], mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"], maskPosition: ["maskPositionX", "maskPositionY"], outline: ["outlineColor", "outlineStyle", "outlineWidth"], overflow: ["overflowX", "overflowY"], padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"], placeContent: ["alignContent", "justifyContent"], placeItems: ["alignItems", "justifyItems"], placeSelf: ["alignSelf", "justifySelf"], textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"], textEmphasis: ["textEmphasisColor", "textEmphasisStyle"], transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"], wordWrap: ["overflowWrap"] }, Ft2 = { animationIterationCount: true, aspectRatio: true, borderImageOutset: true, borderImageSlice: true, borderImageWidth: true, boxFlex: true, boxFlexGroup: true, boxOrdinalGroup: true, columnCount: true, columns: true, flex: true, flexGrow: true, flexPositive: true, flexShrink: true, flexNegative: true, flexOrder: true, gridArea: true, gridRow: true, gridRowEnd: true, gridRowSpan: true, gridRowStart: true, gridColumn: true, gridColumnEnd: true, gridColumnSpan: true, gridColumnStart: true, fontWeight: true, lineClamp: true, lineHeight: true, opacity: true, order: true, orphans: true, tabSize: true, widows: true, zIndex: true, zoom: true, fillOpacity: true, floodOpacity: true, stopOpacity: true, strokeDasharray: true, strokeDashoffset: true, strokeMiterlimit: true, strokeOpacity: true, strokeWidth: true };
    var Ut2 = ["Webkit", "ms", "Moz", "O"];
    function Vt2(e28, t2, r3) {
      return null == t2 || "boolean" == typeof t2 || "" === t2 ? "" : r3 || "number" != typeof t2 || 0 === t2 || Ft2.hasOwnProperty(e28) && Ft2[e28] ? (function(e29, t3) {
        if (O2(e29))
          a2("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", t3, R2(e29)), _2(e29);
      }(t2, e28), ("" + t2).trim()) : t2 + "px";
    }
    Object.keys(Ft2).forEach(function(e28) {
      Ut2.forEach(function(t2) {
        Ft2[function(e29, t3) {
          return e29 + t3.charAt(0).toUpperCase() + t3.substring(1);
        }(t2, e28)] = Ft2[e28];
      });
    });
    var Wt2 = /([A-Z])/g, Ht2 = /^ms-/;
    var $t2 = /^(?:webkit|moz|o)[A-Z]/, qt2 = /^-ms-/, Yt2 = /-(.)/g, Gt2 = /;\s*$/, Xt2 = {}, Qt2 = {}, Kt2 = false, Zt2 = false, Jt2 = function(e28) {
      Xt2.hasOwnProperty(e28) && Xt2[e28] || (Xt2[e28] = true, a2("Unsupported style property %s. Did you mean %s?", e28, function(e29) {
        return e29.replace(Yt2, function(e30, t2) {
          return t2.toUpperCase();
        });
      }(e28.replace(qt2, "ms-"))));
    }, er2 = function(e28, t2) {
      e28.indexOf("-") > -1 ? Jt2(e28) : $t2.test(e28) ? function(e29) {
        Xt2.hasOwnProperty(e29) && Xt2[e29] || (Xt2[e29] = true, a2("Unsupported vendor-prefixed style property %s. Did you mean %s?", e29, e29.charAt(0).toUpperCase() + e29.slice(1)));
      }(e28) : Gt2.test(t2) && function(e29, t3) {
        Qt2.hasOwnProperty(t3) && Qt2[t3] || (Qt2[t3] = true, a2(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, e29, t3.replace(Gt2, "")));
      }(e28, t2), "number" == typeof t2 && (isNaN(t2) ? function(e29, t3) {
        Kt2 || (Kt2 = true, a2("`NaN` is an invalid value for the `%s` css style property.", e29));
      }(e28) : isFinite(t2) || function(e29, t3) {
        Zt2 || (Zt2 = true, a2("`Infinity` is an invalid value for the `%s` css style property.", e29));
      }(e28));
    };
    function tr2(e28) {
      var t2 = "", r3 = "";
      for (var n3 in e28)
        if (e28.hasOwnProperty(n3)) {
          var o3 = e28[n3];
          if (null != o3) {
            var i3 = 0 === n3.indexOf("--");
            t2 += r3 + (i3 ? n3 : n3.replace(Wt2, "-$1").toLowerCase().replace(Ht2, "-ms-")) + ":", t2 += Vt2(n3, o3, i3), r3 = ";";
          }
        }
      return t2 || null;
    }
    function rr2(e28, t2) {
      var r3 = e28.style;
      for (var n3 in t2)
        if (t2.hasOwnProperty(n3)) {
          var o3 = 0 === n3.indexOf("--");
          o3 || er2(n3, t2[n3]);
          var i3 = Vt2(n3, t2[n3], o3);
          "float" === n3 && (n3 = "cssFloat"), o3 ? r3.setProperty(n3, i3) : r3[n3] = i3;
        }
    }
    function nr2(e28) {
      var t2 = {};
      for (var r3 in e28)
        for (var n3 = zt2[r3] || [r3], o3 = 0; o3 < n3.length; o3++)
          t2[n3[o3]] = r3;
      return t2;
    }
    var or2 = xe2({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
    function ir2(e28, t2) {
      if (t2) {
        if (or2[e28] && (null != t2.children || null != t2.dangerouslySetInnerHTML))
          throw new Error(e28 + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (null != t2.dangerouslySetInnerHTML) {
          if (null != t2.children)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if ("object" != typeof t2.dangerouslySetInnerHTML || !("__html" in t2.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!t2.suppressContentEditableWarning && t2.contentEditable && null != t2.children && a2("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), null != t2.style && "object" != typeof t2.style)
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function ar2(e28, t2) {
      if (-1 === e28.indexOf("-"))
        return "string" == typeof t2.is;
      switch (e28) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return false;
        default:
          return true;
      }
    }
    var lr2 = { accept: "accept", acceptcharset: "acceptCharset", "accept-charset": "acceptCharset", accesskey: "accessKey", action: "action", allowfullscreen: "allowFullScreen", alt: "alt", as: "as", async: "async", autocapitalize: "autoCapitalize", autocomplete: "autoComplete", autocorrect: "autoCorrect", autofocus: "autoFocus", autoplay: "autoPlay", autosave: "autoSave", capture: "capture", cellpadding: "cellPadding", cellspacing: "cellSpacing", challenge: "challenge", charset: "charSet", checked: "checked", children: "children", cite: "cite", class: "className", classid: "classID", classname: "className", cols: "cols", colspan: "colSpan", content: "content", contenteditable: "contentEditable", contextmenu: "contextMenu", controls: "controls", controlslist: "controlsList", coords: "coords", crossorigin: "crossOrigin", dangerouslysetinnerhtml: "dangerouslySetInnerHTML", data: "data", datetime: "dateTime", default: "default", defaultchecked: "defaultChecked", defaultvalue: "defaultValue", defer: "defer", dir: "dir", disabled: "disabled", disablepictureinpicture: "disablePictureInPicture", disableremoteplayback: "disableRemotePlayback", download: "download", draggable: "draggable", enctype: "encType", enterkeyhint: "enterKeyHint", for: "htmlFor", form: "form", formmethod: "formMethod", formaction: "formAction", formenctype: "formEncType", formnovalidate: "formNoValidate", formtarget: "formTarget", frameborder: "frameBorder", headers: "headers", height: "height", hidden: "hidden", high: "high", href: "href", hreflang: "hrefLang", htmlfor: "htmlFor", httpequiv: "httpEquiv", "http-equiv": "httpEquiv", icon: "icon", id: "id", imagesizes: "imageSizes", imagesrcset: "imageSrcSet", innerhtml: "innerHTML", inputmode: "inputMode", integrity: "integrity", is: "is", itemid: "itemID", itemprop: "itemProp", itemref: "itemRef", itemscope: "itemScope", itemtype: "itemType", keyparams: "keyParams", keytype: "keyType", kind: "kind", label: "label", lang: "lang", list: "list", loop: "loop", low: "low", manifest: "manifest", marginwidth: "marginWidth", marginheight: "marginHeight", max: "max", maxlength: "maxLength", media: "media", mediagroup: "mediaGroup", method: "method", min: "min", minlength: "minLength", multiple: "multiple", muted: "muted", name: "name", nomodule: "noModule", nonce: "nonce", novalidate: "noValidate", open: "open", optimum: "optimum", pattern: "pattern", placeholder: "placeholder", playsinline: "playsInline", poster: "poster", preload: "preload", profile: "profile", radiogroup: "radioGroup", readonly: "readOnly", referrerpolicy: "referrerPolicy", rel: "rel", required: "required", reversed: "reversed", role: "role", rows: "rows", rowspan: "rowSpan", sandbox: "sandbox", scope: "scope", scoped: "scoped", scrolling: "scrolling", seamless: "seamless", selected: "selected", shape: "shape", size: "size", sizes: "sizes", span: "span", spellcheck: "spellCheck", src: "src", srcdoc: "srcDoc", srclang: "srcLang", srcset: "srcSet", start: "start", step: "step", style: "style", summary: "summary", tabindex: "tabIndex", target: "target", title: "title", type: "type", usemap: "useMap", value: "value", width: "width", wmode: "wmode", wrap: "wrap", about: "about", accentheight: "accentHeight", "accent-height": "accentHeight", accumulate: "accumulate", additive: "additive", alignmentbaseline: "alignmentBaseline", "alignment-baseline": "alignmentBaseline", allowreorder: "allowReorder", alphabetic: "alphabetic", amplitude: "amplitude", arabicform: "arabicForm", "arabic-form": "arabicForm", ascent: "ascent", attributename: "attributeName", attributetype: "attributeType", autoreverse: "autoReverse", azimuth: "azimuth", basefrequency: "baseFrequency", baselineshift: "baselineShift", "baseline-shift": "baselineShift", baseprofile: "baseProfile", bbox: "bbox", begin: "begin", bias: "bias", by: "by", calcmode: "calcMode", capheight: "capHeight", "cap-height": "capHeight", clip: "clip", clippath: "clipPath", "clip-path": "clipPath", clippathunits: "clipPathUnits", cliprule: "clipRule", "clip-rule": "clipRule", color: "color", colorinterpolation: "colorInterpolation", "color-interpolation": "colorInterpolation", colorinterpolationfilters: "colorInterpolationFilters", "color-interpolation-filters": "colorInterpolationFilters", colorprofile: "colorProfile", "color-profile": "colorProfile", colorrendering: "colorRendering", "color-rendering": "colorRendering", contentscripttype: "contentScriptType", contentstyletype: "contentStyleType", cursor: "cursor", cx: "cx", cy: "cy", d: "d", datatype: "datatype", decelerate: "decelerate", descent: "descent", diffuseconstant: "diffuseConstant", direction: "direction", display: "display", divisor: "divisor", dominantbaseline: "dominantBaseline", "dominant-baseline": "dominantBaseline", dur: "dur", dx: "dx", dy: "dy", edgemode: "edgeMode", elevation: "elevation", enablebackground: "enableBackground", "enable-background": "enableBackground", end: "end", exponent: "exponent", externalresourcesrequired: "externalResourcesRequired", fill: "fill", fillopacity: "fillOpacity", "fill-opacity": "fillOpacity", fillrule: "fillRule", "fill-rule": "fillRule", filter: "filter", filterres: "filterRes", filterunits: "filterUnits", floodopacity: "floodOpacity", "flood-opacity": "floodOpacity", floodcolor: "floodColor", "flood-color": "floodColor", focusable: "focusable", fontfamily: "fontFamily", "font-family": "fontFamily", fontsize: "fontSize", "font-size": "fontSize", fontsizeadjust: "fontSizeAdjust", "font-size-adjust": "fontSizeAdjust", fontstretch: "fontStretch", "font-stretch": "fontStretch", fontstyle: "fontStyle", "font-style": "fontStyle", fontvariant: "fontVariant", "font-variant": "fontVariant", fontweight: "fontWeight", "font-weight": "fontWeight", format: "format", from: "from", fx: "fx", fy: "fy", g1: "g1", g2: "g2", glyphname: "glyphName", "glyph-name": "glyphName", glyphorientationhorizontal: "glyphOrientationHorizontal", "glyph-orientation-horizontal": "glyphOrientationHorizontal", glyphorientationvertical: "glyphOrientationVertical", "glyph-orientation-vertical": "glyphOrientationVertical", glyphref: "glyphRef", gradienttransform: "gradientTransform", gradientunits: "gradientUnits", hanging: "hanging", horizadvx: "horizAdvX", "horiz-adv-x": "horizAdvX", horizoriginx: "horizOriginX", "horiz-origin-x": "horizOriginX", ideographic: "ideographic", imagerendering: "imageRendering", "image-rendering": "imageRendering", in2: "in2", in: "in", inlist: "inlist", intercept: "intercept", k1: "k1", k2: "k2", k3: "k3", k4: "k4", k: "k", kernelmatrix: "kernelMatrix", kernelunitlength: "kernelUnitLength", kerning: "kerning", keypoints: "keyPoints", keysplines: "keySplines", keytimes: "keyTimes", lengthadjust: "lengthAdjust", letterspacing: "letterSpacing", "letter-spacing": "letterSpacing", lightingcolor: "lightingColor", "lighting-color": "lightingColor", limitingconeangle: "limitingConeAngle", local: "local", markerend: "markerEnd", "marker-end": "markerEnd", markerheight: "markerHeight", markermid: "markerMid", "marker-mid": "markerMid", markerstart: "markerStart", "marker-start": "markerStart", markerunits: "markerUnits", markerwidth: "markerWidth", mask: "mask", maskcontentunits: "maskContentUnits", maskunits: "maskUnits", mathematical: "mathematical", mode: "mode", numoctaves: "numOctaves", offset: "offset", opacity: "opacity", operator: "operator", order: "order", orient: "orient", orientation: "orientation", origin: "origin", overflow: "overflow", overlineposition: "overlinePosition", "overline-position": "overlinePosition", overlinethickness: "overlineThickness", "overline-thickness": "overlineThickness", paintorder: "paintOrder", "paint-order": "paintOrder", panose1: "panose1", "panose-1": "panose1", pathlength: "pathLength", patterncontentunits: "patternContentUnits", patterntransform: "patternTransform", patternunits: "patternUnits", pointerevents: "pointerEvents", "pointer-events": "pointerEvents", points: "points", pointsatx: "pointsAtX", pointsaty: "pointsAtY", pointsatz: "pointsAtZ", prefix: "prefix", preservealpha: "preserveAlpha", preserveaspectratio: "preserveAspectRatio", primitiveunits: "primitiveUnits", property: "property", r: "r", radius: "radius", refx: "refX", refy: "refY", renderingintent: "renderingIntent", "rendering-intent": "renderingIntent", repeatcount: "repeatCount", repeatdur: "repeatDur", requiredextensions: "requiredExtensions", requiredfeatures: "requiredFeatures", resource: "resource", restart: "restart", result: "result", results: "results", rotate: "rotate", rx: "rx", ry: "ry", scale: "scale", security: "security", seed: "seed", shaperendering: "shapeRendering", "shape-rendering": "shapeRendering", slope: "slope", spacing: "spacing", specularconstant: "specularConstant", specularexponent: "specularExponent", speed: "speed", spreadmethod: "spreadMethod", startoffset: "startOffset", stddeviation: "stdDeviation", stemh: "stemh", stemv: "stemv", stitchtiles: "stitchTiles", stopcolor: "stopColor", "stop-color": "stopColor", stopopacity: "stopOpacity", "stop-opacity": "stopOpacity", strikethroughposition: "strikethroughPosition", "strikethrough-position": "strikethroughPosition", strikethroughthickness: "strikethroughThickness", "strikethrough-thickness": "strikethroughThickness", string: "string", stroke: "stroke", strokedasharray: "strokeDasharray", "stroke-dasharray": "strokeDasharray", strokedashoffset: "strokeDashoffset", "stroke-dashoffset": "strokeDashoffset", strokelinecap: "strokeLinecap", "stroke-linecap": "strokeLinecap", strokelinejoin: "strokeLinejoin", "stroke-linejoin": "strokeLinejoin", strokemiterlimit: "strokeMiterlimit", "stroke-miterlimit": "strokeMiterlimit", strokewidth: "strokeWidth", "stroke-width": "strokeWidth", strokeopacity: "strokeOpacity", "stroke-opacity": "strokeOpacity", suppresscontenteditablewarning: "suppressContentEditableWarning", suppresshydrationwarning: "suppressHydrationWarning", surfacescale: "surfaceScale", systemlanguage: "systemLanguage", tablevalues: "tableValues", targetx: "targetX", targety: "targetY", textanchor: "textAnchor", "text-anchor": "textAnchor", textdecoration: "textDecoration", "text-decoration": "textDecoration", textlength: "textLength", textrendering: "textRendering", "text-rendering": "textRendering", to: "to", transform: "transform", typeof: "typeof", u1: "u1", u2: "u2", underlineposition: "underlinePosition", "underline-position": "underlinePosition", underlinethickness: "underlineThickness", "underline-thickness": "underlineThickness", unicode: "unicode", unicodebidi: "unicodeBidi", "unicode-bidi": "unicodeBidi", unicoderange: "unicodeRange", "unicode-range": "unicodeRange", unitsperem: "unitsPerEm", "units-per-em": "unitsPerEm", unselectable: "unselectable", valphabetic: "vAlphabetic", "v-alphabetic": "vAlphabetic", values: "values", vectoreffect: "vectorEffect", "vector-effect": "vectorEffect", version: "version", vertadvy: "vertAdvY", "vert-adv-y": "vertAdvY", vertoriginx: "vertOriginX", "vert-origin-x": "vertOriginX", vertoriginy: "vertOriginY", "vert-origin-y": "vertOriginY", vhanging: "vHanging", "v-hanging": "vHanging", videographic: "vIdeographic", "v-ideographic": "vIdeographic", viewbox: "viewBox", viewtarget: "viewTarget", visibility: "visibility", vmathematical: "vMathematical", "v-mathematical": "vMathematical", vocab: "vocab", widths: "widths", wordspacing: "wordSpacing", "word-spacing": "wordSpacing", writingmode: "writingMode", "writing-mode": "writingMode", x1: "x1", x2: "x2", x: "x", xchannelselector: "xChannelSelector", xheight: "xHeight", "x-height": "xHeight", xlinkactuate: "xlinkActuate", "xlink:actuate": "xlinkActuate", xlinkarcrole: "xlinkArcrole", "xlink:arcrole": "xlinkArcrole", xlinkhref: "xlinkHref", "xlink:href": "xlinkHref", xlinkrole: "xlinkRole", "xlink:role": "xlinkRole", xlinkshow: "xlinkShow", "xlink:show": "xlinkShow", xlinktitle: "xlinkTitle", "xlink:title": "xlinkTitle", xlinktype: "xlinkType", "xlink:type": "xlinkType", xmlbase: "xmlBase", "xml:base": "xmlBase", xmllang: "xmlLang", "xml:lang": "xmlLang", xmlns: "xmlns", "xml:space": "xmlSpace", xmlnsxlink: "xmlnsXlink", "xmlns:xlink": "xmlnsXlink", xmlspace: "xmlSpace", y1: "y1", y2: "y2", y: "y", ychannelselector: "yChannelSelector", z: "z", zoomandpan: "zoomAndPan" }, ur2 = { "aria-current": 0, "aria-description": 0, "aria-details": 0, "aria-disabled": 0, "aria-hidden": 0, "aria-invalid": 0, "aria-keyshortcuts": 0, "aria-label": 0, "aria-roledescription": 0, "aria-autocomplete": 0, "aria-checked": 0, "aria-expanded": 0, "aria-haspopup": 0, "aria-level": 0, "aria-modal": 0, "aria-multiline": 0, "aria-multiselectable": 0, "aria-orientation": 0, "aria-placeholder": 0, "aria-pressed": 0, "aria-readonly": 0, "aria-required": 0, "aria-selected": 0, "aria-sort": 0, "aria-valuemax": 0, "aria-valuemin": 0, "aria-valuenow": 0, "aria-valuetext": 0, "aria-atomic": 0, "aria-busy": 0, "aria-live": 0, "aria-relevant": 0, "aria-dropeffect": 0, "aria-grabbed": 0, "aria-activedescendant": 0, "aria-colcount": 0, "aria-colindex": 0, "aria-colspan": 0, "aria-controls": 0, "aria-describedby": 0, "aria-errormessage": 0, "aria-flowto": 0, "aria-labelledby": 0, "aria-owns": 0, "aria-posinset": 0, "aria-rowcount": 0, "aria-rowindex": 0, "aria-rowspan": 0, "aria-setsize": 0 }, sr2 = {}, cr2 = new RegExp("^(aria)-[" + N2 + "]*$"), dr2 = new RegExp("^(aria)[A-Z][" + N2 + "]*$");
    function fr2(e28, t2) {
      if (T2.call(sr2, t2) && sr2[t2])
        return true;
      if (dr2.test(t2)) {
        var r3 = "aria-" + t2.slice(4).toLowerCase(), n3 = ur2.hasOwnProperty(r3) ? r3 : null;
        if (null == n3)
          return a2("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", t2), sr2[t2] = true, true;
        if (t2 !== n3)
          return a2("Invalid ARIA attribute `%s`. Did you mean `%s`?", t2, n3), sr2[t2] = true, true;
      }
      if (cr2.test(t2)) {
        var o3 = t2.toLowerCase(), i3 = ur2.hasOwnProperty(o3) ? o3 : null;
        if (null == i3)
          return sr2[t2] = true, false;
        if (t2 !== i3)
          return a2("Unknown ARIA attribute `%s`. Did you mean `%s`?", t2, i3), sr2[t2] = true, true;
      }
      return true;
    }
    function pr2(e28, t2) {
      ar2(e28, t2) || function(e29, t3) {
        var r3 = [];
        for (var n3 in t3)
          fr2(0, n3) || r3.push(n3);
        var o3 = r3.map(function(e30) {
          return "`" + e30 + "`";
        }).join(", ");
        1 === r3.length ? a2("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", o3, e29) : r3.length > 1 && a2("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", o3, e29);
      }(e28, t2);
    }
    var hr2 = false;
    var gr2, vr2 = {}, mr2 = /^on./, yr2 = /^on[^A-Z]/, br2 = new RegExp("^(aria)-[" + N2 + "]*$"), Cr2 = new RegExp("^(aria)[A-Z][" + N2 + "]*$");
    gr2 = function(e28, t2, r3, n3) {
      if (T2.call(vr2, t2) && vr2[t2])
        return true;
      var o3 = t2.toLowerCase();
      if ("onfocusin" === o3 || "onfocusout" === o3)
        return a2("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), vr2[t2] = true, true;
      if (null != n3) {
        var i3 = n3.registrationNameDependencies, l3 = n3.possibleRegistrationNames;
        if (i3.hasOwnProperty(t2))
          return true;
        var u3 = l3.hasOwnProperty(o3) ? l3[o3] : null;
        if (null != u3)
          return a2("Invalid event handler property `%s`. Did you mean `%s`?", t2, u3), vr2[t2] = true, true;
        if (mr2.test(t2))
          return a2("Unknown event handler property `%s`. It will be ignored.", t2), vr2[t2] = true, true;
      } else if (mr2.test(t2))
        return yr2.test(t2) && a2("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", t2), vr2[t2] = true, true;
      if (br2.test(t2) || Cr2.test(t2))
        return true;
      if ("innerhtml" === o3)
        return a2("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), vr2[t2] = true, true;
      if ("aria" === o3)
        return a2("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), vr2[t2] = true, true;
      if ("is" === o3 && null != r3 && "string" != typeof r3)
        return a2("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof r3), vr2[t2] = true, true;
      if ("number" == typeof r3 && isNaN(r3))
        return a2("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", t2), vr2[t2] = true, true;
      var s3 = V2(t2), c3 = null !== s3 && 0 === s3.type;
      if (lr2.hasOwnProperty(o3)) {
        var d3 = lr2[o3];
        if (d3 !== t2)
          return a2("Invalid DOM property `%s`. Did you mean `%s`?", t2, d3), vr2[t2] = true, true;
      } else if (!c3 && t2 !== o3)
        return a2("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", t2, o3), vr2[t2] = true, true;
      return "boolean" == typeof r3 && F2(t2, r3, s3, false) ? (r3 ? a2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', r3, t2, t2, r3, t2) : a2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', r3, t2, t2, r3, t2, t2, t2), vr2[t2] = true, true) : !!c3 || (F2(t2, r3, s3, false) ? (vr2[t2] = true, false) : ("false" !== r3 && "true" !== r3 || null === s3 || 3 !== s3.type || (a2("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", r3, t2, "false" === r3 ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', t2, r3), vr2[t2] = true), true));
    };
    function xr2(e28, t2, r3) {
      ar2(e28, t2) || function(e29, t3, r4) {
        var n3 = [];
        for (var o3 in t3)
          gr2(0, o3, t3[o3], r4) || n3.push(o3);
        var i3 = n3.map(function(e30) {
          return "`" + e30 + "`";
        }).join(", ");
        1 === n3.length ? a2("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", i3, e29) : n3.length > 1 && a2("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", i3, e29);
      }(e28, t2, r3);
    }
    var wr2 = null;
    function kr2(e28) {
      var t2 = e28.target || e28.srcElement || window;
      return t2.correspondingUseElement && (t2 = t2.correspondingUseElement), 3 === t2.nodeType ? t2.parentNode : t2;
    }
    var Sr2 = null, Er2 = null, Tr2 = null;
    function Rr2(e28) {
      var t2 = Rs2(e28);
      if (t2) {
        if ("function" != typeof Sr2)
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var r3 = t2.stateNode;
        if (r3) {
          var n3 = _s2(r3);
          Sr2(t2.stateNode, t2.type, n3);
        }
      }
    }
    function Or2(e28) {
      Er2 ? Tr2 ? Tr2.push(e28) : Tr2 = [e28] : Er2 = e28;
    }
    function _r2() {
      if (Er2) {
        var e28 = Er2, t2 = Tr2;
        if (Er2 = null, Tr2 = null, Rr2(e28), t2)
          for (var r3 = 0; r3 < t2.length; r3++)
            Rr2(t2[r3]);
      }
    }
    var Pr2 = function(e28, t2) {
      return e28(t2);
    }, Mr2 = function() {
    }, Br2 = false;
    function Ar2() {
      (null !== Er2 || null !== Tr2) && (Mr2(), _r2());
    }
    function Nr2(e28, t2, r3) {
      if (Br2)
        return e28(t2, r3);
      Br2 = true;
      try {
        return Pr2(e28, t2, r3);
      } finally {
        Br2 = false, Ar2();
      }
    }
    function jr2(e28, t2) {
      var r3 = e28.stateNode;
      if (null === r3)
        return null;
      var n3 = _s2(r3);
      if (null === n3)
        return null;
      var o3 = n3[t2];
      if (function(e29, t3, r4) {
        switch (e29) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
          case "onMouseEnter":
            return !(!r4.disabled || (n4 = t3, "button" !== n4 && "input" !== n4 && "select" !== n4 && "textarea" !== n4));
          default:
            return false;
        }
        var n4;
      }(t2, e28.type, n3))
        return null;
      if (o3 && "function" != typeof o3)
        throw new Error("Expected `" + t2 + "` listener to be a function, instead got a value of `" + typeof o3 + "` type.");
      return o3;
    }
    var Dr2 = false;
    if (E2)
      try {
        var Lr2 = {};
        Object.defineProperty(Lr2, "passive", { get: function() {
          Dr2 = true;
        } }), window.addEventListener("test", Lr2, Lr2), window.removeEventListener("test", Lr2, Lr2);
      } catch (e28) {
        Dr2 = false;
      }
    function Ir2(e28, t2, r3, n3, o3, i3, a3, l3, u3) {
      var s3 = Array.prototype.slice.call(arguments, 3);
      try {
        t2.apply(r3, s3);
      } catch (e29) {
        this.onError(e29);
      }
    }
    var zr2 = Ir2;
    if ("undefined" != typeof window && "function" == typeof window.dispatchEvent && "undefined" != typeof document && "function" == typeof document.createEvent) {
      var Fr2 = document.createElement("react");
      zr2 = function(e28, t2, r3, n3, o3, i3, a3, l3, u3) {
        if ("undefined" == typeof document || null === document)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var s3 = document.createEvent("Event"), c3 = false, d3 = true, f3 = window.event, p3 = Object.getOwnPropertyDescriptor(window, "event");
        function h3() {
          Fr2.removeEventListener(x3, m3, false), void 0 !== window.event && window.hasOwnProperty("event") && (window.event = f3);
        }
        var g3, v3 = Array.prototype.slice.call(arguments, 3);
        function m3() {
          c3 = true, h3(), t2.apply(r3, v3), d3 = false;
        }
        var y3 = false, b3 = false;
        function C3(e29) {
          if (g3 = e29.error, y3 = true, null === g3 && 0 === e29.colno && 0 === e29.lineno && (b3 = true), e29.defaultPrevented && null != g3 && "object" == typeof g3)
            try {
              g3._suppressLogging = true;
            } catch (e30) {
            }
        }
        var x3 = "react-" + (e28 || "invokeguardedcallback");
        if (window.addEventListener("error", C3), Fr2.addEventListener(x3, m3, false), s3.initEvent(x3, false, false), Fr2.dispatchEvent(s3), p3 && Object.defineProperty(window, "event", p3), c3 && d3 && (y3 ? b3 && (g3 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : g3 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(g3)), window.removeEventListener("error", C3), !c3)
          return h3(), Ir2.apply(this, arguments);
      };
    }
    var Ur2 = zr2, Vr2 = false, Wr2 = null, Hr2 = false, $r2 = null, qr2 = { onError: function(e28) {
      Vr2 = true, Wr2 = e28;
    } };
    function Yr2(e28, t2, r3, n3, o3, i3, a3, l3, u3) {
      Vr2 = false, Wr2 = null, Ur2.apply(qr2, arguments);
    }
    function Gr2() {
      if (Vr2) {
        var e28 = Wr2;
        return Vr2 = false, Wr2 = null, e28;
      }
      throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Xr2(e28) {
      return e28._reactInternals;
    }
    var Qr2 = 16, Kr2 = 128, Zr2 = 256, Jr2 = 512, en2 = 1024, tn2 = 2048, rn2 = 4096, nn2 = 8192, on2 = 16384, an2 = 32768, ln2 = 65536, un2 = 131072, sn2 = 1048576, cn2 = 2097152, dn2 = 4194304, fn2 = 16777216, pn2 = 33554432, hn2 = 1028, gn2 = 12854, vn2 = 8772, mn2 = 2064, yn2 = 14680064, bn2 = n2.ReactCurrentOwner;
    function Cn2(e28) {
      var t2 = e28, r3 = e28;
      if (e28.alternate)
        for (; t2.return; )
          t2 = t2.return;
      else {
        var n3 = t2;
        do {
          0 != (4098 & (t2 = n3).flags) && (r3 = t2.return), n3 = t2.return;
        } while (n3);
      }
      return 3 === t2.tag ? r3 : null;
    }
    function xn2(e28) {
      if (e28.tag === d2) {
        var t2 = e28.memoizedState;
        if (null === t2) {
          var r3 = e28.alternate;
          null !== r3 && (t2 = r3.memoizedState);
        }
        if (null !== t2)
          return t2.dehydrated;
      }
      return null;
    }
    function wn2(e28) {
      return 3 === e28.tag ? e28.stateNode.containerInfo : null;
    }
    function kn2(e28) {
      if (Cn2(e28) !== e28)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function Sn2(e28) {
      var t2 = e28.alternate;
      if (!t2) {
        var r3 = Cn2(e28);
        if (null === r3)
          throw new Error("Unable to find node on an unmounted component.");
        return r3 !== e28 ? null : e28;
      }
      for (var n3 = e28, o3 = t2; ; ) {
        var i3 = n3.return;
        if (null === i3)
          break;
        var a3 = i3.alternate;
        if (null === a3) {
          var l3 = i3.return;
          if (null !== l3) {
            n3 = o3 = l3;
            continue;
          }
          break;
        }
        if (i3.child === a3.child) {
          for (var u3 = i3.child; u3; ) {
            if (u3 === n3)
              return kn2(i3), e28;
            if (u3 === o3)
              return kn2(i3), t2;
            u3 = u3.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (n3.return !== o3.return)
          n3 = i3, o3 = a3;
        else {
          for (var s3 = false, c3 = i3.child; c3; ) {
            if (c3 === n3) {
              s3 = true, n3 = i3, o3 = a3;
              break;
            }
            if (c3 === o3) {
              s3 = true, o3 = i3, n3 = a3;
              break;
            }
            c3 = c3.sibling;
          }
          if (!s3) {
            for (c3 = a3.child; c3; ) {
              if (c3 === n3) {
                s3 = true, n3 = a3, o3 = i3;
                break;
              }
              if (c3 === o3) {
                s3 = true, o3 = a3, n3 = i3;
                break;
              }
              c3 = c3.sibling;
            }
            if (!s3)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (n3.alternate !== o3)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (3 !== n3.tag)
        throw new Error("Unable to find node on an unmounted component.");
      return n3.stateNode.current === n3 ? e28 : t2;
    }
    function En2(e28) {
      var t2 = Sn2(e28);
      return null !== t2 ? Tn2(t2) : null;
    }
    function Tn2(e28) {
      if (5 === e28.tag || 6 === e28.tag)
        return e28;
      for (var t2 = e28.child; null !== t2; ) {
        var r3 = Tn2(t2);
        if (null !== r3)
          return r3;
        t2 = t2.sibling;
      }
      return null;
    }
    function Rn2(e28) {
      var t2 = Sn2(e28);
      return null !== t2 ? On2(t2) : null;
    }
    function On2(e28) {
      if (5 === e28.tag || 6 === e28.tag)
        return e28;
      for (var t2 = e28.child; null !== t2; ) {
        if (4 !== t2.tag) {
          var r3 = On2(t2);
          if (null !== r3)
            return r3;
        }
        t2 = t2.sibling;
      }
      return null;
    }
    var _n2 = r2.unstable_scheduleCallback, Pn2 = r2.unstable_cancelCallback, Mn2 = r2.unstable_shouldYield, Bn2 = r2.unstable_requestPaint, An2 = r2.unstable_now, Nn2 = r2.unstable_getCurrentPriorityLevel, jn2 = r2.unstable_ImmediatePriority, Dn2 = r2.unstable_UserBlockingPriority, Ln2 = r2.unstable_NormalPriority, In2 = r2.unstable_LowPriority, zn2 = r2.unstable_IdlePriority, Fn2 = r2.unstable_yieldValue, Un2 = r2.unstable_setDisableYieldValue, Vn2 = null, Wn2 = null, Hn2 = null, $n2 = false, qn2 = "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__;
    function Yn2(e28) {
      if ("function" == typeof Fn2 && (Un2(e28), o2 = e28), Wn2 && "function" == typeof Wn2.setStrictMode)
        try {
          Wn2.setStrictMode(Vn2, e28);
        } catch (e29) {
          $n2 || ($n2 = true, a2("React instrumentation encountered an error: %s", e29));
        }
    }
    function Gn2(e28) {
      Hn2 = e28;
    }
    function Xn2() {
      for (var e28 = /* @__PURE__ */ new Map(), t2 = 1, r3 = 0; r3 < fo2; r3++) {
        var n3 = zo2(t2);
        e28.set(t2, n3), t2 *= 2;
      }
      return e28;
    }
    function Qn2() {
      null !== Hn2 && "function" == typeof Hn2.markCommitStopped && Hn2.markCommitStopped();
    }
    function Kn2(e28) {
      null !== Hn2 && "function" == typeof Hn2.markComponentRenderStarted && Hn2.markComponentRenderStarted(e28);
    }
    function Zn2() {
      null !== Hn2 && "function" == typeof Hn2.markComponentRenderStopped && Hn2.markComponentRenderStopped();
    }
    function Jn2(e28) {
      null !== Hn2 && "function" == typeof Hn2.markComponentLayoutEffectMountStarted && Hn2.markComponentLayoutEffectMountStarted(e28);
    }
    function eo2(e28) {
      null !== Hn2 && "function" == typeof Hn2.markComponentLayoutEffectUnmountStarted && Hn2.markComponentLayoutEffectUnmountStarted(e28);
    }
    function to2() {
      null !== Hn2 && "function" == typeof Hn2.markComponentLayoutEffectUnmountStopped && Hn2.markComponentLayoutEffectUnmountStopped();
    }
    function ro2(e28, t2, r3) {
      null !== Hn2 && "function" == typeof Hn2.markComponentErrored && Hn2.markComponentErrored(e28, t2, r3);
    }
    function no2(e28, t2, r3) {
      null !== Hn2 && "function" == typeof Hn2.markComponentSuspended && Hn2.markComponentSuspended(e28, t2, r3);
    }
    function oo2(e28) {
      null !== Hn2 && "function" == typeof Hn2.markRenderStarted && Hn2.markRenderStarted(e28);
    }
    function io2() {
      null !== Hn2 && "function" == typeof Hn2.markRenderStopped && Hn2.markRenderStopped();
    }
    function ao2(e28, t2) {
      null !== Hn2 && "function" == typeof Hn2.markStateUpdateScheduled && Hn2.markStateUpdateScheduled(e28, t2);
    }
    var lo2 = 16, uo2 = Math.clz32 ? Math.clz32 : function(e28) {
      var t2 = e28 >>> 0;
      if (0 === t2)
        return 32;
      return 31 - (so2(t2) / co2 | 0) | 0;
    }, so2 = Math.log, co2 = Math.LN2;
    var fo2 = 31, po2 = 16, ho2 = 4194240, go2 = 1024, vo2 = 2048, mo2 = 4096, yo2 = 8192, bo2 = 16384, Co2 = 32768, xo2 = 65536, wo2 = 131072, ko2 = 262144, So2 = 524288, Eo2 = 1048576, To2 = 2097152, Ro2 = 130023424, Oo2 = 4194304, _o2 = 8388608, Po2 = 16777216, Mo2 = 33554432, Bo2 = 67108864, Ao2 = Oo2, No2 = 134217728, jo2 = 268435455, Do2 = 268435456, Lo2 = 536870912, Io2 = 1073741824;
    function zo2(e28) {
      return 1 & e28 ? "Sync" : 2 & e28 ? "InputContinuousHydration" : 4 & e28 ? "InputContinuous" : 8 & e28 ? "DefaultHydration" : e28 & po2 ? "Default" : 32 & e28 ? "TransitionHydration" : e28 & ho2 ? "Transition" : e28 & Ro2 ? "Retry" : e28 & No2 ? "SelectiveHydration" : e28 & Do2 ? "IdleHydration" : e28 & Lo2 ? "Idle" : e28 & Io2 ? "Offscreen" : void 0;
    }
    var Fo2 = -1, Uo2 = 64, Vo2 = Oo2;
    function Wo2(e28) {
      switch (Ko2(e28)) {
        case 1:
          return 1;
        case 2:
          return 2;
        case 4:
          return 4;
        case 8:
          return 8;
        case po2:
          return po2;
        case 32:
          return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case go2:
        case vo2:
        case mo2:
        case yo2:
        case bo2:
        case Co2:
        case xo2:
        case wo2:
        case ko2:
        case So2:
        case Eo2:
        case To2:
          return e28 & ho2;
        case Oo2:
        case _o2:
        case Po2:
        case Mo2:
        case Bo2:
          return e28 & Ro2;
        case No2:
          return No2;
        case Do2:
          return Do2;
        case Lo2:
          return Lo2;
        case Io2:
          return Io2;
        default:
          return a2("Should have found matching lanes. This is a bug in React."), e28;
      }
    }
    function Ho2(e28, t2) {
      var r3 = e28.pendingLanes;
      if (0 === r3)
        return 0;
      var n3 = 0, o3 = e28.suspendedLanes, i3 = e28.pingedLanes, a3 = r3 & jo2;
      if (0 !== a3) {
        var l3 = a3 & ~o3;
        if (0 !== l3)
          n3 = Wo2(l3);
        else {
          var u3 = a3 & i3;
          0 !== u3 && (n3 = Wo2(u3));
        }
      } else {
        var s3 = r3 & ~o3;
        0 !== s3 ? n3 = Wo2(s3) : 0 !== i3 && (n3 = Wo2(i3));
      }
      if (0 === n3)
        return 0;
      if (0 !== t2 && t2 !== n3 && 0 == (t2 & o3)) {
        var c3 = Ko2(n3), d3 = Ko2(t2);
        if (c3 >= d3 || c3 === po2 && 0 != (d3 & ho2))
          return t2;
      }
      0 != (4 & n3) && (n3 |= r3 & po2);
      var f3 = e28.entangledLanes;
      if (0 !== f3)
        for (var p3 = e28.entanglements, h3 = n3 & f3; h3 > 0; ) {
          var g3 = Jo2(h3), v3 = 1 << g3;
          n3 |= p3[g3], h3 &= ~v3;
        }
      return n3;
    }
    function $o2(e28, t2) {
      switch (e28) {
        case 1:
        case 2:
        case 4:
          return t2 + 250;
        case 8:
        case po2:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case go2:
        case vo2:
        case mo2:
        case yo2:
        case bo2:
        case Co2:
        case xo2:
        case wo2:
        case ko2:
        case So2:
        case Eo2:
        case To2:
          return t2 + 5e3;
        case Oo2:
        case _o2:
        case Po2:
        case Mo2:
        case Bo2:
        case No2:
        case Do2:
        case Lo2:
        case Io2:
          return Fo2;
        default:
          return a2("Should have found matching lanes. This is a bug in React."), Fo2;
      }
    }
    function qo2(e28) {
      var t2 = -1073741825 & e28.pendingLanes;
      return 0 !== t2 ? t2 : t2 & Io2 ? Io2 : 0;
    }
    function Yo2(e28) {
      return 0 != (e28 & jo2);
    }
    function Go2(e28) {
      return (e28 & Ro2) === e28;
    }
    function Xo2(e28, t2) {
      return 0 != (30 & t2);
    }
    function Qo2(e28) {
      return 0 != (e28 & ho2);
    }
    function Ko2(e28) {
      return e28 & -e28;
    }
    function Zo2(e28) {
      return Ko2(e28);
    }
    function Jo2(e28) {
      return 31 - uo2(e28);
    }
    function ei2(e28) {
      return Jo2(e28);
    }
    function ti2(e28, t2) {
      return 0 != (e28 & t2);
    }
    function ri2(e28, t2) {
      return (e28 & t2) === t2;
    }
    function ni2(e28, t2) {
      return e28 | t2;
    }
    function oi2(e28, t2) {
      return e28 & ~t2;
    }
    function ii2(e28, t2) {
      return e28 & t2;
    }
    function ai2(e28) {
      for (var t2 = [], r3 = 0; r3 < fo2; r3++)
        t2.push(e28);
      return t2;
    }
    function li2(e28, t2, r3) {
      e28.pendingLanes |= t2, t2 !== Lo2 && (e28.suspendedLanes = 0, e28.pingedLanes = 0), e28.eventTimes[ei2(t2)] = r3;
    }
    function ui2(e28, t2, r3) {
      e28.pingedLanes |= e28.suspendedLanes & t2;
    }
    function si2(e28, t2) {
      for (var r3 = e28.entangledLanes |= t2, n3 = e28.entanglements, o3 = r3; o3; ) {
        var i3 = Jo2(o3), a3 = 1 << i3;
        a3 & t2 | n3[i3] & t2 && (n3[i3] |= t2), o3 &= ~a3;
      }
    }
    function ci2(e28, t2, r3) {
      if (qn2)
        for (var n3 = e28.pendingUpdatersLaneMap; r3 > 0; ) {
          var o3 = ei2(r3), i3 = 1 << o3;
          n3[o3].add(t2), r3 &= ~i3;
        }
    }
    function di2(e28, t2) {
      if (qn2)
        for (var r3 = e28.pendingUpdatersLaneMap, n3 = e28.memoizedUpdaters; t2 > 0; ) {
          var o3 = ei2(t2), i3 = 1 << o3, a3 = r3[o3];
          a3.size > 0 && (a3.forEach(function(e29) {
            var t3 = e29.alternate;
            null !== t3 && n3.has(t3) || n3.add(e29);
          }), a3.clear()), t2 &= ~i3;
        }
    }
    var fi2, pi2, hi2, gi2, vi2, mi2 = 1, yi2 = 4, bi2 = po2, Ci2 = Lo2, xi2 = 0;
    function wi2() {
      return xi2;
    }
    function ki2(e28) {
      xi2 = e28;
    }
    function Si2(e28, t2) {
      return 0 !== e28 && e28 < t2;
    }
    function Ei2(e28) {
      var t2 = Ko2(e28);
      return Si2(mi2, t2) ? Si2(yi2, t2) ? Yo2(t2) ? bi2 : Ci2 : yi2 : mi2;
    }
    function Ti2(e28) {
      return e28.current.memoizedState.isDehydrated;
    }
    function Ri2(e28) {
      fi2(e28);
    }
    var Oi2 = false, _i2 = [], Pi2 = null, Mi2 = null, Bi2 = null, Ai2 = /* @__PURE__ */ new Map(), Ni2 = /* @__PURE__ */ new Map(), ji2 = [], Di2 = ["mousedown", "mouseup", "touchcancel", "touchend", "touchstart", "auxclick", "dblclick", "pointercancel", "pointerdown", "pointerup", "dragend", "dragstart", "drop", "compositionend", "compositionstart", "keydown", "keypress", "keyup", "input", "textInput", "copy", "cut", "paste", "click", "change", "contextmenu", "reset", "submit"];
    function Li2(e28, t2) {
      switch (e28) {
        case "focusin":
        case "focusout":
          Pi2 = null;
          break;
        case "dragenter":
        case "dragleave":
          Mi2 = null;
          break;
        case "mouseover":
        case "mouseout":
          Bi2 = null;
          break;
        case "pointerover":
        case "pointerout":
          var r3 = t2.pointerId;
          Ai2.delete(r3);
          break;
        case "gotpointercapture":
        case "lostpointercapture":
          var n3 = t2.pointerId;
          Ni2.delete(n3);
      }
    }
    function Ii2(e28, t2, r3, n3, o3, i3) {
      if (null === e28 || e28.nativeEvent !== i3) {
        var a3 = function(e29, t3, r4, n4, o4) {
          return { blockedOn: e29, domEventName: t3, eventSystemFlags: r4, nativeEvent: o4, targetContainers: [n4] };
        }(t2, r3, n3, o3, i3);
        if (null !== t2) {
          var l3 = Rs2(t2);
          null !== l3 && pi2(l3);
        }
        return a3;
      }
      e28.eventSystemFlags |= n3;
      var u3 = e28.targetContainers;
      return null !== o3 && -1 === u3.indexOf(o3) && u3.push(o3), e28;
    }
    function zi2(e28) {
      var t2 = Ts2(e28.target);
      if (null !== t2) {
        var r3 = Cn2(t2);
        if (null !== r3) {
          var n3 = r3.tag;
          if (n3 === d2) {
            var o3 = xn2(r3);
            if (null !== o3)
              return e28.blockedOn = o3, void vi2(e28.priority, function() {
                hi2(r3);
              });
          } else if (3 === n3) {
            if (Ti2(r3.stateNode))
              return void (e28.blockedOn = wn2(r3));
          }
        }
      }
      e28.blockedOn = null;
    }
    function Fi2(e28) {
      if (null !== e28.blockedOn)
        return false;
      for (var t2, r3 = e28.targetContainers; r3.length > 0; ) {
        var n3 = r3[0], o3 = Qi2(e28.domEventName, e28.eventSystemFlags, n3, e28.nativeEvent);
        if (null !== o3) {
          var i3 = Rs2(o3);
          return null !== i3 && pi2(i3), e28.blockedOn = o3, false;
        }
        var l3 = e28.nativeEvent, u3 = new l3.constructor(l3.type, l3);
        t2 = u3, null !== wr2 && a2("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), wr2 = t2, l3.target.dispatchEvent(u3), null === wr2 && a2("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), wr2 = null, r3.shift();
      }
      return true;
    }
    function Ui2(e28, t2, r3) {
      Fi2(e28) && r3.delete(t2);
    }
    function Vi2() {
      Oi2 = false, null !== Pi2 && Fi2(Pi2) && (Pi2 = null), null !== Mi2 && Fi2(Mi2) && (Mi2 = null), null !== Bi2 && Fi2(Bi2) && (Bi2 = null), Ai2.forEach(Ui2), Ni2.forEach(Ui2);
    }
    function Wi2(e28, t2) {
      e28.blockedOn === t2 && (e28.blockedOn = null, Oi2 || (Oi2 = true, r2.unstable_scheduleCallback(r2.unstable_NormalPriority, Vi2)));
    }
    function Hi2(e28) {
      if (_i2.length > 0) {
        Wi2(_i2[0], e28);
        for (var t2 = 1; t2 < _i2.length; t2++) {
          var r3 = _i2[t2];
          r3.blockedOn === e28 && (r3.blockedOn = null);
        }
      }
      null !== Pi2 && Wi2(Pi2, e28), null !== Mi2 && Wi2(Mi2, e28), null !== Bi2 && Wi2(Bi2, e28);
      var n3 = function(t3) {
        return Wi2(t3, e28);
      };
      Ai2.forEach(n3), Ni2.forEach(n3);
      for (var o3 = 0; o3 < ji2.length; o3++) {
        var i3 = ji2[o3];
        i3.blockedOn === e28 && (i3.blockedOn = null);
      }
      for (; ji2.length > 0; ) {
        var a3 = ji2[0];
        if (null !== a3.blockedOn)
          break;
        zi2(a3), null === a3.blockedOn && ji2.shift();
      }
    }
    var $i2 = n2.ReactCurrentBatchConfig;
    function qi2(e28, t2, r3, n3) {
      var o3 = wi2(), i3 = $i2.transition;
      $i2.transition = null;
      try {
        ki2(mi2), Gi2(e28, t2, r3, n3);
      } finally {
        ki2(o3), $i2.transition = i3;
      }
    }
    function Yi2(e28, t2, r3, n3) {
      var o3 = wi2(), i3 = $i2.transition;
      $i2.transition = null;
      try {
        ki2(yi2), Gi2(e28, t2, r3, n3);
      } finally {
        ki2(o3), $i2.transition = i3;
      }
    }
    function Gi2(e28, t2, r3, n3) {
      var o3 = Qi2(e28, t2, r3, n3);
      if (null === o3)
        return eu2(e28, t2, n3, Xi2, r3), void Li2(e28, n3);
      if (function(e29, t3, r4, n4, o4) {
        switch (t3) {
          case "focusin":
            return Pi2 = Ii2(Pi2, e29, t3, r4, n4, o4), true;
          case "dragenter":
            return Mi2 = Ii2(Mi2, e29, t3, r4, n4, o4), true;
          case "mouseover":
            return Bi2 = Ii2(Bi2, e29, t3, r4, n4, o4), true;
          case "pointerover":
            var i4 = o4, a4 = i4.pointerId;
            return Ai2.set(a4, Ii2(Ai2.get(a4) || null, e29, t3, r4, n4, i4)), true;
          case "gotpointercapture":
            var l4 = o4, u3 = l4.pointerId;
            return Ni2.set(u3, Ii2(Ni2.get(u3) || null, e29, t3, r4, n4, l4)), true;
        }
        return false;
      }(o3, e28, t2, r3, n3))
        n3.stopPropagation();
      else if (Li2(e28, n3), 4 & t2 && (l3 = e28, Di2.indexOf(l3) > -1)) {
        for (; null !== o3; ) {
          var i3 = Rs2(o3);
          null !== i3 && Ri2(i3);
          var a3 = Qi2(e28, t2, r3, n3);
          if (null === a3 && eu2(e28, t2, n3, Xi2, r3), a3 === o3)
            break;
          o3 = a3;
        }
        null !== o3 && n3.stopPropagation();
      } else {
        var l3;
        eu2(e28, t2, n3, null, r3);
      }
    }
    var Xi2 = null;
    function Qi2(e28, t2, r3, n3) {
      Xi2 = null;
      var o3 = Ts2(kr2(n3));
      if (null !== o3) {
        var i3 = Cn2(o3);
        if (null === i3)
          o3 = null;
        else {
          var a3 = i3.tag;
          if (a3 === d2) {
            var l3 = xn2(i3);
            if (null !== l3)
              return l3;
            o3 = null;
          } else if (3 === a3) {
            if (Ti2(i3.stateNode))
              return wn2(i3);
            o3 = null;
          } else
            i3 !== o3 && (o3 = null);
        }
      }
      return Xi2 = o3, null;
    }
    function Ki2(e28) {
      switch (e28) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return mi2;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return yi2;
        case "message":
          switch (Nn2()) {
            case jn2:
              return mi2;
            case Dn2:
              return yi2;
            case Ln2:
            case In2:
              return bi2;
            case zn2:
              return Ci2;
            default:
              return bi2;
          }
        default:
          return bi2;
      }
    }
    var Zi2 = null, Ji2 = null, ea2 = null;
    function ta2() {
      if (ea2)
        return ea2;
      var e28, t2, r3 = Ji2, n3 = r3.length, o3 = ra2(), i3 = o3.length;
      for (e28 = 0; e28 < n3 && r3[e28] === o3[e28]; e28++)
        ;
      var a3 = n3 - e28;
      for (t2 = 1; t2 <= a3 && r3[n3 - t2] === o3[i3 - t2]; t2++)
        ;
      var l3 = t2 > 1 ? 1 - t2 : void 0;
      return ea2 = o3.slice(e28, l3);
    }
    function ra2() {
      return "value" in Zi2 ? Zi2.value : Zi2.textContent;
    }
    function na2(e28) {
      var t2, r3 = e28.keyCode;
      return "charCode" in e28 ? 0 === (t2 = e28.charCode) && 13 === r3 && (t2 = 13) : t2 = r3, 10 === t2 && (t2 = 13), t2 >= 32 || 13 === t2 ? t2 : 0;
    }
    function oa2() {
      return true;
    }
    function ia2() {
      return false;
    }
    function aa2(e28) {
      function t2(t3, r3, n3, o3, i3) {
        for (var a3 in this._reactName = t3, this._targetInst = n3, this.type = r3, this.nativeEvent = o3, this.target = i3, this.currentTarget = null, e28)
          if (e28.hasOwnProperty(a3)) {
            var l3 = e28[a3];
            this[a3] = l3 ? l3(o3) : o3[a3];
          }
        var u3 = null != o3.defaultPrevented ? o3.defaultPrevented : false === o3.returnValue;
        return this.isDefaultPrevented = u3 ? oa2 : ia2, this.isPropagationStopped = ia2, this;
      }
      return xe2(t2.prototype, { preventDefault: function() {
        this.defaultPrevented = true;
        var e29 = this.nativeEvent;
        e29 && (e29.preventDefault ? e29.preventDefault() : "unknown" != typeof e29.returnValue && (e29.returnValue = false), this.isDefaultPrevented = oa2);
      }, stopPropagation: function() {
        var e29 = this.nativeEvent;
        e29 && (e29.stopPropagation ? e29.stopPropagation() : "unknown" != typeof e29.cancelBubble && (e29.cancelBubble = true), this.isPropagationStopped = oa2);
      }, persist: function() {
      }, isPersistent: oa2 }), t2;
    }
    var la2, ua2, sa2, ca2 = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(e28) {
      return e28.timeStamp || Date.now();
    }, defaultPrevented: 0, isTrusted: 0 }, da2 = aa2(ca2), fa2 = xe2({}, ca2, { view: 0, detail: 0 }), pa2 = aa2(fa2);
    var ha2 = xe2({}, fa2, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Ta2, button: 0, buttons: 0, relatedTarget: function(e28) {
      return void 0 === e28.relatedTarget ? e28.fromElement === e28.srcElement ? e28.toElement : e28.fromElement : e28.relatedTarget;
    }, movementX: function(e28) {
      return "movementX" in e28 ? e28.movementX : (function(e29) {
        e29 !== sa2 && (sa2 && "mousemove" === e29.type ? (la2 = e29.screenX - sa2.screenX, ua2 = e29.screenY - sa2.screenY) : (la2 = 0, ua2 = 0), sa2 = e29);
      }(e28), la2);
    }, movementY: function(e28) {
      return "movementY" in e28 ? e28.movementY : ua2;
    } }), ga2 = aa2(ha2), va2 = aa2(xe2({}, ha2, { dataTransfer: 0 })), ma2 = aa2(xe2({}, fa2, { relatedTarget: 0 })), ya2 = aa2(xe2({}, ca2, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })), ba2 = aa2(xe2({}, ca2, { clipboardData: function(e28) {
      return "clipboardData" in e28 ? e28.clipboardData : window.clipboardData;
    } })), Ca2 = aa2(xe2({}, ca2, { data: 0 })), xa2 = Ca2, wa2 = { Esc: "Escape", Spacebar: " ", Left: "ArrowLeft", Up: "ArrowUp", Right: "ArrowRight", Down: "ArrowDown", Del: "Delete", Win: "OS", Menu: "ContextMenu", Apps: "ContextMenu", Scroll: "ScrollLock", MozPrintableKey: "Unidentified" }, ka2 = { 8: "Backspace", 9: "Tab", 12: "Clear", 13: "Enter", 16: "Shift", 17: "Control", 18: "Alt", 19: "Pause", 20: "CapsLock", 27: "Escape", 32: " ", 33: "PageUp", 34: "PageDown", 35: "End", 36: "Home", 37: "ArrowLeft", 38: "ArrowUp", 39: "ArrowRight", 40: "ArrowDown", 45: "Insert", 46: "Delete", 112: "F1", 113: "F2", 114: "F3", 115: "F4", 116: "F5", 117: "F6", 118: "F7", 119: "F8", 120: "F9", 121: "F10", 122: "F11", 123: "F12", 144: "NumLock", 145: "ScrollLock", 224: "Meta" };
    var Sa2 = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
    function Ea2(e28) {
      var t2 = this.nativeEvent;
      if (t2.getModifierState)
        return t2.getModifierState(e28);
      var r3 = Sa2[e28];
      return !!r3 && !!t2[r3];
    }
    function Ta2(e28) {
      return Ea2;
    }
    var Ra2 = aa2(xe2({}, fa2, { key: function(e28) {
      if (e28.key) {
        var t2 = wa2[e28.key] || e28.key;
        if ("Unidentified" !== t2)
          return t2;
      }
      if ("keypress" === e28.type) {
        var r3 = na2(e28);
        return 13 === r3 ? "Enter" : String.fromCharCode(r3);
      }
      return "keydown" === e28.type || "keyup" === e28.type ? ka2[e28.keyCode] || "Unidentified" : "";
    }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Ta2, charCode: function(e28) {
      return "keypress" === e28.type ? na2(e28) : 0;
    }, keyCode: function(e28) {
      return "keydown" === e28.type || "keyup" === e28.type ? e28.keyCode : 0;
    }, which: function(e28) {
      return "keypress" === e28.type ? na2(e28) : "keydown" === e28.type || "keyup" === e28.type ? e28.keyCode : 0;
    } })), Oa2 = aa2(xe2({}, ha2, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 })), _a2 = aa2(xe2({}, fa2, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Ta2 })), Pa2 = aa2(xe2({}, ca2, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })), Ma2 = aa2(xe2({}, ha2, { deltaX: function(e28) {
      return "deltaX" in e28 ? e28.deltaX : "wheelDeltaX" in e28 ? -e28.wheelDeltaX : 0;
    }, deltaY: function(e28) {
      return "deltaY" in e28 ? e28.deltaY : "wheelDeltaY" in e28 ? -e28.wheelDeltaY : "wheelDelta" in e28 ? -e28.wheelDelta : 0;
    }, deltaZ: 0, deltaMode: 0 })), Ba2 = [9, 13, 27, 32], Aa2 = E2 && "CompositionEvent" in window, Na2 = null;
    E2 && "documentMode" in document && (Na2 = document.documentMode);
    var ja2 = E2 && "TextEvent" in window && !Na2, Da2 = E2 && (!Aa2 || Na2 && Na2 > 8 && Na2 <= 11), La2 = String.fromCharCode(32);
    var Ia2 = false;
    function za2(e28, t2) {
      switch (e28) {
        case "keyup":
          return -1 !== Ba2.indexOf(t2.keyCode);
        case "keydown":
          return 229 !== t2.keyCode;
        case "keypress":
        case "mousedown":
        case "focusout":
          return true;
        default:
          return false;
      }
    }
    function Fa2(e28) {
      var t2 = e28.detail;
      return "object" == typeof t2 && "data" in t2 ? t2.data : null;
    }
    function Ua2(e28) {
      return "ko" === e28.locale;
    }
    var Va2 = false;
    function Wa2(e28, t2, r3, n3, o3) {
      var i3, a3;
      if (Aa2 ? i3 = function(e29) {
        switch (e29) {
          case "compositionstart":
            return "onCompositionStart";
          case "compositionend":
            return "onCompositionEnd";
          case "compositionupdate":
            return "onCompositionUpdate";
        }
      }(t2) : Va2 ? za2(t2, n3) && (i3 = "onCompositionEnd") : function(e29, t3) {
        return "keydown" === e29 && 229 === t3.keyCode;
      }(t2, n3) && (i3 = "onCompositionStart"), !i3)
        return null;
      Da2 && !Ua2(n3) && (Va2 || "onCompositionStart" !== i3 ? "onCompositionEnd" === i3 && Va2 && (a3 = ta2()) : Va2 = function(e29) {
        return Zi2 = e29, Ji2 = ra2(), true;
      }(o3));
      var l3 = ru2(r3, i3);
      if (l3.length > 0) {
        var u3 = new Ca2(i3, t2, null, n3, o3);
        if (e28.push({ event: u3, listeners: l3 }), a3)
          u3.data = a3;
        else {
          var s3 = Fa2(n3);
          null !== s3 && (u3.data = s3);
        }
      }
    }
    function Ha2(e28, t2) {
      if (Va2) {
        if ("compositionend" === e28 || !Aa2 && za2(e28, t2)) {
          var r3 = ta2();
          return Zi2 = null, Ji2 = null, ea2 = null, Va2 = false, r3;
        }
        return null;
      }
      switch (e28) {
        case "paste":
        default:
          return null;
        case "keypress":
          if (!function(e29) {
            return (e29.ctrlKey || e29.altKey || e29.metaKey) && !(e29.ctrlKey && e29.altKey);
          }(t2)) {
            if (t2.char && t2.char.length > 1)
              return t2.char;
            if (t2.which)
              return String.fromCharCode(t2.which);
          }
          return null;
        case "compositionend":
          return Da2 && !Ua2(t2) ? null : t2.data;
      }
    }
    function $a2(e28, t2, r3, n3, o3) {
      var i3;
      if (!(i3 = ja2 ? function(e29, t3) {
        switch (e29) {
          case "compositionend":
            return Fa2(t3);
          case "keypress":
            return 32 !== t3.which ? null : (Ia2 = true, La2);
          case "textInput":
            var r4 = t3.data;
            return r4 === La2 && Ia2 ? null : r4;
          default:
            return null;
        }
      }(t2, n3) : Ha2(t2, n3)))
        return null;
      var a3 = ru2(r3, "onBeforeInput");
      if (a3.length > 0) {
        var l3 = new xa2("onBeforeInput", "beforeinput", null, n3, o3);
        e28.push({ event: l3, listeners: a3 }), l3.data = i3;
      }
    }
    var qa2 = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
    function Ya2(e28) {
      var t2 = e28 && e28.nodeName && e28.nodeName.toLowerCase();
      return "input" === t2 ? !!qa2[e28.type] : "textarea" === t2;
    }
    function Ga2(e28, t2, r3, n3) {
      Or2(n3);
      var o3 = ru2(t2, "onChange");
      if (o3.length > 0) {
        var i3 = new da2("onChange", "change", null, r3, n3);
        e28.push({ event: i3, listeners: o3 });
      }
    }
    var Xa2 = null, Qa2 = null;
    function Ka2(e28) {
      Yl2(e28, 0);
    }
    function Za2(e28) {
      if (et2(Os2(e28)))
        return e28;
    }
    function Ja2(e28, t2) {
      if ("change" === e28)
        return t2;
    }
    var el2 = false;
    function tl2() {
      Xa2 && (Xa2.detachEvent("onpropertychange", rl2), Xa2 = null, Qa2 = null);
    }
    function rl2(e28) {
      "value" === e28.propertyName && Za2(Qa2) && function(e29) {
        var t2 = [];
        Ga2(t2, Qa2, e29, kr2(e29)), Nr2(Ka2, t2);
      }(e28);
    }
    function nl2(e28, t2, r3) {
      "focusin" === e28 ? (tl2(), function(e29, t3) {
        Qa2 = t3, (Xa2 = e29).attachEvent("onpropertychange", rl2);
      }(t2, r3)) : "focusout" === e28 && tl2();
    }
    function ol2(e28, t2) {
      if ("selectionchange" === e28 || "keyup" === e28 || "keydown" === e28)
        return Za2(Qa2);
    }
    function il2(e28, t2) {
      if ("click" === e28)
        return Za2(t2);
    }
    function al2(e28, t2) {
      if ("input" === e28 || "change" === e28)
        return Za2(t2);
    }
    function ll2(e28, t2, r3, n3, o3, i3, a3) {
      var l3, u3, s3, c3, d3, f3, p3 = r3 ? Os2(r3) : window;
      if ("select" === (c3 = (s3 = p3).nodeName && s3.nodeName.toLowerCase()) || "input" === c3 && "file" === s3.type ? l3 = Ja2 : Ya2(p3) ? el2 ? l3 = al2 : (l3 = ol2, u3 = nl2) : function(e29) {
        var t3 = e29.nodeName;
        return t3 && "input" === t3.toLowerCase() && ("checkbox" === e29.type || "radio" === e29.type);
      }(p3) && (l3 = il2), l3) {
        var h3 = l3(t2, r3);
        if (h3)
          return void Ga2(e28, h3, n3, o3);
      }
      u3 && u3(t2, p3, r3), "focusout" === t2 && (f3 = (d3 = p3)._wrapperState) && f3.controlled && "number" === d3.type && pt2(d3, "number", d3.value);
    }
    function ul2(e28, t2, r3, n3, o3, i3, a3) {
      var l3 = "mouseover" === t2 || "pointerover" === t2, u3 = "mouseout" === t2 || "pointerout" === t2;
      if (l3 && n3 !== wr2) {
        var s3 = n3.relatedTarget || n3.fromElement;
        if (s3 && (Ts2(s3) || Es2(s3)))
          return;
      }
      if (u3 || l3) {
        var c3, d3, f3;
        if (o3.window === o3)
          c3 = o3;
        else {
          var p3 = o3.ownerDocument;
          c3 = p3 ? p3.defaultView || p3.parentWindow : window;
        }
        if (u3) {
          var h3 = n3.relatedTarget || n3.toElement;
          if (d3 = r3, null !== (f3 = h3 ? Ts2(h3) : null))
            (f3 !== Cn2(f3) || 5 !== f3.tag && 6 !== f3.tag) && (f3 = null);
        } else
          d3 = null, f3 = r3;
        if (d3 !== f3) {
          var g3 = ga2, v3 = "onMouseLeave", m3 = "onMouseEnter", y3 = "mouse";
          "pointerout" !== t2 && "pointerover" !== t2 || (g3 = Oa2, v3 = "onPointerLeave", m3 = "onPointerEnter", y3 = "pointer");
          var b3 = null == d3 ? c3 : Os2(d3), C3 = null == f3 ? c3 : Os2(f3), x3 = new g3(v3, y3 + "leave", d3, n3, o3);
          x3.target = b3, x3.relatedTarget = C3;
          var w3 = null;
          if (Ts2(o3) === r3) {
            var k3 = new g3(m3, y3 + "enter", f3, n3, o3);
            k3.target = C3, k3.relatedTarget = b3, w3 = k3;
          }
          !function(e29, t3, r4, n4, o4) {
            var i4 = n4 && o4 ? function(e30, t4) {
              for (var r5 = e30, n5 = t4, o5 = 0, i5 = r5; i5; i5 = nu2(i5))
                o5++;
              for (var a4 = 0, l4 = n5; l4; l4 = nu2(l4))
                a4++;
              for (; o5 - a4 > 0; )
                r5 = nu2(r5), o5--;
              for (; a4 - o5 > 0; )
                n5 = nu2(n5), a4--;
              var u4 = o5;
              for (; u4--; ) {
                if (r5 === n5 || null !== n5 && r5 === n5.alternate)
                  return r5;
                r5 = nu2(r5), n5 = nu2(n5);
              }
              return null;
            }(n4, o4) : null;
            null !== n4 && ou2(e29, t3, n4, i4, false);
            null !== o4 && null !== r4 && ou2(e29, r4, o4, i4, true);
          }(e28, x3, w3, d3, f3);
        }
      }
    }
    E2 && (el2 = function(e28) {
      if (!E2)
        return false;
      var t2 = "on" + e28, r3 = t2 in document;
      if (!r3) {
        var n3 = document.createElement("div");
        n3.setAttribute(t2, "return;"), r3 = "function" == typeof n3[t2];
      }
      return r3;
    }("input") && (!document.documentMode || document.documentMode > 9));
    var sl2 = "function" == typeof Object.is ? Object.is : function(e28, t2) {
      return e28 === t2 && (0 !== e28 || 1 / e28 == 1 / t2) || e28 != e28 && t2 != t2;
    };
    function cl2(e28, t2) {
      if (sl2(e28, t2))
        return true;
      if ("object" != typeof e28 || null === e28 || "object" != typeof t2 || null === t2)
        return false;
      var r3 = Object.keys(e28), n3 = Object.keys(t2);
      if (r3.length !== n3.length)
        return false;
      for (var o3 = 0; o3 < r3.length; o3++) {
        var i3 = r3[o3];
        if (!T2.call(t2, i3) || !sl2(e28[i3], t2[i3]))
          return false;
      }
      return true;
    }
    function dl2(e28) {
      for (; e28 && e28.firstChild; )
        e28 = e28.firstChild;
      return e28;
    }
    function fl2(e28) {
      for (; e28; ) {
        if (e28.nextSibling)
          return e28.nextSibling;
        e28 = e28.parentNode;
      }
    }
    function pl2(e28, t2) {
      for (var r3 = dl2(e28), n3 = 0, o3 = 0; r3; ) {
        if (3 === r3.nodeType) {
          if (o3 = n3 + r3.textContent.length, n3 <= t2 && o3 >= t2)
            return { node: r3, offset: t2 - n3 };
          n3 = o3;
        }
        r3 = dl2(fl2(r3));
      }
    }
    function hl2(e28) {
      var t2 = e28.ownerDocument, r3 = t2 && t2.defaultView || window, n3 = r3.getSelection && r3.getSelection();
      if (!n3 || 0 === n3.rangeCount)
        return null;
      var o3 = n3.anchorNode, i3 = n3.anchorOffset, a3 = n3.focusNode, l3 = n3.focusOffset;
      try {
        o3.nodeType, a3.nodeType;
      } catch (e29) {
        return null;
      }
      return function(e29, t3, r4, n4, o4) {
        var i4 = 0, a4 = -1, l4 = -1, u3 = 0, s3 = 0, c3 = e29, d3 = null;
        e:
          for (; ; ) {
            for (var f3 = null; c3 !== t3 || 0 !== r4 && 3 !== c3.nodeType || (a4 = i4 + r4), c3 !== n4 || 0 !== o4 && 3 !== c3.nodeType || (l4 = i4 + o4), 3 === c3.nodeType && (i4 += c3.nodeValue.length), null !== (f3 = c3.firstChild); )
              d3 = c3, c3 = f3;
            for (; ; ) {
              if (c3 === e29)
                break e;
              if (d3 === t3 && ++u3 === r4 && (a4 = i4), d3 === n4 && ++s3 === o4 && (l4 = i4), null !== (f3 = c3.nextSibling))
                break;
              d3 = (c3 = d3).parentNode;
            }
            c3 = f3;
          }
        if (-1 === a4 || -1 === l4)
          return null;
        return { start: a4, end: l4 };
      }(e28, o3, i3, a3, l3);
    }
    function gl2(e28) {
      return e28 && 3 === e28.nodeType;
    }
    function vl2(e28, t2) {
      return !(!e28 || !t2) && (e28 === t2 || !gl2(e28) && (gl2(t2) ? vl2(e28, t2.parentNode) : "contains" in e28 ? e28.contains(t2) : !!e28.compareDocumentPosition && !!(16 & e28.compareDocumentPosition(t2))));
    }
    function ml2(e28) {
      return e28 && e28.ownerDocument && vl2(e28.ownerDocument.documentElement, e28);
    }
    function yl2(e28) {
      try {
        return "string" == typeof e28.contentWindow.location.href;
      } catch (e29) {
        return false;
      }
    }
    function bl2() {
      for (var e28 = window, t2 = tt2(); t2 instanceof e28.HTMLIFrameElement; ) {
        if (!yl2(t2))
          return t2;
        t2 = tt2((e28 = t2.contentWindow).document);
      }
      return t2;
    }
    function Cl2(e28) {
      var t2 = e28 && e28.nodeName && e28.nodeName.toLowerCase();
      return t2 && ("input" === t2 && ("text" === e28.type || "search" === e28.type || "tel" === e28.type || "url" === e28.type || "password" === e28.type) || "textarea" === t2 || "true" === e28.contentEditable);
    }
    function xl2(e28) {
      var t2 = bl2(), r3 = e28.focusedElem, n3 = e28.selectionRange;
      if (t2 !== r3 && ml2(r3)) {
        null !== n3 && Cl2(r3) && function(e29, t3) {
          var r4 = t3.start, n4 = t3.end;
          void 0 === n4 && (n4 = r4);
          "selectionStart" in e29 ? (e29.selectionStart = r4, e29.selectionEnd = Math.min(n4, e29.value.length)) : function(e30, t4) {
            var r5 = e30.ownerDocument || document, n5 = r5 && r5.defaultView || window;
            if (n5.getSelection) {
              var o4 = n5.getSelection(), i4 = e30.textContent.length, a4 = Math.min(t4.start, i4), l4 = void 0 === t4.end ? a4 : Math.min(t4.end, i4);
              if (!o4.extend && a4 > l4) {
                var u3 = l4;
                l4 = a4, a4 = u3;
              }
              var s3 = pl2(e30, a4), c3 = pl2(e30, l4);
              if (s3 && c3) {
                if (1 === o4.rangeCount && o4.anchorNode === s3.node && o4.anchorOffset === s3.offset && o4.focusNode === c3.node && o4.focusOffset === c3.offset)
                  return;
                var d3 = r5.createRange();
                d3.setStart(s3.node, s3.offset), o4.removeAllRanges(), a4 > l4 ? (o4.addRange(d3), o4.extend(c3.node, c3.offset)) : (d3.setEnd(c3.node, c3.offset), o4.addRange(d3));
              }
            }
          }(e29, t3);
        }(r3, n3);
        for (var o3 = [], i3 = r3; i3 = i3.parentNode; )
          1 === i3.nodeType && o3.push({ element: i3, left: i3.scrollLeft, top: i3.scrollTop });
        "function" == typeof r3.focus && r3.focus();
        for (var a3 = 0; a3 < o3.length; a3++) {
          var l3 = o3[a3];
          l3.element.scrollLeft = l3.left, l3.element.scrollTop = l3.top;
        }
      }
    }
    function wl2(e28) {
      return ("selectionStart" in e28 ? { start: e28.selectionStart, end: e28.selectionEnd } : hl2(e28)) || { start: 0, end: 0 };
    }
    var kl2 = E2 && "documentMode" in document && document.documentMode <= 11;
    var Sl2 = null, El2 = null, Tl2 = null, Rl2 = false;
    function Ol2(e28, t2, r3) {
      var n3, o3 = (n3 = r3).window === n3 ? n3.document : 9 === n3.nodeType ? n3 : n3.ownerDocument;
      if (!Rl2 && null != Sl2 && Sl2 === tt2(o3)) {
        var i3 = function(e29) {
          if ("selectionStart" in e29 && Cl2(e29))
            return { start: e29.selectionStart, end: e29.selectionEnd };
          var t3 = (e29.ownerDocument && e29.ownerDocument.defaultView || window).getSelection();
          return { anchorNode: t3.anchorNode, anchorOffset: t3.anchorOffset, focusNode: t3.focusNode, focusOffset: t3.focusOffset };
        }(Sl2);
        if (!Tl2 || !cl2(Tl2, i3)) {
          Tl2 = i3;
          var a3 = ru2(El2, "onSelect");
          if (a3.length > 0) {
            var l3 = new da2("onSelect", "select", null, t2, r3);
            e28.push({ event: l3, listeners: a3 }), l3.target = Sl2;
          }
        }
      }
    }
    function _l2(e28, t2) {
      var r3 = {};
      return r3[e28.toLowerCase()] = t2.toLowerCase(), r3["Webkit" + e28] = "webkit" + t2, r3["Moz" + e28] = "moz" + t2, r3;
    }
    var Pl2 = { animationend: _l2("Animation", "AnimationEnd"), animationiteration: _l2("Animation", "AnimationIteration"), animationstart: _l2("Animation", "AnimationStart"), transitionend: _l2("Transition", "TransitionEnd") }, Ml2 = {}, Bl2 = {};
    function Al2(e28) {
      if (Ml2[e28])
        return Ml2[e28];
      if (!Pl2[e28])
        return e28;
      var t2 = Pl2[e28];
      for (var r3 in t2)
        if (t2.hasOwnProperty(r3) && r3 in Bl2)
          return Ml2[e28] = t2[r3];
      return e28;
    }
    E2 && (Bl2 = document.createElement("div").style, "AnimationEvent" in window || (delete Pl2.animationend.animation, delete Pl2.animationiteration.animation, delete Pl2.animationstart.animation), "TransitionEvent" in window || delete Pl2.transitionend.transition);
    var Nl2 = Al2("animationend"), jl2 = Al2("animationiteration"), Dl2 = Al2("animationstart"), Ll2 = Al2("transitionend"), Il2 = /* @__PURE__ */ new Map(), zl2 = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function Fl2(e28, t2) {
      Il2.set(e28, t2), k2(t2, [e28]);
    }
    function Ul2(e28, t2, r3, n3, o3, i3, a3) {
      var l3 = Il2.get(t2);
      if (void 0 !== l3) {
        var u3 = da2, s3 = t2;
        switch (t2) {
          case "keypress":
            if (0 === na2(n3))
              return;
          case "keydown":
          case "keyup":
            u3 = Ra2;
            break;
          case "focusin":
            s3 = "focus", u3 = ma2;
            break;
          case "focusout":
            s3 = "blur", u3 = ma2;
            break;
          case "beforeblur":
          case "afterblur":
            u3 = ma2;
            break;
          case "click":
            if (2 === n3.button)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            u3 = ga2;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            u3 = va2;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            u3 = _a2;
            break;
          case Nl2:
          case jl2:
          case Dl2:
            u3 = ya2;
            break;
          case Ll2:
            u3 = Pa2;
            break;
          case "scroll":
            u3 = pa2;
            break;
          case "wheel":
            u3 = Ma2;
            break;
          case "copy":
          case "cut":
          case "paste":
            u3 = ba2;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            u3 = Oa2;
        }
        var c3 = 0 != (4 & i3), d3 = !c3 && "scroll" === t2, f3 = function(e29, t3, r4, n4, o4, i4) {
          var a4 = null !== t3 ? t3 + "Capture" : null, l4 = n4 ? a4 : t3, u4 = [], s4 = e29, c4 = null;
          for (; null !== s4; ) {
            var d4 = s4, f4 = d4.stateNode;
            if (5 === d4.tag && null !== f4 && (c4 = f4, null !== l4)) {
              var p4 = jr2(s4, l4);
              null != p4 && u4.push(tu2(s4, p4, c4));
            }
            if (o4)
              break;
            s4 = s4.return;
          }
          return u4;
        }(r3, l3, n3.type, c3, d3);
        if (f3.length > 0) {
          var p3 = new u3(l3, s3, null, n3, o3);
          e28.push({ event: p3, listeners: f3 });
        }
      }
    }
    function Vl2(e28, t2, r3, n3, o3, i3, a3) {
      Ul2(e28, t2, r3, n3, o3, i3), 0 == (7 & i3) && (ul2(e28, t2, r3, n3, o3), ll2(e28, t2, r3, n3, o3), function(e29, t3, r4, n4, o4, i4, a4) {
        var l3 = r4 ? Os2(r4) : window;
        switch (t3) {
          case "focusin":
            (Ya2(l3) || "true" === l3.contentEditable) && (Sl2 = l3, El2 = r4, Tl2 = null);
            break;
          case "focusout":
            Sl2 = null, El2 = null, Tl2 = null;
            break;
          case "mousedown":
            Rl2 = true;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            Rl2 = false, Ol2(e29, n4, o4);
            break;
          case "selectionchange":
            if (kl2)
              break;
          case "keydown":
          case "keyup":
            Ol2(e29, n4, o4);
        }
      }(e28, t2, r3, n3, o3), function(e29, t3, r4, n4, o4, i4, a4) {
        Wa2(e29, t3, r4, n4, o4), $a2(e29, t3, r4, n4, o4);
      }(e28, t2, r3, n3, o3));
    }
    !function() {
      for (var e28 = 0; e28 < zl2.length; e28++) {
        var t2 = zl2[e28];
        Fl2(t2.toLowerCase(), "on" + (t2[0].toUpperCase() + t2.slice(1)));
      }
      Fl2(Nl2, "onAnimationEnd"), Fl2(jl2, "onAnimationIteration"), Fl2(Dl2, "onAnimationStart"), Fl2("dblclick", "onDoubleClick"), Fl2("focusin", "onFocus"), Fl2("focusout", "onBlur"), Fl2(Ll2, "onTransitionEnd");
    }(), S2("onMouseEnter", ["mouseout", "mouseover"]), S2("onMouseLeave", ["mouseout", "mouseover"]), S2("onPointerEnter", ["pointerout", "pointerover"]), S2("onPointerLeave", ["pointerout", "pointerover"]), k2("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]), k2("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]), k2("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), k2("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), k2("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), k2("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    var Wl2 = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], Hl2 = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(Wl2));
    function $l2(e28, t2, r3) {
      var n3 = e28.type || "unknown-event";
      e28.currentTarget = r3, function(e29, t3, r4, n4, o3, i3, a3, l3, u3) {
        if (Yr2.apply(this, arguments), Vr2) {
          var s3 = Gr2();
          Hr2 || (Hr2 = true, $r2 = s3);
        }
      }(n3, t2, void 0, e28), e28.currentTarget = null;
    }
    function ql2(e28, t2, r3) {
      var n3;
      if (r3)
        for (var o3 = t2.length - 1; o3 >= 0; o3--) {
          var i3 = t2[o3], a3 = i3.instance, l3 = i3.currentTarget, u3 = i3.listener;
          if (a3 !== n3 && e28.isPropagationStopped())
            return;
          $l2(e28, u3, l3), n3 = a3;
        }
      else
        for (var s3 = 0; s3 < t2.length; s3++) {
          var c3 = t2[s3], d3 = c3.instance, f3 = c3.currentTarget, p3 = c3.listener;
          if (d3 !== n3 && e28.isPropagationStopped())
            return;
          $l2(e28, p3, f3), n3 = d3;
        }
    }
    function Yl2(e28, t2) {
      for (var r3 = 0 != (4 & t2), n3 = 0; n3 < e28.length; n3++) {
        var o3 = e28[n3];
        ql2(o3.event, o3.listeners, r3);
      }
      !function() {
        if (Hr2) {
          var e29 = $r2;
          throw Hr2 = false, $r2 = null, e29;
        }
      }();
    }
    function Gl2(e28, t2) {
      Hl2.has(e28) || a2('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', e28);
      var r3 = function(e29) {
        var t3 = e29[bs2];
        void 0 === t3 && (t3 = e29[bs2] = /* @__PURE__ */ new Set());
        return t3;
      }(t2), n3 = function(e29, t3) {
        return e29 + "__" + (t3 ? "capture" : "bubble");
      }(e28, false);
      r3.has(n3) || (Zl2(t2, e28, 2, false), r3.add(n3));
    }
    function Xl2(e28, t2, r3) {
      Hl2.has(e28) && !t2 && a2('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', e28);
      var n3 = 0;
      t2 && (n3 |= 4), Zl2(r3, e28, n3, t2);
    }
    var Ql2 = "_reactListening" + Math.random().toString(36).slice(2);
    function Kl2(e28) {
      if (!e28[Ql2]) {
        e28[Ql2] = true, C2.forEach(function(t3) {
          "selectionchange" !== t3 && (Hl2.has(t3) || Xl2(t3, false, e28), Xl2(t3, true, e28));
        });
        var t2 = 9 === e28.nodeType ? e28 : e28.ownerDocument;
        null !== t2 && (t2[Ql2] || (t2[Ql2] = true, Xl2("selectionchange", false, t2)));
      }
    }
    function Zl2(e28, t2, r3, n3, o3) {
      var i3 = function(e29, t3, r4) {
        var n4;
        switch (Ki2(t3)) {
          case mi2:
            n4 = qi2;
            break;
          case yi2:
            n4 = Yi2;
            break;
          default:
            n4 = Gi2;
        }
        return n4.bind(null, t3, r4, e29);
      }(e28, t2, r3), a3 = void 0;
      Dr2 && ("touchstart" !== t2 && "touchmove" !== t2 && "wheel" !== t2 || (a3 = true)), e28 = e28, n3 ? void 0 !== a3 ? function(e29, t3, r4, n4) {
        e29.addEventListener(t3, r4, { capture: true, passive: n4 });
      }(e28, t2, i3, a3) : function(e29, t3, r4) {
        e29.addEventListener(t3, r4, true);
      }(e28, t2, i3) : void 0 !== a3 ? function(e29, t3, r4, n4) {
        e29.addEventListener(t3, r4, { passive: n4 });
      }(e28, t2, i3, a3) : function(e29, t3, r4) {
        e29.addEventListener(t3, r4, false);
      }(e28, t2, i3);
    }
    function Jl2(e28, t2) {
      return e28 === t2 || 8 === e28.nodeType && e28.parentNode === t2;
    }
    function eu2(e28, t2, r3, n3, o3) {
      var i3 = n3;
      if (0 == (1 & t2) && 0 == (2 & t2)) {
        var a3 = o3;
        if (null !== n3) {
          var l3 = n3;
          e:
            for (; ; ) {
              if (null === l3)
                return;
              var u3 = l3.tag;
              if (3 === u3 || 4 === u3) {
                var s3 = l3.stateNode.containerInfo;
                if (Jl2(s3, a3))
                  break;
                if (4 === u3)
                  for (var c3 = l3.return; null !== c3; ) {
                    var d3 = c3.tag;
                    if (3 === d3 || 4 === d3) {
                      if (Jl2(c3.stateNode.containerInfo, a3))
                        return;
                    }
                    c3 = c3.return;
                  }
                for (; null !== s3; ) {
                  var f3 = Ts2(s3);
                  if (null === f3)
                    return;
                  var p3 = f3.tag;
                  if (5 === p3 || 6 === p3) {
                    l3 = i3 = f3;
                    continue e;
                  }
                  s3 = s3.parentNode;
                }
              }
              l3 = l3.return;
            }
        }
      }
      Nr2(function() {
        return function(e29, t3, r4, n4, o4) {
          var i4 = [];
          Vl2(i4, e29, n4, r4, kr2(r4), t3), Yl2(i4, t3);
        }(e28, t2, r3, i3);
      });
    }
    function tu2(e28, t2, r3) {
      return { instance: e28, listener: t2, currentTarget: r3 };
    }
    function ru2(e28, t2) {
      for (var r3 = t2 + "Capture", n3 = [], o3 = e28; null !== o3; ) {
        var i3 = o3, a3 = i3.stateNode;
        if (5 === i3.tag && null !== a3) {
          var l3 = a3, u3 = jr2(o3, r3);
          null != u3 && n3.unshift(tu2(o3, u3, l3));
          var s3 = jr2(o3, t2);
          null != s3 && n3.push(tu2(o3, s3, l3));
        }
        o3 = o3.return;
      }
      return n3;
    }
    function nu2(e28) {
      if (null === e28)
        return null;
      do {
        e28 = e28.return;
      } while (e28 && 5 !== e28.tag);
      return e28 || null;
    }
    function ou2(e28, t2, r3, n3, o3) {
      for (var i3 = t2._reactName, a3 = [], l3 = r3; null !== l3 && l3 !== n3; ) {
        var u3 = l3, s3 = u3.alternate, c3 = u3.stateNode, d3 = u3.tag;
        if (null !== s3 && s3 === n3)
          break;
        if (5 === d3 && null !== c3) {
          var f3 = c3;
          if (o3) {
            var p3 = jr2(l3, i3);
            null != p3 && a3.unshift(tu2(l3, p3, f3));
          } else if (!o3) {
            var h3 = jr2(l3, i3);
            null != h3 && a3.push(tu2(l3, h3, f3));
          }
        }
        l3 = l3.return;
      }
      0 !== a3.length && e28.push({ event: t2, listeners: a3 });
    }
    var iu2, au2, lu2, uu2, su2, cu2, du2, fu2, pu2 = false, hu2 = "dangerouslySetInnerHTML", gu2 = "suppressContentEditableWarning", vu2 = "suppressHydrationWarning", mu2 = "autoFocus", yu2 = "children", bu2 = "style";
    iu2 = { dialog: true, webview: true }, lu2 = function(e28, t2) {
      pr2(e28, t2), function(e29, t3) {
        "input" !== e29 && "textarea" !== e29 && "select" !== e29 || null == t3 || null !== t3.value || hr2 || (hr2 = true, "select" === e29 && t3.multiple ? a2("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", e29) : a2("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", e29));
      }(e28, t2), xr2(e28, t2, { registrationNameDependencies: x2, possibleRegistrationNames: w2 });
    }, du2 = E2 && !document.documentMode, uu2 = function(e28, t2, r3) {
      if (!pu2) {
        var n3 = wu2(r3), o3 = wu2(t2);
        o3 !== n3 && (pu2 = true, a2("Prop `%s` did not match. Server: %s Client: %s", e28, JSON.stringify(o3), JSON.stringify(n3)));
      }
    }, su2 = function(e28) {
      if (!pu2) {
        pu2 = true;
        var t2 = [];
        e28.forEach(function(e29) {
          t2.push(e29);
        }), a2("Extra attributes from the server: %s", t2);
      }
    }, cu2 = function(e28, t2) {
      false === t2 ? a2("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", e28, e28, e28) : a2("Expected `%s` listener to be a function, instead got a value of `%s` type.", e28, typeof t2);
    }, fu2 = function(e28, t2) {
      var r3 = e28.namespaceURI === Mt2 ? e28.ownerDocument.createElement(e28.tagName) : e28.ownerDocument.createElementNS(e28.namespaceURI, e28.tagName);
      return r3.innerHTML = t2, r3.innerHTML;
    };
    var Cu2 = /\r\n?/g, xu2 = /\u0000|\uFFFD/g;
    function wu2(e28) {
      return function(e29) {
        if (O2(e29))
          a2("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", R2(e29)), _2(e29);
      }(e28), ("string" == typeof e28 ? e28 : "" + e28).replace(Cu2, "\n").replace(xu2, "");
    }
    function ku2(e28, t2, r3, n3) {
      var o3 = wu2(t2), i3 = wu2(e28);
      if (i3 !== o3 && (n3 && (pu2 || (pu2 = true, a2('Text content did not match. Server: "%s" Client: "%s"', i3, o3))), r3))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function Su2(e28) {
      return 9 === e28.nodeType ? e28 : e28.ownerDocument;
    }
    function Eu2() {
    }
    function Tu2(e28) {
      e28.onclick = Eu2;
    }
    function Ru2(e28, t2, r3, n3) {
      var o3, i3 = ar2(t2, r3);
      switch (lu2(t2, r3), t2) {
        case "dialog":
          Gl2("cancel", e28), Gl2("close", e28), o3 = r3;
          break;
        case "iframe":
        case "object":
        case "embed":
          Gl2("load", e28), o3 = r3;
          break;
        case "video":
        case "audio":
          for (var a3 = 0; a3 < Wl2.length; a3++)
            Gl2(Wl2[a3], e28);
          o3 = r3;
          break;
        case "source":
          Gl2("error", e28), o3 = r3;
          break;
        case "img":
        case "image":
        case "link":
          Gl2("error", e28), Gl2("load", e28), o3 = r3;
          break;
        case "details":
          Gl2("toggle", e28), o3 = r3;
          break;
        case "input":
          ut2(e28, r3), o3 = lt2(e28, r3), Gl2("invalid", e28);
          break;
        case "option":
          mt2(0, r3), o3 = r3;
          break;
        case "select":
          Et2(e28, r3), o3 = St2(0, r3), Gl2("invalid", e28);
          break;
        case "textarea":
          Ot2(e28, r3), o3 = Rt2(e28, r3), Gl2("invalid", e28);
          break;
        default:
          o3 = r3;
      }
      switch (ir2(t2, o3), function(e29, t3, r4, n4, o4) {
        for (var i4 in n4)
          if (n4.hasOwnProperty(i4)) {
            var a4 = n4[i4];
            if (i4 === bu2)
              a4 && Object.freeze(a4), rr2(t3, a4);
            else if (i4 === hu2) {
              var l3 = a4 ? a4.__html : void 0;
              null != l3 && Lt2(t3, l3);
            } else
              i4 === yu2 ? "string" == typeof a4 ? ("textarea" !== e29 || "" !== a4) && It2(t3, a4) : "number" == typeof a4 && It2(t3, "" + a4) : i4 === gu2 || i4 === vu2 || i4 === mu2 || (x2.hasOwnProperty(i4) ? null != a4 && ("function" != typeof a4 && cu2(i4, a4), "onScroll" === i4 && Gl2("scroll", t3)) : null != a4 && Z2(t3, i4, a4, o4));
          }
      }(t2, e28, 0, o3, i3), t2) {
        case "input":
          Je2(e28), dt2(e28, r3, false);
          break;
        case "textarea":
          Je2(e28), Pt2(e28);
          break;
        case "option":
          !function(e29, t3) {
            null != t3.value && e29.setAttribute("value", Ye2(Ge2(t3.value)));
          }(e28, r3);
          break;
        case "select":
          !function(e29, t3) {
            var r4 = e29;
            r4.multiple = !!t3.multiple;
            var n4 = t3.value;
            null != n4 ? kt2(r4, !!t3.multiple, n4, false) : null != t3.defaultValue && kt2(r4, !!t3.multiple, t3.defaultValue, true);
          }(e28, r3);
          break;
        default:
          "function" == typeof o3.onClick && Tu2(e28);
      }
    }
    function Ou2(e28, t2, r3, n3, o3) {
      lu2(t2, n3);
      var i3, l3, u3, s3, c3 = null;
      switch (t2) {
        case "input":
          i3 = lt2(e28, r3), l3 = lt2(e28, n3), c3 = [];
          break;
        case "select":
          i3 = St2(0, r3), l3 = St2(0, n3), c3 = [];
          break;
        case "textarea":
          i3 = Rt2(e28, r3), l3 = Rt2(e28, n3), c3 = [];
          break;
        default:
          l3 = n3, "function" != typeof (i3 = r3).onClick && "function" == typeof l3.onClick && Tu2(e28);
      }
      ir2(t2, l3);
      var d3 = null;
      for (u3 in i3)
        if (!l3.hasOwnProperty(u3) && i3.hasOwnProperty(u3) && null != i3[u3])
          if (u3 === bu2) {
            var f3 = i3[u3];
            for (s3 in f3)
              f3.hasOwnProperty(s3) && (d3 || (d3 = {}), d3[s3] = "");
          } else
            u3 === hu2 || u3 === yu2 || u3 === gu2 || u3 === vu2 || u3 === mu2 || (x2.hasOwnProperty(u3) ? c3 || (c3 = []) : (c3 = c3 || []).push(u3, null));
      for (u3 in l3) {
        var p3 = l3[u3], h3 = null != i3 ? i3[u3] : void 0;
        if (l3.hasOwnProperty(u3) && p3 !== h3 && (null != p3 || null != h3))
          if (u3 === bu2)
            if (p3 && Object.freeze(p3), h3) {
              for (s3 in h3)
                !h3.hasOwnProperty(s3) || p3 && p3.hasOwnProperty(s3) || (d3 || (d3 = {}), d3[s3] = "");
              for (s3 in p3)
                p3.hasOwnProperty(s3) && h3[s3] !== p3[s3] && (d3 || (d3 = {}), d3[s3] = p3[s3]);
            } else
              d3 || (c3 || (c3 = []), c3.push(u3, d3)), d3 = p3;
          else if (u3 === hu2) {
            var g3 = p3 ? p3.__html : void 0, v3 = h3 ? h3.__html : void 0;
            null != g3 && v3 !== g3 && (c3 = c3 || []).push(u3, g3);
          } else
            u3 === yu2 ? "string" != typeof p3 && "number" != typeof p3 || (c3 = c3 || []).push(u3, "" + p3) : u3 === gu2 || u3 === vu2 || (x2.hasOwnProperty(u3) ? (null != p3 && ("function" != typeof p3 && cu2(u3, p3), "onScroll" === u3 && Gl2("scroll", e28)), c3 || h3 === p3 || (c3 = [])) : (c3 = c3 || []).push(u3, p3));
      }
      return d3 && (!function(e29, t3) {
        if (t3) {
          var r4, n4 = nr2(e29), o4 = nr2(t3), i4 = {};
          for (var l4 in n4) {
            var u4 = n4[l4], s4 = o4[l4];
            if (s4 && u4 !== s4) {
              var c4 = u4 + "," + s4;
              if (i4[c4])
                continue;
              i4[c4] = true, a2("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", null == (r4 = e29[u4]) || "boolean" == typeof r4 || "" === r4 ? "Removing" : "Updating", u4, s4);
            }
          }
        }
      }(d3, l3.style), (c3 = c3 || []).push(bu2, d3)), c3;
    }
    function _u2(e28, t2, r3, n3, o3) {
      "input" === r3 && "radio" === o3.type && null != o3.name && st2(e28, o3);
      ar2(r3, n3);
      switch (function(e29, t3, r4, n4) {
        for (var o4 = 0; o4 < t3.length; o4 += 2) {
          var i3 = t3[o4], a3 = t3[o4 + 1];
          i3 === bu2 ? rr2(e29, a3) : i3 === hu2 ? Lt2(e29, a3) : i3 === yu2 ? It2(e29, a3) : Z2(e29, i3, a3, n4);
        }
      }(e28, t2, 0, ar2(r3, o3)), r3) {
        case "input":
          ct2(e28, o3);
          break;
        case "textarea":
          _t2(e28, o3);
          break;
        case "select":
          !function(e29, t3) {
            var r4 = e29, n4 = r4._wrapperState.wasMultiple;
            r4._wrapperState.wasMultiple = !!t3.multiple;
            var o4 = t3.value;
            null != o4 ? kt2(r4, !!t3.multiple, o4, false) : n4 !== !!t3.multiple && (null != t3.defaultValue ? kt2(r4, !!t3.multiple, t3.defaultValue, true) : kt2(r4, !!t3.multiple, t3.multiple ? [] : "", false));
          }(e28, o3);
      }
    }
    function Pu2(e28, t2) {
      pu2 || (pu2 = true, a2("Did not expect server HTML to contain a <%s> in <%s>.", t2.nodeName.toLowerCase(), e28.nodeName.toLowerCase()));
    }
    function Mu2(e28, t2) {
      pu2 || (pu2 = true, a2('Did not expect server HTML to contain the text node "%s" in <%s>.', t2.nodeValue, e28.nodeName.toLowerCase()));
    }
    function Bu2(e28, t2, r3) {
      pu2 || (pu2 = true, a2("Expected server HTML to contain a matching <%s> in <%s>.", t2, e28.nodeName.toLowerCase()));
    }
    function Au2(e28, t2) {
      "" !== t2 && (pu2 || (pu2 = true, a2('Expected server HTML to contain a matching text node for "%s" in <%s>.', t2, e28.nodeName.toLowerCase())));
    }
    var Nu2, ju2, Du2 = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], Lu2 = ["applet", "caption", "html", "table", "td", "th", "marquee", "object", "template", "foreignObject", "desc", "title"], Iu2 = Lu2.concat(["button"]), zu2 = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], Fu2 = { current: null, formTag: null, aTagInScope: null, buttonTagInScope: null, nobrTagInScope: null, pTagInButtonScope: null, listItemTagAutoclosing: null, dlItemTagAutoclosing: null };
    ju2 = function(e28, t2) {
      var r3 = xe2({}, e28 || Fu2), n3 = { tag: t2 };
      return -1 !== Lu2.indexOf(t2) && (r3.aTagInScope = null, r3.buttonTagInScope = null, r3.nobrTagInScope = null), -1 !== Iu2.indexOf(t2) && (r3.pTagInButtonScope = null), -1 !== Du2.indexOf(t2) && "address" !== t2 && "div" !== t2 && "p" !== t2 && (r3.listItemTagAutoclosing = null, r3.dlItemTagAutoclosing = null), r3.current = n3, "form" === t2 && (r3.formTag = n3), "a" === t2 && (r3.aTagInScope = n3), "button" === t2 && (r3.buttonTagInScope = n3), "nobr" === t2 && (r3.nobrTagInScope = n3), "p" === t2 && (r3.pTagInButtonScope = n3), "li" === t2 && (r3.listItemTagAutoclosing = n3), "dd" !== t2 && "dt" !== t2 || (r3.dlItemTagAutoclosing = n3), r3;
    };
    var Uu2 = {};
    Nu2 = function(e28, t2, r3) {
      var n3 = (r3 = r3 || Fu2).current, o3 = n3 && n3.tag;
      null != t2 && (null != e28 && a2("validateDOMNesting: when childText is passed, childTag should be null"), e28 = "#text");
      var i3 = function(e29, t3) {
        switch (t3) {
          case "select":
            return "option" === e29 || "optgroup" === e29 || "#text" === e29;
          case "optgroup":
            return "option" === e29 || "#text" === e29;
          case "option":
            return "#text" === e29;
          case "tr":
            return "th" === e29 || "td" === e29 || "style" === e29 || "script" === e29 || "template" === e29;
          case "tbody":
          case "thead":
          case "tfoot":
            return "tr" === e29 || "style" === e29 || "script" === e29 || "template" === e29;
          case "colgroup":
            return "col" === e29 || "template" === e29;
          case "table":
            return "caption" === e29 || "colgroup" === e29 || "tbody" === e29 || "tfoot" === e29 || "thead" === e29 || "style" === e29 || "script" === e29 || "template" === e29;
          case "head":
            return "base" === e29 || "basefont" === e29 || "bgsound" === e29 || "link" === e29 || "meta" === e29 || "title" === e29 || "noscript" === e29 || "noframes" === e29 || "style" === e29 || "script" === e29 || "template" === e29;
          case "html":
            return "head" === e29 || "body" === e29 || "frameset" === e29;
          case "frameset":
            return "frame" === e29;
          case "#document":
            return "html" === e29;
        }
        switch (e29) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return "h1" !== t3 && "h2" !== t3 && "h3" !== t3 && "h4" !== t3 && "h5" !== t3 && "h6" !== t3;
          case "rp":
          case "rt":
            return -1 === zu2.indexOf(t3);
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return null == t3;
        }
        return true;
      }(e28, o3) ? null : n3, l3 = i3 ? null : function(e29, t3) {
        switch (e29) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return t3.pTagInButtonScope;
          case "form":
            return t3.formTag || t3.pTagInButtonScope;
          case "li":
            return t3.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return t3.dlItemTagAutoclosing;
          case "button":
            return t3.buttonTagInScope;
          case "a":
            return t3.aTagInScope;
          case "nobr":
            return t3.nobrTagInScope;
        }
        return null;
      }(e28, r3), u3 = i3 || l3;
      if (u3) {
        var s3 = u3.tag, c3 = !!i3 + "|" + e28 + "|" + s3;
        if (!Uu2[c3]) {
          Uu2[c3] = true;
          var d3 = e28, f3 = "";
          if ("#text" === e28 ? /\S/.test(t2) ? d3 = "Text nodes" : (d3 = "Whitespace text nodes", f3 = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : d3 = "<" + e28 + ">", i3) {
            var p3 = "";
            "table" === s3 && "tr" === e28 && (p3 += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), a2("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", d3, s3, f3, p3);
          } else
            a2("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", d3, s3);
        }
      }
    };
    var Vu2 = "$", Wu2 = "/$", Hu2 = "$?", $u2 = "$!", qu2 = null;
    function Yu2(e28) {
      var t2;
      t2 = bl2(), qu2 = { focusedElem: t2, selectionRange: Cl2(t2) ? wl2(t2) : null };
      return null;
    }
    function Gu2(e28, t2, r3, n3, o3) {
      var i3 = n3;
      if (Nu2(e28, null, i3.ancestorInfo), "string" == typeof t2.children || "number" == typeof t2.children) {
        var l3 = "" + t2.children, u3 = ju2(i3.ancestorInfo, e28);
        Nu2(null, l3, u3);
      }
      var s3 = function(e29, t3, r4, n4) {
        var o4, i4, l4 = Su2(r4), u4 = n4;
        if (u4 === Mt2 && (u4 = At2(e29)), u4 === Mt2) {
          if ((o4 = ar2(e29, t3)) || e29 === e29.toLowerCase() || a2("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", e29), "script" === e29) {
            var s4 = l4.createElement("div");
            s4.innerHTML = "<script><\/script>";
            var c3 = s4.firstChild;
            i4 = s4.removeChild(c3);
          } else if ("string" == typeof t3.is)
            i4 = l4.createElement(e29, { is: t3.is });
          else if (i4 = l4.createElement(e29), "select" === e29) {
            var d3 = i4;
            t3.multiple ? d3.multiple = true : t3.size && (d3.size = t3.size);
          }
        } else
          i4 = l4.createElementNS(u4, e29);
        return u4 === Mt2 && (o4 || "[object HTMLUnknownElement]" !== Object.prototype.toString.call(i4) || T2.call(iu2, e29) || (iu2[e29] = true, a2("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", e29))), i4;
      }(e28, t2, r3, i3.namespace);
      return ws2(o3, s3), Ps2(s3, t2), s3;
    }
    function Xu2(e28, t2) {
      return "textarea" === e28 || "noscript" === e28 || "string" == typeof t2.children || "number" == typeof t2.children || "object" == typeof t2.dangerouslySetInnerHTML && null !== t2.dangerouslySetInnerHTML && null != t2.dangerouslySetInnerHTML.__html;
    }
    function Qu2(e28, t2, r3, n3) {
      Nu2(null, e28, r3.ancestorInfo);
      var o3 = function(e29, t3) {
        return Su2(t3).createTextNode(e29);
      }(e28, t2);
      return ws2(n3, o3), o3;
    }
    var Ku2 = "function" == typeof setTimeout ? setTimeout : void 0, Zu = "function" == typeof clearTimeout ? clearTimeout : void 0, Ju = "function" == typeof Promise ? Promise : void 0, es = "function" == typeof queueMicrotask ? queueMicrotask : void 0 !== Ju ? function(e28) {
      return Ju.resolve(null).then(e28).catch(ts2);
    } : Ku2;
    function ts2(e28) {
      setTimeout(function() {
        throw e28;
      });
    }
    function rs2(e28) {
      It2(e28, "");
    }
    function ns2(e28, t2) {
      e28.removeChild(t2);
    }
    function os2(e28, t2) {
      var r3 = t2, n3 = 0;
      do {
        var o3 = r3.nextSibling;
        if (e28.removeChild(r3), o3 && 8 === o3.nodeType) {
          var i3 = o3.data;
          if (i3 === Wu2) {
            if (0 === n3)
              return e28.removeChild(o3), void Hi2(t2);
            n3--;
          } else
            i3 !== Vu2 && i3 !== Hu2 && i3 !== $u2 || n3++;
        }
        r3 = o3;
      } while (r3);
      Hi2(t2);
    }
    function is2(e28, t2) {
      8 === e28.nodeType ? os2(e28.parentNode, t2) : 1 === e28.nodeType && os2(e28, t2), Hi2(e28);
    }
    function as2(e28) {
      var t2 = (e28 = e28).style;
      "function" == typeof t2.setProperty ? t2.setProperty("display", "none", "important") : t2.display = "none";
    }
    function ls2(e28, t2) {
      e28 = e28;
      var r3 = t2.style, n3 = null != r3 && r3.hasOwnProperty("display") ? r3.display : null;
      e28.style.display = Vt2("display", n3);
    }
    function us2(e28, t2) {
      e28.nodeValue = t2;
    }
    function ss2(e28) {
      return e28.data === Hu2;
    }
    function cs2(e28) {
      return e28.data === $u2;
    }
    function ds2(e28) {
      for (; null != e28; e28 = e28.nextSibling) {
        var t2 = e28.nodeType;
        if (1 === t2 || 3 === t2)
          break;
        if (8 === t2) {
          var r3 = e28.data;
          if (r3 === Vu2 || r3 === $u2 || r3 === Hu2)
            break;
          if (r3 === Wu2)
            return null;
        }
      }
      return e28;
    }
    function fs(e28) {
      return ds2(e28.nextSibling);
    }
    function ps2(e28, t2, r3, n3, o3, i3, a3) {
      return ws2(i3, e28), Ps2(e28, r3), function(e29, t3, r4, n4, o4, i4, a4) {
        var l3, u3;
        switch (au2 = true === r4.suppressHydrationWarning, l3 = ar2(t3, r4), lu2(t3, r4), t3) {
          case "dialog":
            Gl2("cancel", e29), Gl2("close", e29);
            break;
          case "iframe":
          case "object":
          case "embed":
            Gl2("load", e29);
            break;
          case "video":
          case "audio":
            for (var s3 = 0; s3 < Wl2.length; s3++)
              Gl2(Wl2[s3], e29);
            break;
          case "source":
            Gl2("error", e29);
            break;
          case "img":
          case "image":
          case "link":
            Gl2("error", e29), Gl2("load", e29);
            break;
          case "details":
            Gl2("toggle", e29);
            break;
          case "input":
            ut2(e29, r4), Gl2("invalid", e29);
            break;
          case "option":
            mt2(0, r4);
            break;
          case "select":
            Et2(e29, r4), Gl2("invalid", e29);
            break;
          case "textarea":
            Ot2(e29, r4), Gl2("invalid", e29);
        }
        ir2(t3, r4), u3 = /* @__PURE__ */ new Set();
        for (var c3 = e29.attributes, d3 = 0; d3 < c3.length; d3++)
          switch (c3[d3].name.toLowerCase()) {
            case "value":
            case "checked":
            case "selected":
              break;
            default:
              u3.add(c3[d3].name);
          }
        var f3, p3 = null;
        for (var h3 in r4)
          if (r4.hasOwnProperty(h3)) {
            var g3 = r4[h3];
            if (h3 === yu2)
              "string" == typeof g3 ? e29.textContent !== g3 && (au2 || ku2(e29.textContent, g3, i4, a4), p3 = [yu2, g3]) : "number" == typeof g3 && e29.textContent !== "" + g3 && (au2 || ku2(e29.textContent, g3, i4, a4), p3 = [yu2, "" + g3]);
            else if (x2.hasOwnProperty(h3))
              null != g3 && ("function" != typeof g3 && cu2(h3, g3), "onScroll" === h3 && Gl2("scroll", e29));
            else if (a4 && "boolean" == typeof l3) {
              var v3 = void 0, m3 = V2(h3);
              if (au2)
                ;
              else if (h3 === gu2 || h3 === vu2 || "value" === h3 || "checked" === h3 || "selected" === h3)
                ;
              else if (h3 === hu2) {
                var y3 = e29.innerHTML, b3 = g3 ? g3.__html : void 0;
                if (null != b3) {
                  var C3 = fu2(e29, b3);
                  C3 !== y3 && uu2(h3, y3, C3);
                }
              } else if (h3 === bu2) {
                if (u3.delete(h3), du2) {
                  var w3 = tr2(g3);
                  w3 !== (v3 = e29.getAttribute("style")) && uu2(h3, v3, w3);
                }
              } else if (l3)
                u3.delete(h3.toLowerCase()), g3 !== (v3 = K2(e29, h3, g3)) && uu2(h3, v3, g3);
              else if (!z2(h3, m3, l3) && !U2(h3, g3, m3, l3)) {
                var k3 = false;
                if (null !== m3)
                  u3.delete(m3.attributeName), v3 = Q2(e29, h3, g3, m3);
                else {
                  var S3 = n4;
                  if (S3 === Mt2 && (S3 = At2(t3)), S3 === Mt2)
                    u3.delete(h3.toLowerCase());
                  else {
                    var E3 = (f3 = void 0, f3 = h3.toLowerCase(), lr2.hasOwnProperty(f3) && lr2[f3] || null);
                    null !== E3 && E3 !== h3 && (k3 = true, u3.delete(E3)), u3.delete(h3);
                  }
                  v3 = K2(e29, h3, g3);
                }
                g3 === v3 || k3 || uu2(h3, v3, g3);
              }
            }
          }
        switch (a4 && u3.size > 0 && !au2 && su2(u3), t3) {
          case "input":
            Je2(e29), dt2(e29, r4, true);
            break;
          case "textarea":
            Je2(e29), Pt2(e29);
            break;
          case "select":
          case "option":
            break;
          default:
            "function" == typeof r4.onClick && Tu2(e29);
        }
        return p3;
      }(e28, t2, r3, o3.namespace, 0, 0 != (1 & i3.mode), a3);
    }
    function hs2(e28) {
      for (var t2 = e28.previousSibling, r3 = 0; t2; ) {
        if (8 === t2.nodeType) {
          var n3 = t2.data;
          if (n3 === Vu2 || n3 === $u2 || n3 === Hu2) {
            if (0 === r3)
              return t2;
            r3--;
          } else
            n3 === Wu2 && r3++;
        }
        t2 = t2.previousSibling;
      }
      return null;
    }
    var gs2 = Math.random().toString(36).slice(2), vs2 = "__reactFiber$" + gs2, ms2 = "__reactProps$" + gs2, ys2 = "__reactContainer$" + gs2, bs2 = "__reactEvents$" + gs2, Cs2 = "__reactListeners$" + gs2, xs2 = "__reactHandles$" + gs2;
    function ws2(e28, t2) {
      t2[vs2] = e28;
    }
    function ks2(e28, t2) {
      t2[ys2] = e28;
    }
    function Ss2(e28) {
      e28[ys2] = null;
    }
    function Es2(e28) {
      return !!e28[ys2];
    }
    function Ts2(e28) {
      var t2 = e28[vs2];
      if (t2)
        return t2;
      for (var r3 = e28.parentNode; r3; ) {
        if (t2 = r3[ys2] || r3[vs2]) {
          var n3 = t2.alternate;
          if (null !== t2.child || null !== n3 && null !== n3.child)
            for (var o3 = hs2(e28); null !== o3; ) {
              var i3 = o3[vs2];
              if (i3)
                return i3;
              o3 = hs2(o3);
            }
          return t2;
        }
        r3 = (e28 = r3).parentNode;
      }
      return null;
    }
    function Rs2(e28) {
      var t2 = e28[vs2] || e28[ys2];
      return t2 && (5 === t2.tag || 6 === t2.tag || t2.tag === d2 || 3 === t2.tag) ? t2 : null;
    }
    function Os2(e28) {
      if (5 === e28.tag || 6 === e28.tag)
        return e28.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function _s2(e28) {
      return e28[ms2] || null;
    }
    function Ps2(e28, t2) {
      e28[ms2] = t2;
    }
    var Ms2 = {}, Bs2 = n2.ReactDebugCurrentFrame;
    function As2(e28) {
      if (e28) {
        var t2 = e28._owner, r3 = Be2(e28.type, e28._source, t2 ? t2.type : null);
        Bs2.setExtraStackFrame(r3);
      } else
        Bs2.setExtraStackFrame(null);
    }
    function Ns2(e28, t2, r3, n3, o3) {
      var i3 = Function.call.bind(T2);
      for (var l3 in e28)
        if (i3(e28, l3)) {
          var u3 = void 0;
          try {
            if ("function" != typeof e28[l3]) {
              var s3 = Error((n3 || "React class") + ": " + r3 + " type `" + l3 + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof e28[l3] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
              throw s3.name = "Invariant Violation", s3;
            }
            u3 = e28[l3](t2, l3, n3, r3, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
          } catch (e29) {
            u3 = e29;
          }
          !u3 || u3 instanceof Error || (As2(o3), a2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", n3 || "React class", r3, l3, typeof u3), As2(null)), u3 instanceof Error && !(u3.message in Ms2) && (Ms2[u3.message] = true, As2(o3), a2("Failed %s type: %s", r3, u3.message), As2(null));
        }
    }
    var js2, Ds2 = [];
    js2 = [];
    var Ls2, Is2 = -1;
    function zs2(e28) {
      return { current: e28 };
    }
    function Fs2(e28, t2) {
      Is2 < 0 ? a2("Unexpected pop.") : (t2 !== js2[Is2] && a2("Unexpected Fiber popped."), e28.current = Ds2[Is2], Ds2[Is2] = null, js2[Is2] = null, Is2--);
    }
    function Us2(e28, t2, r3) {
      Is2++, Ds2[Is2] = e28.current, js2[Is2] = r3, e28.current = t2;
    }
    Ls2 = {};
    var Vs2 = {};
    Object.freeze(Vs2);
    var Ws2 = zs2(Vs2), Hs2 = zs2(false), $s2 = Vs2;
    function qs2(e28, t2, r3) {
      return r3 && Qs2(t2) ? $s2 : Ws2.current;
    }
    function Ys2(e28, t2, r3) {
      var n3 = e28.stateNode;
      n3.__reactInternalMemoizedUnmaskedChildContext = t2, n3.__reactInternalMemoizedMaskedChildContext = r3;
    }
    function Gs2(e28, t2) {
      var r3 = e28.type.contextTypes;
      if (!r3)
        return Vs2;
      var n3 = e28.stateNode;
      if (n3 && n3.__reactInternalMemoizedUnmaskedChildContext === t2)
        return n3.__reactInternalMemoizedMaskedChildContext;
      var o3 = {};
      for (var i3 in r3)
        o3[i3] = t2[i3];
      return Ns2(r3, o3, "context", Ie2(e28) || "Unknown"), n3 && Ys2(e28, t2, o3), o3;
    }
    function Xs2() {
      return Hs2.current;
    }
    function Qs2(e28) {
      var t2 = e28.childContextTypes;
      return null != t2;
    }
    function Ks2(e28) {
      Fs2(Hs2, e28), Fs2(Ws2, e28);
    }
    function Zs2(e28) {
      Fs2(Hs2, e28), Fs2(Ws2, e28);
    }
    function Js2(e28, t2, r3) {
      if (Ws2.current !== Vs2)
        throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
      Us2(Ws2, t2, e28), Us2(Hs2, r3, e28);
    }
    function ec2(e28, t2, r3) {
      var n3 = e28.stateNode, o3 = t2.childContextTypes;
      if ("function" != typeof n3.getChildContext) {
        var i3 = Ie2(e28) || "Unknown";
        return Ls2[i3] || (Ls2[i3] = true, a2("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", i3, i3)), r3;
      }
      var l3 = n3.getChildContext();
      for (var u3 in l3)
        if (!(u3 in o3))
          throw new Error((Ie2(e28) || "Unknown") + '.getChildContext(): key "' + u3 + '" is not defined in childContextTypes.');
      return Ns2(o3, l3, "child context", Ie2(e28) || "Unknown"), xe2({}, r3, l3);
    }
    function tc2(e28) {
      var t2 = e28.stateNode, r3 = t2 && t2.__reactInternalMemoizedMergedChildContext || Vs2;
      return $s2 = Ws2.current, Us2(Ws2, r3, e28), Us2(Hs2, Hs2.current, e28), true;
    }
    function rc2(e28, t2, r3) {
      var n3 = e28.stateNode;
      if (!n3)
        throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
      if (r3) {
        var o3 = ec2(e28, t2, $s2);
        n3.__reactInternalMemoizedMergedChildContext = o3, Fs2(Hs2, e28), Fs2(Ws2, e28), Us2(Ws2, o3, e28), Us2(Hs2, r3, e28);
      } else
        Fs2(Hs2, e28), Us2(Hs2, r3, e28);
    }
    function nc2(e28) {
      if (!function(e29) {
        return Cn2(e29) === e29;
      }(e28) || 1 !== e28.tag)
        throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
      var t2 = e28;
      do {
        switch (t2.tag) {
          case 3:
            return t2.stateNode.context;
          case 1:
            if (Qs2(t2.type))
              return t2.stateNode.__reactInternalMemoizedMergedChildContext;
        }
        t2 = t2.return;
      } while (null !== t2);
      throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var oc2 = null, ic2 = false, ac2 = false;
    function lc2(e28) {
      null === oc2 ? oc2 = [e28] : oc2.push(e28);
    }
    function uc2() {
      ic2 && sc2();
    }
    function sc2() {
      if (!ac2 && null !== oc2) {
        ac2 = true;
        var e28 = 0, t2 = wi2();
        try {
          var r3 = oc2;
          for (ki2(mi2); e28 < r3.length; e28++) {
            var n3 = r3[e28];
            do {
              n3 = n3(true);
            } while (null !== n3);
          }
          oc2 = null, ic2 = false;
        } catch (t3) {
          throw null !== oc2 && (oc2 = oc2.slice(e28 + 1)), _n2(jn2, sc2), t3;
        } finally {
          ki2(t2), ac2 = false;
        }
      }
      return null;
    }
    var cc2 = n2.ReactCurrentBatchConfig;
    var dc2 = { recordUnsafeLifecycleWarnings: function(e28, t2) {
    }, flushPendingUnsafeLifecycleWarnings: function() {
    }, recordLegacyContextWarning: function(e28, t2) {
    }, flushLegacyContextWarning: function() {
    }, discardPendingWarnings: function() {
    } }, fc2 = function(e28) {
      var t2 = [];
      return e28.forEach(function(e29) {
        t2.push(e29);
      }), t2.sort().join(", ");
    }, pc2 = [], hc2 = [], gc2 = [], vc2 = [], mc2 = [], yc2 = [], bc2 = /* @__PURE__ */ new Set();
    dc2.recordUnsafeLifecycleWarnings = function(e28, t2) {
      bc2.has(e28.type) || ("function" == typeof t2.componentWillMount && true !== t2.componentWillMount.__suppressDeprecationWarning && pc2.push(e28), 8 & e28.mode && "function" == typeof t2.UNSAFE_componentWillMount && hc2.push(e28), "function" == typeof t2.componentWillReceiveProps && true !== t2.componentWillReceiveProps.__suppressDeprecationWarning && gc2.push(e28), 8 & e28.mode && "function" == typeof t2.UNSAFE_componentWillReceiveProps && vc2.push(e28), "function" == typeof t2.componentWillUpdate && true !== t2.componentWillUpdate.__suppressDeprecationWarning && mc2.push(e28), 8 & e28.mode && "function" == typeof t2.UNSAFE_componentWillUpdate && yc2.push(e28));
    }, dc2.flushPendingUnsafeLifecycleWarnings = function() {
      var e28 = /* @__PURE__ */ new Set();
      pc2.length > 0 && (pc2.forEach(function(t3) {
        e28.add(Ie2(t3) || "Component"), bc2.add(t3.type);
      }), pc2 = []);
      var t2 = /* @__PURE__ */ new Set();
      hc2.length > 0 && (hc2.forEach(function(e29) {
        t2.add(Ie2(e29) || "Component"), bc2.add(e29.type);
      }), hc2 = []);
      var r3 = /* @__PURE__ */ new Set();
      gc2.length > 0 && (gc2.forEach(function(e29) {
        r3.add(Ie2(e29) || "Component"), bc2.add(e29.type);
      }), gc2 = []);
      var n3 = /* @__PURE__ */ new Set();
      vc2.length > 0 && (vc2.forEach(function(e29) {
        n3.add(Ie2(e29) || "Component"), bc2.add(e29.type);
      }), vc2 = []);
      var o3 = /* @__PURE__ */ new Set();
      mc2.length > 0 && (mc2.forEach(function(e29) {
        o3.add(Ie2(e29) || "Component"), bc2.add(e29.type);
      }), mc2 = []);
      var l3 = /* @__PURE__ */ new Set();
      (yc2.length > 0 && (yc2.forEach(function(e29) {
        l3.add(Ie2(e29) || "Component"), bc2.add(e29.type);
      }), yc2 = []), t2.size > 0) && a2("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", fc2(t2));
      n3.size > 0 && a2("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", fc2(n3));
      l3.size > 0 && a2("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", fc2(l3));
      e28.size > 0 && i2("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", fc2(e28));
      r3.size > 0 && i2("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", fc2(r3));
      o3.size > 0 && i2("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", fc2(o3));
    };
    var Cc2 = /* @__PURE__ */ new Map(), xc2 = /* @__PURE__ */ new Set();
    function wc2(e28, t2) {
      if (e28 && e28.defaultProps) {
        var r3 = xe2({}, t2), n3 = e28.defaultProps;
        for (var o3 in n3)
          void 0 === r3[o3] && (r3[o3] = n3[o3]);
        return r3;
      }
      return t2;
    }
    dc2.recordLegacyContextWarning = function(e28, t2) {
      var r3 = function(e29) {
        for (var t3 = null, r4 = e29; null !== r4; )
          8 & r4.mode && (t3 = r4), r4 = r4.return;
        return t3;
      }(e28);
      if (null !== r3) {
        if (!xc2.has(e28.type)) {
          var n3 = Cc2.get(r3);
          (null != e28.type.contextTypes || null != e28.type.childContextTypes || null !== t2 && "function" == typeof t2.getChildContext) && (void 0 === n3 && (n3 = [], Cc2.set(r3, n3)), n3.push(e28));
        }
      } else
        a2("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
    }, dc2.flushLegacyContextWarning = function() {
      Cc2.forEach(function(e28, t2) {
        if (0 !== e28.length) {
          var r3 = e28[0], n3 = /* @__PURE__ */ new Set();
          e28.forEach(function(e29) {
            n3.add(Ie2(e29) || "Component"), xc2.add(e29.type);
          });
          var o3 = fc2(n3);
          try {
            $e2(r3), a2("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", o3);
          } finally {
            He2();
          }
        }
      });
    }, dc2.discardPendingWarnings = function() {
      pc2 = [], hc2 = [], gc2 = [], vc2 = [], mc2 = [], yc2 = [], Cc2 = /* @__PURE__ */ new Map();
    };
    var kc2, Sc2 = zs2(null);
    kc2 = {};
    var Ec2 = null, Tc2 = null, Rc2 = null, Oc2 = false;
    function Pc2() {
      Ec2 = null, Tc2 = null, Rc2 = null, Oc2 = false;
    }
    function Mc2() {
      Oc2 = true;
    }
    function Bc2() {
      Oc2 = false;
    }
    function Ac2(e28, t2, r3) {
      Us2(Sc2, t2._currentValue, e28), t2._currentValue = r3, void 0 !== t2._currentRenderer && null !== t2._currentRenderer && t2._currentRenderer !== kc2 && a2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), t2._currentRenderer = kc2;
    }
    function Nc2(e28, t2) {
      var r3 = Sc2.current;
      Fs2(Sc2, t2), e28._currentValue = r3;
    }
    function jc2(e28, t2, r3) {
      for (var n3 = e28; null !== n3; ) {
        var o3 = n3.alternate;
        if (ri2(n3.childLanes, t2) ? null === o3 || ri2(o3.childLanes, t2) || (o3.childLanes = ni2(o3.childLanes, t2)) : (n3.childLanes = ni2(n3.childLanes, t2), null !== o3 && (o3.childLanes = ni2(o3.childLanes, t2))), n3 === r3)
          break;
        n3 = n3.return;
      }
      n3 !== r3 && a2("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Dc2(e28, t2, r3) {
      !function(e29, t3, r4) {
        var n3 = e29.child;
        null !== n3 && (n3.return = e29);
        for (; null !== n3; ) {
          var o3 = void 0, i3 = n3.dependencies;
          if (null !== i3) {
            o3 = n3.child;
            for (var a3 = i3.firstContext; null !== a3; ) {
              if (a3.context === t3) {
                if (1 === n3.tag) {
                  var l3 = Zo2(r4), s3 = Yc2(Fo2, l3);
                  s3.tag = Wc2;
                  var c3 = n3.updateQueue;
                  if (null === c3)
                    ;
                  else {
                    var d3 = c3.shared, f3 = d3.pending;
                    null === f3 ? s3.next = s3 : (s3.next = f3.next, f3.next = s3), d3.pending = s3;
                  }
                }
                n3.lanes = ni2(n3.lanes, r4);
                var p3 = n3.alternate;
                null !== p3 && (p3.lanes = ni2(p3.lanes, r4)), jc2(n3.return, r4, e29), i3.lanes = ni2(i3.lanes, r4);
                break;
              }
              a3 = a3.next;
            }
          } else if (n3.tag === u2)
            o3 = n3.type === e29.type ? null : n3.child;
          else if (n3.tag === g2) {
            var h3 = n3.return;
            if (null === h3)
              throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
            h3.lanes = ni2(h3.lanes, r4);
            var v3 = h3.alternate;
            null !== v3 && (v3.lanes = ni2(v3.lanes, r4)), jc2(h3, r4, e29), o3 = n3.sibling;
          } else
            o3 = n3.child;
          if (null !== o3)
            o3.return = n3;
          else
            for (o3 = n3; null !== o3; ) {
              if (o3 === e29) {
                o3 = null;
                break;
              }
              var m3 = o3.sibling;
              if (null !== m3) {
                m3.return = o3.return, o3 = m3;
                break;
              }
              o3 = o3.return;
            }
          n3 = o3;
        }
      }(e28, t2, r3);
    }
    function Lc2(e28, t2) {
      Ec2 = e28, Tc2 = null, Rc2 = null;
      var r3 = e28.dependencies;
      null !== r3 && (null !== r3.firstContext && (ti2(r3.lanes, t2) && Gg2(), r3.firstContext = null));
    }
    function Ic2(e28) {
      Oc2 && a2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var t2 = e28._currentValue;
      if (Rc2 === e28)
        ;
      else {
        var r3 = { context: e28, memoizedValue: t2, next: null };
        if (null === Tc2) {
          if (null === Ec2)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          Tc2 = r3, Ec2.dependencies = { lanes: 0, firstContext: r3 };
        } else
          Tc2 = Tc2.next = r3;
      }
      return t2;
    }
    var zc2 = null;
    function Fc2(e28) {
      null === zc2 ? zc2 = [e28] : zc2.push(e28);
    }
    var Uc2, Vc2, Wc2 = 2, Hc2 = false;
    function $c2(e28) {
      var t2 = { baseState: e28.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
      e28.updateQueue = t2;
    }
    function qc2(e28, t2) {
      var r3 = t2.updateQueue, n3 = e28.updateQueue;
      if (r3 === n3) {
        var o3 = { baseState: n3.baseState, firstBaseUpdate: n3.firstBaseUpdate, lastBaseUpdate: n3.lastBaseUpdate, shared: n3.shared, effects: n3.effects };
        t2.updateQueue = o3;
      }
    }
    function Yc2(e28, t2) {
      return { eventTime: e28, lane: t2, tag: 0, payload: null, callback: null, next: null };
    }
    function Gc2(e28, t2, r3) {
      var n3 = e28.updateQueue;
      if (null !== n3) {
        var o3 = n3.shared;
        if (Qm2(e28)) {
          var i3 = o3.interleaved;
          null === i3 ? (t2.next = t2, Fc2(o3)) : (t2.next = i3.next, i3.next = t2), o3.interleaved = t2;
        } else {
          var l3 = o3.pending;
          null === l3 ? t2.next = t2 : (t2.next = l3.next, l3.next = t2), o3.pending = t2;
        }
        Vc2 !== o3 || Uc2 || (a2("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), Uc2 = true);
      }
    }
    function Xc2(e28, t2, r3) {
      var n3 = t2.updateQueue;
      if (null !== n3) {
        var o3 = n3.shared;
        if (Qo2(r3)) {
          var i3 = o3.lanes, a3 = ni2(i3 = ii2(i3, e28.pendingLanes), r3);
          o3.lanes = a3, si2(e28, a3);
        }
      }
    }
    function Qc2(e28, t2) {
      var r3 = e28.updateQueue, n3 = e28.alternate;
      if (null !== n3) {
        var o3 = n3.updateQueue;
        if (r3 === o3) {
          var i3 = null, a3 = null, l3 = r3.firstBaseUpdate;
          if (null !== l3) {
            var u3 = l3;
            do {
              var s3 = { eventTime: u3.eventTime, lane: u3.lane, tag: u3.tag, payload: u3.payload, callback: u3.callback, next: null };
              null === a3 ? i3 = a3 = s3 : (a3.next = s3, a3 = s3), u3 = u3.next;
            } while (null !== u3);
            null === a3 ? i3 = a3 = t2 : (a3.next = t2, a3 = t2);
          } else
            i3 = a3 = t2;
          return r3 = { baseState: o3.baseState, firstBaseUpdate: i3, lastBaseUpdate: a3, shared: o3.shared, effects: o3.effects }, void (e28.updateQueue = r3);
        }
      }
      var c3 = r3.lastBaseUpdate;
      null === c3 ? r3.firstBaseUpdate = t2 : c3.next = t2, r3.lastBaseUpdate = t2;
    }
    function Kc2(e28, t2, r3, n3, o3, i3) {
      switch (r3.tag) {
        case 1:
          var a3 = r3.payload;
          if ("function" == typeof a3) {
            Mc2();
            var l3 = a3.call(i3, n3, o3);
            if (8 & e28.mode) {
              Yn2(true);
              try {
                a3.call(i3, n3, o3);
              } finally {
                Yn2(false);
              }
            }
            return Bc2(), l3;
          }
          return a3;
        case 3:
          e28.flags = -65537 & e28.flags | Kr2;
        case 0:
          var u3, s3 = r3.payload;
          if ("function" == typeof s3) {
            if (Mc2(), u3 = s3.call(i3, n3, o3), 8 & e28.mode) {
              Yn2(true);
              try {
                s3.call(i3, n3, o3);
              } finally {
                Yn2(false);
              }
            }
            Bc2();
          } else
            u3 = s3;
          return null == u3 ? n3 : xe2({}, n3, u3);
        case Wc2:
          return Hc2 = true, n3;
      }
      return n3;
    }
    function Zc2(e28, t2, r3, n3) {
      var o3 = e28.updateQueue;
      Hc2 = false, Vc2 = o3.shared;
      var i3 = o3.firstBaseUpdate, a3 = o3.lastBaseUpdate, l3 = o3.shared.pending;
      if (null !== l3) {
        o3.shared.pending = null;
        var u3 = l3, s3 = u3.next;
        u3.next = null, null === a3 ? i3 = s3 : a3.next = s3, a3 = u3;
        var c3 = e28.alternate;
        if (null !== c3) {
          var d3 = c3.updateQueue, f3 = d3.lastBaseUpdate;
          f3 !== a3 && (null === f3 ? d3.firstBaseUpdate = s3 : f3.next = s3, d3.lastBaseUpdate = u3);
        }
      }
      if (null !== i3) {
        for (var p3 = o3.baseState, h3 = 0, g3 = null, v3 = null, m3 = null, y3 = i3; ; ) {
          var b3 = y3.lane, C3 = y3.eventTime;
          if (ri2(n3, b3)) {
            if (null !== m3) {
              var x3 = { eventTime: C3, lane: 0, tag: y3.tag, payload: y3.payload, callback: y3.callback, next: null };
              m3 = m3.next = x3;
            }
            if (p3 = Kc2(e28, 0, y3, p3, t2, r3), null !== y3.callback && 0 !== y3.lane) {
              e28.flags |= 64;
              var w3 = o3.effects;
              null === w3 ? o3.effects = [y3] : w3.push(y3);
            }
          } else {
            var k3 = { eventTime: C3, lane: b3, tag: y3.tag, payload: y3.payload, callback: y3.callback, next: null };
            null === m3 ? (v3 = m3 = k3, g3 = p3) : m3 = m3.next = k3, h3 = ni2(h3, b3);
          }
          if (null === (y3 = y3.next)) {
            if (null === (l3 = o3.shared.pending))
              break;
            var S3 = l3, E3 = S3.next;
            S3.next = null, y3 = E3, o3.lastBaseUpdate = S3, o3.shared.pending = null;
          }
        }
        null === m3 && (g3 = p3), o3.baseState = g3, o3.firstBaseUpdate = v3, o3.lastBaseUpdate = m3;
        var T3 = o3.shared.interleaved;
        if (null !== T3) {
          var R3 = T3;
          do {
            h3 = ni2(h3, R3.lane), R3 = R3.next;
          } while (R3 !== T3);
        } else
          null === i3 && (o3.shared.lanes = 0);
        fy2(h3), e28.lanes = h3, e28.memoizedState = p3;
      }
      Vc2 = null;
    }
    function Jc2(e28, t2) {
      if ("function" != typeof e28)
        throw new Error("Invalid argument passed as callback. Expected a function. Instead received: " + e28);
      e28.call(t2);
    }
    function ed2() {
      Hc2 = false;
    }
    function td2() {
      return Hc2;
    }
    function rd2(e28, t2, r3) {
      var n3 = t2.effects;
      if (t2.effects = null, null !== n3)
        for (var o3 = 0; o3 < n3.length; o3++) {
          var i3 = n3[o3], a3 = i3.callback;
          null !== a3 && (i3.callback = null, Jc2(a3, r3));
        }
    }
    Uc2 = false, Vc2 = null;
    var nd2, od2, id2, ad2, ld2, ud2, sd2, cd2, dd2, fd2, pd2 = {}, hd2 = new e27.Component().refs;
    nd2 = /* @__PURE__ */ new Set(), od2 = /* @__PURE__ */ new Set(), id2 = /* @__PURE__ */ new Set(), ad2 = /* @__PURE__ */ new Set(), cd2 = /* @__PURE__ */ new Set(), ld2 = /* @__PURE__ */ new Set(), dd2 = /* @__PURE__ */ new Set(), fd2 = /* @__PURE__ */ new Set();
    var gd2 = /* @__PURE__ */ new Set();
    function vd2(e28, t2, r3, n3) {
      var o3 = e28.memoizedState, i3 = r3(n3, o3);
      if (8 & e28.mode) {
        Yn2(true);
        try {
          i3 = r3(n3, o3);
        } finally {
          Yn2(false);
        }
      }
      ud2(t2, i3);
      var a3 = null == i3 ? o3 : xe2({}, o3, i3);
      (e28.memoizedState = a3, 0 === e28.lanes) && (e28.updateQueue.baseState = a3);
    }
    sd2 = function(e28, t2) {
      if (null !== e28 && "function" != typeof e28) {
        var r3 = t2 + "_" + e28;
        gd2.has(r3) || (gd2.add(r3), a2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", t2, e28));
      }
    }, ud2 = function(e28, t2) {
      if (void 0 === t2) {
        var r3 = De2(e28) || "Component";
        ld2.has(r3) || (ld2.add(r3), a2("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", r3));
      }
    }, Object.defineProperty(pd2, "_processChildContext", { enumerable: false, value: function() {
      throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
    } }), Object.freeze(pd2);
    var md2 = { isMounted: function(e28) {
      var t2 = bn2.current;
      if (null !== t2 && 1 === t2.tag) {
        var r3 = t2, n3 = r3.stateNode;
        n3._warnedAboutRefsInRender || a2("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Ie2(r3) || "A component"), n3._warnedAboutRefsInRender = true;
      }
      var o3 = Xr2(e28);
      return !!o3 && Cn2(o3) === o3;
    }, enqueueSetState: function(e28, t2, r3) {
      var n3 = Xr2(e28), o3 = $m2(), i3 = qm2(n3), a3 = Yc2(o3, i3);
      a3.payload = t2, null != r3 && (sd2(r3, "setState"), a3.callback = r3), Gc2(n3, a3);
      var l3 = Gm2(n3, i3, o3);
      null !== l3 && Xc2(l3, n3, i3), ao2(n3, i3);
    }, enqueueReplaceState: function(e28, t2, r3) {
      var n3 = Xr2(e28), o3 = $m2(), i3 = qm2(n3), a3 = Yc2(o3, i3);
      a3.tag = 1, a3.payload = t2, null != r3 && (sd2(r3, "replaceState"), a3.callback = r3), Gc2(n3, a3);
      var l3 = Gm2(n3, i3, o3);
      null !== l3 && Xc2(l3, n3, i3), ao2(n3, i3);
    }, enqueueForceUpdate: function(e28, t2) {
      var r3 = Xr2(e28), n3 = $m2(), o3 = qm2(r3), i3 = Yc2(n3, o3);
      i3.tag = Wc2, null != t2 && (sd2(t2, "forceUpdate"), i3.callback = t2), Gc2(r3, i3);
      var a3 = Gm2(r3, o3, n3);
      null !== a3 && Xc2(a3, r3, o3), function(e29, t3) {
        null !== Hn2 && "function" == typeof Hn2.markForceUpdateScheduled && Hn2.markForceUpdateScheduled(e29, t3);
      }(r3, o3);
    } };
    function yd2(e28, t2, r3, n3, o3, i3, l3) {
      var u3 = e28.stateNode;
      if ("function" == typeof u3.shouldComponentUpdate) {
        var s3 = u3.shouldComponentUpdate(n3, i3, l3);
        if (8 & e28.mode) {
          Yn2(true);
          try {
            s3 = u3.shouldComponentUpdate(n3, i3, l3);
          } finally {
            Yn2(false);
          }
        }
        return void 0 === s3 && a2("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", De2(t2) || "Component"), s3;
      }
      return !t2.prototype || !t2.prototype.isPureReactComponent || (!cl2(r3, n3) || !cl2(o3, i3));
    }
    function bd2(e28, t2) {
      var r3;
      t2.updater = md2, e28.stateNode = t2, r3 = e28, t2._reactInternals = r3, t2._reactInternalInstance = pd2;
    }
    function Cd2(e28, t2, r3) {
      var n3 = false, o3 = Vs2, i3 = Vs2, l3 = t2.contextType;
      if ("contextType" in t2 && (!(null === l3 || void 0 !== l3 && l3.$$typeof === ie2 && void 0 === l3._context) && !fd2.has(t2))) {
        fd2.add(t2);
        var u3 = "";
        u3 = void 0 === l3 ? " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : "object" != typeof l3 ? " However, it is set to a " + typeof l3 + "." : l3.$$typeof === oe2 ? " Did you accidentally pass the Context.Provider instead?" : void 0 !== l3._context ? " Did you accidentally pass the Context.Consumer instead?" : " However, it is set to an object with keys {" + Object.keys(l3).join(", ") + "}.", a2("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", De2(t2) || "Component", u3);
      }
      if ("object" == typeof l3 && null !== l3)
        i3 = Ic2(l3);
      else {
        o3 = qs2(0, t2, true);
        var s3 = t2.contextTypes;
        i3 = (n3 = null != s3) ? Gs2(e28, o3) : Vs2;
      }
      var c3 = new t2(r3, i3);
      if (8 & e28.mode) {
        Yn2(true);
        try {
          c3 = new t2(r3, i3);
        } finally {
          Yn2(false);
        }
      }
      var d3 = e28.memoizedState = null !== c3.state && void 0 !== c3.state ? c3.state : null;
      if (bd2(e28, c3), "function" == typeof t2.getDerivedStateFromProps && null === d3) {
        var f3 = De2(t2) || "Component";
        od2.has(f3) || (od2.add(f3), a2("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", f3, null === c3.state ? "null" : "undefined", f3));
      }
      if ("function" == typeof t2.getDerivedStateFromProps || "function" == typeof c3.getSnapshotBeforeUpdate) {
        var p3 = null, h3 = null, g3 = null;
        if ("function" == typeof c3.componentWillMount && true !== c3.componentWillMount.__suppressDeprecationWarning ? p3 = "componentWillMount" : "function" == typeof c3.UNSAFE_componentWillMount && (p3 = "UNSAFE_componentWillMount"), "function" == typeof c3.componentWillReceiveProps && true !== c3.componentWillReceiveProps.__suppressDeprecationWarning ? h3 = "componentWillReceiveProps" : "function" == typeof c3.UNSAFE_componentWillReceiveProps && (h3 = "UNSAFE_componentWillReceiveProps"), "function" == typeof c3.componentWillUpdate && true !== c3.componentWillUpdate.__suppressDeprecationWarning ? g3 = "componentWillUpdate" : "function" == typeof c3.UNSAFE_componentWillUpdate && (g3 = "UNSAFE_componentWillUpdate"), null !== p3 || null !== h3 || null !== g3) {
          var v3 = De2(t2) || "Component", m3 = "function" == typeof t2.getDerivedStateFromProps ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
          ad2.has(v3) || (ad2.add(v3), a2("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", v3, m3, null !== p3 ? "\n  " + p3 : "", null !== h3 ? "\n  " + h3 : "", null !== g3 ? "\n  " + g3 : ""));
        }
      }
      return n3 && Ys2(e28, o3, i3), c3;
    }
    function xd2(e28, t2, r3, n3) {
      var o3 = t2.state;
      if ("function" == typeof t2.componentWillReceiveProps && t2.componentWillReceiveProps(r3, n3), "function" == typeof t2.UNSAFE_componentWillReceiveProps && t2.UNSAFE_componentWillReceiveProps(r3, n3), t2.state !== o3) {
        var i3 = Ie2(e28) || "Component";
        nd2.has(i3) || (nd2.add(i3), a2("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", i3)), md2.enqueueReplaceState(t2, t2.state, null);
      }
    }
    function wd2(e28, t2, r3, n3) {
      !function(e29, t3, r4) {
        var n4 = e29.stateNode, o4 = De2(t3) || "Component";
        n4.render || (t3.prototype && "function" == typeof t3.prototype.render ? a2("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", o4) : a2("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", o4)), !n4.getInitialState || n4.getInitialState.isReactClassApproved || n4.state || a2("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", o4), n4.getDefaultProps && !n4.getDefaultProps.isReactClassApproved && a2("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", o4), n4.propTypes && a2("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", o4), n4.contextType && a2("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", o4), n4.contextTypes && a2("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", o4), t3.contextType && t3.contextTypes && !dd2.has(t3) && (dd2.add(t3), a2("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", o4)), "function" == typeof n4.componentShouldUpdate && a2("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", o4), t3.prototype && t3.prototype.isPureReactComponent && void 0 !== n4.shouldComponentUpdate && a2("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", De2(t3) || "A pure component"), "function" == typeof n4.componentDidUnmount && a2("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", o4), "function" == typeof n4.componentDidReceiveProps && a2("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", o4), "function" == typeof n4.componentWillRecieveProps && a2("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", o4), "function" == typeof n4.UNSAFE_componentWillRecieveProps && a2("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", o4);
        var i4 = n4.props !== r4;
        void 0 !== n4.props && i4 && a2("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", o4, o4), n4.defaultProps && a2("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", o4, o4), "function" != typeof n4.getSnapshotBeforeUpdate || "function" == typeof n4.componentDidUpdate || id2.has(t3) || (id2.add(t3), a2("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", De2(t3))), "function" == typeof n4.getDerivedStateFromProps && a2("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", o4), "function" == typeof n4.getDerivedStateFromError && a2("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", o4), "function" == typeof t3.getSnapshotBeforeUpdate && a2("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", o4);
        var l4 = n4.state;
        l4 && ("object" != typeof l4 || Ct2(l4)) && a2("%s.state: must be set to an object or null", o4), "function" == typeof n4.getChildContext && "object" != typeof t3.childContextTypes && a2("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", o4);
      }(e28, t2, r3);
      var o3 = e28.stateNode;
      o3.props = r3, o3.state = e28.memoizedState, o3.refs = hd2, $c2(e28);
      var i3 = t2.contextType;
      if ("object" == typeof i3 && null !== i3)
        o3.context = Ic2(i3);
      else {
        var l3 = qs2(0, t2, true);
        o3.context = Gs2(e28, l3);
      }
      if (o3.state === r3) {
        var u3 = De2(t2) || "Component";
        cd2.has(u3) || (cd2.add(u3), a2("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", u3));
      }
      8 & e28.mode && dc2.recordLegacyContextWarning(e28, o3), dc2.recordUnsafeLifecycleWarnings(e28, o3), o3.state = e28.memoizedState;
      var s3 = t2.getDerivedStateFromProps;
      if ("function" == typeof s3 && (vd2(e28, t2, s3, r3), o3.state = e28.memoizedState), "function" == typeof t2.getDerivedStateFromProps || "function" == typeof o3.getSnapshotBeforeUpdate || "function" != typeof o3.UNSAFE_componentWillMount && "function" != typeof o3.componentWillMount || (!function(e29, t3) {
        var r4 = t3.state;
        "function" == typeof t3.componentWillMount && t3.componentWillMount(), "function" == typeof t3.UNSAFE_componentWillMount && t3.UNSAFE_componentWillMount(), r4 !== t3.state && (a2("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", Ie2(e29) || "Component"), md2.enqueueReplaceState(t3, t3.state, null));
      }(e28, o3), Zc2(e28, r3, o3, n3), o3.state = e28.memoizedState), "function" == typeof o3.componentDidMount) {
        var c3 = 4;
        c3 |= dn2, 0 != (e28.mode & lo2) && (c3 |= fn2), e28.flags |= c3;
      }
    }
    var kd2 = [], Sd2 = 0, Ed2 = null, Td2 = 0, Rd2 = [], Od2 = 0, _d2 = null, Pd2 = 1, Md2 = "";
    function Bd2() {
      var e28 = Md2;
      return (Pd2 & ~function(e29) {
        return 1 << Dd2(e29) - 1;
      }(Pd2)).toString(32) + e28;
    }
    function Ad2(e28, t2) {
      Id2(), kd2[Sd2++] = Td2, kd2[Sd2++] = Ed2, Ed2 = e28, Td2 = t2;
    }
    function Nd2(e28, t2, r3) {
      Id2(), Rd2[Od2++] = Pd2, Rd2[Od2++] = Md2, Rd2[Od2++] = _d2, _d2 = e28;
      var n3 = Pd2, o3 = Md2, i3 = Dd2(n3) - 1, a3 = n3 & ~(1 << i3), l3 = r3 + 1, u3 = Dd2(t2) + i3;
      if (u3 > 30) {
        var s3 = i3 - i3 % 5, c3 = (a3 & (1 << s3) - 1).toString(32), d3 = a3 >> s3, f3 = i3 - s3, p3 = Dd2(t2) + f3;
        Pd2 = 1 << p3 | (l3 << f3 | d3), Md2 = c3 + o3;
      } else {
        Pd2 = 1 << u3 | (l3 << i3 | a3), Md2 = o3;
      }
    }
    function jd2(e28) {
      if (Id2(), null !== e28.return) {
        Ad2(e28, 1), Nd2(e28, 1, 0);
      }
    }
    function Dd2(e28) {
      return 32 - uo2(e28);
    }
    function Ld2(e28) {
      for (; e28 === Ed2; )
        Ed2 = kd2[--Sd2], kd2[Sd2] = null, Td2 = kd2[--Sd2], kd2[Sd2] = null;
      for (; e28 === _d2; )
        _d2 = Rd2[--Od2], Rd2[Od2] = null, Md2 = Rd2[--Od2], Rd2[Od2] = null, Pd2 = Rd2[--Od2], Rd2[Od2] = null;
    }
    function Id2() {
      hf2() || a2("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var zd2, Fd2, Ud2, Vd2, Wd2, Hd2 = null, $d2 = null, qd2 = false, Yd2 = false, Gd2 = null;
    function Xd2(e28) {
      var t2 = e28.stateNode.containerInfo;
      return $d2 = ds2(t2.firstChild), Hd2 = e28, qd2 = true, Gd2 = null, Yd2 = false, true;
    }
    function Qd2(e28, t2, r3) {
      return $d2 = ds2(t2.nextSibling), Hd2 = e28, qd2 = true, Gd2 = null, Yd2 = false, null !== r3 && function(e29, t3) {
        Id2(), Rd2[Od2++] = Pd2, Rd2[Od2++] = Md2, Rd2[Od2++] = _d2, Pd2 = t3.id, Md2 = t3.overflow, _d2 = e29;
      }(e28, r3), true;
    }
    function Kd2(e28, t2) {
      switch (e28.tag) {
        case 3:
          !function(e29, t3) {
            1 === t3.nodeType ? Pu2(e29, t3) : 8 === t3.nodeType || Mu2(e29, t3);
          }(e28.stateNode.containerInfo, t2);
          break;
        case 5:
          !function(e29, t3, r4, n3) {
            true !== t3.suppressHydrationWarning && (1 === n3.nodeType ? Pu2(r4, n3) : 8 === n3.nodeType || Mu2(r4, n3));
          }(e28.type, e28.memoizedProps, e28.stateNode, t2);
          break;
        case d2:
          var r3 = e28.memoizedState;
          null !== r3.dehydrated && function(e29, t3) {
            var r4 = e29.parentNode;
            null !== r4 && (1 === t3.nodeType ? Pu2(r4, t3) : 8 === t3.nodeType || Mu2(r4, t3));
          }(r3.dehydrated, t2);
      }
    }
    function Zd2(e28, t2) {
      Kd2(e28, t2);
      var r3, n3 = ((r3 = nb2(5, null, null, 0)).elementType = "DELETED", r3);
      n3.stateNode = t2, n3.return = e28;
      var o3 = e28.deletions;
      null === o3 ? (e28.deletions = [n3], e28.flags |= Qr2) : o3.push(n3);
    }
    function Jd2(e28, t2) {
      if (!Yd2)
        switch (e28.tag) {
          case 3:
            var r3 = e28.stateNode.containerInfo;
            switch (t2.tag) {
              case 5:
                var n3 = t2.type;
                t2.pendingProps, function(e29, t3, r4) {
                  Bu2(e29, t3);
                }(r3, n3);
                break;
              case 6:
                !function(e29, t3) {
                  Au2(e29, t3);
                }(r3, t2.pendingProps);
            }
            break;
          case 5:
            e28.type;
            var o3 = e28.memoizedProps, i3 = e28.stateNode;
            switch (t2.tag) {
              case 5:
                var a3 = t2.type;
                t2.pendingProps, function(e29, t3, r4, n4, o4) {
                  true !== t3.suppressHydrationWarning && Bu2(r4, n4);
                }(0, o3, i3, a3);
                break;
              case 6:
                !function(e29, t3, r4, n4) {
                  true !== t3.suppressHydrationWarning && Au2(r4, n4);
                }(0, o3, i3, t2.pendingProps);
                break;
              case d2:
                !function(e29, t3, r4) {
                  t3.suppressHydrationWarning;
                }(0, o3);
            }
            break;
          case d2:
            var l3 = e28.memoizedState.dehydrated;
            if (null !== l3)
              switch (t2.tag) {
                case 5:
                  var u3 = t2.type;
                  t2.pendingProps, function(e29, t3, r4) {
                    var n4 = e29.parentNode;
                    null !== n4 && Bu2(n4, t3);
                  }(l3, u3);
                  break;
                case 6:
                  !function(e29, t3) {
                    var r4 = e29.parentNode;
                    null !== r4 && Au2(r4, t3);
                  }(l3, t2.pendingProps);
              }
            break;
          default:
            return;
        }
    }
    function ef2(e28, t2) {
      t2.flags = -4097 & t2.flags | 2, Jd2(e28, t2);
    }
    function tf2(e28, t2) {
      switch (e28.tag) {
        case 5:
          var r3 = e28.type;
          e28.pendingProps;
          var n3 = function(e29, t3, r4) {
            return 1 !== e29.nodeType || t3.toLowerCase() !== e29.nodeName.toLowerCase() ? null : e29;
          }(t2, r3);
          return null !== n3 && (e28.stateNode = n3, Hd2 = e28, $d2 = ds2(n3.firstChild), true);
        case 6:
          var o3 = function(e29, t3) {
            return "" === t3 || 3 !== e29.nodeType ? null : e29;
          }(t2, e28.pendingProps);
          return null !== o3 && (e28.stateNode = o3, Hd2 = e28, $d2 = null, true);
        case d2:
          var i3 = function(e29) {
            return 8 !== e29.nodeType ? null : e29;
          }(t2);
          if (null !== i3) {
            var a3 = { dehydrated: i3, treeContext: (Id2(), null !== _d2 ? { id: Pd2, overflow: Md2 } : null), retryLane: Io2 };
            e28.memoizedState = a3;
            var l3 = function(e29) {
              var t3 = nb2(g2, null, null, 0);
              return t3.stateNode = e29, t3;
            }(i3);
            return l3.return = e28, e28.child = l3, Hd2 = e28, $d2 = null, true;
          }
          return false;
        default:
          return false;
      }
    }
    function rf2(e28) {
      return 0 != (1 & e28.mode) && 0 == (e28.flags & Kr2);
    }
    function nf2(e28) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function of2(e28) {
      if (qd2) {
        var t2 = $d2;
        if (!t2)
          return rf2(e28) && (Jd2(Hd2, e28), nf2()), ef2(Hd2, e28), qd2 = false, void (Hd2 = e28);
        var r3 = t2;
        if (!tf2(e28, t2)) {
          rf2(e28) && (Jd2(Hd2, e28), nf2()), t2 = fs(r3);
          var n3 = Hd2;
          if (!t2 || !tf2(e28, t2))
            return ef2(Hd2, e28), qd2 = false, void (Hd2 = e28);
          Zd2(n3, r3);
        }
      }
    }
    function af2(e28) {
      var t2 = e28.stateNode, r3 = e28.memoizedProps, n3 = function(e29, t3, r4, n4) {
        return ws2(r4, e29), r4.mode, function(e30, t4, r5) {
          return e30.nodeValue !== t4;
        }(e29, t3);
      }(t2, r3, e28);
      if (n3) {
        var o3 = Hd2;
        if (null !== o3) {
          var i3 = 0 != (1 & o3.mode);
          switch (o3.tag) {
            case 3:
              o3.stateNode.containerInfo;
              !function(e29, t3, r4, n4) {
                ku2(t3.nodeValue, r4, n4, true);
              }(0, t2, r3, i3);
              break;
            case 5:
              o3.type;
              var a3 = o3.memoizedProps;
              o3.stateNode;
              !function(e29, t3, r4, n4, o4, i4) {
                true !== t3.suppressHydrationWarning && ku2(n4.nodeValue, o4, i4, true);
              }(0, a3, 0, t2, r3, i3);
          }
        }
      }
      return n3;
    }
    function lf2(e28) {
      var t2 = e28.memoizedState, r3 = null !== t2 ? t2.dehydrated : null;
      if (!r3)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      !function(e29, t3) {
        ws2(t3, e29);
      }(r3, e28);
    }
    function uf2(e28) {
      var t2 = e28.memoizedState, r3 = null !== t2 ? t2.dehydrated : null;
      if (!r3)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return function(e29) {
        for (var t3 = e29.nextSibling, r4 = 0; t3; ) {
          if (8 === t3.nodeType) {
            var n3 = t3.data;
            if (n3 === Wu2) {
              if (0 === r4)
                return fs(t3);
              r4--;
            } else
              n3 !== Vu2 && n3 !== $u2 && n3 !== Hu2 || r4++;
          }
          t3 = t3.nextSibling;
        }
        return null;
      }(r3);
    }
    function sf2(e28) {
      for (var t2 = e28.return; null !== t2 && 5 !== t2.tag && 3 !== t2.tag && t2.tag !== d2; )
        t2 = t2.return;
      Hd2 = t2;
    }
    function cf(e28) {
      if (e28 !== Hd2)
        return false;
      if (!qd2)
        return sf2(e28), qd2 = true, false;
      if (3 !== e28.tag && (5 !== e28.tag || "head" !== (r3 = e28.type) && "body" !== r3 && !Xu2(e28.type, e28.memoizedProps))) {
        var t2 = $d2;
        if (t2)
          if (rf2(e28))
            df2(e28), nf2();
          else
            for (; t2; )
              Zd2(e28, t2), t2 = fs(t2);
      }
      var r3;
      return sf2(e28), $d2 = e28.tag === d2 ? uf2(e28) : Hd2 ? fs(e28.stateNode) : null, true;
    }
    function df2(e28) {
      for (var t2 = $d2; t2; )
        Kd2(e28, t2), t2 = fs(t2);
    }
    function ff2() {
      Hd2 = null, $d2 = null, qd2 = false, Yd2 = false;
    }
    function pf2() {
      null !== Gd2 && (ey2(Gd2), Gd2 = null);
    }
    function hf2() {
      return qd2;
    }
    function gf2(e28) {
      null === Gd2 ? Gd2 = [e28] : Gd2.push(e28);
    }
    var vf2;
    function mf2(e28, t2, r3) {
      var n3 = r3.ref;
      if (null !== n3 && "function" != typeof n3 && "object" != typeof n3) {
        if (8 & e28.mode && (!r3._owner || !r3._self || r3._owner.stateNode === r3._self)) {
          var o3 = Ie2(e28) || "Component";
          Ud2[o3] || (a2('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', n3), Ud2[o3] = true);
        }
        if (r3._owner) {
          var i3, l3 = r3._owner;
          if (l3) {
            var u3 = l3;
            if (1 !== u3.tag)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            i3 = u3.stateNode;
          }
          if (!i3)
            throw new Error("Missing owner for string ref " + n3 + ". This error is likely caused by a bug in React. Please file an issue.");
          var s3 = i3;
          !function(e29, t3) {
            if (O2(e29))
              a2("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", t3, R2(e29)), _2(e29);
          }(n3, "ref");
          var c3 = "" + n3;
          if (null !== t2 && null !== t2.ref && "function" == typeof t2.ref && t2.ref._stringRef === c3)
            return t2.ref;
          var d3 = function(e29) {
            var t3 = s3.refs;
            t3 === hd2 && (t3 = s3.refs = {}), null === e29 ? delete t3[c3] : t3[c3] = e29;
          };
          return d3._stringRef = c3, d3;
        }
        if ("string" != typeof n3)
          throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
        if (!r3._owner)
          throw new Error("Element ref was specified as a string (" + n3 + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
      }
      return n3;
    }
    function yf2(e28, t2) {
      var r3 = Object.prototype.toString.call(t2);
      throw new Error("Objects are not valid as a React child (found: " + ("[object Object]" === r3 ? "object with keys {" + Object.keys(t2).join(", ") + "}" : r3) + "). If you meant to render a collection of children, use an array instead.");
    }
    function bf2(e28) {
      var t2 = Ie2(e28) || "Component";
      Wd2[t2] || (Wd2[t2] = true, a2("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it."));
    }
    function Cf2(e28) {
      var t2 = e28._payload;
      return (0, e28._init)(t2);
    }
    function xf2(e28) {
      function t2(t3, r4) {
        if (e28) {
          var n4 = t3.deletions;
          null === n4 ? (t3.deletions = [r4], t3.flags |= Qr2) : n4.push(r4);
        }
      }
      function r3(r4, n4) {
        if (!e28)
          return null;
        for (var o4 = n4; null !== o4; )
          t2(r4, o4), o4 = o4.sibling;
        return null;
      }
      function n3(e29, t3) {
        for (var r4 = /* @__PURE__ */ new Map(), n4 = t3; null !== n4; )
          null !== n4.key ? r4.set(n4.key, n4) : r4.set(n4.index, n4), n4 = n4.sibling;
        return r4;
      }
      function o3(e29, t3) {
        var r4 = ib2(e29, t3);
        return r4.index = 0, r4.sibling = null, r4;
      }
      function i3(t3, r4, n4) {
        if (t3.index = n4, !e28)
          return t3.flags |= sn2, r4;
        var o4 = t3.alternate;
        if (null !== o4) {
          var i4 = o4.index;
          return i4 < r4 ? (t3.flags |= 2, r4) : i4;
        }
        return t3.flags |= 2, r4;
      }
      function l3(t3) {
        return e28 && null === t3.alternate && (t3.flags |= 2), t3;
      }
      function u3(e29, t3, r4, n4) {
        if (null === t3 || 6 !== t3.tag) {
          var i4 = db2(r4, e29.mode, n4);
          return i4.return = e29, i4;
        }
        var a3 = o3(t3, r4);
        return a3.return = e29, a3;
      }
      function s3(e29, t3, r4, n4) {
        var i4 = r4.type;
        if (i4 === te2)
          return d3(e29, t3, r4.props.children, n4, r4.key);
        if (null !== t3 && (t3.elementType === i4 || Yy2(t3, r4) || "object" == typeof i4 && null !== i4 && i4.$$typeof === ce2 && Cf2(i4) === t3.type)) {
          var a3 = o3(t3, r4.props);
          return a3.ref = mf2(e29, t3, r4), a3.return = e29, a3._debugSource = r4._source, a3._debugOwner = r4._owner, a3;
        }
        var l4 = ub2(r4, e29.mode, n4);
        return l4.ref = mf2(e29, t3, r4), l4.return = e29, l4;
      }
      function c3(e29, t3, r4, n4) {
        if (null === t3 || 4 !== t3.tag || t3.stateNode.containerInfo !== r4.containerInfo || t3.stateNode.implementation !== r4.implementation) {
          var i4 = fb2(r4, e29.mode, n4);
          return i4.return = e29, i4;
        }
        var a3 = o3(t3, r4.children || []);
        return a3.return = e29, a3;
      }
      function d3(e29, t3, r4, n4, i4) {
        if (null === t3 || 7 !== t3.tag) {
          var a3 = sb2(r4, e29.mode, n4, i4);
          return a3.return = e29, a3;
        }
        var l4 = o3(t3, r4);
        return l4.return = e29, l4;
      }
      function f3(e29, t3, r4) {
        if ("string" == typeof t3 && "" !== t3 || "number" == typeof t3) {
          var n4 = db2("" + t3, e29.mode, r4);
          return n4.return = e29, n4;
        }
        if ("object" == typeof t3 && null !== t3) {
          switch (t3.$$typeof) {
            case J2:
              var o4 = ub2(t3, e29.mode, r4);
              return o4.ref = mf2(e29, null, t3), o4.return = e29, o4;
            case ee2:
              var i4 = fb2(t3, e29.mode, r4);
              return i4.return = e29, i4;
            case ce2:
              var a3 = t3._payload;
              return f3(e29, (0, t3._init)(a3), r4);
          }
          if (Ct2(t3) || pe2(t3)) {
            var l4 = sb2(t3, e29.mode, r4, null);
            return l4.return = e29, l4;
          }
          yf2(0, t3);
        }
        return "function" == typeof t3 && bf2(e29), null;
      }
      function p3(e29, t3, r4, n4) {
        var o4 = null !== t3 ? t3.key : null;
        if ("string" == typeof r4 && "" !== r4 || "number" == typeof r4)
          return null !== o4 ? null : u3(e29, t3, "" + r4, n4);
        if ("object" == typeof r4 && null !== r4) {
          switch (r4.$$typeof) {
            case J2:
              return r4.key === o4 ? s3(e29, t3, r4, n4) : null;
            case ee2:
              return r4.key === o4 ? c3(e29, t3, r4, n4) : null;
            case ce2:
              var i4 = r4._payload;
              return p3(e29, t3, (0, r4._init)(i4), n4);
          }
          if (Ct2(r4) || pe2(r4))
            return null !== o4 ? null : d3(e29, t3, r4, n4, null);
          yf2(0, r4);
        }
        return "function" == typeof r4 && bf2(e29), null;
      }
      function h3(e29, t3, r4, n4, o4) {
        if ("string" == typeof n4 && "" !== n4 || "number" == typeof n4)
          return u3(t3, e29.get(r4) || null, "" + n4, o4);
        if ("object" == typeof n4 && null !== n4) {
          switch (n4.$$typeof) {
            case J2:
              return s3(t3, e29.get(null === n4.key ? r4 : n4.key) || null, n4, o4);
            case ee2:
              return c3(t3, e29.get(null === n4.key ? r4 : n4.key) || null, n4, o4);
            case ce2:
              var i4 = n4._payload;
              return h3(e29, t3, r4, (0, n4._init)(i4), o4);
          }
          if (Ct2(n4) || pe2(n4))
            return d3(t3, e29.get(r4) || null, n4, o4, null);
          yf2(0, n4);
        }
        return "function" == typeof n4 && bf2(t3), null;
      }
      function g3(e29, t3, r4) {
        if ("object" != typeof e29 || null === e29)
          return t3;
        switch (e29.$$typeof) {
          case J2:
          case ee2:
            vf2(e29, r4);
            var n4 = e29.key;
            if ("string" != typeof n4)
              break;
            if (null === t3) {
              (t3 = /* @__PURE__ */ new Set()).add(n4);
              break;
            }
            if (!t3.has(n4)) {
              t3.add(n4);
              break;
            }
            a2("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", n4);
            break;
          case ce2:
            var o4 = e29._payload;
            g3((0, e29._init)(o4), t3, r4);
        }
        return t3;
      }
      return function u4(s4, c4, d4, v3) {
        if ("object" == typeof d4 && null !== d4 && d4.type === te2 && null === d4.key && (d4 = d4.props.children), "object" == typeof d4 && null !== d4) {
          switch (d4.$$typeof) {
            case J2:
              return l3(function(e29, n4, i4, a3) {
                for (var l4 = i4.key, u5 = n4; null !== u5; ) {
                  if (u5.key === l4) {
                    var s5 = i4.type;
                    if (s5 === te2) {
                      if (7 === u5.tag) {
                        r3(e29, u5.sibling);
                        var c5 = o3(u5, i4.props.children);
                        return c5.return = e29, c5._debugSource = i4._source, c5._debugOwner = i4._owner, c5;
                      }
                    } else if (u5.elementType === s5 || Yy2(u5, i4) || "object" == typeof s5 && null !== s5 && s5.$$typeof === ce2 && Cf2(s5) === u5.type) {
                      r3(e29, u5.sibling);
                      var d5 = o3(u5, i4.props);
                      return d5.ref = mf2(e29, u5, i4), d5.return = e29, d5._debugSource = i4._source, d5._debugOwner = i4._owner, d5;
                    }
                    r3(e29, u5);
                    break;
                  }
                  t2(e29, u5), u5 = u5.sibling;
                }
                if (i4.type === te2) {
                  var f4 = sb2(i4.props.children, e29.mode, a3, i4.key);
                  return f4.return = e29, f4;
                }
                var p4 = ub2(i4, e29.mode, a3);
                return p4.ref = mf2(e29, n4, i4), p4.return = e29, p4;
              }(s4, c4, d4, v3));
            case ee2:
              return l3(function(e29, n4, i4, a3) {
                for (var l4 = i4.key, u5 = n4; null !== u5; ) {
                  if (u5.key === l4) {
                    if (4 === u5.tag && u5.stateNode.containerInfo === i4.containerInfo && u5.stateNode.implementation === i4.implementation) {
                      r3(e29, u5.sibling);
                      var s5 = o3(u5, i4.children || []);
                      return s5.return = e29, s5;
                    }
                    r3(e29, u5);
                    break;
                  }
                  t2(e29, u5), u5 = u5.sibling;
                }
                var c5 = fb2(i4, e29.mode, a3);
                return c5.return = e29, c5;
              }(s4, c4, d4, v3));
            case ce2:
              var m3 = d4._payload;
              return u4(s4, c4, (0, d4._init)(m3), v3);
          }
          if (Ct2(d4))
            return function(o4, a3, l4, u5) {
              for (var s5 = null, c5 = 0; c5 < l4.length; c5++)
                s5 = g3(l4[c5], s5, o4);
              for (var d5 = null, v4 = null, m4 = a3, y3 = 0, b3 = 0, C3 = null; null !== m4 && b3 < l4.length; b3++) {
                m4.index > b3 ? (C3 = m4, m4 = null) : C3 = m4.sibling;
                var x3 = p3(o4, m4, l4[b3], u5);
                if (null === x3) {
                  null === m4 && (m4 = C3);
                  break;
                }
                e28 && m4 && null === x3.alternate && t2(o4, m4), y3 = i3(x3, y3, b3), null === v4 ? d5 = x3 : v4.sibling = x3, v4 = x3, m4 = C3;
              }
              if (b3 === l4.length)
                return r3(o4, m4), hf2() && Ad2(o4, b3), d5;
              if (null === m4) {
                for (; b3 < l4.length; b3++) {
                  var w3 = f3(o4, l4[b3], u5);
                  null !== w3 && (y3 = i3(w3, y3, b3), null === v4 ? d5 = w3 : v4.sibling = w3, v4 = w3);
                }
                return hf2() && Ad2(o4, b3), d5;
              }
              for (var k3 = n3(0, m4); b3 < l4.length; b3++) {
                var S3 = h3(k3, o4, b3, l4[b3], u5);
                null !== S3 && (e28 && null !== S3.alternate && k3.delete(null === S3.key ? b3 : S3.key), y3 = i3(S3, y3, b3), null === v4 ? d5 = S3 : v4.sibling = S3, v4 = S3);
              }
              return e28 && k3.forEach(function(e29) {
                return t2(o4, e29);
              }), hf2() && Ad2(o4, b3), d5;
            }(s4, c4, d4, v3);
          if (pe2(d4))
            return function(o4, l4, u5, s5) {
              var c5 = pe2(u5);
              if ("function" != typeof c5)
                throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
              "function" == typeof Symbol && "Generator" === u5[Symbol.toStringTag] && (Fd2 || a2("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), Fd2 = true), u5.entries === c5 && (zd2 || a2("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), zd2 = true);
              var d5 = c5.call(u5);
              if (d5)
                for (var v4 = null, m4 = d5.next(); !m4.done; m4 = d5.next())
                  v4 = g3(m4.value, v4, o4);
              var y3 = c5.call(u5);
              if (null == y3)
                throw new Error("An iterable object provided no iterator.");
              for (var b3 = null, C3 = null, x3 = l4, w3 = 0, k3 = 0, S3 = null, E3 = y3.next(); null !== x3 && !E3.done; k3++, E3 = y3.next()) {
                x3.index > k3 ? (S3 = x3, x3 = null) : S3 = x3.sibling;
                var T3 = p3(o4, x3, E3.value, s5);
                if (null === T3) {
                  null === x3 && (x3 = S3);
                  break;
                }
                e28 && x3 && null === T3.alternate && t2(o4, x3), w3 = i3(T3, w3, k3), null === C3 ? b3 = T3 : C3.sibling = T3, C3 = T3, x3 = S3;
              }
              if (E3.done)
                return r3(o4, x3), hf2() && Ad2(o4, k3), b3;
              if (null === x3) {
                for (; !E3.done; k3++, E3 = y3.next()) {
                  var R3 = f3(o4, E3.value, s5);
                  null !== R3 && (w3 = i3(R3, w3, k3), null === C3 ? b3 = R3 : C3.sibling = R3, C3 = R3);
                }
                return hf2() && Ad2(o4, k3), b3;
              }
              for (var O3 = n3(0, x3); !E3.done; k3++, E3 = y3.next()) {
                var _3 = h3(O3, o4, k3, E3.value, s5);
                null !== _3 && (e28 && null !== _3.alternate && O3.delete(null === _3.key ? k3 : _3.key), w3 = i3(_3, w3, k3), null === C3 ? b3 = _3 : C3.sibling = _3, C3 = _3);
              }
              return e28 && O3.forEach(function(e29) {
                return t2(o4, e29);
              }), hf2() && Ad2(o4, k3), b3;
            }(s4, c4, d4, v3);
          yf2(0, d4);
        }
        return "string" == typeof d4 && "" !== d4 || "number" == typeof d4 ? l3(function(e29, t3, n4, i4) {
          if (null !== t3 && 6 === t3.tag) {
            r3(e29, t3.sibling);
            var a3 = o3(t3, n4);
            return a3.return = e29, a3;
          }
          r3(e29, t3);
          var l4 = db2(n4, e29.mode, i4);
          return l4.return = e29, l4;
        }(s4, c4, "" + d4, v3)) : ("function" == typeof d4 && bf2(s4), r3(s4, c4));
      };
    }
    zd2 = false, Fd2 = false, Ud2 = {}, Vd2 = {}, Wd2 = {}, vf2 = function(e28, t2) {
      if (null !== e28 && "object" == typeof e28 && e28._store && !e28._store.validated && null == e28.key) {
        if ("object" != typeof e28._store)
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        e28._store.validated = true;
        var r3 = Ie2(t2) || "Component";
        Vd2[r3] || (Vd2[r3] = true, a2('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    var wf2 = xf2(true), kf2 = xf2(false);
    function Sf2(e28, t2) {
      for (var r3 = e28.child; null !== r3; )
        ab2(r3, t2), r3 = r3.sibling;
    }
    var Ef2 = {}, Tf2 = zs2(Ef2), Rf2 = zs2(Ef2), Of2 = zs2(Ef2);
    function _f2(e28) {
      if (e28 === Ef2)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return e28;
    }
    function Pf2() {
      return _f2(Of2.current);
    }
    function Mf2(e28, t2) {
      Us2(Of2, t2, e28), Us2(Rf2, e28, e28), Us2(Tf2, Ef2, e28);
      var r3 = function(e29) {
        var t3, r4, n3 = e29.nodeType;
        switch (n3) {
          case 9:
          case 11:
            t3 = 9 === n3 ? "#document" : "#fragment";
            var o3 = e29.documentElement;
            r4 = o3 ? o3.namespaceURI : Nt2(null, "");
            break;
          default:
            var i3 = 8 === n3 ? e29.parentNode : e29;
            r4 = Nt2(i3.namespaceURI || null, t3 = i3.tagName);
        }
        var a3 = t3.toLowerCase();
        return { namespace: r4, ancestorInfo: ju2(null, a3) };
      }(t2);
      Fs2(Tf2, e28), Us2(Tf2, r3, e28);
    }
    function Bf2(e28) {
      Fs2(Tf2, e28), Fs2(Rf2, e28), Fs2(Of2, e28);
    }
    function Af2() {
      return _f2(Tf2.current);
    }
    function Nf2(e28) {
      _f2(Of2.current);
      var t2, r3, n3, o3 = _f2(Tf2.current), i3 = (t2 = o3, r3 = e28.type, { namespace: Nt2((n3 = t2).namespace, r3), ancestorInfo: ju2(n3.ancestorInfo, r3) });
      o3 !== i3 && (Us2(Rf2, e28, e28), Us2(Tf2, i3, e28));
    }
    function jf2(e28) {
      Rf2.current === e28 && (Fs2(Tf2, e28), Fs2(Rf2, e28));
    }
    var Df2 = zs2(0);
    function Lf2(e28, t2) {
      return 0 != (e28 & t2);
    }
    function If2(e28) {
      return 1 & e28;
    }
    function zf2(e28, t2) {
      return 1 & e28 | t2;
    }
    function Ff2(e28, t2) {
      Us2(Df2, t2, e28);
    }
    function Uf2(e28) {
      Fs2(Df2, e28);
    }
    function Vf2(e28, t2) {
      var r3 = e28.memoizedState;
      return null !== r3 ? null !== r3.dehydrated : (e28.memoizedProps, true);
    }
    function Wf2(e28) {
      for (var t2 = e28; null !== t2; ) {
        if (t2.tag === d2) {
          var r3 = t2.memoizedState;
          if (null !== r3) {
            var n3 = r3.dehydrated;
            if (null === n3 || ss2(n3) || cs2(n3))
              return t2;
          }
        } else if (t2.tag === v2 && void 0 !== t2.memoizedProps.revealOrder) {
          if (0 != (t2.flags & Kr2))
            return t2;
        } else if (null !== t2.child) {
          t2.child.return = t2, t2 = t2.child;
          continue;
        }
        if (t2 === e28)
          return null;
        for (; null === t2.sibling; ) {
          if (null === t2.return || t2.return === e28)
            return null;
          t2 = t2.return;
        }
        t2.sibling.return = t2.return, t2 = t2.sibling;
      }
      return null;
    }
    var Hf2 = [];
    function $f2() {
      for (var e28 = 0; e28 < Hf2.length; e28++) {
        Hf2[e28]._workInProgressVersionPrimary = null;
      }
      Hf2.length = 0;
    }
    function qf2(e28, t2) {
      var r3 = (0, t2._getVersion)(t2._source);
      null == e28.mutableSourceEagerHydrationData ? e28.mutableSourceEagerHydrationData = [t2, r3] : e28.mutableSourceEagerHydrationData.push(t2, r3);
    }
    var Yf2, Gf2, Xf2 = n2.ReactCurrentDispatcher, Qf2 = n2.ReactCurrentBatchConfig;
    Yf2 = /* @__PURE__ */ new Set();
    var Kf2 = 0, Zf2 = null, Jf2 = null, ep2 = null, tp2 = false, rp2 = false, np2 = 0, op2 = 0, ip2 = null, ap2 = null, lp2 = -1, up2 = false;
    function sp2() {
      var e28 = ip2;
      null === ap2 ? ap2 = [e28] : ap2.push(e28);
    }
    function cp2() {
      var e28 = ip2;
      null !== ap2 && (lp2++, ap2[lp2] !== e28 && function(e29) {
        var t2 = Ie2(Zf2);
        if (!Yf2.has(t2) && (Yf2.add(t2), null !== ap2)) {
          for (var r3 = "", n3 = 30, o3 = 0; o3 <= lp2; o3++) {
            for (var i3 = ap2[o3], l3 = o3 === lp2 ? e29 : i3, u3 = o3 + 1 + ". " + i3; u3.length < n3; )
              u3 += " ";
            r3 += u3 += l3 + "\n";
          }
          a2("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", t2, r3);
        }
      }(e28));
    }
    function dp2(e28) {
      null == e28 || Ct2(e28) || a2("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", ip2, typeof e28);
    }
    function fp2() {
      throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function pp2(e28, t2) {
      if (up2)
        return false;
      if (null === t2)
        return a2("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", ip2), false;
      e28.length !== t2.length && a2("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", ip2, "[" + t2.join(", ") + "]", "[" + e28.join(", ") + "]");
      for (var r3 = 0; r3 < t2.length && r3 < e28.length; r3++)
        if (!sl2(e28[r3], t2[r3]))
          return false;
      return true;
    }
    function hp2(e28, t2, r3, n3, o3, i3) {
      Kf2 = i3, Zf2 = t2, ap2 = null !== e28 ? e28._debugHookTypes : null, lp2 = -1, up2 = null !== e28 && e28.type !== t2.type, t2.memoizedState = null, t2.updateQueue = null, t2.lanes = 0, null !== e28 && null !== e28.memoizedState ? Xf2.current = Ch2 : Xf2.current = null !== ap2 ? bh2 : yh2;
      var l3 = r3(n3, o3);
      if (rp2) {
        var u3 = 0;
        do {
          if (rp2 = false, np2 = 0, u3 >= 25)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          u3 += 1, up2 = false, Jf2 = null, ep2 = null, t2.updateQueue = null, lp2 = -1, Xf2.current = xh2, l3 = r3(n3, o3);
        } while (rp2);
      }
      Xf2.current = mh2, t2._debugHookTypes = ap2;
      var s3 = null !== Jf2 && null !== Jf2.next;
      if (Kf2 = 0, Zf2 = null, Jf2 = null, ep2 = null, ip2 = null, ap2 = null, lp2 = -1, null !== e28 && (e28.flags & yn2) != (t2.flags & yn2) && 0 != (1 & e28.mode) && a2("Internal React error: Expected static flag was missing. Please notify the React team."), tp2 = false, s3)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return l3;
    }
    function gp2() {
      var e28 = 0 !== np2;
      return np2 = 0, e28;
    }
    function vp2(e28, t2, r3) {
      t2.updateQueue = e28.updateQueue, 0 != (t2.mode & lo2) ? t2.flags &= -50333701 : t2.flags &= -2053, e28.lanes = oi2(e28.lanes, r3);
    }
    function mp2() {
      if (Xf2.current = mh2, tp2) {
        for (var e28 = Zf2.memoizedState; null !== e28; ) {
          var t2 = e28.queue;
          null !== t2 && (t2.pending = null), e28 = e28.next;
        }
        tp2 = false;
      }
      Kf2 = 0, Zf2 = null, Jf2 = null, ep2 = null, ap2 = null, lp2 = -1, ip2 = null, lh2 = false, rp2 = false, np2 = 0;
    }
    function yp2() {
      var e28 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
      return null === ep2 ? Zf2.memoizedState = ep2 = e28 : ep2 = ep2.next = e28, ep2;
    }
    function bp2() {
      var e28, t2;
      if (null === Jf2) {
        var r3 = Zf2.alternate;
        e28 = null !== r3 ? r3.memoizedState : null;
      } else
        e28 = Jf2.next;
      if (null !== (t2 = null === ep2 ? Zf2.memoizedState : ep2.next))
        t2 = (ep2 = t2).next, Jf2 = e28;
      else {
        if (null === e28)
          throw new Error("Rendered more hooks than during the previous render.");
        var n3 = { memoizedState: (Jf2 = e28).memoizedState, baseState: Jf2.baseState, baseQueue: Jf2.baseQueue, queue: Jf2.queue, next: null };
        null === ep2 ? Zf2.memoizedState = ep2 = n3 : ep2 = ep2.next = n3;
      }
      return ep2;
    }
    function Cp2(e28, t2) {
      return "function" == typeof t2 ? t2(e28) : t2;
    }
    function xp2(e28, t2, r3) {
      var n3, o3 = yp2();
      n3 = void 0 !== r3 ? r3(t2) : t2, o3.memoizedState = o3.baseState = n3;
      var i3 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: e28, lastRenderedState: n3 };
      o3.queue = i3;
      var a3 = i3.dispatch = ch2.bind(null, Zf2, i3);
      return [o3.memoizedState, a3];
    }
    function wp2(e28, t2, r3) {
      var n3 = bp2(), o3 = n3.queue;
      if (null === o3)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      o3.lastRenderedReducer = e28;
      var i3 = Jf2, l3 = i3.baseQueue, u3 = o3.pending;
      if (null !== u3) {
        if (null !== l3) {
          var s3 = l3.next, c3 = u3.next;
          l3.next = c3, u3.next = s3;
        }
        i3.baseQueue !== l3 && a2("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), i3.baseQueue = l3 = u3, o3.pending = null;
      }
      if (null !== l3) {
        var d3 = l3.next, f3 = i3.baseState, p3 = null, h3 = null, g3 = null, v3 = d3;
        do {
          var m3 = v3.lane;
          if (ri2(Kf2, m3)) {
            if (null !== g3) {
              var y3 = { lane: 0, action: v3.action, hasEagerState: v3.hasEagerState, eagerState: v3.eagerState, next: null };
              g3 = g3.next = y3;
            }
            if (v3.hasEagerState)
              f3 = v3.eagerState;
            else
              f3 = e28(f3, v3.action);
          } else {
            var b3 = { lane: m3, action: v3.action, hasEagerState: v3.hasEagerState, eagerState: v3.eagerState, next: null };
            null === g3 ? (h3 = g3 = b3, p3 = f3) : g3 = g3.next = b3, Zf2.lanes = ni2(Zf2.lanes, m3), fy2(m3);
          }
          v3 = v3.next;
        } while (null !== v3 && v3 !== d3);
        null === g3 ? p3 = f3 : g3.next = h3, sl2(f3, n3.memoizedState) || Gg2(), n3.memoizedState = f3, n3.baseState = p3, n3.baseQueue = g3, o3.lastRenderedState = f3;
      }
      var C3 = o3.interleaved;
      if (null !== C3) {
        var x3 = C3;
        do {
          var w3 = x3.lane;
          Zf2.lanes = ni2(Zf2.lanes, w3), fy2(w3), x3 = x3.next;
        } while (x3 !== C3);
      } else
        null === l3 && (o3.lanes = 0);
      var k3 = o3.dispatch;
      return [n3.memoizedState, k3];
    }
    function kp2(e28, t2, r3) {
      var n3 = bp2(), o3 = n3.queue;
      if (null === o3)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      o3.lastRenderedReducer = e28;
      var i3 = o3.dispatch, a3 = o3.pending, l3 = n3.memoizedState;
      if (null !== a3) {
        o3.pending = null;
        var u3 = a3.next, s3 = u3;
        do {
          l3 = e28(l3, s3.action), s3 = s3.next;
        } while (s3 !== u3);
        sl2(l3, n3.memoizedState) || Gg2(), n3.memoizedState = l3, null === n3.baseQueue && (n3.baseState = l3), o3.lastRenderedState = l3;
      }
      return [l3, i3];
    }
    function Sp2(e28, t2, r3) {
      var n3, o3 = Zf2, i3 = yp2();
      if (hf2()) {
        if (void 0 === r3)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        n3 = r3(), Gf2 || n3 !== r3() && (a2("The result of getServerSnapshot should be cached to avoid an infinite loop"), Gf2 = true);
      } else {
        if (n3 = t2(), !Gf2) {
          var l3 = t2();
          sl2(n3, l3) || (a2("The result of getSnapshot should be cached to avoid an infinite loop"), Gf2 = true);
        }
        var u3 = Hm2();
        if (null === u3)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        Xo2(0, Kf2) || Tp2(o3, t2, n3);
      }
      i3.memoizedState = n3;
      var s3 = { value: n3, getSnapshot: t2 };
      return i3.queue = s3, zp2(Op2.bind(null, o3, s3, e28), [e28]), o3.flags |= tn2, Np2(9, Rp2.bind(null, o3, s3, n3, t2), void 0, null), n3;
    }
    function Ep2(e28, t2, r3) {
      var n3 = Zf2, o3 = bp2(), i3 = t2();
      if (!Gf2) {
        var l3 = t2();
        sl2(i3, l3) || (a2("The result of getSnapshot should be cached to avoid an infinite loop"), Gf2 = true);
      }
      var u3 = o3.memoizedState, s3 = !sl2(u3, i3);
      s3 && (o3.memoizedState = i3, Gg2());
      var c3 = o3.queue;
      if (Fp2(Op2.bind(null, n3, c3, e28), [e28]), c3.getSnapshot !== t2 || s3 || null !== ep2 && 1 & ep2.memoizedState.tag) {
        n3.flags |= tn2, Np2(9, Rp2.bind(null, n3, c3, i3, t2), void 0, null);
        var d3 = Hm2();
        if (null === d3)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        Xo2(0, Kf2) || Tp2(n3, t2, i3);
      }
      return i3;
    }
    function Tp2(e28, t2, r3) {
      e28.flags |= on2;
      var n3 = { getSnapshot: t2, value: r3 }, o3 = Zf2.updateQueue;
      if (null === o3)
        o3 = { lastEffect: null, stores: null }, Zf2.updateQueue = o3, o3.stores = [n3];
      else {
        var i3 = o3.stores;
        null === i3 ? o3.stores = [n3] : i3.push(n3);
      }
    }
    function Rp2(e28, t2, r3, n3) {
      t2.value = r3, t2.getSnapshot = n3, _p2(t2) && Pp2(e28);
    }
    function Op2(e28, t2, r3) {
      return r3(function() {
        _p2(t2) && Pp2(e28);
      });
    }
    function _p2(e28) {
      var t2 = e28.getSnapshot, r3 = e28.value;
      try {
        var n3 = t2();
        return !sl2(r3, n3);
      } catch (e29) {
        return true;
      }
    }
    function Pp2(e28) {
      Gm2(e28, 1, Fo2);
    }
    function Mp2(e28) {
      var t2 = yp2();
      "function" == typeof e28 && (e28 = e28()), t2.memoizedState = t2.baseState = e28;
      var r3 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Cp2, lastRenderedState: e28 };
      t2.queue = r3;
      var n3 = r3.dispatch = dh2.bind(null, Zf2, r3);
      return [t2.memoizedState, n3];
    }
    function Bp2(e28) {
      return wp2(Cp2);
    }
    function Ap2(e28) {
      return kp2(Cp2);
    }
    function Np2(e28, t2, r3, n3) {
      var o3 = { tag: e28, create: t2, destroy: r3, deps: n3, next: null }, i3 = Zf2.updateQueue;
      if (null === i3)
        i3 = { lastEffect: null, stores: null }, Zf2.updateQueue = i3, i3.lastEffect = o3.next = o3;
      else {
        var a3 = i3.lastEffect;
        if (null === a3)
          i3.lastEffect = o3.next = o3;
        else {
          var l3 = a3.next;
          a3.next = o3, o3.next = l3, i3.lastEffect = o3;
        }
      }
      return o3;
    }
    function jp2(e28) {
      var t2 = { current: e28 };
      return yp2().memoizedState = t2, t2;
    }
    function Dp2(e28) {
      return bp2().memoizedState;
    }
    function Lp2(e28, t2, r3, n3) {
      var o3 = yp2(), i3 = void 0 === n3 ? null : n3;
      Zf2.flags |= e28, o3.memoizedState = Np2(1 | t2, r3, void 0, i3);
    }
    function Ip2(e28, t2, r3, n3) {
      var o3 = bp2(), i3 = void 0 === n3 ? null : n3, a3 = void 0;
      if (null !== Jf2) {
        var l3 = Jf2.memoizedState;
        if (a3 = l3.destroy, null !== i3) {
          if (pp2(i3, l3.deps))
            return void (o3.memoizedState = Np2(t2, r3, a3, i3));
        }
      }
      Zf2.flags |= e28, o3.memoizedState = Np2(1 | t2, r3, a3, i3);
    }
    function zp2(e28, t2) {
      return 0 != (Zf2.mode & lo2) ? Lp2(41945088, 8, e28, t2) : Lp2(8390656, 8, e28, t2);
    }
    function Fp2(e28, t2) {
      return Ip2(tn2, 8, e28, t2);
    }
    function Up2(e28, t2) {
      return Lp2(4, 2, e28, t2);
    }
    function Vp2(e28, t2) {
      return Ip2(4, 2, e28, t2);
    }
    function Wp2(e28, t2) {
      var r3 = 4;
      return r3 |= dn2, 0 != (Zf2.mode & lo2) && (r3 |= fn2), Lp2(r3, 4, e28, t2);
    }
    function Hp2(e28, t2) {
      return Ip2(4, 4, e28, t2);
    }
    function $p2(e28, t2) {
      if ("function" == typeof t2) {
        var r3 = t2, n3 = e28();
        return r3(n3), function() {
          r3(null);
        };
      }
      if (null != t2) {
        var o3 = t2;
        o3.hasOwnProperty("current") || a2("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(o3).join(", ") + "}");
        var i3 = e28();
        return o3.current = i3, function() {
          o3.current = null;
        };
      }
    }
    function qp2(e28, t2, r3) {
      "function" != typeof t2 && a2("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== t2 ? typeof t2 : "null");
      var n3 = null != r3 ? r3.concat([e28]) : null, o3 = 4;
      return o3 |= dn2, 0 != (Zf2.mode & lo2) && (o3 |= fn2), Lp2(o3, 4, $p2.bind(null, t2, e28), n3);
    }
    function Yp2(e28, t2, r3) {
      "function" != typeof t2 && a2("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== t2 ? typeof t2 : "null");
      var n3 = null != r3 ? r3.concat([e28]) : null;
      return Ip2(4, 4, $p2.bind(null, t2, e28), n3);
    }
    function Gp2(e28, t2) {
    }
    var Xp2 = Gp2;
    function Qp2(e28, t2) {
      var r3 = void 0 === t2 ? null : t2;
      return yp2().memoizedState = [e28, r3], e28;
    }
    function Kp2(e28, t2) {
      var r3 = bp2(), n3 = void 0 === t2 ? null : t2, o3 = r3.memoizedState;
      if (null !== o3 && (null !== n3 && pp2(n3, o3[1])))
        return o3[0];
      return r3.memoizedState = [e28, n3], e28;
    }
    function Zp2(e28, t2) {
      var r3 = yp2(), n3 = void 0 === t2 ? null : t2, o3 = e28();
      return r3.memoizedState = [o3, n3], o3;
    }
    function Jp2(e28, t2) {
      var r3 = bp2(), n3 = void 0 === t2 ? null : t2, o3 = r3.memoizedState;
      if (null !== o3 && (null !== n3 && pp2(n3, o3[1])))
        return o3[0];
      var i3 = e28();
      return r3.memoizedState = [i3, n3], i3;
    }
    function eh2(e28) {
      var t2 = Mp2(e28), r3 = t2[0], n3 = t2[1];
      return zp2(function() {
        var t3 = Qf2.transition;
        Qf2.transition = {};
        try {
          n3(e28);
        } finally {
          Qf2.transition = t3;
        }
      }, [e28]), r3;
    }
    function th2(e28) {
      var t2 = Bp2(), r3 = t2[0], n3 = t2[1];
      return Fp2(function() {
        var t3 = Qf2.transition;
        Qf2.transition = {};
        try {
          n3(e28);
        } finally {
          Qf2.transition = t3;
        }
      }, [e28]), r3;
    }
    function rh2(e28) {
      var t2 = Ap2(), r3 = t2[0], n3 = t2[1];
      return Fp2(function() {
        var t3 = Qf2.transition;
        Qf2.transition = {};
        try {
          n3(e28);
        } finally {
          Qf2.transition = t3;
        }
      }, [e28]), r3;
    }
    function nh2(e28, t2, r3) {
      var n3 = wi2();
      ki2(function(e29, t3) {
        return 0 !== e29 && e29 < t3 ? e29 : t3;
      }(n3, yi2)), e28(true);
      var o3 = Qf2.transition;
      Qf2.transition = {};
      var a3 = Qf2.transition;
      Qf2.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        e28(false), t2();
      } finally {
        if (ki2(n3), Qf2.transition = o3, null === o3 && a3._updatedFibers)
          a3._updatedFibers.size > 10 && i2("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), a3._updatedFibers.clear();
      }
    }
    function oh2() {
      var e28 = Mp2(false), t2 = e28[0], r3 = e28[1], n3 = nh2.bind(null, r3);
      return yp2().memoizedState = n3, [t2, n3];
    }
    function ih2() {
      return [Bp2()[0], bp2().memoizedState];
    }
    function ah2() {
      return [Ap2()[0], bp2().memoizedState];
    }
    var lh2 = false;
    function uh2() {
      var e28, t2 = yp2(), r3 = Hm2().identifierPrefix;
      if (hf2()) {
        e28 = ":" + r3 + "R" + Bd2();
        var n3 = np2++;
        n3 > 0 && (e28 += "H" + n3.toString(32)), e28 += ":";
      } else {
        e28 = ":" + r3 + "r" + (op2++).toString(32) + ":";
      }
      return t2.memoizedState = e28, e28;
    }
    function sh2() {
      return bp2().memoizedState;
    }
    function ch2(e28, t2, r3) {
      "function" == typeof arguments[3] && a2("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var n3 = qm2(e28), o3 = { lane: n3, action: r3, hasEagerState: false, eagerState: null, next: null };
      if (fh2(e28))
        ph2(t2, o3);
      else {
        hh2(e28, t2, o3);
        var i3 = $m2(), l3 = Gm2(e28, n3, i3);
        null !== l3 && gh2(l3, t2, n3);
      }
      vh2(e28, n3);
    }
    function dh2(e28, t2, r3) {
      "function" == typeof arguments[3] && a2("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var n3 = qm2(e28), o3 = { lane: n3, action: r3, hasEagerState: false, eagerState: null, next: null };
      if (fh2(e28))
        ph2(t2, o3);
      else {
        hh2(e28, t2, o3);
        var i3 = e28.alternate;
        if (0 === e28.lanes && (null === i3 || 0 === i3.lanes)) {
          var l3 = t2.lastRenderedReducer;
          if (null !== l3) {
            var u3;
            u3 = Xf2.current, Xf2.current = kh2;
            try {
              var s3 = t2.lastRenderedState, c3 = l3(s3, r3);
              if (o3.hasEagerState = true, o3.eagerState = c3, sl2(c3, s3))
                return;
            } catch (e29) {
            } finally {
              Xf2.current = u3;
            }
          }
        }
        var d3 = $m2(), f3 = Gm2(e28, n3, d3);
        null !== f3 && gh2(f3, t2, n3);
      }
      vh2(e28, n3);
    }
    function fh2(e28) {
      var t2 = e28.alternate;
      return e28 === Zf2 || null !== t2 && t2 === Zf2;
    }
    function ph2(e28, t2) {
      rp2 = tp2 = true;
      var r3 = e28.pending;
      null === r3 ? t2.next = t2 : (t2.next = r3.next, r3.next = t2), e28.pending = t2;
    }
    function hh2(e28, t2, r3, n3) {
      if (Qm2(e28)) {
        var o3 = t2.interleaved;
        null === o3 ? (r3.next = r3, Fc2(t2)) : (r3.next = o3.next, o3.next = r3), t2.interleaved = r3;
      } else {
        var i3 = t2.pending;
        null === i3 ? r3.next = r3 : (r3.next = i3.next, i3.next = r3), t2.pending = r3;
      }
    }
    function gh2(e28, t2, r3) {
      if (Qo2(r3)) {
        var n3 = t2.lanes, o3 = ni2(n3 = ii2(n3, e28.pendingLanes), r3);
        t2.lanes = o3, si2(e28, o3);
      }
    }
    function vh2(e28, t2, r3) {
      ao2(e28, t2);
    }
    var mh2 = { readContext: Ic2, useCallback: fp2, useContext: fp2, useEffect: fp2, useImperativeHandle: fp2, useInsertionEffect: fp2, useLayoutEffect: fp2, useMemo: fp2, useReducer: fp2, useRef: fp2, useState: fp2, useDebugValue: fp2, useDeferredValue: fp2, useTransition: fp2, useMutableSource: fp2, useSyncExternalStore: fp2, useId: fp2, unstable_isNewReconciler: b2 }, yh2 = null, bh2 = null, Ch2 = null, xh2 = null, wh2 = null, kh2 = null, Sh2 = null, Eh = function() {
      a2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    }, Th = function() {
      a2("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    yh2 = { readContext: function(e28) {
      return Ic2(e28);
    }, useCallback: function(e28, t2) {
      return ip2 = "useCallback", sp2(), dp2(t2), Qp2(e28, t2);
    }, useContext: function(e28) {
      return ip2 = "useContext", sp2(), Ic2(e28);
    }, useEffect: function(e28, t2) {
      return ip2 = "useEffect", sp2(), dp2(t2), zp2(e28, t2);
    }, useImperativeHandle: function(e28, t2, r3) {
      return ip2 = "useImperativeHandle", sp2(), dp2(r3), qp2(e28, t2, r3);
    }, useInsertionEffect: function(e28, t2) {
      return ip2 = "useInsertionEffect", sp2(), dp2(t2), Up2(e28, t2);
    }, useLayoutEffect: function(e28, t2) {
      return ip2 = "useLayoutEffect", sp2(), dp2(t2), Wp2(e28, t2);
    }, useMemo: function(e28, t2) {
      ip2 = "useMemo", sp2(), dp2(t2);
      var r3 = Xf2.current;
      Xf2.current = wh2;
      try {
        return Zp2(e28, t2);
      } finally {
        Xf2.current = r3;
      }
    }, useReducer: function(e28, t2, r3) {
      ip2 = "useReducer", sp2();
      var n3 = Xf2.current;
      Xf2.current = wh2;
      try {
        return xp2(e28, t2, r3);
      } finally {
        Xf2.current = n3;
      }
    }, useRef: function(e28) {
      return ip2 = "useRef", sp2(), jp2(e28);
    }, useState: function(e28) {
      ip2 = "useState", sp2();
      var t2 = Xf2.current;
      Xf2.current = wh2;
      try {
        return Mp2(e28);
      } finally {
        Xf2.current = t2;
      }
    }, useDebugValue: function(e28, t2) {
      ip2 = "useDebugValue", sp2();
    }, useDeferredValue: function(e28) {
      return ip2 = "useDeferredValue", sp2(), eh2(e28);
    }, useTransition: function() {
      return ip2 = "useTransition", sp2(), oh2();
    }, useMutableSource: function(e28, t2, r3) {
      ip2 = "useMutableSource", sp2();
    }, useSyncExternalStore: function(e28, t2, r3) {
      return ip2 = "useSyncExternalStore", sp2(), Sp2(e28, t2, r3);
    }, useId: function() {
      return ip2 = "useId", sp2(), uh2();
    }, unstable_isNewReconciler: b2 }, bh2 = { readContext: function(e28) {
      return Ic2(e28);
    }, useCallback: function(e28, t2) {
      return ip2 = "useCallback", cp2(), Qp2(e28, t2);
    }, useContext: function(e28) {
      return ip2 = "useContext", cp2(), Ic2(e28);
    }, useEffect: function(e28, t2) {
      return ip2 = "useEffect", cp2(), zp2(e28, t2);
    }, useImperativeHandle: function(e28, t2, r3) {
      return ip2 = "useImperativeHandle", cp2(), qp2(e28, t2, r3);
    }, useInsertionEffect: function(e28, t2) {
      return ip2 = "useInsertionEffect", cp2(), Up2(e28, t2);
    }, useLayoutEffect: function(e28, t2) {
      return ip2 = "useLayoutEffect", cp2(), Wp2(e28, t2);
    }, useMemo: function(e28, t2) {
      ip2 = "useMemo", cp2();
      var r3 = Xf2.current;
      Xf2.current = wh2;
      try {
        return Zp2(e28, t2);
      } finally {
        Xf2.current = r3;
      }
    }, useReducer: function(e28, t2, r3) {
      ip2 = "useReducer", cp2();
      var n3 = Xf2.current;
      Xf2.current = wh2;
      try {
        return xp2(e28, t2, r3);
      } finally {
        Xf2.current = n3;
      }
    }, useRef: function(e28) {
      return ip2 = "useRef", cp2(), jp2(e28);
    }, useState: function(e28) {
      ip2 = "useState", cp2();
      var t2 = Xf2.current;
      Xf2.current = wh2;
      try {
        return Mp2(e28);
      } finally {
        Xf2.current = t2;
      }
    }, useDebugValue: function(e28, t2) {
      ip2 = "useDebugValue", cp2();
    }, useDeferredValue: function(e28) {
      return ip2 = "useDeferredValue", cp2(), eh2(e28);
    }, useTransition: function() {
      return ip2 = "useTransition", cp2(), oh2();
    }, useMutableSource: function(e28, t2, r3) {
      ip2 = "useMutableSource", cp2();
    }, useSyncExternalStore: function(e28, t2, r3) {
      return ip2 = "useSyncExternalStore", cp2(), Sp2(e28, t2, r3);
    }, useId: function() {
      return ip2 = "useId", cp2(), uh2();
    }, unstable_isNewReconciler: b2 }, Ch2 = { readContext: function(e28) {
      return Ic2(e28);
    }, useCallback: function(e28, t2) {
      return ip2 = "useCallback", cp2(), Kp2(e28, t2);
    }, useContext: function(e28) {
      return ip2 = "useContext", cp2(), Ic2(e28);
    }, useEffect: function(e28, t2) {
      return ip2 = "useEffect", cp2(), Fp2(e28, t2);
    }, useImperativeHandle: function(e28, t2, r3) {
      return ip2 = "useImperativeHandle", cp2(), Yp2(e28, t2, r3);
    }, useInsertionEffect: function(e28, t2) {
      return ip2 = "useInsertionEffect", cp2(), Vp2(e28, t2);
    }, useLayoutEffect: function(e28, t2) {
      return ip2 = "useLayoutEffect", cp2(), Hp2(e28, t2);
    }, useMemo: function(e28, t2) {
      ip2 = "useMemo", cp2();
      var r3 = Xf2.current;
      Xf2.current = kh2;
      try {
        return Jp2(e28, t2);
      } finally {
        Xf2.current = r3;
      }
    }, useReducer: function(e28, t2, r3) {
      ip2 = "useReducer", cp2();
      var n3 = Xf2.current;
      Xf2.current = kh2;
      try {
        return wp2(e28);
      } finally {
        Xf2.current = n3;
      }
    }, useRef: function(e28) {
      return ip2 = "useRef", cp2(), Dp2();
    }, useState: function(e28) {
      ip2 = "useState", cp2();
      var t2 = Xf2.current;
      Xf2.current = kh2;
      try {
        return Bp2();
      } finally {
        Xf2.current = t2;
      }
    }, useDebugValue: function(e28, t2) {
      return ip2 = "useDebugValue", cp2(), Xp2();
    }, useDeferredValue: function(e28) {
      return ip2 = "useDeferredValue", cp2(), th2(e28);
    }, useTransition: function() {
      return ip2 = "useTransition", cp2(), ih2();
    }, useMutableSource: function(e28, t2, r3) {
      ip2 = "useMutableSource", cp2();
    }, useSyncExternalStore: function(e28, t2, r3) {
      return ip2 = "useSyncExternalStore", cp2(), Ep2(e28, t2);
    }, useId: function() {
      return ip2 = "useId", cp2(), sh2();
    }, unstable_isNewReconciler: b2 }, xh2 = { readContext: function(e28) {
      return Ic2(e28);
    }, useCallback: function(e28, t2) {
      return ip2 = "useCallback", cp2(), Kp2(e28, t2);
    }, useContext: function(e28) {
      return ip2 = "useContext", cp2(), Ic2(e28);
    }, useEffect: function(e28, t2) {
      return ip2 = "useEffect", cp2(), Fp2(e28, t2);
    }, useImperativeHandle: function(e28, t2, r3) {
      return ip2 = "useImperativeHandle", cp2(), Yp2(e28, t2, r3);
    }, useInsertionEffect: function(e28, t2) {
      return ip2 = "useInsertionEffect", cp2(), Vp2(e28, t2);
    }, useLayoutEffect: function(e28, t2) {
      return ip2 = "useLayoutEffect", cp2(), Hp2(e28, t2);
    }, useMemo: function(e28, t2) {
      ip2 = "useMemo", cp2();
      var r3 = Xf2.current;
      Xf2.current = Sh2;
      try {
        return Jp2(e28, t2);
      } finally {
        Xf2.current = r3;
      }
    }, useReducer: function(e28, t2, r3) {
      ip2 = "useReducer", cp2();
      var n3 = Xf2.current;
      Xf2.current = Sh2;
      try {
        return kp2(e28);
      } finally {
        Xf2.current = n3;
      }
    }, useRef: function(e28) {
      return ip2 = "useRef", cp2(), Dp2();
    }, useState: function(e28) {
      ip2 = "useState", cp2();
      var t2 = Xf2.current;
      Xf2.current = Sh2;
      try {
        return Ap2();
      } finally {
        Xf2.current = t2;
      }
    }, useDebugValue: function(e28, t2) {
      return ip2 = "useDebugValue", cp2(), Xp2();
    }, useDeferredValue: function(e28) {
      return ip2 = "useDeferredValue", cp2(), rh2(e28);
    }, useTransition: function() {
      return ip2 = "useTransition", cp2(), ah2();
    }, useMutableSource: function(e28, t2, r3) {
      ip2 = "useMutableSource", cp2();
    }, useSyncExternalStore: function(e28, t2, r3) {
      return ip2 = "useSyncExternalStore", cp2(), Ep2(e28, t2);
    }, useId: function() {
      return ip2 = "useId", cp2(), sh2();
    }, unstable_isNewReconciler: b2 }, wh2 = { readContext: function(e28) {
      return Eh(), Ic2(e28);
    }, useCallback: function(e28, t2) {
      return ip2 = "useCallback", Th(), sp2(), Qp2(e28, t2);
    }, useContext: function(e28) {
      return ip2 = "useContext", Th(), sp2(), Ic2(e28);
    }, useEffect: function(e28, t2) {
      return ip2 = "useEffect", Th(), sp2(), zp2(e28, t2);
    }, useImperativeHandle: function(e28, t2, r3) {
      return ip2 = "useImperativeHandle", Th(), sp2(), qp2(e28, t2, r3);
    }, useInsertionEffect: function(e28, t2) {
      return ip2 = "useInsertionEffect", Th(), sp2(), Up2(e28, t2);
    }, useLayoutEffect: function(e28, t2) {
      return ip2 = "useLayoutEffect", Th(), sp2(), Wp2(e28, t2);
    }, useMemo: function(e28, t2) {
      ip2 = "useMemo", Th(), sp2();
      var r3 = Xf2.current;
      Xf2.current = wh2;
      try {
        return Zp2(e28, t2);
      } finally {
        Xf2.current = r3;
      }
    }, useReducer: function(e28, t2, r3) {
      ip2 = "useReducer", Th(), sp2();
      var n3 = Xf2.current;
      Xf2.current = wh2;
      try {
        return xp2(e28, t2, r3);
      } finally {
        Xf2.current = n3;
      }
    }, useRef: function(e28) {
      return ip2 = "useRef", Th(), sp2(), jp2(e28);
    }, useState: function(e28) {
      ip2 = "useState", Th(), sp2();
      var t2 = Xf2.current;
      Xf2.current = wh2;
      try {
        return Mp2(e28);
      } finally {
        Xf2.current = t2;
      }
    }, useDebugValue: function(e28, t2) {
      ip2 = "useDebugValue", Th(), sp2();
    }, useDeferredValue: function(e28) {
      return ip2 = "useDeferredValue", Th(), sp2(), eh2(e28);
    }, useTransition: function() {
      return ip2 = "useTransition", Th(), sp2(), oh2();
    }, useMutableSource: function(e28, t2, r3) {
      ip2 = "useMutableSource", Th(), sp2();
    }, useSyncExternalStore: function(e28, t2, r3) {
      return ip2 = "useSyncExternalStore", Th(), sp2(), Sp2(e28, t2, r3);
    }, useId: function() {
      return ip2 = "useId", Th(), sp2(), uh2();
    }, unstable_isNewReconciler: b2 }, kh2 = { readContext: function(e28) {
      return Eh(), Ic2(e28);
    }, useCallback: function(e28, t2) {
      return ip2 = "useCallback", Th(), cp2(), Kp2(e28, t2);
    }, useContext: function(e28) {
      return ip2 = "useContext", Th(), cp2(), Ic2(e28);
    }, useEffect: function(e28, t2) {
      return ip2 = "useEffect", Th(), cp2(), Fp2(e28, t2);
    }, useImperativeHandle: function(e28, t2, r3) {
      return ip2 = "useImperativeHandle", Th(), cp2(), Yp2(e28, t2, r3);
    }, useInsertionEffect: function(e28, t2) {
      return ip2 = "useInsertionEffect", Th(), cp2(), Vp2(e28, t2);
    }, useLayoutEffect: function(e28, t2) {
      return ip2 = "useLayoutEffect", Th(), cp2(), Hp2(e28, t2);
    }, useMemo: function(e28, t2) {
      ip2 = "useMemo", Th(), cp2();
      var r3 = Xf2.current;
      Xf2.current = kh2;
      try {
        return Jp2(e28, t2);
      } finally {
        Xf2.current = r3;
      }
    }, useReducer: function(e28, t2, r3) {
      ip2 = "useReducer", Th(), cp2();
      var n3 = Xf2.current;
      Xf2.current = kh2;
      try {
        return wp2(e28);
      } finally {
        Xf2.current = n3;
      }
    }, useRef: function(e28) {
      return ip2 = "useRef", Th(), cp2(), Dp2();
    }, useState: function(e28) {
      ip2 = "useState", Th(), cp2();
      var t2 = Xf2.current;
      Xf2.current = kh2;
      try {
        return Bp2();
      } finally {
        Xf2.current = t2;
      }
    }, useDebugValue: function(e28, t2) {
      return ip2 = "useDebugValue", Th(), cp2(), Xp2();
    }, useDeferredValue: function(e28) {
      return ip2 = "useDeferredValue", Th(), cp2(), th2(e28);
    }, useTransition: function() {
      return ip2 = "useTransition", Th(), cp2(), ih2();
    }, useMutableSource: function(e28, t2, r3) {
      ip2 = "useMutableSource", Th(), cp2();
    }, useSyncExternalStore: function(e28, t2, r3) {
      return ip2 = "useSyncExternalStore", Th(), cp2(), Ep2(e28, t2);
    }, useId: function() {
      return ip2 = "useId", Th(), cp2(), sh2();
    }, unstable_isNewReconciler: b2 }, Sh2 = { readContext: function(e28) {
      return Eh(), Ic2(e28);
    }, useCallback: function(e28, t2) {
      return ip2 = "useCallback", Th(), cp2(), Kp2(e28, t2);
    }, useContext: function(e28) {
      return ip2 = "useContext", Th(), cp2(), Ic2(e28);
    }, useEffect: function(e28, t2) {
      return ip2 = "useEffect", Th(), cp2(), Fp2(e28, t2);
    }, useImperativeHandle: function(e28, t2, r3) {
      return ip2 = "useImperativeHandle", Th(), cp2(), Yp2(e28, t2, r3);
    }, useInsertionEffect: function(e28, t2) {
      return ip2 = "useInsertionEffect", Th(), cp2(), Vp2(e28, t2);
    }, useLayoutEffect: function(e28, t2) {
      return ip2 = "useLayoutEffect", Th(), cp2(), Hp2(e28, t2);
    }, useMemo: function(e28, t2) {
      ip2 = "useMemo", Th(), cp2();
      var r3 = Xf2.current;
      Xf2.current = kh2;
      try {
        return Jp2(e28, t2);
      } finally {
        Xf2.current = r3;
      }
    }, useReducer: function(e28, t2, r3) {
      ip2 = "useReducer", Th(), cp2();
      var n3 = Xf2.current;
      Xf2.current = kh2;
      try {
        return kp2(e28);
      } finally {
        Xf2.current = n3;
      }
    }, useRef: function(e28) {
      return ip2 = "useRef", Th(), cp2(), Dp2();
    }, useState: function(e28) {
      ip2 = "useState", Th(), cp2();
      var t2 = Xf2.current;
      Xf2.current = kh2;
      try {
        return Ap2();
      } finally {
        Xf2.current = t2;
      }
    }, useDebugValue: function(e28, t2) {
      return ip2 = "useDebugValue", Th(), cp2(), Xp2();
    }, useDeferredValue: function(e28) {
      return ip2 = "useDeferredValue", Th(), cp2(), rh2(e28);
    }, useTransition: function() {
      return ip2 = "useTransition", Th(), cp2(), ah2();
    }, useMutableSource: function(e28, t2, r3) {
      ip2 = "useMutableSource", Th(), cp2();
    }, useSyncExternalStore: function(e28, t2, r3) {
      return ip2 = "useSyncExternalStore", Th(), cp2(), Ep2(e28, t2);
    }, useId: function() {
      return ip2 = "useId", Th(), cp2(), sh2();
    }, unstable_isNewReconciler: b2 };
    var Rh = r2.unstable_now, Oh2 = 0, _h2 = -1, Ph2 = -1, Mh2 = -1, Bh2 = false, Ah2 = false;
    function Nh2() {
      return Bh2;
    }
    function jh2() {
      return Oh2;
    }
    function Dh2() {
      Oh2 = Rh();
    }
    function Lh2(e28) {
      Ph2 = Rh(), e28.actualStartTime < 0 && (e28.actualStartTime = Rh());
    }
    function Ih2(e28) {
      Ph2 = -1;
    }
    function zh2(e28, t2) {
      if (Ph2 >= 0) {
        var r3 = Rh() - Ph2;
        e28.actualDuration += r3, t2 && (e28.selfBaseDuration = r3), Ph2 = -1;
      }
    }
    function Fh2(e28) {
      if (_h2 >= 0) {
        var t2 = Rh() - _h2;
        _h2 = -1;
        for (var r3 = e28.return; null !== r3; ) {
          switch (r3.tag) {
            case 3:
              return void (r3.stateNode.effectDuration += t2);
            case c2:
              return void (r3.stateNode.effectDuration += t2);
          }
          r3 = r3.return;
        }
      }
    }
    function Uh2(e28) {
      if (Mh2 >= 0) {
        var t2 = Rh() - Mh2;
        Mh2 = -1;
        for (var r3 = e28.return; null !== r3; ) {
          switch (r3.tag) {
            case 3:
              var n3 = r3.stateNode;
              return void (null !== n3 && (n3.passiveEffectDuration += t2));
            case c2:
              var o3 = r3.stateNode;
              return void (null !== o3 && (o3.passiveEffectDuration += t2));
          }
          r3 = r3.return;
        }
      }
    }
    function Vh2() {
      _h2 = Rh();
    }
    function Wh2() {
      Mh2 = Rh();
    }
    function Hh2(e28) {
      for (var t2 = e28.child; t2; )
        e28.actualDuration += t2.actualDuration, t2 = t2.sibling;
    }
    function $h2(e28, t2) {
      return { value: e28, source: t2, stack: Ne2(t2) };
    }
    function qh2(e28, t2) {
      try {
        0;
        var r3 = t2.value, n3 = t2.source, o3 = t2.stack, i3 = null !== o3 ? o3 : "";
        if (null != r3 && r3._suppressLogging) {
          if (1 === e28.tag)
            return;
          console.error(r3);
        }
        var a3 = n3 ? Ie2(n3) : null, l3 = (a3 ? "The above error occurred in the <" + a3 + "> component:" : "The above error occurred in one of your React components:") + "\n" + i3 + "\n\n" + (3 === e28.tag ? "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries." : "React will try to recreate this component tree from scratch using the error boundary you provided, " + (Ie2(e28) || "Anonymous") + ".");
        console.error(l3);
      } catch (e29) {
        setTimeout(function() {
          throw e29;
        });
      }
    }
    var Yh2, Gh2, Xh2, Qh2 = "function" == typeof WeakMap ? WeakMap : Map;
    function Kh2(e28, t2, r3) {
      var n3 = Yc2(Fo2, r3);
      n3.tag = 3, n3.payload = { element: null };
      var o3 = t2.value;
      return n3.callback = function() {
        wy2(o3), qh2(e28, t2);
      }, n3;
    }
    function Zh2(e28, t2, r3) {
      var n3 = Yc2(Fo2, r3);
      n3.tag = 3;
      var o3 = e28.type.getDerivedStateFromError;
      if ("function" == typeof o3) {
        var i3 = t2.value;
        n3.payload = function() {
          return o3(i3);
        }, n3.callback = function() {
          Gy2(e28), qh2(e28, t2);
        };
      }
      var l3 = e28.stateNode;
      return null !== l3 && "function" == typeof l3.componentDidCatch && (n3.callback = function() {
        var r4;
        Gy2(e28), qh2(e28, t2), "function" != typeof o3 && (r4 = this, null === Nm2 ? Nm2 = /* @__PURE__ */ new Set([r4]) : Nm2.add(r4));
        var n4 = t2.value, i4 = t2.stack;
        this.componentDidCatch(n4, { componentStack: null !== i4 ? i4 : "" }), "function" != typeof o3 && (ti2(e28.lanes, 1) || a2("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", Ie2(e28) || "Unknown"));
      }), n3;
    }
    function Jh2(e28, t2, r3) {
      var n3, o3 = e28.pingCache;
      if (null === o3 ? (o3 = e28.pingCache = new Qh2(), n3 = /* @__PURE__ */ new Set(), o3.set(t2, n3)) : void 0 === (n3 = o3.get(t2)) && (n3 = /* @__PURE__ */ new Set(), o3.set(t2, n3)), !n3.has(r3)) {
        n3.add(r3);
        var i3 = Ey2.bind(null, e28, t2, r3);
        qn2 && Dy2(e28, r3), t2.then(i3, i3);
      }
    }
    function eg2(e28) {
      var t2 = e28;
      do {
        if (t2.tag === d2 && Vf2(t2))
          return t2;
        t2 = t2.return;
      } while (null !== t2);
      return null;
    }
    function tg2(e28, t2, r3, n3, o3) {
      if (0 == (1 & e28.mode)) {
        if (e28 === t2)
          e28.flags |= ln2;
        else {
          if (e28.flags |= Kr2, r3.flags |= un2, r3.flags &= -52805, 1 === r3.tag)
            if (null === r3.alternate)
              r3.tag = h2;
            else {
              var i3 = Yc2(Fo2, 1);
              i3.tag = Wc2, Gc2(r3, i3);
            }
          r3.lanes = ni2(r3.lanes, 1);
        }
        return e28;
      }
      return e28.flags |= ln2, e28.lanes = o3, e28;
    }
    function rg2(e28, t2, r3, n3, o3) {
      if (r3.flags |= an2, qn2 && Dy2(e28, o3), null !== n3 && "object" == typeof n3 && "function" == typeof n3.then) {
        var i3 = n3;
        !function(e29, t3) {
          var r4 = e29.tag;
          if (0 == (1 & e29.mode) && (0 === r4 || r4 === s2 || r4 === p2)) {
            var n4 = e29.alternate;
            n4 ? (e29.updateQueue = n4.updateQueue, e29.memoizedState = n4.memoizedState, e29.lanes = n4.lanes) : (e29.updateQueue = null, e29.memoizedState = null);
          }
        }(r3);
        var a3 = eg2(t2);
        if (null !== a3)
          return a3.flags &= -257, tg2(a3, t2, r3, 0, o3), 1 & a3.mode && Jh2(e28, i3, o3), void function(e29, t3, r4, n4) {
            var o4 = e29.updateQueue;
            if (null === o4) {
              var i4 = /* @__PURE__ */ new Set();
              i4.add(r4), e29.updateQueue = i4;
            } else
              o4.add(r4);
          }(a3, 0, i3);
        if (0 == (1 & o3))
          return Jh2(e28, i3, o3), void py2();
        n3 = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
      } else if (hf2() && 1 & r3.mode) {
        Yd2 = true;
        var l3 = eg2(t2);
        if (null !== l3)
          return 0 == (l3.flags & ln2) && (l3.flags |= Zr2), tg2(l3, t2, r3, 0, o3), void gf2(n3);
      }
      !function(e29) {
        4 !== xm2 && (xm2 = 2);
        null === Tm2 ? Tm2 = [e29] : Tm2.push(e29);
      }(n3), n3 = $h2(n3, r3);
      var u3 = t2;
      do {
        switch (u3.tag) {
          case 3:
            var c3 = n3;
            u3.flags |= ln2;
            var d3 = Zo2(o3);
            return u3.lanes = ni2(u3.lanes, d3), void Qc2(u3, Kh2(u3, c3, d3));
          case 1:
            var f3 = n3, h3 = u3.type, g3 = u3.stateNode;
            if (0 == (u3.flags & Kr2) && ("function" == typeof h3.getDerivedStateFromError || null !== g3 && "function" == typeof g3.componentDidCatch && !xy2(g3))) {
              u3.flags |= ln2;
              var v3 = Zo2(o3);
              return u3.lanes = ni2(u3.lanes, v3), void Qc2(u3, Zh2(u3, f3, v3));
            }
        }
        u3 = u3.return;
      } while (null !== u3);
    }
    function ng2(e28) {
      e28.flags |= 4;
    }
    function og2(e28) {
      e28.flags |= Jr2, e28.flags |= cn2;
    }
    function ig2(e28, t2) {
      if (!hf2())
        switch (e28.tailMode) {
          case "hidden":
            for (var r3 = e28.tail, n3 = null; null !== r3; )
              null !== r3.alternate && (n3 = r3), r3 = r3.sibling;
            null === n3 ? e28.tail = null : n3.sibling = null;
            break;
          case "collapsed":
            for (var o3 = e28.tail, i3 = null; null !== o3; )
              null !== o3.alternate && (i3 = o3), o3 = o3.sibling;
            null === i3 ? t2 || null === e28.tail ? e28.tail = null : e28.tail.sibling = null : i3.sibling = null;
        }
    }
    function ag(e28) {
      var t2 = null !== e28.alternate && e28.alternate.child === e28.child, r3 = 0, n3 = 0;
      if (t2) {
        if (0 != (2 & e28.mode)) {
          for (var o3 = e28.selfBaseDuration, i3 = e28.child; null !== i3; )
            r3 = ni2(r3, ni2(i3.lanes, i3.childLanes)), n3 |= i3.subtreeFlags & yn2, n3 |= i3.flags & yn2, o3 += i3.treeBaseDuration, i3 = i3.sibling;
          e28.treeBaseDuration = o3;
        } else
          for (var a3 = e28.child; null !== a3; )
            r3 = ni2(r3, ni2(a3.lanes, a3.childLanes)), n3 |= a3.subtreeFlags & yn2, n3 |= a3.flags & yn2, a3.return = e28, a3 = a3.sibling;
        e28.subtreeFlags |= n3;
      } else {
        if (0 != (2 & e28.mode)) {
          for (var l3 = e28.actualDuration, u3 = e28.selfBaseDuration, s3 = e28.child; null !== s3; )
            r3 = ni2(r3, ni2(s3.lanes, s3.childLanes)), n3 |= s3.subtreeFlags, n3 |= s3.flags, l3 += s3.actualDuration, u3 += s3.treeBaseDuration, s3 = s3.sibling;
          e28.actualDuration = l3, e28.treeBaseDuration = u3;
        } else
          for (var c3 = e28.child; null !== c3; )
            r3 = ni2(r3, ni2(c3.lanes, c3.childLanes)), n3 |= c3.subtreeFlags, n3 |= c3.flags, c3.return = e28, c3 = c3.sibling;
        e28.subtreeFlags |= n3;
      }
      return e28.childLanes = r3, t2;
    }
    function lg(e28, t2, r3) {
      var n3 = t2.pendingProps;
      switch (Ld2(t2), t2.tag) {
        case 2:
        case 16:
        case p2:
        case 0:
        case s2:
        case 7:
        case 8:
        case c2:
        case 9:
        case f2:
          return ag(t2), null;
        case 1:
          return Qs2(t2.type) && Ks2(t2), ag(t2), null;
        case 3:
          var o3 = t2.stateNode;
          if (Bf2(t2), Zs2(t2), $f2(), o3.pendingContext && (o3.context = o3.pendingContext, o3.pendingContext = null), null === e28 || null === e28.child) {
            if (cf(t2))
              ng2(t2);
            else if (null !== e28)
              e28.memoizedState.isDehydrated && 0 == (t2.flags & Zr2) || (t2.flags |= en2, pf2());
          }
          return ag(t2), null;
        case 5:
          jf2(t2);
          var i3 = Pf2(), a3 = t2.type;
          if (null !== e28 && null != t2.stateNode)
            Gh2(e28, t2, a3, n3), e28.ref !== t2.ref && og2(t2);
          else {
            if (!n3) {
              if (null === t2.stateNode)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return ag(t2), null;
            }
            var l3 = Af2();
            if (cf(t2))
              (function(e29, t3, r4) {
                var n4 = e29.stateNode, o4 = !Yd2, i4 = ps2(n4, e29.type, e29.memoizedProps, 0, r4, e29, o4);
                return e29.updateQueue = i4, null !== i4;
              })(t2, 0, l3) && ng2(t2);
            else {
              var g3 = Gu2(a3, n3, i3, l3, t2);
              Yh2(g3, t2), t2.stateNode = g3, function(e29, t3, r4, n4, o4) {
                switch (Ru2(e29, t3, r4), t3) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    return !!r4.autoFocus;
                  case "img":
                    return true;
                  default:
                    return false;
                }
              }(g3, a3, n3) && ng2(t2);
            }
            null !== t2.ref && og2(t2);
          }
          return ag(t2), null;
        case 6:
          var b3 = n3;
          if (e28 && null != t2.stateNode) {
            var C3 = e28.memoizedProps;
            Xh2(0, t2, C3, b3);
          } else {
            if ("string" != typeof b3 && null === t2.stateNode)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var x3 = Pf2(), w3 = Af2();
            cf(t2) ? af2(t2) && ng2(t2) : t2.stateNode = Qu2(b3, x3, w3, t2);
          }
          return ag(t2), null;
        case d2:
          Uf2(t2);
          var k3 = t2.memoizedState;
          if (qd2 && null !== $d2 && 0 != (1 & t2.mode) && 0 == (t2.flags & Kr2))
            return df2(t2), ff2(), t2.flags |= 98560, t2;
          if (null !== k3 && null !== k3.dehydrated) {
            var S3 = cf(t2);
            if (null === e28) {
              if (!S3)
                throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
              if (lf2(t2), ag(t2), 0 != (2 & t2.mode)) {
                if (null !== k3) {
                  var E3 = t2.child;
                  null !== E3 && (t2.treeBaseDuration -= E3.treeBaseDuration);
                }
              }
              return null;
            }
            if (ff2(), 0 == (t2.flags & Kr2) && (t2.memoizedState = null), t2.flags |= 4, ag(t2), 0 != (2 & t2.mode) && null !== k3) {
              var T3 = t2.child;
              null !== T3 && (t2.treeBaseDuration -= T3.treeBaseDuration);
            }
            return null;
          }
          if (pf2(), 0 != (t2.flags & Kr2))
            return t2.lanes = r3, 0 != (2 & t2.mode) && Hh2(t2), t2;
          var R3 = null !== k3, O3 = false;
          if (null === e28)
            cf(t2);
          else
            O3 = null !== e28.memoizedState;
          if (R3 && !O3) {
            if (t2.child.flags |= nn2, 0 != (1 & t2.mode))
              null === e28 && (true !== t2.memoizedProps.unstable_avoidThisFallback || true) || Lf2(Df2.current, 1) ? 0 === xm2 && (xm2 = 3) : py2();
          }
          if (null !== t2.updateQueue && (t2.flags |= 4), ag(t2), 0 != (2 & t2.mode) && R3) {
            var _3 = t2.child;
            null !== _3 && (t2.treeBaseDuration -= _3.treeBaseDuration);
          }
          return null;
        case 4:
          return Bf2(t2), null === e28 && Kl2(t2.stateNode.containerInfo), ag(t2), null;
        case u2:
          return Nc2(t2.type._context, t2), ag(t2), null;
        case h2:
          return Qs2(t2.type) && Ks2(t2), ag(t2), null;
        case v2:
          Uf2(t2);
          var P3 = t2.memoizedState;
          if (null === P3)
            return ag(t2), null;
          var M3 = 0 != (t2.flags & Kr2), B3 = P3.rendering;
          if (null === B3)
            if (M3)
              ig2(P3, false);
            else {
              if (!(0 === xm2 && (null === e28 || 0 == (e28.flags & Kr2))))
                for (var A3 = t2.child; null !== A3; ) {
                  var N3 = Wf2(A3);
                  if (null !== N3) {
                    M3 = true, t2.flags |= Kr2, ig2(P3, false);
                    var j3 = N3.updateQueue;
                    return null !== j3 && (t2.updateQueue = j3, t2.flags |= 4), t2.subtreeFlags = 0, Sf2(t2, r3), Ff2(t2, zf2(Df2.current, 2)), t2.child;
                  }
                  A3 = A3.sibling;
                }
              null !== P3.tail && An2() > Mm2() && (t2.flags |= Kr2, M3 = true, ig2(P3, false), t2.lanes = Ao2);
            }
          else {
            if (!M3) {
              var D3 = Wf2(B3);
              if (null !== D3) {
                t2.flags |= Kr2, M3 = true;
                var L3 = D3.updateQueue;
                if (null !== L3 && (t2.updateQueue = L3, t2.flags |= 4), ig2(P3, true), null === P3.tail && "hidden" === P3.tailMode && !B3.alternate && !hf2())
                  return ag(t2), null;
              } else
                2 * An2() - P3.renderingStartTime > Mm2() && r3 !== Io2 && (t2.flags |= Kr2, M3 = true, ig2(P3, false), t2.lanes = Ao2);
            }
            if (P3.isBackwards)
              B3.sibling = t2.child, t2.child = B3;
            else {
              var I3 = P3.last;
              null !== I3 ? I3.sibling = B3 : t2.child = B3, P3.last = B3;
            }
          }
          if (null !== P3.tail) {
            var z3 = P3.tail;
            P3.rendering = z3, P3.tail = z3.sibling, P3.renderingStartTime = An2(), z3.sibling = null;
            var F3 = Df2.current;
            return Ff2(t2, F3 = M3 ? zf2(F3, 2) : If2(F3)), z3;
          }
          return ag(t2), null;
        case 21:
          break;
        case m2:
        case y2:
          ly2(t2);
          var U3 = null !== t2.memoizedState;
          if (null !== e28)
            null !== e28.memoizedState !== U3 && (t2.flags |= nn2);
          return U3 && 0 != (1 & t2.mode) ? ti2(bm2, Io2) && (ag(t2), 6 & t2.subtreeFlags && (t2.flags |= nn2)) : ag(t2), null;
        case 24:
        case 25:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + t2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    Yh2 = function(e28, t2, r3, n3) {
      for (var o3, i3, a3 = t2.child; null !== a3; ) {
        if (5 === a3.tag || 6 === a3.tag)
          o3 = e28, i3 = a3.stateNode, o3.appendChild(i3);
        else if (4 === a3.tag)
          ;
        else if (null !== a3.child) {
          a3.child.return = a3, a3 = a3.child;
          continue;
        }
        if (a3 === t2)
          return;
        for (; null === a3.sibling; ) {
          if (null === a3.return || a3.return === t2)
            return;
          a3 = a3.return;
        }
        a3.sibling.return = a3.return, a3 = a3.sibling;
      }
    }, Gh2 = function(e28, t2, r3, n3, o3) {
      var i3 = e28.memoizedProps;
      if (i3 !== n3) {
        var a3 = function(e29, t3, r4, n4, o4, i4) {
          var a4 = i4;
          if (typeof n4.children != typeof r4.children && ("string" == typeof n4.children || "number" == typeof n4.children)) {
            var l3 = "" + n4.children, u3 = ju2(a4.ancestorInfo, t3);
            Nu2(null, l3, u3);
          }
          return Ou2(e29, t3, r4, n4);
        }(t2.stateNode, r3, i3, n3, 0, Af2());
        t2.updateQueue = a3, a3 && ng2(t2);
      }
    }, Xh2 = function(e28, t2, r3, n3) {
      r3 !== n3 && ng2(t2);
    };
    var ug2, sg2, cg2, dg2, fg2, pg2, hg2, gg2, vg2 = n2.ReactCurrentOwner, mg2 = false;
    function yg2(e28, t2, r3, n3) {
      t2.child = null === e28 ? kf2(t2, null, r3, n3) : wf2(t2, e28.child, r3, n3);
    }
    function bg2(e28, t2, r3, n3, o3) {
      if (t2.type !== t2.elementType) {
        var i3 = r3.propTypes;
        i3 && Ns2(i3, n3, "prop", De2(r3));
      }
      var a3, l3, u3 = r3.render, s3 = t2.ref;
      if (Lc2(t2, o3), Kn2(t2), vg2.current = t2, qe2(true), a3 = hp2(e28, t2, u3, n3, s3, o3), l3 = gp2(), 8 & t2.mode) {
        Yn2(true);
        try {
          a3 = hp2(e28, t2, u3, n3, s3, o3), l3 = gp2();
        } finally {
          Yn2(false);
        }
      }
      return qe2(false), Zn2(), null === e28 || mg2 ? (hf2() && l3 && jd2(t2), t2.flags |= 1, yg2(e28, t2, a3, o3), t2.child) : (vp2(e28, t2, o3), Xg2(e28, t2, o3));
    }
    function Cg2(e28, t2, r3, n3, o3) {
      if (null === e28) {
        var i3 = r3.type;
        if (function(e29) {
          return "function" == typeof e29 && !ob2(e29) && void 0 === e29.defaultProps;
        }(i3) && null === r3.compare && void 0 === r3.defaultProps) {
          var a3;
          return a3 = Hy2(i3), t2.tag = p2, t2.type = a3, Pg2(t2, i3), xg2(e28, t2, a3, n3, o3);
        }
        var l3 = i3.propTypes;
        l3 && Ns2(l3, n3, "prop", De2(i3));
        var u3 = lb2(r3.type, null, n3, t2, t2.mode, o3);
        return u3.ref = t2.ref, u3.return = t2, t2.child = u3, u3;
      }
      var s3 = r3.type, c3 = s3.propTypes;
      c3 && Ns2(c3, n3, "prop", De2(s3));
      var d3 = e28.child;
      if (!Qg2(e28, o3)) {
        var f3 = d3.memoizedProps, h3 = r3.compare;
        if ((h3 = null !== h3 ? h3 : cl2)(f3, n3) && e28.ref === t2.ref)
          return Xg2(e28, t2, o3);
      }
      t2.flags |= 1;
      var g3 = ib2(d3, n3);
      return g3.ref = t2.ref, g3.return = t2, t2.child = g3, g3;
    }
    function xg2(e28, t2, r3, n3, o3) {
      if (t2.type !== t2.elementType) {
        var i3 = t2.elementType;
        if (i3.$$typeof === ce2) {
          var a3 = i3, l3 = a3._payload, u3 = a3._init;
          try {
            i3 = u3(l3);
          } catch (e29) {
            i3 = null;
          }
          var s3 = i3 && i3.propTypes;
          s3 && Ns2(s3, n3, "prop", De2(i3));
        }
      }
      if (null !== e28 && (cl2(e28.memoizedProps, n3) && e28.ref === t2.ref && t2.type === e28.type)) {
        if (mg2 = false, !Qg2(e28, o3))
          return t2.lanes = e28.lanes, Xg2(e28, t2, o3);
        0 != (e28.flags & un2) && (mg2 = true);
      }
      return Sg2(e28, t2, r3, n3, o3);
    }
    function wg2(e28, t2, r3) {
      var n3, o3 = t2.pendingProps, i3 = o3.children, a3 = null !== e28 ? e28.memoizedState : null;
      if ("hidden" === o3.mode)
        if (0 == (1 & t2.mode)) {
          var l3 = { baseLanes: 0, cachePool: null };
          t2.memoizedState = l3, ay2(t2, r3);
        } else {
          if (!ti2(r3, Io2)) {
            var u3;
            if (null !== a3)
              u3 = ni2(a3.baseLanes, r3);
            else
              u3 = r3;
            t2.lanes = t2.childLanes = Io2;
            var s3 = { baseLanes: u3, cachePool: null };
            return t2.memoizedState = s3, t2.updateQueue = null, ay2(t2, u3), null;
          }
          var c3 = { baseLanes: 0, cachePool: null };
          t2.memoizedState = c3, ay2(t2, null !== a3 ? a3.baseLanes : r3);
        }
      else
        null !== a3 ? (n3 = ni2(a3.baseLanes, r3), t2.memoizedState = null) : n3 = r3, ay2(t2, n3);
      return yg2(e28, t2, i3, r3), t2.child;
    }
    function kg2(e28, t2) {
      var r3 = t2.ref;
      (null === e28 && null !== r3 || null !== e28 && e28.ref !== r3) && (t2.flags |= Jr2, t2.flags |= cn2);
    }
    function Sg2(e28, t2, r3, n3, o3) {
      if (t2.type !== t2.elementType) {
        var i3 = r3.propTypes;
        i3 && Ns2(i3, n3, "prop", De2(r3));
      }
      var a3, l3, u3;
      if (a3 = Gs2(t2, qs2(0, r3, true)), Lc2(t2, o3), Kn2(t2), vg2.current = t2, qe2(true), l3 = hp2(e28, t2, r3, n3, a3, o3), u3 = gp2(), 8 & t2.mode) {
        Yn2(true);
        try {
          l3 = hp2(e28, t2, r3, n3, a3, o3), u3 = gp2();
        } finally {
          Yn2(false);
        }
      }
      return qe2(false), Zn2(), null === e28 || mg2 ? (hf2() && u3 && jd2(t2), t2.flags |= 1, yg2(e28, t2, l3, o3), t2.child) : (vp2(e28, t2, o3), Xg2(e28, t2, o3));
    }
    function Eg2(e28, t2, r3, n3, o3) {
      switch (Ob2(t2)) {
        case false:
          var i3 = t2.stateNode, l3 = new (0, t2.type)(t2.memoizedProps, i3.context).state;
          i3.updater.enqueueSetState(i3, l3, null);
          break;
        case true:
          t2.flags |= Kr2, t2.flags |= ln2;
          var u3 = new Error("Simulated error coming from DevTools"), s3 = Zo2(o3);
          t2.lanes = ni2(t2.lanes, s3), Qc2(t2, Zh2(t2, $h2(u3, t2), s3));
      }
      if (t2.type !== t2.elementType) {
        var c3 = r3.propTypes;
        c3 && Ns2(c3, n3, "prop", De2(r3));
      }
      var d3, f3;
      Qs2(r3) ? (d3 = true, tc2(t2)) : d3 = false, Lc2(t2, o3), null === t2.stateNode ? (null !== e28 && (e28.alternate = null, t2.alternate = null, t2.flags |= 2), Cd2(t2, r3, n3), wd2(t2, r3, n3, o3), f3 = true) : f3 = null === e28 ? function(e29, t3, r4, n4) {
        var o4 = e29.stateNode, i4 = e29.memoizedProps;
        o4.props = i4;
        var a3 = o4.context, l4 = t3.contextType, u4 = Vs2;
        u4 = "object" == typeof l4 && null !== l4 ? Ic2(l4) : Gs2(e29, qs2(0, t3, true));
        var s4 = t3.getDerivedStateFromProps, c4 = "function" == typeof s4 || "function" == typeof o4.getSnapshotBeforeUpdate;
        c4 || "function" != typeof o4.UNSAFE_componentWillReceiveProps && "function" != typeof o4.componentWillReceiveProps || i4 === r4 && a3 === u4 || xd2(e29, o4, r4, u4), ed2();
        var d4 = e29.memoizedState, f4 = o4.state = d4;
        if (Zc2(e29, r4, o4, n4), f4 = e29.memoizedState, i4 === r4 && d4 === f4 && !Xs2() && !td2()) {
          if ("function" == typeof o4.componentDidMount) {
            var p4 = 4;
            p4 |= dn2, 0 != (e29.mode & lo2) && (p4 |= fn2), e29.flags |= p4;
          }
          return false;
        }
        "function" == typeof s4 && (vd2(e29, t3, s4, r4), f4 = e29.memoizedState);
        var h4 = td2() || yd2(e29, t3, i4, r4, d4, f4, u4);
        if (h4) {
          if (c4 || "function" != typeof o4.UNSAFE_componentWillMount && "function" != typeof o4.componentWillMount || ("function" == typeof o4.componentWillMount && o4.componentWillMount(), "function" == typeof o4.UNSAFE_componentWillMount && o4.UNSAFE_componentWillMount()), "function" == typeof o4.componentDidMount) {
            var g3 = 4;
            g3 |= dn2, 0 != (e29.mode & lo2) && (g3 |= fn2), e29.flags |= g3;
          }
        } else {
          if ("function" == typeof o4.componentDidMount) {
            var v3 = 4;
            v3 |= dn2, 0 != (e29.mode & lo2) && (v3 |= fn2), e29.flags |= v3;
          }
          e29.memoizedProps = r4, e29.memoizedState = f4;
        }
        return o4.props = r4, o4.state = f4, o4.context = u4, h4;
      }(t2, r3, n3, o3) : function(e29, t3, r4, n4, o4) {
        var i4 = t3.stateNode;
        qc2(e29, t3);
        var a3 = t3.memoizedProps, l4 = t3.type === t3.elementType ? a3 : wc2(t3.type, a3);
        i4.props = l4;
        var u4 = t3.pendingProps, s4 = i4.context, c4 = r4.contextType, d4 = Vs2;
        d4 = "object" == typeof c4 && null !== c4 ? Ic2(c4) : Gs2(t3, qs2(0, r4, true));
        var f4 = r4.getDerivedStateFromProps, p4 = "function" == typeof f4 || "function" == typeof i4.getSnapshotBeforeUpdate;
        p4 || "function" != typeof i4.UNSAFE_componentWillReceiveProps && "function" != typeof i4.componentWillReceiveProps || a3 === u4 && s4 === d4 || xd2(t3, i4, n4, d4), ed2();
        var h4 = t3.memoizedState, g3 = i4.state = h4;
        if (Zc2(t3, n4, i4, o4), g3 = t3.memoizedState, a3 === u4 && h4 === g3 && !Xs2() && !td2())
          return "function" == typeof i4.componentDidUpdate && (a3 === e29.memoizedProps && h4 === e29.memoizedState || (t3.flags |= 4)), "function" == typeof i4.getSnapshotBeforeUpdate && (a3 === e29.memoizedProps && h4 === e29.memoizedState || (t3.flags |= en2)), false;
        "function" == typeof f4 && (vd2(t3, r4, f4, n4), g3 = t3.memoizedState);
        var v3 = td2() || yd2(t3, r4, l4, n4, h4, g3, d4) || false;
        return v3 ? (p4 || "function" != typeof i4.UNSAFE_componentWillUpdate && "function" != typeof i4.componentWillUpdate || ("function" == typeof i4.componentWillUpdate && i4.componentWillUpdate(n4, g3, d4), "function" == typeof i4.UNSAFE_componentWillUpdate && i4.UNSAFE_componentWillUpdate(n4, g3, d4)), "function" == typeof i4.componentDidUpdate && (t3.flags |= 4), "function" == typeof i4.getSnapshotBeforeUpdate && (t3.flags |= en2)) : ("function" == typeof i4.componentDidUpdate && (a3 === e29.memoizedProps && h4 === e29.memoizedState || (t3.flags |= 4)), "function" == typeof i4.getSnapshotBeforeUpdate && (a3 === e29.memoizedProps && h4 === e29.memoizedState || (t3.flags |= en2)), t3.memoizedProps = n4, t3.memoizedState = g3), i4.props = n4, i4.state = g3, i4.context = d4, v3;
      }(e28, t2, r3, n3, o3);
      var p3 = Tg2(e28, t2, r3, f3, d3, o3), h3 = t2.stateNode;
      return f3 && h3.props !== n3 && (pg2 || a2("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", Ie2(t2) || "a component"), pg2 = true), p3;
    }
    function Tg2(e28, t2, r3, n3, o3, i3) {
      kg2(e28, t2);
      var a3 = 0 != (t2.flags & Kr2);
      if (!n3 && !a3)
        return o3 && rc2(t2, r3, false), Xg2(e28, t2, i3);
      var l3, u3 = t2.stateNode;
      if (vg2.current = t2, a3 && "function" != typeof r3.getDerivedStateFromError)
        l3 = null, Ih2();
      else {
        if (Kn2(t2), qe2(true), l3 = u3.render(), 8 & t2.mode) {
          Yn2(true);
          try {
            u3.render();
          } finally {
            Yn2(false);
          }
        }
        qe2(false), Zn2();
      }
      return t2.flags |= 1, null !== e28 && a3 ? function(e29, t3, r4, n4) {
        t3.child = wf2(t3, e29.child, null, n4), t3.child = wf2(t3, null, r4, n4);
      }(e28, t2, l3, i3) : yg2(e28, t2, l3, i3), t2.memoizedState = u3.state, o3 && rc2(t2, r3, true), t2.child;
    }
    function Rg2(e28) {
      var t2 = e28.stateNode;
      t2.pendingContext ? Js2(e28, t2.pendingContext, t2.pendingContext !== t2.context) : t2.context && Js2(e28, t2.context, false), Mf2(e28, t2.containerInfo);
    }
    function Og2(e28, t2, r3, n3, o3) {
      return ff2(), gf2(o3), t2.flags |= Zr2, yg2(e28, t2, r3, n3), t2.child;
    }
    function _g2(e28, t2, r3, n3) {
      null !== e28 && (e28.alternate = null, t2.alternate = null, t2.flags |= 2);
      var o3 = t2.pendingProps, i3 = r3, a3 = i3._payload, l3 = (0, i3._init)(a3);
      t2.type = l3;
      var u3 = t2.tag = function(e29) {
        if ("function" == typeof e29)
          return ob2(e29) ? 1 : 0;
        if (null != e29) {
          var t3 = e29.$$typeof;
          if (t3 === ae2)
            return s2;
          if (t3 === se2)
            return f2;
        }
        return 2;
      }(l3), c3 = wc2(l3, o3);
      switch (u3) {
        case 0:
          return Pg2(t2, l3), t2.type = l3 = Hy2(l3), Sg2(null, t2, l3, c3, n3);
        case 1:
          return t2.type = l3 = $y2(l3), Eg2(null, t2, l3, c3, n3);
        case s2:
          return t2.type = l3 = qy2(l3), bg2(null, t2, l3, c3, n3);
        case f2:
          if (t2.type !== t2.elementType) {
            var d3 = l3.propTypes;
            d3 && Ns2(d3, c3, "prop", De2(l3));
          }
          return Cg2(null, t2, l3, wc2(l3.type, c3), n3);
      }
      var p3 = "";
      throw null !== l3 && "object" == typeof l3 && l3.$$typeof === ce2 && (p3 = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + l3 + ". Lazy element type must resolve to a class or function." + p3);
    }
    function Pg2(e28, t2) {
      if (t2 && t2.childContextTypes && a2("%s(...): childContextTypes cannot be defined on a function component.", t2.displayName || t2.name || "Component"), null !== e28.ref) {
        var r3 = "", n3 = Ve2();
        n3 && (r3 += "\n\nCheck the render method of `" + n3 + "`.");
        var o3 = n3 || "", i3 = e28._debugSource;
        i3 && (o3 = i3.fileName + ":" + i3.lineNumber), fg2[o3] || (fg2[o3] = true, a2("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", r3));
      }
      if ("function" == typeof t2.getDerivedStateFromProps) {
        var l3 = De2(t2) || "Unknown";
        dg2[l3] || (a2("%s: Function components do not support getDerivedStateFromProps.", l3), dg2[l3] = true);
      }
      if ("object" == typeof t2.contextType && null !== t2.contextType) {
        var u3 = De2(t2) || "Unknown";
        cg2[u3] || (a2("%s: Function components do not support contextType.", u3), cg2[u3] = true);
      }
    }
    ug2 = {}, sg2 = {}, cg2 = {}, dg2 = {}, fg2 = {}, pg2 = false, hg2 = {}, gg2 = {};
    var Mg2 = { dehydrated: null, treeContext: null, retryLane: 0 };
    function Bg2(e28) {
      return { baseLanes: e28, cachePool: null };
    }
    function Ag2(e28, t2) {
      return { baseLanes: ni2(e28.baseLanes, t2), cachePool: null };
    }
    function Ng2(e28, t2) {
      return oi2(e28.childLanes, t2);
    }
    function jg2(e28, t2, r3) {
      var n3 = t2.pendingProps;
      _b2(t2) && (t2.flags |= Kr2);
      var o3 = Df2.current, i3 = false, l3 = 0 != (t2.flags & Kr2);
      if (l3 || function(e29, t3, r4, n4) {
        return (null === t3 || null !== t3.memoizedState) && Lf2(e29, 2);
      }(o3, e28) ? (i3 = true, t2.flags &= -129) : null !== e28 && null === e28.memoizedState || (o3 = o3 | 1), Ff2(t2, o3 = If2(o3)), null === e28) {
        of2(t2);
        var u3 = t2.memoizedState;
        if (null !== u3) {
          var s3 = u3.dehydrated;
          if (null !== s3)
            return function(e29, t3, r4) {
              0 == (1 & e29.mode) ? (a2("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), e29.lanes = 1) : cs2(t3) ? e29.lanes = 8 : e29.lanes = Io2;
              return null;
            }(t2, s3);
        }
        var c3 = n3.children, d3 = n3.fallback;
        if (i3) {
          var f3 = function(e29, t3, r4, n4) {
            var o4, i4, a3 = e29.mode, l4 = e29.child, u4 = { mode: "hidden", children: t3 };
            0 == (1 & a3) && null !== l4 ? ((o4 = l4).childLanes = 0, o4.pendingProps = u4, 2 & e29.mode && (o4.actualDuration = 0, o4.actualStartTime = -1, o4.selfBaseDuration = 0, o4.treeBaseDuration = 0), i4 = sb2(r4, a3, n4, null)) : (o4 = Lg2(u4, a3), i4 = sb2(r4, a3, n4, null));
            return o4.return = e29, i4.return = e29, o4.sibling = i4, e29.child = o4, i4;
          }(t2, c3, d3, r3);
          return t2.child.memoizedState = Bg2(r3), t2.memoizedState = Mg2, f3;
        }
        return Dg2(t2, c3);
      }
      var p3 = e28.memoizedState;
      if (null !== p3) {
        var h3 = p3.dehydrated;
        if (null !== h3) {
          if (l3) {
            if (t2.flags & Zr2)
              return t2.flags &= -257, Ug2(e28, t2, r3, new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
            if (null !== t2.memoizedState)
              return t2.child = e28.child, t2.flags |= Kr2, null;
            var g3 = function(e29, t3, r4, n4, o4) {
              var i4 = t3.mode, a3 = Lg2({ mode: "visible", children: r4 }, i4), l4 = sb2(n4, i4, o4, null);
              l4.flags |= 2, a3.return = t3, l4.return = t3, a3.sibling = l4, t3.child = a3, 0 != (1 & t3.mode) && wf2(t3, e29.child, null, o4);
              return l4;
            }(e28, t2, n3.children, n3.fallback, r3);
            return t2.child.memoizedState = Bg2(r3), t2.memoizedState = Mg2, g3;
          }
          return function(e29, t3, r4, n4, o4) {
            if (function() {
              qd2 && a2("We should not be hydrating here. This is a bug in React. Please file a bug.");
            }(), 0 == (1 & t3.mode))
              return Ug2(e29, t3, o4, null);
            if (cs2(r4))
              return Ug2(e29, t3, o4, new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."));
            var i4 = ti2(o4, e29.childLanes);
            if (mg2 || i4) {
              var l4 = Hm2();
              if (null !== l4) {
                var u4 = function(e30, t4) {
                  var r5;
                  switch (Ko2(t4)) {
                    case 4:
                      r5 = 2;
                      break;
                    case po2:
                      r5 = 8;
                      break;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case go2:
                    case vo2:
                    case mo2:
                    case yo2:
                    case bo2:
                    case Co2:
                    case xo2:
                    case wo2:
                    case ko2:
                    case So2:
                    case Eo2:
                    case To2:
                    case Oo2:
                    case _o2:
                    case Po2:
                    case Mo2:
                    case Bo2:
                      r5 = 32;
                      break;
                    case Lo2:
                      r5 = Do2;
                      break;
                    default:
                      r5 = 0;
                  }
                  return 0 != (r5 & (e30.suspendedLanes | t4)) ? 0 : r5;
                }(l4, o4);
                if (0 !== u4 && u4 !== n4.retryLane)
                  n4.retryLane = u4, Gm2(e29, u4, Fo2);
              }
              return py2(), Ug2(e29, t3, o4, new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
            }
            if (ss2(r4)) {
              t3.flags |= Kr2, t3.child = e29.child;
              var s4 = Ry2.bind(null, e29);
              return d4 = s4, r4._reactRetry = d4, null;
            }
            Qd2(t3, r4, n4.treeContext);
            var c4 = Dg2(t3, t3.pendingProps.children);
            return c4.flags |= rn2, c4;
            var d4;
          }(e28, t2, h3, p3, r3);
        }
        if (i3) {
          var v3 = n3.fallback, m3 = Fg2(e28, t2, n3.children, v3, r3), y3 = t2.child, b3 = e28.child.memoizedState;
          return y3.memoizedState = null === b3 ? Bg2(r3) : Ag2(b3, r3), y3.childLanes = Ng2(e28, r3), t2.memoizedState = Mg2, m3;
        }
        var C3 = zg2(e28, t2, n3.children, r3);
        return t2.memoizedState = null, C3;
      }
      if (i3) {
        var x3 = n3.fallback, w3 = Fg2(e28, t2, n3.children, x3, r3), k3 = t2.child, S3 = e28.child.memoizedState;
        return k3.memoizedState = null === S3 ? Bg2(r3) : Ag2(S3, r3), k3.childLanes = Ng2(e28, r3), t2.memoizedState = Mg2, w3;
      }
      var E3 = zg2(e28, t2, n3.children, r3);
      return t2.memoizedState = null, E3;
    }
    function Dg2(e28, t2, r3) {
      var n3 = Lg2({ mode: "visible", children: t2 }, e28.mode);
      return n3.return = e28, e28.child = n3, n3;
    }
    function Lg2(e28, t2, r3) {
      return cb2(e28, t2, 0, null);
    }
    function Ig2(e28, t2) {
      return ib2(e28, t2);
    }
    function zg2(e28, t2, r3, n3) {
      var o3 = e28.child, i3 = o3.sibling, a3 = Ig2(o3, { mode: "visible", children: r3 });
      if (0 == (1 & t2.mode) && (a3.lanes = n3), a3.return = t2, a3.sibling = null, null !== i3) {
        var l3 = t2.deletions;
        null === l3 ? (t2.deletions = [i3], t2.flags |= Qr2) : l3.push(i3);
      }
      return t2.child = a3, a3;
    }
    function Fg2(e28, t2, r3, n3, o3) {
      var i3, a3, l3 = t2.mode, u3 = e28.child, s3 = u3.sibling, c3 = { mode: "hidden", children: r3 };
      0 == (1 & l3) && t2.child !== u3 ? ((i3 = t2.child).childLanes = 0, i3.pendingProps = c3, 2 & t2.mode && (i3.actualDuration = 0, i3.actualStartTime = -1, i3.selfBaseDuration = u3.selfBaseDuration, i3.treeBaseDuration = u3.treeBaseDuration), t2.deletions = null) : (i3 = Ig2(u3, c3)).subtreeFlags = u3.subtreeFlags & yn2;
      return null !== s3 ? a3 = ib2(s3, n3) : (a3 = sb2(n3, l3, o3, null)).flags |= 2, a3.return = t2, i3.return = t2, i3.sibling = a3, t2.child = i3, a3;
    }
    function Ug2(e28, t2, r3, n3) {
      null !== n3 && gf2(n3), wf2(t2, e28.child, null, r3);
      var o3 = Dg2(t2, t2.pendingProps.children);
      return o3.flags |= 2, t2.memoizedState = null, o3;
    }
    function Vg2(e28, t2, r3) {
      e28.lanes = ni2(e28.lanes, t2);
      var n3 = e28.alternate;
      null !== n3 && (n3.lanes = ni2(n3.lanes, t2)), jc2(e28.return, t2, r3);
    }
    function Wg2(e28, t2) {
      var r3 = Ct2(e28), n3 = !r3 && "function" == typeof pe2(e28);
      if (r3 || n3) {
        var o3 = r3 ? "array" : "iterable";
        return a2("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", o3, t2, o3), false;
      }
      return true;
    }
    function Hg2(e28, t2, r3, n3, o3) {
      var i3 = e28.memoizedState;
      null === i3 ? e28.memoizedState = { isBackwards: t2, rendering: null, renderingStartTime: 0, last: n3, tail: r3, tailMode: o3 } : (i3.isBackwards = t2, i3.rendering = null, i3.renderingStartTime = 0, i3.last = n3, i3.tail = r3, i3.tailMode = o3);
    }
    function $g2(e28, t2, r3) {
      var n3 = t2.pendingProps, o3 = n3.revealOrder, i3 = n3.tail, l3 = n3.children;
      !function(e29) {
        if (void 0 !== e29 && "forwards" !== e29 && "backwards" !== e29 && "together" !== e29 && !hg2[e29])
          if (hg2[e29] = true, "string" == typeof e29)
            switch (e29.toLowerCase()) {
              case "together":
              case "forwards":
              case "backwards":
                a2('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', e29, e29.toLowerCase());
                break;
              case "forward":
              case "backward":
                a2('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', e29, e29.toLowerCase());
                break;
              default:
                a2('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', e29);
            }
          else
            a2('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', e29);
      }(o3), function(e29, t3) {
        void 0 === e29 || gg2[e29] || ("collapsed" !== e29 && "hidden" !== e29 ? (gg2[e29] = true, a2('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', e29)) : "forwards" !== t3 && "backwards" !== t3 && (gg2[e29] = true, a2('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', e29)));
      }(i3, o3), function(e29, t3) {
        if (("forwards" === t3 || "backwards" === t3) && null != e29 && false !== e29)
          if (Ct2(e29)) {
            for (var r4 = 0; r4 < e29.length; r4++)
              if (!Wg2(e29[r4], r4))
                return;
          } else {
            var n4 = pe2(e29);
            if ("function" == typeof n4) {
              var o4 = n4.call(e29);
              if (o4)
                for (var i4 = o4.next(), l4 = 0; !i4.done; i4 = o4.next()) {
                  if (!Wg2(i4.value, l4))
                    return;
                  l4++;
                }
            } else
              a2('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', t3);
          }
      }(l3, o3), yg2(e28, t2, l3, r3);
      var u3 = Df2.current;
      Lf2(u3, 2) ? (u3 = zf2(u3, 2), t2.flags |= Kr2) : (null !== e28 && 0 != (e28.flags & Kr2) && function(e29, t3, r4) {
        for (var n4 = t3; null !== n4; ) {
          if (n4.tag === d2)
            null !== n4.memoizedState && Vg2(n4, r4, e29);
          else if (n4.tag === v2)
            Vg2(n4, r4, e29);
          else if (null !== n4.child) {
            n4.child.return = n4, n4 = n4.child;
            continue;
          }
          if (n4 === e29)
            return;
          for (; null === n4.sibling; ) {
            if (null === n4.return || n4.return === e29)
              return;
            n4 = n4.return;
          }
          n4.sibling.return = n4.return, n4 = n4.sibling;
        }
      }(t2, t2.child, r3), u3 = If2(u3));
      if (Ff2(t2, u3), 0 == (1 & t2.mode))
        t2.memoizedState = null;
      else
        switch (o3) {
          case "forwards":
            var s3, c3 = function(e29) {
              for (var t3 = e29, r4 = null; null !== t3; ) {
                var n4 = t3.alternate;
                null !== n4 && null === Wf2(n4) && (r4 = t3), t3 = t3.sibling;
              }
              return r4;
            }(t2.child);
            null === c3 ? (s3 = t2.child, t2.child = null) : (s3 = c3.sibling, c3.sibling = null), Hg2(t2, false, s3, c3, i3);
            break;
          case "backwards":
            var f3 = null, p3 = t2.child;
            for (t2.child = null; null !== p3; ) {
              var h3 = p3.alternate;
              if (null !== h3 && null === Wf2(h3)) {
                t2.child = p3;
                break;
              }
              var g3 = p3.sibling;
              p3.sibling = f3, f3 = p3, p3 = g3;
            }
            Hg2(t2, true, f3, null, i3);
            break;
          case "together":
            Hg2(t2, false, null, null, void 0);
            break;
          default:
            t2.memoizedState = null;
        }
      return t2.child;
    }
    var qg2 = false;
    var Yg2 = false;
    function Gg2() {
      mg2 = true;
    }
    function Xg2(e28, t2, r3) {
      return null !== e28 && (t2.dependencies = e28.dependencies), Ih2(), fy2(t2.lanes), ti2(r3, t2.childLanes) ? (function(e29, t3) {
        if (null !== e29 && t3.child !== e29.child)
          throw new Error("Resuming work not yet implemented.");
        if (null !== t3.child) {
          var r4 = t3.child, n3 = ib2(r4, r4.pendingProps);
          for (t3.child = n3, n3.return = t3; null !== r4.sibling; )
            r4 = r4.sibling, (n3 = n3.sibling = ib2(r4, r4.pendingProps)).return = t3;
          n3.sibling = null;
        }
      }(e28, t2), t2.child) : null;
    }
    function Qg2(e28, t2) {
      return !!ti2(e28.lanes, t2);
    }
    function Kg2(e28, t2, r3) {
      if (t2._debugNeedsRemount && null !== e28)
        return function(e29, t3, r4) {
          var n4 = t3.return;
          if (null === n4)
            throw new Error("Cannot swap the root fiber.");
          if (e29.alternate = null, t3.alternate = null, r4.index = t3.index, r4.sibling = t3.sibling, r4.return = t3.return, r4.ref = t3.ref, t3 === n4.child)
            n4.child = r4;
          else {
            var o4 = n4.child;
            if (null === o4)
              throw new Error("Expected parent to have a child.");
            for (; o4.sibling !== t3; )
              if (null === (o4 = o4.sibling))
                throw new Error("Expected to find the previous sibling.");
            o4.sibling = r4;
          }
          var i4 = n4.deletions;
          return null === i4 ? (n4.deletions = [e29], n4.flags |= Qr2) : i4.push(e29), r4.flags |= 2, r4;
        }(e28, t2, lb2(t2.type, t2.key, t2.pendingProps, t2._debugOwner || null, t2.mode, t2.lanes));
      if (null !== e28)
        if (e28.memoizedProps !== t2.pendingProps || Xs2() || t2.type !== e28.type)
          mg2 = true;
        else {
          if (!Qg2(e28, r3) && 0 == (t2.flags & Kr2))
            return mg2 = false, function(e29, t3, r4) {
              switch (t3.tag) {
                case 3:
                  Rg2(t3), t3.stateNode, ff2();
                  break;
                case 5:
                  Nf2(t3);
                  break;
                case 1:
                  Qs2(t3.type) && tc2(t3);
                  break;
                case 4:
                  Mf2(t3, t3.stateNode.containerInfo);
                  break;
                case u2:
                  var n4 = t3.memoizedProps.value;
                  Ac2(t3, t3.type._context, n4);
                  break;
                case c2:
                  ti2(r4, t3.childLanes) && (t3.flags |= 4);
                  var o4 = t3.stateNode;
                  o4.effectDuration = 0, o4.passiveEffectDuration = 0;
                  break;
                case d2:
                  var i4 = t3.memoizedState;
                  if (null !== i4) {
                    if (null !== i4.dehydrated)
                      return Ff2(t3, If2(Df2.current)), t3.flags |= Kr2, null;
                    if (ti2(r4, t3.child.childLanes))
                      return jg2(e29, t3, r4);
                    Ff2(t3, If2(Df2.current));
                    var a3 = Xg2(e29, t3, r4);
                    return null !== a3 ? a3.sibling : null;
                  }
                  Ff2(t3, If2(Df2.current));
                  break;
                case v2:
                  var l4 = 0 != (e29.flags & Kr2), s3 = ti2(r4, t3.childLanes);
                  if (l4) {
                    if (s3)
                      return $g2(e29, t3, r4);
                    t3.flags |= Kr2;
                  }
                  var f3 = t3.memoizedState;
                  if (null !== f3 && (f3.rendering = null, f3.tail = null, f3.lastEffect = null), Ff2(t3, Df2.current), s3)
                    break;
                  return null;
                case m2:
                case y2:
                  return t3.lanes = 0, wg2(e29, t3, r4);
              }
              return Xg2(e29, t3, r4);
            }(e28, t2, r3);
          mg2 = 0 != (e28.flags & un2);
        }
      else if (mg2 = false, hf2() && function(e29) {
        return Id2(), 0 != (e29.flags & sn2);
      }(t2)) {
        var n3 = t2.index;
        Nd2(t2, (Id2(), Td2), n3);
      }
      switch (t2.lanes = 0, t2.tag) {
        case 2:
          return function(e29, t3, r4, n4) {
            null !== e29 && (e29.alternate = null, t3.alternate = null, t3.flags |= 2);
            var o4, i4, l4, u3 = t3.pendingProps;
            if (o4 = Gs2(t3, qs2(0, r4, false)), Lc2(t3, n4), Kn2(t3), r4.prototype && "function" == typeof r4.prototype.render) {
              var s3 = De2(r4) || "Unknown";
              ug2[s3] || (a2("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", s3, s3), ug2[s3] = true);
            }
            if (8 & t3.mode && dc2.recordLegacyContextWarning(t3, null), qe2(true), vg2.current = t3, i4 = hp2(null, t3, r4, u3, o4, n4), l4 = gp2(), qe2(false), Zn2(), t3.flags |= 1, "object" == typeof i4 && null !== i4 && "function" == typeof i4.render && void 0 === i4.$$typeof) {
              var c3 = De2(r4) || "Unknown";
              sg2[c3] || (a2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", c3, c3, c3), sg2[c3] = true);
            }
            if ("object" == typeof i4 && null !== i4 && "function" == typeof i4.render && void 0 === i4.$$typeof) {
              var d3 = De2(r4) || "Unknown";
              sg2[d3] || (a2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", d3, d3, d3), sg2[d3] = true), t3.tag = 1, t3.memoizedState = null, t3.updateQueue = null;
              var f3 = false;
              return Qs2(r4) ? (f3 = true, tc2(t3)) : f3 = false, t3.memoizedState = null !== i4.state && void 0 !== i4.state ? i4.state : null, $c2(t3), bd2(t3, i4), wd2(t3, r4, u3, n4), Tg2(null, t3, r4, true, f3, n4);
            }
            if (t3.tag = 0, 8 & t3.mode) {
              Yn2(true);
              try {
                i4 = hp2(null, t3, r4, u3, o4, n4), l4 = gp2();
              } finally {
                Yn2(false);
              }
            }
            return hf2() && l4 && jd2(t3), yg2(null, t3, i4, n4), Pg2(t3, r4), t3.child;
          }(e28, t2, t2.type, r3);
        case 16:
          return _g2(e28, t2, t2.elementType, r3);
        case 0:
          var o3 = t2.type, i3 = t2.pendingProps;
          return Sg2(e28, t2, o3, t2.elementType === o3 ? i3 : wc2(o3, i3), r3);
        case 1:
          var l3 = t2.type, g3 = t2.pendingProps;
          return Eg2(e28, t2, l3, t2.elementType === l3 ? g3 : wc2(l3, g3), r3);
        case 3:
          return function(e29, t3, r4) {
            if (Rg2(t3), null === e29)
              throw new Error("Should have a current fiber. This is a bug in React.");
            var n4 = t3.pendingProps, o4 = t3.memoizedState, i4 = o4.element;
            qc2(e29, t3), Zc2(t3, n4, null, r4);
            var a3 = t3.memoizedState;
            t3.stateNode;
            var l4 = a3.element;
            if (o4.isDehydrated) {
              var u3 = { element: l4, isDehydrated: false, cache: a3.cache, transitions: a3.transitions };
              if (t3.updateQueue.baseState = u3, t3.memoizedState = u3, t3.flags & Zr2)
                return Og2(e29, t3, l4, r4, new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."));
              if (l4 !== i4)
                return Og2(e29, t3, l4, r4, new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."));
              Xd2(t3);
              var s3 = kf2(t3, null, l4, r4);
              t3.child = s3;
              for (var c3 = s3; c3; )
                c3.flags = -3 & c3.flags | rn2, c3 = c3.sibling;
            } else {
              if (ff2(), l4 === i4)
                return Xg2(e29, t3, r4);
              yg2(e29, t3, l4, r4);
            }
            return t3.child;
          }(e28, t2, r3);
        case 5:
          return function(e29, t3, r4) {
            Nf2(t3), null === e29 && of2(t3);
            var n4 = t3.type, o4 = t3.pendingProps, i4 = null !== e29 ? e29.memoizedProps : null, a3 = o4.children;
            return Xu2(n4, o4) ? a3 = null : null !== i4 && Xu2(n4, i4) && (t3.flags |= 32), kg2(e29, t3), yg2(e29, t3, a3, r4), t3.child;
          }(e28, t2, r3);
        case 6:
          return function(e29, t3) {
            return null === e29 && of2(t3), null;
          }(e28, t2);
        case d2:
          return jg2(e28, t2, r3);
        case 4:
          return function(e29, t3, r4) {
            Mf2(t3, t3.stateNode.containerInfo);
            var n4 = t3.pendingProps;
            return null === e29 ? t3.child = wf2(t3, null, n4, r4) : yg2(e29, t3, n4, r4), t3.child;
          }(e28, t2, r3);
        case s2:
          var b3 = t2.type, C3 = t2.pendingProps;
          return bg2(e28, t2, b3, t2.elementType === b3 ? C3 : wc2(b3, C3), r3);
        case 7:
          return function(e29, t3, r4) {
            return yg2(e29, t3, t3.pendingProps, r4), t3.child;
          }(e28, t2, r3);
        case 8:
          return function(e29, t3, r4) {
            return yg2(e29, t3, t3.pendingProps.children, r4), t3.child;
          }(e28, t2, r3);
        case c2:
          return function(e29, t3, r4) {
            t3.flags |= 4;
            var n4 = t3.stateNode;
            return n4.effectDuration = 0, n4.passiveEffectDuration = 0, yg2(e29, t3, t3.pendingProps.children, r4), t3.child;
          }(e28, t2, r3);
        case u2:
          return function(e29, t3, r4) {
            var n4 = t3.type._context, o4 = t3.pendingProps, i4 = t3.memoizedProps, l4 = o4.value;
            "value" in o4 || qg2 || (qg2 = true, a2("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
            var u3 = t3.type.propTypes;
            if (u3 && Ns2(u3, o4, "prop", "Context.Provider"), Ac2(t3, n4, l4), null !== i4) {
              var s3 = i4.value;
              if (sl2(s3, l4)) {
                if (i4.children === o4.children && !Xs2())
                  return Xg2(e29, t3, r4);
              } else
                Dc2(t3, n4, r4);
            }
            return yg2(e29, t3, o4.children, r4), t3.child;
          }(e28, t2, r3);
        case 9:
          return function(e29, t3, r4) {
            var n4 = t3.type;
            void 0 === n4._context ? n4 !== n4.Consumer && (Yg2 || (Yg2 = true, a2("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : n4 = n4._context;
            var o4 = t3.pendingProps.children;
            "function" != typeof o4 && a2("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), Lc2(t3, r4);
            var i4, l4 = Ic2(n4);
            return Kn2(t3), vg2.current = t3, qe2(true), i4 = o4(l4), qe2(false), Zn2(), t3.flags |= 1, yg2(e29, t3, i4, r4), t3.child;
          }(e28, t2, r3);
        case f2:
          var x3 = t2.type, w3 = wc2(x3, t2.pendingProps);
          if (t2.type !== t2.elementType) {
            var k3 = x3.propTypes;
            k3 && Ns2(k3, w3, "prop", De2(x3));
          }
          return Cg2(e28, t2, x3, w3 = wc2(x3.type, w3), r3);
        case p2:
          return xg2(e28, t2, t2.type, t2.pendingProps, r3);
        case h2:
          var S3 = t2.type, E3 = t2.pendingProps;
          return function(e29, t3, r4, n4, o4) {
            var i4;
            return null !== e29 && (e29.alternate = null, t3.alternate = null, t3.flags |= 2), t3.tag = 1, Qs2(r4) ? (i4 = true, tc2(t3)) : i4 = false, Lc2(t3, o4), Cd2(t3, r4, n4), wd2(t3, r4, n4, o4), Tg2(null, t3, r4, true, i4, o4);
          }(e28, t2, S3, t2.elementType === S3 ? E3 : wc2(S3, E3), r3);
        case v2:
          return $g2(e28, t2, r3);
        case 21:
          break;
        case m2:
          return wg2(e28, t2, r3);
      }
      throw new Error("Unknown unit of work tag (" + t2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function Zg2(e28, t2, r3) {
      switch (Ld2(t2), t2.tag) {
        case 1:
          Qs2(t2.type) && Ks2(t2);
          var n3 = t2.flags;
          return n3 & ln2 ? (t2.flags = -65537 & n3 | Kr2, 0 != (2 & t2.mode) && Hh2(t2), t2) : null;
        case 3:
          Bf2(t2), Zs2(t2), $f2();
          var o3 = t2.flags;
          return 0 != (o3 & ln2) && 0 == (o3 & Kr2) ? (t2.flags = -65537 & o3 | Kr2, t2) : null;
        case 5:
          return jf2(t2), null;
        case d2:
          Uf2(t2);
          var i3 = t2.memoizedState;
          if (null !== i3 && null !== i3.dehydrated) {
            if (null === t2.alternate)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            ff2();
          }
          var a3 = t2.flags;
          return a3 & ln2 ? (t2.flags = -65537 & a3 | Kr2, 0 != (2 & t2.mode) && Hh2(t2), t2) : null;
        case v2:
          return Uf2(t2), null;
        case 4:
          return Bf2(t2), null;
        case u2:
          return Nc2(t2.type._context, t2), null;
        case m2:
        case y2:
          return ly2(t2), null;
        default:
          return null;
      }
    }
    function Jg2(e28, t2, r3) {
      switch (Ld2(t2), t2.tag) {
        case 1:
          var n3 = t2.type.childContextTypes;
          null != n3 && Ks2(t2);
          break;
        case 3:
          Bf2(t2), Zs2(t2), $f2();
          break;
        case 5:
          jf2(t2);
          break;
        case 4:
          Bf2(t2);
          break;
        case d2:
        case v2:
          Uf2(t2);
          break;
        case u2:
          Nc2(t2.type._context, t2);
          break;
        case m2:
        case y2:
          ly2(t2);
      }
    }
    var ev2;
    ev2 = /* @__PURE__ */ new Set();
    var tv2 = false, rv2 = false, nv2 = "function" == typeof WeakSet ? WeakSet : Set, ov2 = null, iv2 = null, av2 = null;
    function lv2(e28) {
      Yr2(null, function() {
        throw e28;
      }), Gr2();
    }
    function uv2(e28, t2) {
      try {
        yv2(4, e28);
      } catch (r3) {
        lv2(r3), Sy2(e28, t2, r3);
      }
    }
    function sv2(e28, t2, r3) {
      try {
        !function(e29, t3) {
          if (t3.props = e29.memoizedProps, t3.state = e29.memoizedState, 2 & e29.mode)
            try {
              Vh2(), t3.componentWillUnmount();
            } finally {
              Fh2(e29);
            }
          else
            t3.componentWillUnmount();
        }(e28, r3);
      } catch (r4) {
        lv2(r4), Sy2(e28, t2, r4);
      }
    }
    function cv2(e28, t2) {
      try {
        wv2(e28);
      } catch (r3) {
        lv2(r3), Sy2(e28, t2, r3);
      }
    }
    function dv2(e28, t2) {
      var r3 = e28.ref;
      if (null !== r3)
        if ("function" == typeof r3) {
          var n3;
          try {
            if (2 & e28.mode)
              try {
                Vh2(), n3 = r3(null);
              } finally {
                Fh2(e28);
              }
            else
              n3 = r3(null);
          } catch (r4) {
            lv2(r4), Sy2(e28, t2, r4);
          }
          "function" == typeof n3 && a2("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Ie2(e28));
        } else
          r3.current = null;
    }
    function fv2(e28, t2, r3) {
      try {
        r3();
      } catch (r4) {
        lv2(r4), Sy2(e28, t2, r4);
      }
    }
    var pv2 = false;
    function hv2(e28, t2) {
      Yu2(e28.containerInfo), ov2 = t2, function() {
        for (; null !== ov2; ) {
          var e29 = ov2, t3 = e29.child;
          0 != (e29.subtreeFlags & hn2) && null !== t3 ? (tm2(t3, e29), ov2 = t3) : gv2();
        }
      }();
      var r3 = pv2;
      return pv2 = false, r3;
    }
    function gv2() {
      for (; null !== ov2; ) {
        var e28 = ov2;
        $e2(e28);
        try {
          vv2(e28);
        } catch (t3) {
          lv2(t3), Sy2(e28, e28.return, t3);
        }
        He2();
        var t2 = e28.sibling;
        if (null !== t2)
          return tm2(t2, e28.return), void (ov2 = t2);
        ov2 = e28.return;
      }
    }
    function vv2(e28) {
      var t2 = e28.alternate;
      if (0 != (e28.flags & en2)) {
        switch ($e2(e28), e28.tag) {
          case 0:
          case s2:
          case p2:
            break;
          case 1:
            if (null !== t2) {
              var r3 = t2.memoizedProps, n3 = t2.memoizedState, o3 = e28.stateNode;
              e28.type !== e28.elementType || pg2 || (o3.props !== e28.memoizedProps && a2("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Ie2(e28) || "instance"), o3.state !== e28.memoizedState && a2("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Ie2(e28) || "instance"));
              var i3 = o3.getSnapshotBeforeUpdate(e28.elementType === e28.type ? r3 : wc2(e28.type, r3), n3), l3 = ev2;
              void 0 !== i3 || l3.has(e28.type) || (l3.add(e28.type), a2("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", Ie2(e28))), o3.__reactInternalSnapshotBeforeUpdate = i3;
            }
            break;
          case 3:
            !function(e29) {
              if (1 === e29.nodeType)
                e29.textContent = "";
              else if (9 === e29.nodeType) {
                var t3 = e29.body;
                null != t3 && (t3.textContent = "");
              }
            }(e28.stateNode.containerInfo);
            break;
          case 5:
          case 6:
          case 4:
          case h2:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        He2();
      }
    }
    function mv2(e28, t2, r3) {
      var n3, o3 = t2.updateQueue, i3 = null !== o3 ? o3.lastEffect : null;
      if (null !== i3) {
        var a3 = i3.next, l3 = a3;
        do {
          if ((l3.tag & e28) === e28) {
            var u3 = l3.destroy;
            l3.destroy = void 0, void 0 !== u3 && (0 != (8 & e28) ? (n3 = t2, null !== Hn2 && "function" == typeof Hn2.markComponentPassiveEffectUnmountStarted && Hn2.markComponentPassiveEffectUnmountStarted(n3)) : 0 != (4 & e28) && eo2(t2), fv2(t2, r3, u3), 0 != (8 & e28) ? null !== Hn2 && "function" == typeof Hn2.markComponentPassiveEffectUnmountStopped && Hn2.markComponentPassiveEffectUnmountStopped() : 0 != (4 & e28) && to2());
          }
          l3 = l3.next;
        } while (l3 !== a3);
      }
    }
    function yv2(e28, t2) {
      var r3, n3 = t2.updateQueue, o3 = null !== n3 ? n3.lastEffect : null;
      if (null !== o3) {
        var i3 = o3.next, l3 = i3;
        do {
          if ((l3.tag & e28) === e28) {
            0 != (8 & e28) ? (r3 = t2, null !== Hn2 && "function" == typeof Hn2.markComponentPassiveEffectMountStarted && Hn2.markComponentPassiveEffectMountStarted(r3)) : 0 != (4 & e28) && Jn2(t2);
            var u3 = l3.create;
            l3.destroy = u3(), 0 != (8 & e28) ? null !== Hn2 && "function" == typeof Hn2.markComponentPassiveEffectMountStopped && Hn2.markComponentPassiveEffectMountStopped() : 0 != (4 & e28) && null !== Hn2 && "function" == typeof Hn2.markComponentLayoutEffectMountStopped && Hn2.markComponentLayoutEffectMountStopped();
            var s3 = l3.destroy;
            if (void 0 !== s3 && "function" != typeof s3) {
              var c3 = void 0;
              a2("%s must not return anything besides a function, which is used for clean-up.%s", c3 = 0 != (4 & l3.tag) ? "useLayoutEffect" : 0 != (2 & l3.tag) ? "useInsertionEffect" : "useEffect", null === s3 ? " You returned null. If your effect does not require clean up, return undefined (or nothing)." : "function" == typeof s3.then ? "\n\nIt looks like you wrote " + c3 + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + c3 + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching" : " You returned: " + s3);
            }
          }
          l3 = l3.next;
        } while (l3 !== i3);
      }
    }
    function bv2(e28, t2) {
      if (0 != (4 & t2.flags) && t2.tag === c2) {
        var r3 = t2.stateNode.passiveEffectDuration, n3 = t2.memoizedProps, o3 = n3.id, i3 = n3.onPostCommit, a3 = jh2(), l3 = null === t2.alternate ? "mount" : "update";
        Nh2() && (l3 = "nested-update"), "function" == typeof i3 && i3(o3, l3, r3, a3);
        var u3 = t2.return;
        e:
          for (; null !== u3; ) {
            switch (u3.tag) {
              case 3:
                u3.stateNode.passiveEffectDuration += r3;
                break e;
              case c2:
                u3.stateNode.passiveEffectDuration += r3;
                break e;
            }
            u3 = u3.return;
          }
      }
    }
    function Cv2(e28, t2, r3, n3) {
      if (0 != (r3.flags & vn2))
        switch (r3.tag) {
          case 0:
          case s2:
          case p2:
            if (!rv2)
              if (2 & r3.mode)
                try {
                  Vh2(), yv2(5, r3);
                } finally {
                  Fh2(r3);
                }
              else
                yv2(5, r3);
            break;
          case 1:
            var o3 = r3.stateNode;
            if (4 & r3.flags && !rv2)
              if (null === t2)
                if (r3.type !== r3.elementType || pg2 || (o3.props !== r3.memoizedProps && a2("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Ie2(r3) || "instance"), o3.state !== r3.memoizedState && a2("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Ie2(r3) || "instance")), 2 & r3.mode)
                  try {
                    Vh2(), o3.componentDidMount();
                  } finally {
                    Fh2(r3);
                  }
                else
                  o3.componentDidMount();
              else {
                var i3 = r3.elementType === r3.type ? t2.memoizedProps : wc2(r3.type, t2.memoizedProps), l3 = t2.memoizedState;
                if (r3.type !== r3.elementType || pg2 || (o3.props !== r3.memoizedProps && a2("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Ie2(r3) || "instance"), o3.state !== r3.memoizedState && a2("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Ie2(r3) || "instance")), 2 & r3.mode)
                  try {
                    Vh2(), o3.componentDidUpdate(i3, l3, o3.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    Fh2(r3);
                  }
                else
                  o3.componentDidUpdate(i3, l3, o3.__reactInternalSnapshotBeforeUpdate);
              }
            var u3 = r3.updateQueue;
            null !== u3 && (r3.type !== r3.elementType || pg2 || (o3.props !== r3.memoizedProps && a2("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Ie2(r3) || "instance"), o3.state !== r3.memoizedState && a2("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Ie2(r3) || "instance")), rd2(0, u3, o3));
            break;
          case 3:
            var f3 = r3.updateQueue;
            if (null !== f3) {
              var g3 = null;
              if (null !== r3.child)
                switch (r3.child.tag) {
                  case 5:
                  case 1:
                    g3 = r3.child.stateNode;
                }
              rd2(0, f3, g3);
            }
            break;
          case 5:
            var b3 = r3.stateNode;
            if (null === t2 && 4 & r3.flags)
              !function(e29, t3, r4, n4) {
                switch (t3) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    return void (r4.autoFocus && e29.focus());
                  case "img":
                    r4.src && (e29.src = r4.src);
                }
              }(b3, r3.type, r3.memoizedProps);
            break;
          case 6:
          case 4:
            break;
          case c2:
            var C3 = r3.memoizedProps, x3 = C3.onCommit, w3 = C3.onRender, k3 = r3.stateNode.effectDuration, S3 = jh2(), E3 = null === t2 ? "mount" : "update";
            Nh2() && (E3 = "nested-update"), "function" == typeof w3 && w3(r3.memoizedProps.id, E3, r3.actualDuration, r3.treeBaseDuration, r3.actualStartTime, S3), "function" == typeof x3 && x3(r3.memoizedProps.id, E3, k3, S3), R3 = r3, Im2.push(R3), jm2 || (jm2 = true, Iy2(Ln2, function() {
              return Cy2(), null;
            }));
            var T3 = r3.return;
            e:
              for (; null !== T3; ) {
                switch (T3.tag) {
                  case 3:
                    T3.stateNode.effectDuration += k3;
                    break e;
                  case c2:
                    T3.stateNode.effectDuration += k3;
                    break e;
                }
                T3 = T3.return;
              }
            break;
          case d2:
            !function(e29, t3) {
              if (null === t3.memoizedState) {
                var r4 = t3.alternate;
                if (null !== r4) {
                  var n4 = r4.memoizedState;
                  if (null !== n4) {
                    var o4 = n4.dehydrated;
                    null !== o4 && function(e30) {
                      Hi2(e30);
                    }(o4);
                  }
                }
              }
            }(0, r3);
            break;
          case v2:
          case h2:
          case 21:
          case m2:
          case y2:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      var R3;
      rv2 || r3.flags & Jr2 && wv2(r3);
    }
    function xv2(e28) {
      switch (e28.tag) {
        case 0:
        case s2:
        case p2:
          if (2 & e28.mode)
            try {
              Vh2(), uv2(e28, e28.return);
            } finally {
              Fh2(e28);
            }
          else
            uv2(e28, e28.return);
          break;
        case 1:
          var t2 = e28.stateNode;
          "function" == typeof t2.componentDidMount && function(e29, t3, r3) {
            try {
              r3.componentDidMount();
            } catch (r4) {
              lv2(r4), Sy2(e29, t3, r4);
            }
          }(e28, e28.return, t2), cv2(e28, e28.return);
          break;
        case 5:
          cv2(e28, e28.return);
      }
    }
    function wv2(e28) {
      var t2 = e28.ref;
      if (null !== t2) {
        var r3, n3 = e28.stateNode;
        if (e28.tag, r3 = n3, "function" == typeof t2) {
          var o3;
          if (2 & e28.mode)
            try {
              Vh2(), o3 = t2(r3);
            } finally {
              Fh2(e28);
            }
          else
            o3 = t2(r3);
          "function" == typeof o3 && a2("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Ie2(e28));
        } else
          t2.hasOwnProperty("current") || a2("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", Ie2(e28)), t2.current = r3;
      }
    }
    function kv2(e28, t2, r3) {
      switch (function(e29) {
        if (Wn2 && "function" == typeof Wn2.onCommitFiberUnmount)
          try {
            Wn2.onCommitFiberUnmount(Vn2, e29);
          } catch (e30) {
            $n2 || ($n2 = true, a2("React instrumentation encountered an error: %s", e30));
          }
      }(t2), t2.tag) {
        case 0:
        case s2:
        case f2:
        case p2:
          var n3 = t2.updateQueue;
          if (null !== n3) {
            var o3 = n3.lastEffect;
            if (null !== o3) {
              var i3 = o3.next, l3 = i3;
              do {
                var u3 = l3, c3 = u3.destroy, d3 = u3.tag;
                void 0 !== c3 && (0 != (2 & d3) ? fv2(t2, r3, c3) : 0 != (4 & d3) && (eo2(t2), 2 & t2.mode ? (Vh2(), fv2(t2, r3, c3), Fh2(t2)) : fv2(t2, r3, c3), to2())), l3 = l3.next;
              } while (l3 !== i3);
            }
          }
          return;
        case 1:
          dv2(t2, r3);
          var h3 = t2.stateNode;
          return void ("function" == typeof h3.componentWillUnmount && sv2(t2, r3, h3));
        case 5:
          return void dv2(t2, r3);
        case 4:
          return void Mv2(e28, t2, r3);
        case g2:
        case 21:
          return;
      }
    }
    function Sv2(e28, t2, r3) {
      for (var n3 = t2; ; )
        if (kv2(e28, n3, r3), null === n3.child || 4 === n3.tag) {
          if (n3 === t2)
            return;
          for (; null === n3.sibling; ) {
            if (null === n3.return || n3.return === t2)
              return;
            n3 = n3.return;
          }
          n3.sibling.return = n3.return, n3 = n3.sibling;
        } else
          n3.child.return = n3, n3 = n3.child;
    }
    function Ev2(e28) {
      var t2, r3 = e28.alternate;
      if (null !== r3 && (e28.alternate = null, Ev2(r3)), e28.child = null, e28.deletions = null, e28.sibling = null, 5 === e28.tag) {
        var n3 = e28.stateNode;
        null !== n3 && (delete (t2 = n3)[vs2], delete t2[ms2], delete t2[bs2], delete t2[Cs2], delete t2[xs2]);
      }
      e28.stateNode = null, e28._debugOwner = null, e28.return = null, e28.dependencies = null, e28.memoizedProps = null, e28.memoizedState = null, e28.pendingProps = null, e28.stateNode = null, e28.updateQueue = null;
    }
    function Tv2(e28) {
      return 5 === e28.tag || 3 === e28.tag || 4 === e28.tag;
    }
    function Rv2(e28) {
      var t2 = e28;
      e:
        for (; ; ) {
          for (; null === t2.sibling; ) {
            if (null === t2.return || Tv2(t2.return))
              return null;
            t2 = t2.return;
          }
          for (t2.sibling.return = t2.return, t2 = t2.sibling; 5 !== t2.tag && 6 !== t2.tag && t2.tag !== g2; ) {
            if (2 & t2.flags)
              continue e;
            if (null === t2.child || 4 === t2.tag)
              continue e;
            t2.child.return = t2, t2 = t2.child;
          }
          if (!(2 & t2.flags))
            return t2.stateNode;
        }
    }
    function Ov2(e28) {
      var t2 = function(e29) {
        for (var t3 = e29.return; null !== t3; ) {
          if (Tv2(t3))
            return t3;
          t3 = t3.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
      }(e28);
      switch (t2.tag) {
        case 5:
          var r3 = t2.stateNode;
          32 & t2.flags && (rs2(r3), t2.flags &= -33), Pv2(e28, Rv2(e28), r3);
          break;
        case 3:
        case 4:
          var n3 = t2.stateNode.containerInfo;
          _v2(e28, Rv2(e28), n3);
          break;
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function _v2(e28, t2, r3) {
      var n3 = e28.tag;
      if (5 === n3 || 6 === n3) {
        var o3 = e28.stateNode;
        t2 ? function(e29, t3, r4) {
          8 === e29.nodeType ? e29.parentNode.insertBefore(t3, r4) : e29.insertBefore(t3, r4);
        }(r3, o3, t2) : function(e29, t3) {
          var r4;
          8 === e29.nodeType ? (r4 = e29.parentNode).insertBefore(t3, e29) : (r4 = e29).appendChild(t3), null == e29._reactRootContainer && null === r4.onclick && Tu2(r4);
        }(r3, o3);
      } else if (4 === n3)
        ;
      else {
        var i3 = e28.child;
        if (null !== i3) {
          _v2(i3, t2, r3);
          for (var a3 = i3.sibling; null !== a3; )
            _v2(a3, t2, r3), a3 = a3.sibling;
        }
      }
    }
    function Pv2(e28, t2, r3) {
      var n3 = e28.tag;
      if (5 === n3 || 6 === n3) {
        var o3 = e28.stateNode;
        t2 ? function(e29, t3, r4) {
          e29.insertBefore(t3, r4);
        }(r3, o3, t2) : function(e29, t3) {
          e29.appendChild(t3);
        }(r3, o3);
      } else if (4 === n3)
        ;
      else {
        var i3 = e28.child;
        if (null !== i3) {
          Pv2(i3, t2, r3);
          for (var a3 = i3.sibling; null !== a3; )
            Pv2(a3, t2, r3), a3 = a3.sibling;
        }
      }
    }
    function Mv2(e28, t2, r3) {
      for (var n3, o3, i3, a3, l3 = t2, u3 = false; ; ) {
        if (!u3) {
          var s3 = l3.return;
          e:
            for (; ; ) {
              if (null === s3)
                throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              var c3 = s3.stateNode;
              switch (s3.tag) {
                case 5:
                  n3 = c3, o3 = false;
                  break e;
                case 3:
                case 4:
                  n3 = c3.containerInfo, o3 = true;
                  break e;
              }
              s3 = s3.return;
            }
          u3 = true;
        }
        if (5 === l3.tag || 6 === l3.tag)
          Sv2(e28, l3, r3), o3 ? (i3 = n3, a3 = l3.stateNode, 8 === i3.nodeType ? i3.parentNode.removeChild(a3) : i3.removeChild(a3)) : ns2(n3, l3.stateNode);
        else if (l3.tag === g2)
          o3 ? is2(n3, l3.stateNode) : os2(n3, l3.stateNode);
        else if (4 === l3.tag) {
          if (null !== l3.child) {
            n3 = l3.stateNode.containerInfo, o3 = true, l3.child.return = l3, l3 = l3.child;
            continue;
          }
        } else if (kv2(e28, l3, r3), null !== l3.child) {
          l3.child.return = l3, l3 = l3.child;
          continue;
        }
        if (l3 === t2)
          return;
        for (; null === l3.sibling; ) {
          if (null === l3.return || l3.return === t2)
            return;
          4 === (l3 = l3.return).tag && (u3 = false);
        }
        l3.sibling.return = l3.return, l3 = l3.sibling;
      }
    }
    function Bv2(e28, t2, r3) {
      var n3, o3;
      Mv2(e28, t2, r3), null !== (o3 = (n3 = t2).alternate) && (o3.return = null), n3.return = null;
    }
    function Av2(e28, t2) {
      switch (t2.tag) {
        case 0:
        case s2:
        case f2:
        case p2:
          if (mv2(3, t2, t2.return), yv2(3, t2), 2 & t2.mode)
            try {
              Vh2(), mv2(5, t2, t2.return);
            } finally {
              Fh2(t2);
            }
          else
            mv2(5, t2, t2.return);
          return;
        case 1:
          return;
        case 5:
          var r3 = t2.stateNode;
          if (null != r3) {
            var n3 = t2.memoizedProps, o3 = null !== e28 ? e28.memoizedProps : n3, i3 = t2.type, a3 = t2.updateQueue;
            t2.updateQueue = null, null !== a3 && function(e29, t3, r4, n4, o4, i4) {
              _u2(e29, t3, r4, n4, o4), Ps2(e29, o4);
            }(r3, a3, i3, o3, n3);
          }
          return;
        case 6:
          if (null === t2.stateNode)
            throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
          var l3 = t2.stateNode, u3 = t2.memoizedProps;
          null !== e28 && e28.memoizedProps;
          return void function(e29, t3, r4) {
            e29.nodeValue = r4;
          }(l3, 0, u3);
        case 3:
          if (null !== e28) {
            if (e28.memoizedState.isDehydrated) {
              var g3 = t2.stateNode;
              Hi2(g3.containerInfo);
            }
          }
          return;
        case c2:
          return;
        case d2:
          return function(e29) {
            e29.memoizedState;
          }(t2), void Nv2(t2);
        case v2:
          return void Nv2(t2);
        case h2:
          return;
      }
      throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Nv2(e28) {
      var t2 = e28.updateQueue;
      if (null !== t2) {
        e28.updateQueue = null;
        var r3 = e28.stateNode;
        null === r3 && (r3 = e28.stateNode = new nv2()), t2.forEach(function(t3) {
          var n3 = Oy2.bind(null, e28, t3);
          if (!r3.has(t3)) {
            if (r3.add(t3), qn2) {
              if (null === iv2 || null === av2)
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
              Dy2(av2, iv2);
            }
            t3.then(n3, n3);
          }
        });
      }
    }
    function jv2(e28, t2, r3) {
      iv2 = r3, av2 = e28, ov2 = t2, function(e29, t3) {
        for (; null !== ov2; ) {
          var r4 = ov2, n3 = r4.deletions;
          if (null !== n3)
            for (var o3 = 0; o3 < n3.length; o3++) {
              var i3 = n3[o3];
              try {
                Bv2(e29, i3, r4);
              } catch (e30) {
                lv2(e30), Sy2(i3, r4, e30);
              }
            }
          var a3 = r4.child;
          0 != (r4.subtreeFlags & gn2) && null !== a3 ? (tm2(a3, r4), ov2 = a3) : Dv2(e29, t3);
        }
      }(e28, r3), iv2 = null, av2 = null;
    }
    function Dv2(e28, t2) {
      for (; null !== ov2; ) {
        var r3 = ov2;
        $e2(r3);
        try {
          Lv2(r3, e28, t2);
        } catch (e29) {
          lv2(e29), Sy2(r3, r3.return, e29);
        }
        He2();
        var n3 = r3.sibling;
        if (null !== n3)
          return tm2(n3, r3.return), void (ov2 = n3);
        ov2 = r3.return;
      }
    }
    function Lv2(e28, t2, r3) {
      var n3 = e28.flags;
      if (32 & n3 && function(e29) {
        rs2(e29.stateNode);
      }(e28), n3 & Jr2) {
        var o3 = e28.alternate;
        null !== o3 && function(e29) {
          var t3 = e29.ref;
          if (null !== t3)
            if ("function" == typeof t3)
              if (2 & e29.mode)
                try {
                  Vh2(), t3(null);
                } finally {
                  Fh2(e29);
                }
              else
                t3(null);
            else
              t3.current = null;
        }(o3);
      }
      if (n3 & nn2)
        switch (e28.tag) {
          case d2:
            if (null !== e28.memoizedState) {
              var i3 = e28.alternate;
              null !== i3 && null !== i3.memoizedState || (Om2 = An2());
            }
            break;
          case m2:
            var a3 = null !== e28.memoizedState, l3 = e28.alternate, u3 = null !== l3 && null !== l3.memoizedState, s3 = e28;
            if (function(e29, t3) {
              for (var r4 = null, n4 = e29; ; ) {
                if (5 === n4.tag) {
                  if (null === r4) {
                    r4 = n4;
                    var o4 = n4.stateNode;
                    t3 ? as2(o4) : ls2(n4.stateNode, n4.memoizedProps);
                  }
                } else if (6 === n4.tag) {
                  if (null === r4) {
                    var i4 = n4.stateNode;
                    t3 ? i4.nodeValue = "" : us2(i4, n4.memoizedProps);
                  }
                } else if ((n4.tag !== m2 && n4.tag !== y2 || null === n4.memoizedState || n4 === e29) && null !== n4.child) {
                  n4.child.return = n4, n4 = n4.child;
                  continue;
                }
                if (n4 === e29)
                  return;
                for (; null === n4.sibling; ) {
                  if (null === n4.return || n4.return === e29)
                    return;
                  r4 === n4 && (r4 = null), n4 = n4.return;
                }
                r4 === n4 && (r4 = null), n4.sibling.return = n4.return, n4 = n4.sibling;
              }
            }(s3, a3), a3 && !u3 && 0 != (1 & s3.mode)) {
              ov2 = s3;
              for (var c3 = s3.child; null !== c3; )
                ov2 = c3, Uv2(c3), c3 = c3.sibling;
            }
        }
      switch (4102 & n3) {
        case 2:
          Ov2(e28), e28.flags &= -3;
          break;
        case 6:
          Ov2(e28), e28.flags &= -3, Av2(e28.alternate, e28);
          break;
        case rn2:
          e28.flags &= -4097;
          break;
        case 4100:
          e28.flags &= -4097, Av2(e28.alternate, e28);
          break;
        case 4:
          Av2(e28.alternate, e28);
      }
    }
    function Iv2(e28, t2, r3) {
      iv2 = r3, av2 = t2, ov2 = e28, zv2(e28, t2, r3), iv2 = null, av2 = null;
    }
    function zv2(e28, t2, r3) {
      for (var n3 = 0 != (1 & e28.mode); null !== ov2; ) {
        var o3 = ov2, i3 = o3.child;
        if (o3.tag === m2 && n3) {
          var a3 = null !== o3.memoizedState || tv2;
          if (a3) {
            Fv2(e28, t2, r3);
            continue;
          }
          var l3 = o3.alternate, u3 = null !== l3 && null !== l3.memoizedState, s3 = tv2, c3 = rv2;
          tv2 = a3, (rv2 = u3 || rv2) && !c3 && (ov2 = o3, Wv2(o3));
          for (var d3 = i3; null !== d3; )
            ov2 = d3, zv2(d3, t2, r3), d3 = d3.sibling;
          ov2 = o3, tv2 = s3, rv2 = c3, Fv2(e28, t2, r3);
        } else
          0 != (o3.subtreeFlags & vn2) && null !== i3 ? (tm2(i3, o3), ov2 = i3) : Fv2(e28, t2, r3);
      }
    }
    function Fv2(e28, t2, r3) {
      for (; null !== ov2; ) {
        var n3 = ov2;
        if (0 != (n3.flags & vn2)) {
          var o3 = n3.alternate;
          $e2(n3);
          try {
            Cv2(0, o3, n3);
          } catch (e29) {
            lv2(e29), Sy2(n3, n3.return, e29);
          }
          He2();
        }
        if (n3 === e28)
          return void (ov2 = null);
        var i3 = n3.sibling;
        if (null !== i3)
          return tm2(i3, n3.return), void (ov2 = i3);
        ov2 = n3.return;
      }
    }
    function Uv2(e28) {
      for (; null !== ov2; ) {
        var t2 = ov2, r3 = t2.child;
        switch (t2.tag) {
          case 0:
          case s2:
          case f2:
          case p2:
            if (2 & t2.mode)
              try {
                Vh2(), mv2(4, t2, t2.return);
              } finally {
                Fh2(t2);
              }
            else
              mv2(4, t2, t2.return);
            break;
          case 1:
            dv2(t2, t2.return);
            var n3 = t2.stateNode;
            "function" == typeof n3.componentWillUnmount && sv2(t2, t2.return, n3);
            break;
          case 5:
            dv2(t2, t2.return);
            break;
          case m2:
            if (null !== t2.memoizedState) {
              Vv2(e28);
              continue;
            }
        }
        null !== r3 ? (r3.return = t2, ov2 = r3) : Vv2(e28);
      }
    }
    function Vv2(e28) {
      for (; null !== ov2; ) {
        var t2 = ov2;
        if (t2 === e28)
          return void (ov2 = null);
        var r3 = t2.sibling;
        if (null !== r3)
          return r3.return = t2.return, void (ov2 = r3);
        ov2 = t2.return;
      }
    }
    function Wv2(e28) {
      for (; null !== ov2; ) {
        var t2 = ov2, r3 = t2.child;
        if (t2.tag === m2) {
          if (null !== t2.memoizedState) {
            Hv2(e28);
            continue;
          }
        }
        null !== r3 ? (r3.return = t2, ov2 = r3) : Hv2(e28);
      }
    }
    function Hv2(e28) {
      for (; null !== ov2; ) {
        var t2 = ov2;
        $e2(t2);
        try {
          xv2(t2);
        } catch (e29) {
          lv2(e29), Sy2(t2, t2.return, e29);
        }
        if (He2(), t2 === e28)
          return void (ov2 = null);
        var r3 = t2.sibling;
        if (null !== r3)
          return r3.return = t2.return, void (ov2 = r3);
        ov2 = t2.return;
      }
    }
    function $v2(e28, t2) {
      ov2 = t2, function(e29, t3) {
        for (; null !== ov2; ) {
          var r3 = ov2, n3 = r3.child;
          0 != (r3.subtreeFlags & mn2) && null !== n3 ? (tm2(n3, r3), ov2 = n3) : qv2(e29, t3);
        }
      }(t2, e28);
    }
    function qv2(e28, t2) {
      for (; null !== ov2; ) {
        var r3 = ov2;
        if (0 != (r3.flags & tn2)) {
          $e2(r3);
          try {
            Yv2(t2, r3);
          } catch (e29) {
            lv2(e29), Sy2(r3, r3.return, e29);
          }
          He2();
        }
        if (r3 === e28)
          return void (ov2 = null);
        var n3 = r3.sibling;
        if (null !== n3)
          return tm2(n3, r3.return), void (ov2 = n3);
        ov2 = r3.return;
      }
    }
    function Yv2(e28, t2) {
      switch (t2.tag) {
        case 0:
        case s2:
        case p2:
          if (2 & t2.mode) {
            Wh2();
            try {
              yv2(9, t2);
            } finally {
              Uh2(t2);
            }
          } else
            yv2(9, t2);
      }
    }
    function Gv2(e28) {
      ov2 = e28, function() {
        for (; null !== ov2; ) {
          var e29 = ov2, t2 = e29.child;
          if (0 != (ov2.flags & Qr2)) {
            var r3 = e29.deletions;
            if (null !== r3) {
              for (var n3 = 0; n3 < r3.length; n3++) {
                var o3 = r3[n3];
                ov2 = o3, Kv2(o3, e29);
              }
              var i3 = e29.alternate;
              if (null !== i3) {
                var a3 = i3.child;
                if (null !== a3) {
                  i3.child = null;
                  do {
                    var l3 = a3.sibling;
                    a3.sibling = null, a3 = l3;
                  } while (null !== a3);
                }
              }
              ov2 = e29;
            }
          }
          0 != (e29.subtreeFlags & mn2) && null !== t2 ? (tm2(t2, e29), ov2 = t2) : Xv2();
        }
      }();
    }
    function Xv2() {
      for (; null !== ov2; ) {
        var e28 = ov2;
        0 != (e28.flags & tn2) && ($e2(e28), Qv2(e28), He2());
        var t2 = e28.sibling;
        if (null !== t2)
          return tm2(t2, e28.return), void (ov2 = t2);
        ov2 = e28.return;
      }
    }
    function Qv2(e28) {
      switch (e28.tag) {
        case 0:
        case s2:
        case p2:
          2 & e28.mode ? (Wh2(), mv2(9, e28, e28.return), Uh2(e28)) : mv2(9, e28, e28.return);
      }
    }
    function Kv2(e28, t2) {
      for (; null !== ov2; ) {
        var r3 = ov2;
        $e2(r3), Jv2(r3, t2), He2();
        var n3 = r3.child;
        null !== n3 ? (tm2(n3, r3), ov2 = n3) : Zv2(e28);
      }
    }
    function Zv2(e28) {
      for (; null !== ov2; ) {
        var t2 = ov2, r3 = t2.sibling, n3 = t2.return;
        if (Ev2(t2), t2 === e28)
          return void (ov2 = null);
        if (null !== r3)
          return tm2(r3, n3), void (ov2 = r3);
        ov2 = n3;
      }
    }
    function Jv2(e28, t2) {
      switch (e28.tag) {
        case 0:
        case s2:
        case p2:
          2 & e28.mode ? (Wh2(), mv2(8, e28, t2), Uh2(e28)) : mv2(8, e28, t2);
      }
    }
    var em2 = false;
    function tm2(e28, t2) {
      em2 || e28.return === t2 || (em2 = true, a2("Internal React error: Return pointer is inconsistent with parent.")), e28.return = t2;
    }
    function rm2(e28) {
      switch (e28.tag) {
        case 0:
        case s2:
        case p2:
          try {
            yv2(5, e28);
          } catch (t3) {
            lv2(t3), Sy2(e28, e28.return, t3);
          }
          break;
        case 1:
          var t2 = e28.stateNode;
          try {
            t2.componentDidMount();
          } catch (t3) {
            lv2(t3), Sy2(e28, e28.return, t3);
          }
      }
    }
    function nm2(e28) {
      switch (e28.tag) {
        case 0:
        case s2:
        case p2:
          try {
            yv2(9, e28);
          } catch (t2) {
            lv2(t2), Sy2(e28, e28.return, t2);
          }
      }
    }
    function om2(e28) {
      switch (e28.tag) {
        case 0:
        case s2:
        case p2:
          try {
            mv2(5, e28, e28.return);
          } catch (t3) {
            lv2(t3), Sy2(e28, e28.return, t3);
          }
          break;
        case 1:
          var t2 = e28.stateNode;
          "function" == typeof t2.componentWillUnmount && sv2(e28, e28.return, t2);
      }
    }
    function im2(e28) {
      switch (e28.tag) {
        case 0:
        case s2:
        case p2:
          try {
            mv2(9, e28, e28.return);
          } catch (t2) {
            lv2(t2), Sy2(e28, e28.return, t2);
          }
      }
    }
    if ("function" == typeof Symbol && Symbol.for) {
      var am2 = Symbol.for;
      am2("selector.component"), am2("selector.has_pseudo_class"), am2("selector.role"), am2("selector.test_id"), am2("selector.text");
    }
    var lm2 = [];
    var um2 = n2.ReactCurrentActQueue;
    function sm2() {
      var e28 = "undefined" != typeof IS_REACT_ACT_ENVIRONMENT ? IS_REACT_ACT_ENVIRONMENT : void 0;
      return e28 || null === um2.current || a2("The current testing environment is not configured to support act(...)"), e28;
    }
    var cm2 = Math.ceil, dm2 = n2.ReactCurrentDispatcher, fm2 = n2.ReactCurrentOwner, pm2 = n2.ReactCurrentBatchConfig, hm2 = n2.ReactCurrentActQueue, gm2 = 0, vm2 = null, mm2 = null, ym2 = 0, bm2 = 0, Cm2 = zs2(0), xm2 = 0, wm2 = null, km2 = 0, Sm2 = 0, Em2 = 0, Tm2 = null, Rm2 = null, Om2 = 0, _m2 = 1 / 0;
    function Pm2() {
      _m2 = An2() + 500;
    }
    function Mm2() {
      return _m2;
    }
    var Bm2 = false, Am2 = null, Nm2 = null, jm2 = false, Dm2 = null, Lm2 = 0, Im2 = [], zm2 = 0, Fm2 = null, Um2 = 0, Vm2 = Fo2, Wm2 = 0;
    function Hm2() {
      return vm2;
    }
    function $m2() {
      return 0 != (6 & gm2) ? An2() : Vm2 !== Fo2 ? Vm2 : Vm2 = An2();
    }
    function qm2(e28) {
      var t2;
      if (0 == (1 & e28.mode))
        return 1;
      if (0 != (2 & gm2) && 0 !== ym2)
        return Zo2(ym2);
      if (null !== cc2.transition) {
        if (null !== pm2.transition) {
          var r3 = pm2.transition;
          r3._updatedFibers || (r3._updatedFibers = /* @__PURE__ */ new Set()), r3._updatedFibers.add(e28);
        }
        return 0 === Wm2 && (t2 = Uo2, 0 == ((Uo2 <<= 1) & ho2) && (Uo2 = 64), Wm2 = t2), Wm2;
      }
      var n3, o3 = wi2();
      return 0 !== o3 ? o3 : void 0 === (n3 = window.event) ? bi2 : Ki2(n3.type);
    }
    function Ym2(e28) {
      var t2;
      return 0 == (1 & e28.mode) ? 1 : (t2 = Vo2, 0 == ((Vo2 <<= 1) & Ro2) && (Vo2 = Oo2), t2);
    }
    function Gm2(e28, t2, r3) {
      !function() {
        if (zm2 > 50)
          throw zm2 = 0, Fm2 = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        Um2 > 50 && (Um2 = 0, a2("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
      }();
      var n3 = Xm2(e28, t2);
      return null === n3 ? null : (li2(n3, t2, r3), 0 != (2 & gm2) && n3 === vm2 ? function(e29) {
        if (Ue2 && !lh2)
          switch (e29.tag) {
            case 0:
            case s2:
            case p2:
              var t3 = mm2 && Ie2(mm2) || "Unknown", r4 = t3;
              if (!Ny2.has(r4))
                Ny2.add(r4), a2("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", Ie2(e29) || "Unknown", t3, t3);
              break;
            case 1:
              jy2 || (a2("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), jy2 = true);
          }
      }(e28) : (qn2 && ci2(n3, e28, t2), function(e29) {
        if (1 & e29.mode) {
          if (!sm2())
            return;
        } else {
          if (t3 = "undefined" != typeof IS_REACT_ACT_ENVIRONMENT ? IS_REACT_ACT_ENVIRONMENT : void 0, "undefined" == typeof jest || false === t3)
            return;
          if (0 !== gm2)
            return;
          if (0 !== e29.tag && e29.tag !== s2 && e29.tag !== p2)
            return;
        }
        var t3;
        if (null === hm2.current) {
          var r4 = Fe2;
          try {
            $e2(e29), a2("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", Ie2(e29));
          } finally {
            r4 ? $e2(e29) : He2();
          }
        }
      }(e28), n3 === vm2 && (0 == (2 & gm2) && (Sm2 = ni2(Sm2, t2)), 4 === xm2 && ty2(n3, ym2)), Km2(n3, r3), 1 !== t2 || 0 !== gm2 || 0 != (1 & e28.mode) || hm2.isBatchingLegacy || (Pm2(), uc2())), n3);
    }
    function Xm2(e28, t2) {
      e28.lanes = ni2(e28.lanes, t2);
      var r3 = e28.alternate;
      null !== r3 && (r3.lanes = ni2(r3.lanes, t2)), null === r3 && 0 != (4098 & e28.flags) && Ay2(e28);
      for (var n3 = e28, o3 = e28.return; null !== o3; )
        o3.childLanes = ni2(o3.childLanes, t2), null !== (r3 = o3.alternate) ? r3.childLanes = ni2(r3.childLanes, t2) : 0 != (4098 & o3.flags) && Ay2(e28), n3 = o3, o3 = o3.return;
      return 3 === n3.tag ? n3.stateNode : null;
    }
    function Qm2(e28, t2) {
      return null !== vm2 && 0 != (1 & e28.mode) && 0 == (2 & gm2);
    }
    function Km2(e28, t2) {
      var r3 = e28.callbackNode;
      !function(e29, t3) {
        for (var r4 = e29.pendingLanes, n4 = e29.suspendedLanes, o4 = e29.pingedLanes, i4 = e29.expirationTimes, a3 = r4; a3 > 0; ) {
          var l4 = Jo2(a3), u4 = 1 << l4, s4 = i4[l4];
          s4 === Fo2 ? 0 != (u4 & n4) && 0 == (u4 & o4) || (i4[l4] = $o2(u4, t3)) : s4 <= t3 && (e29.expiredLanes |= u4), a3 &= ~u4;
        }
      }(e28, t2);
      var n3 = Ho2(e28, e28 === vm2 ? ym2 : 0);
      if (0 === n3)
        return null !== r3 && zy2(r3), e28.callbackNode = null, void (e28.callbackPriority = 0);
      var o3 = Ko2(n3), i3 = e28.callbackPriority;
      if (i3 !== o3 || null !== hm2.current && r3 !== Ly2) {
        var l3, u3;
        if (null != r3 && zy2(r3), 1 === o3)
          0 === e28.tag ? (null !== hm2.isBatchingLegacy && (hm2.didScheduleLegacyUpdate = true), u3 = ry2.bind(null, e28), ic2 = true, lc2(u3)) : lc2(ry2.bind(null, e28)), null !== hm2.current ? hm2.current.push(sc2) : es(function() {
            0 === gm2 && sc2();
          }), l3 = null;
        else {
          var s3;
          switch (Ei2(n3)) {
            case mi2:
              s3 = jn2;
              break;
            case yi2:
              s3 = Dn2;
              break;
            case bi2:
              s3 = Ln2;
              break;
            case Ci2:
              s3 = zn2;
              break;
            default:
              s3 = Ln2;
          }
          l3 = Iy2(s3, Zm2.bind(null, e28));
        }
        e28.callbackPriority = o3, e28.callbackNode = l3;
      } else
        null == r3 && 1 !== i3 && a2("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Zm2(e28, t2) {
      if (Bh2 = false, Ah2 = false, Vm2 = Fo2, Wm2 = 0, 0 != (6 & gm2))
        throw new Error("Should not already be working.");
      var r3 = e28.callbackNode;
      if (Cy2() && e28.callbackNode !== r3)
        return null;
      var n3 = Ho2(e28, e28 === vm2 ? ym2 : 0);
      if (0 === n3)
        return null;
      var o3 = !Xo2(0, n3) && !function(e29, t3) {
        return 0 != (t3 & e29.expiredLanes);
      }(e28, n3) && !t2, i3 = o3 ? function(e29, t3) {
        var r4 = gm2;
        gm2 |= 2;
        var n4 = cy2();
        if (vm2 !== e29 || ym2 !== t3) {
          if (qn2) {
            var o4 = e29.memoizedUpdaters;
            o4.size > 0 && (Dy2(e29, ym2), o4.clear()), di2(e29, t3);
          }
          Pm2(), uy2(e29, t3);
        }
        oo2(t3);
        for (; ; )
          try {
            vy2();
            break;
          } catch (t4) {
            sy2(e29, t4);
          }
        return Pc2(), dy2(n4), gm2 = r4, null !== mm2 ? (null !== Hn2 && "function" == typeof Hn2.markRenderYielded && Hn2.markRenderYielded(), 0) : (io2(), vm2 = null, ym2 = 0, xm2);
      }(e28, n3) : hy2(e28, n3);
      if (0 !== i3) {
        if (2 === i3) {
          var a3 = qo2(e28);
          0 !== a3 && (n3 = a3, i3 = Jm2(e28, a3));
        }
        if (1 === i3) {
          var l3 = wm2;
          throw uy2(e28, 0), ty2(e28, n3), Km2(e28, An2()), l3;
        }
        if (6 === i3)
          ty2(e28, n3);
        else {
          var u3 = !Xo2(0, n3), s3 = e28.current.alternate;
          if (u3 && !function(e29) {
            var t3 = e29;
            for (; ; ) {
              if (t3.flags & on2) {
                var r4 = t3.updateQueue;
                if (null !== r4) {
                  var n4 = r4.stores;
                  if (null !== n4)
                    for (var o4 = 0; o4 < n4.length; o4++) {
                      var i4 = n4[o4], a4 = i4.getSnapshot, l4 = i4.value;
                      try {
                        if (!sl2(a4(), l4))
                          return false;
                      } catch (e30) {
                        return false;
                      }
                    }
                }
              }
              var u4 = t3.child;
              if (t3.subtreeFlags & on2 && null !== u4)
                u4.return = t3, t3 = u4;
              else {
                if (t3 === e29)
                  return true;
                for (; null === t3.sibling; ) {
                  if (null === t3.return || t3.return === e29)
                    return true;
                  t3 = t3.return;
                }
                t3.sibling.return = t3.return, t3 = t3.sibling;
              }
            }
            return true;
          }(s3)) {
            if (2 === (i3 = hy2(e28, n3))) {
              var c3 = qo2(e28);
              0 !== c3 && (n3 = c3, i3 = Jm2(e28, c3));
            }
            if (1 === i3) {
              var d3 = wm2;
              throw uy2(e28, 0), ty2(e28, n3), Km2(e28, An2()), d3;
            }
          }
          e28.finishedWork = s3, e28.finishedLanes = n3, function(e29, t3, r4) {
            switch (t3) {
              case 0:
              case 1:
                throw new Error("Root did not complete. This is a bug in React.");
              case 2:
              case 5:
                by2(e29, Rm2);
                break;
              case 3:
                if (ty2(e29, r4), Go2(r4) && !Fy2()) {
                  var n4 = Om2 + 500 - An2();
                  if (n4 > 10) {
                    if (0 !== Ho2(e29, 0))
                      break;
                    var o4 = e29.suspendedLanes;
                    if (!ri2(o4, r4)) {
                      $m2(), ui2(e29, o4);
                      break;
                    }
                    e29.timeoutHandle = Ku2(by2.bind(null, e29, Rm2), n4);
                    break;
                  }
                }
                by2(e29, Rm2);
                break;
              case 4:
                if (ty2(e29, r4), function(e30) {
                  return (e30 & ho2) === e30;
                }(r4))
                  break;
                if (!Fy2()) {
                  var i4 = function(e30, t4) {
                    for (var r5 = e30.eventTimes, n5 = Fo2; t4 > 0; ) {
                      var o5 = Jo2(t4), i5 = 1 << o5, a5 = r5[o5];
                      a5 > n5 && (n5 = a5), t4 &= ~i5;
                    }
                    return n5;
                  }(e29, r4), a4 = i4, l4 = An2() - a4, u4 = ((s4 = l4) < 120 ? 120 : s4 < 480 ? 480 : s4 < 1080 ? 1080 : s4 < 1920 ? 1920 : s4 < 3e3 ? 3e3 : s4 < 4320 ? 4320 : 1960 * cm2(s4 / 1960)) - l4;
                  if (u4 > 10) {
                    e29.timeoutHandle = Ku2(by2.bind(null, e29, Rm2), u4);
                    break;
                  }
                }
                by2(e29, Rm2);
                break;
              default:
                throw new Error("Unknown root exit status.");
            }
            var s4;
          }(e28, i3, n3);
        }
      }
      return Km2(e28, An2()), e28.callbackNode === r3 ? Zm2.bind(null, e28) : null;
    }
    function Jm2(e28, t2) {
      var r3 = Tm2;
      Ti2(e28) && (uy2(e28, t2).flags |= Zr2, a2("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", e28.containerInfo.nodeName.toLowerCase()));
      var n3 = hy2(e28, t2);
      if (2 !== n3) {
        var o3 = Rm2;
        Rm2 = r3, null !== o3 && ey2(o3);
      }
      return n3;
    }
    function ey2(e28) {
      null === Rm2 ? Rm2 = e28 : Rm2.push.apply(Rm2, e28);
    }
    function ty2(e28, t2) {
      t2 = oi2(t2, Em2), function(e29, t3) {
        e29.suspendedLanes |= t3, e29.pingedLanes &= ~t3;
        for (var r3 = e29.expirationTimes, n3 = t3; n3 > 0; ) {
          var o3 = Jo2(n3), i3 = 1 << o3;
          r3[o3] = Fo2, n3 &= ~i3;
        }
      }(e28, t2 = oi2(t2, Sm2));
    }
    function ry2(e28) {
      if (Bh2 = Ah2, Ah2 = false, 0 != (6 & gm2))
        throw new Error("Should not already be working.");
      Cy2();
      var t2 = Ho2(e28, 0);
      if (!ti2(t2, 1))
        return Km2(e28, An2()), null;
      var r3 = hy2(e28, t2);
      if (0 !== e28.tag && 2 === r3) {
        var n3 = qo2(e28);
        0 !== n3 && (t2 = n3, r3 = Jm2(e28, n3));
      }
      if (1 === r3) {
        var o3 = wm2;
        throw uy2(e28, 0), ty2(e28, t2), Km2(e28, An2()), o3;
      }
      if (6 === r3)
        throw new Error("Root did not complete. This is a bug in React.");
      var i3 = e28.current.alternate;
      return e28.finishedWork = i3, e28.finishedLanes = t2, by2(e28, Rm2), Km2(e28, An2()), null;
    }
    function ny2(e28, t2) {
      var r3 = gm2;
      gm2 |= 1;
      try {
        return e28(t2);
      } finally {
        0 !== (gm2 = r3) || hm2.isBatchingLegacy || (Pm2(), uc2());
      }
    }
    function oy2(e28) {
      null !== Dm2 && 0 === Dm2.tag && 0 == (6 & gm2) && Cy2();
      var t2 = gm2;
      gm2 |= 1;
      var r3 = pm2.transition, n3 = wi2();
      try {
        return pm2.transition = null, ki2(mi2), e28 ? e28() : void 0;
      } finally {
        ki2(n3), pm2.transition = r3, 0 == (6 & (gm2 = t2)) && sc2();
      }
    }
    function iy2() {
      return 0 != (6 & gm2);
    }
    function ay2(e28, t2) {
      Us2(Cm2, bm2, e28), bm2 = ni2(bm2, t2);
    }
    function ly2(e28) {
      bm2 = Cm2.current, Fs2(Cm2, e28);
    }
    function uy2(e28, t2) {
      e28.finishedWork = null, e28.finishedLanes = 0;
      var r3 = e28.timeoutHandle;
      if (-1 !== r3 && (e28.timeoutHandle = -1, Zu(r3)), null !== mm2)
        for (var n3 = mm2.return; null !== n3; ) {
          n3.alternate;
          Jg2(0, n3), n3 = n3.return;
        }
      vm2 = e28;
      var o3 = ib2(e28.current, null);
      return mm2 = o3, ym2 = bm2 = t2, xm2 = 0, wm2 = null, km2 = 0, Sm2 = 0, Em2 = 0, Tm2 = null, Rm2 = null, function() {
        if (null !== zc2) {
          for (var e29 = 0; e29 < zc2.length; e29++) {
            var t3 = zc2[e29], r4 = t3.interleaved;
            if (null !== r4) {
              t3.interleaved = null;
              var n4 = r4.next, o4 = t3.pending;
              if (null !== o4) {
                var i3 = o4.next;
                o4.next = n4, r4.next = i3;
              }
              t3.pending = r4;
            }
          }
          zc2 = null;
        }
      }(), dc2.discardPendingWarnings(), o3;
    }
    function sy2(e28, t2) {
      for (; ; ) {
        var r3 = mm2;
        try {
          if (Pc2(), mp2(), He2(), fm2.current = null, null === r3 || null === r3.return)
            return xm2 = 1, wm2 = t2, void (mm2 = null);
          2 & r3.mode && zh2(r3, true), Zn2(), null !== t2 && "object" == typeof t2 && "function" == typeof t2.then ? no2(r3, t2, ym2) : ro2(r3, t2, ym2), rg2(e28, r3.return, r3, t2, ym2), yy2(r3);
        } catch (e29) {
          t2 = e29, mm2 === r3 && null !== r3 ? (r3 = r3.return, mm2 = r3) : r3 = mm2;
          continue;
        }
        return;
      }
    }
    function cy2() {
      var e28 = dm2.current;
      return dm2.current = mh2, null === e28 ? mh2 : e28;
    }
    function dy2(e28) {
      dm2.current = e28;
    }
    function fy2(e28) {
      km2 = ni2(e28, km2);
    }
    function py2() {
      0 !== xm2 && 3 !== xm2 && 2 !== xm2 || (xm2 = 4), null !== vm2 && (Yo2(km2) || Yo2(Sm2)) && ty2(vm2, ym2);
    }
    function hy2(e28, t2) {
      var r3 = gm2;
      gm2 |= 2;
      var n3 = cy2();
      if (vm2 !== e28 || ym2 !== t2) {
        if (qn2) {
          var o3 = e28.memoizedUpdaters;
          o3.size > 0 && (Dy2(e28, ym2), o3.clear()), di2(e28, t2);
        }
        uy2(e28, t2);
      }
      for (oo2(t2); ; )
        try {
          gy2();
          break;
        } catch (t3) {
          sy2(e28, t3);
        }
      if (Pc2(), gm2 = r3, dy2(n3), null !== mm2)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return io2(), vm2 = null, ym2 = 0, xm2;
    }
    function gy2() {
      for (; null !== mm2; )
        my2(mm2);
    }
    function vy2() {
      for (; null !== mm2 && !Mn2(); )
        my2(mm2);
    }
    function my2(e28) {
      var t2, r3 = e28.alternate;
      $e2(e28), 0 != (2 & e28.mode) ? (Lh2(e28), t2 = My2(r3, e28, bm2), zh2(e28, true)) : t2 = My2(r3, e28, bm2), He2(), e28.memoizedProps = e28.pendingProps, null === t2 ? yy2(e28) : mm2 = t2, fm2.current = null;
    }
    function yy2(e28) {
      var t2 = e28;
      do {
        var r3 = t2.alternate, n3 = t2.return;
        if (0 == (t2.flags & an2)) {
          $e2(t2);
          var o3 = void 0;
          if (0 == (2 & t2.mode) ? o3 = lg(r3, t2, bm2) : (Lh2(t2), o3 = lg(r3, t2, bm2), zh2(t2, false)), He2(), null !== o3)
            return void (mm2 = o3);
        } else {
          var i3 = Zg2(0, t2);
          if (null !== i3)
            return i3.flags &= 32767, void (mm2 = i3);
          if (0 != (2 & t2.mode)) {
            zh2(t2, false);
            for (var a3 = t2.actualDuration, l3 = t2.child; null !== l3; )
              a3 += l3.actualDuration, l3 = l3.sibling;
            t2.actualDuration = a3;
          }
          if (null === n3)
            return xm2 = 6, void (mm2 = null);
          n3.flags |= an2, n3.subtreeFlags = 0, n3.deletions = null;
        }
        var u3 = t2.sibling;
        if (null !== u3)
          return void (mm2 = u3);
        mm2 = t2 = n3;
      } while (null !== t2);
      0 === xm2 && (xm2 = 5);
    }
    function by2(e28, t2) {
      var r3 = wi2(), n3 = pm2.transition;
      try {
        pm2.transition = null, ki2(mi2), function(e29, t3, r4) {
          do {
            Cy2();
          } while (null !== Dm2);
          if (function() {
            dc2.flushLegacyContextWarning(), dc2.flushPendingUnsafeLifecycleWarnings();
          }(), 0 != (6 & gm2))
            throw new Error("Should not already be working.");
          var n4 = e29.finishedWork, o3 = e29.finishedLanes;
          if (function(e30) {
            null !== Hn2 && "function" == typeof Hn2.markCommitStarted && Hn2.markCommitStarted(e30);
          }(o3), null === n4)
            return Qn2(), null;
          0 === o3 && a2("root.finishedLanes should not be empty during a commit. This is a bug in React.");
          if (e29.finishedWork = null, e29.finishedLanes = 0, n4 === e29.current)
            throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
          e29.callbackNode = null, e29.callbackPriority = 0;
          var i3 = ni2(n4.lanes, n4.childLanes);
          (function(e30, t4) {
            var r5 = e30.pendingLanes & ~t4;
            e30.pendingLanes = t4, e30.suspendedLanes = 0, e30.pingedLanes = 0, e30.expiredLanes &= t4, e30.mutableReadLanes &= t4, e30.entangledLanes &= t4;
            for (var n5 = e30.entanglements, o4 = e30.eventTimes, i4 = e30.expirationTimes, a3 = r5; a3 > 0; ) {
              var l4 = Jo2(a3), u4 = 1 << l4;
              n5[l4] = 0, o4[l4] = Fo2, i4[l4] = Fo2, a3 &= ~u4;
            }
          })(e29, i3), e29 === vm2 && (vm2 = null, mm2 = null, ym2 = 0);
          0 == (n4.subtreeFlags & mn2) && 0 == (n4.flags & mn2) || jm2 || (jm2 = true, Iy2(Ln2, function() {
            return Cy2(), null;
          }));
          var l3 = 0 != (15990 & n4.subtreeFlags), u3 = 0 != (15990 & n4.flags);
          if (l3 || u3) {
            var s3 = pm2.transition;
            pm2.transition = null;
            var c3 = wi2();
            ki2(mi2);
            var d3 = gm2;
            gm2 |= 4, fm2.current = null, hv2(e29, n4), Dh2(), jv2(e29, n4, o3), e29.containerInfo, xl2(qu2), qu2 = null, e29.current = n4, function(e30) {
              null !== Hn2 && "function" == typeof Hn2.markLayoutEffectsStarted && Hn2.markLayoutEffectsStarted(e30);
            }(o3), Iv2(n4, e29, o3), null !== Hn2 && "function" == typeof Hn2.markLayoutEffectsStopped && Hn2.markLayoutEffectsStopped(), Bn2(), gm2 = d3, ki2(c3), pm2.transition = s3;
          } else
            e29.current = n4, Dh2();
          var f3 = jm2;
          jm2 && (jm2 = false, Dm2 = e29, Lm2 = o3);
          0 === (i3 = e29.pendingLanes) && (Nm2 = null);
          f3 || _y2(e29.current, false);
          (function(e30, t4) {
            if (Wn2 && "function" == typeof Wn2.onCommitFiberRoot)
              try {
                var r5, n5 = (e30.current.flags & Kr2) === Kr2;
                switch (t4) {
                  case mi2:
                    r5 = jn2;
                    break;
                  case yi2:
                    r5 = Dn2;
                    break;
                  case bi2:
                    r5 = Ln2;
                    break;
                  case Ci2:
                    r5 = zn2;
                    break;
                  default:
                    r5 = Ln2;
                }
                Wn2.onCommitFiberRoot(Vn2, e30, r5, n5);
              } catch (e31) {
                $n2 || ($n2 = true, a2("React instrumentation encountered an error: %s", e31));
              }
          })(n4.stateNode, r4), qn2 && e29.memoizedUpdaters.clear();
          if (function() {
            lm2.forEach(function(e30) {
              return e30();
            });
          }(), Km2(e29, An2()), null !== t3)
            for (var p3 = e29.onRecoverableError, h3 = 0; h3 < t3.length; h3++) {
              p3(t3[h3]);
            }
          if (Bm2) {
            Bm2 = false;
            var g3 = Am2;
            throw Am2 = null, g3;
          }
          ti2(Lm2, 1) && 0 !== e29.tag && Cy2();
          ti2(i3 = e29.pendingLanes, 1) ? (Ah2 = true, e29 === Fm2 ? zm2++ : (zm2 = 0, Fm2 = e29)) : zm2 = 0;
          sc2(), Qn2();
        }(e28, t2, r3);
      } finally {
        pm2.transition = n3, ki2(r3);
      }
      return null;
    }
    function Cy2() {
      if (null !== Dm2) {
        var e28 = Ei2(Lm2), t2 = function(e29, t3) {
          return 0 === e29 || e29 > t3 ? e29 : t3;
        }(bi2, e28), r3 = pm2.transition, n3 = wi2();
        try {
          return pm2.transition = null, ki2(t2), function() {
            if (null === Dm2)
              return false;
            var e29 = Dm2, t3 = Lm2;
            if (Dm2 = null, Lm2 = 0, 0 != (6 & gm2))
              throw new Error("Cannot flush passive effects while already rendering.");
            !function(e30) {
              null !== Hn2 && "function" == typeof Hn2.markPassiveEffectsStarted && Hn2.markPassiveEffectsStarted(e30);
            }(t3);
            var r4 = gm2;
            gm2 |= 4, Gv2(e29.current), $v2(e29, e29.current);
            var n4 = Im2;
            Im2 = [];
            for (var o3 = 0; o3 < n4.length; o3++) {
              bv2(0, n4[o3]);
            }
            null !== Hn2 && "function" == typeof Hn2.markPassiveEffectsStopped && Hn2.markPassiveEffectsStopped(), _y2(e29.current, true), gm2 = r4, sc2(), Um2 = null === Dm2 ? 0 : Um2 + 1, function(e30) {
              if (Wn2 && "function" == typeof Wn2.onPostCommitFiberRoot)
                try {
                  Wn2.onPostCommitFiberRoot(Vn2, e30);
                } catch (e31) {
                  $n2 || ($n2 = true, a2("React instrumentation encountered an error: %s", e31));
                }
            }(e29);
            var i3 = e29.current.stateNode;
            return i3.effectDuration = 0, i3.passiveEffectDuration = 0, true;
          }();
        } finally {
          ki2(n3), pm2.transition = r3;
        }
      }
      return false;
    }
    function xy2(e28) {
      return null !== Nm2 && Nm2.has(e28);
    }
    var wy2 = function(e28) {
      Bm2 || (Bm2 = true, Am2 = e28);
    };
    function ky2(e28, t2, r3) {
      Gc2(e28, Kh2(e28, $h2(r3, t2), 1));
      var n3 = $m2(), o3 = Xm2(e28, 1);
      null !== o3 && (li2(o3, 1, n3), Km2(o3, n3));
    }
    function Sy2(e28, t2, r3) {
      if (3 !== e28.tag) {
        var n3 = null;
        for (n3 = t2; null !== n3; ) {
          if (3 === n3.tag)
            return void ky2(n3, e28, r3);
          if (1 === n3.tag) {
            var o3 = n3.type, i3 = n3.stateNode;
            if ("function" == typeof o3.getDerivedStateFromError || "function" == typeof i3.componentDidCatch && !xy2(i3)) {
              Gc2(n3, Zh2(n3, $h2(r3, e28), 1));
              var l3 = $m2(), u3 = Xm2(n3, 1);
              return void (null !== u3 && (li2(u3, 1, l3), Km2(u3, l3)));
            }
          }
          n3 = n3.return;
        }
        a2("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", r3);
      } else
        ky2(e28, e28, r3);
    }
    function Ey2(e28, t2, r3) {
      var n3 = e28.pingCache;
      null !== n3 && n3.delete(t2);
      var o3 = $m2();
      ui2(e28, r3), function(e29) {
        0 !== e29.tag && sm2() && null === hm2.current && a2("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
      }(e28), vm2 === e28 && ri2(ym2, r3) && (4 === xm2 || 3 === xm2 && Go2(ym2) && An2() - Om2 < 500 ? uy2(e28, 0) : Em2 = ni2(Em2, r3)), Km2(e28, o3);
    }
    function Ty2(e28, t2) {
      0 === t2 && (t2 = Ym2(e28));
      var r3 = $m2(), n3 = Xm2(e28, t2);
      null !== n3 && (li2(n3, t2, r3), Km2(n3, r3));
    }
    function Ry2(e28) {
      var t2 = e28.memoizedState, r3 = 0;
      null !== t2 && (r3 = t2.retryLane), Ty2(e28, r3);
    }
    function Oy2(e28, t2) {
      var r3, n3 = 0;
      switch (e28.tag) {
        case d2:
          r3 = e28.stateNode;
          var o3 = e28.memoizedState;
          null !== o3 && (n3 = o3.retryLane);
          break;
        case v2:
          r3 = e28.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      null !== r3 && r3.delete(t2), Ty2(e28, n3);
    }
    function _y2(e28, t2) {
      $e2(e28), Py2(e28, fn2, om2), t2 && Py2(e28, pn2, im2), Py2(e28, fn2, rm2), t2 && Py2(e28, pn2, nm2), He2();
    }
    function Py2(e28, t2, r3) {
      for (var n3 = e28, o3 = null; null !== n3; ) {
        var i3 = n3.subtreeFlags & t2;
        n3 !== o3 && null !== n3.child && 0 !== i3 ? n3 = n3.child : (0 != (n3.flags & t2) && r3(n3), n3 = null !== n3.sibling ? n3.sibling : o3 = n3.return);
      }
    }
    var My2, By2 = null;
    function Ay2(e28) {
      if (0 == (2 & gm2) && 1 & e28.mode) {
        var t2 = e28.tag;
        if (2 === t2 || 3 === t2 || 1 === t2 || 0 === t2 || t2 === s2 || t2 === f2 || t2 === p2) {
          var r3 = Ie2(e28) || "ReactComponent";
          if (null !== By2) {
            if (By2.has(r3))
              return;
            By2.add(r3);
          } else
            By2 = /* @__PURE__ */ new Set([r3]);
          var n3 = Fe2;
          try {
            $e2(e28), a2("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
          } finally {
            n3 ? $e2(e28) : He2();
          }
        }
      }
    }
    My2 = function(e28, t2, r3) {
      var n3 = pb2(null, t2);
      try {
        return Kg2(e28, t2, r3);
      } catch (i3) {
        if (null !== i3 && "object" == typeof i3 && "function" == typeof i3.then)
          throw i3;
        if (Pc2(), mp2(), Jg2(0, t2), pb2(t2, n3), 2 & t2.mode && Lh2(t2), Yr2(null, Kg2, null, e28, t2, r3), Vr2) {
          var o3 = Gr2();
          "object" == typeof o3 && null !== o3 && o3._suppressLogging && "object" == typeof i3 && null !== i3 && !i3._suppressLogging && (i3._suppressLogging = true);
        }
        throw i3;
      }
    };
    var Ny2, jy2 = false;
    function Dy2(e28, t2) {
      qn2 && e28.memoizedUpdaters.forEach(function(r3) {
        ci2(e28, r3, t2);
      });
    }
    Ny2 = /* @__PURE__ */ new Set();
    var Ly2 = {};
    function Iy2(e28, t2) {
      var r3 = hm2.current;
      return null !== r3 ? (r3.push(t2), Ly2) : _n2(e28, t2);
    }
    function zy2(e28) {
      if (e28 !== Ly2)
        return Pn2(e28);
    }
    function Fy2() {
      return null !== hm2.current;
    }
    var Uy2 = null, Vy2 = null, Wy2 = function(e28) {
      Uy2 = e28;
    };
    function Hy2(e28) {
      if (null === Uy2)
        return e28;
      var t2 = Uy2(e28);
      return void 0 === t2 ? e28 : t2.current;
    }
    function $y2(e28) {
      return Hy2(e28);
    }
    function qy2(e28) {
      if (null === Uy2)
        return e28;
      var t2 = Uy2(e28);
      if (void 0 === t2) {
        if (null != e28 && "function" == typeof e28.render) {
          var r3 = Hy2(e28.render);
          if (e28.render !== r3) {
            var n3 = { $$typeof: ae2, render: r3 };
            return void 0 !== e28.displayName && (n3.displayName = e28.displayName), n3;
          }
        }
        return e28;
      }
      return t2.current;
    }
    function Yy2(e28, t2) {
      if (null === Uy2)
        return false;
      var r3 = e28.elementType, n3 = t2.type, o3 = false, i3 = "object" == typeof n3 && null !== n3 ? n3.$$typeof : null;
      switch (e28.tag) {
        case 1:
          "function" == typeof n3 && (o3 = true);
          break;
        case 0:
          ("function" == typeof n3 || i3 === ce2) && (o3 = true);
          break;
        case s2:
          (i3 === ae2 || i3 === ce2) && (o3 = true);
          break;
        case f2:
        case p2:
          (i3 === se2 || i3 === ce2) && (o3 = true);
          break;
        default:
          return false;
      }
      if (o3) {
        var a3 = Uy2(r3);
        if (void 0 !== a3 && a3 === Uy2(n3))
          return true;
      }
      return false;
    }
    function Gy2(e28) {
      null !== Uy2 && "function" == typeof WeakSet && (null === Vy2 && (Vy2 = /* @__PURE__ */ new WeakSet()), Vy2.add(e28));
    }
    var Xy2 = function(e28, t2) {
      if (null !== Uy2) {
        var r3 = t2.staleFamilies, n3 = t2.updatedFamilies;
        Cy2(), oy2(function() {
          Ky2(e28.current, n3, r3);
        });
      }
    }, Qy2 = function(e28, t2) {
      e28.context === Vs2 && (Cy2(), oy2(function() {
        kb2(t2, e28, null, null);
      }));
    };
    function Ky2(e28, t2, r3) {
      var n3 = e28.alternate, o3 = e28.child, i3 = e28.sibling, a3 = e28.tag, l3 = e28.type, u3 = null;
      switch (a3) {
        case 0:
        case p2:
        case 1:
          u3 = l3;
          break;
        case s2:
          u3 = l3.render;
      }
      if (null === Uy2)
        throw new Error("Expected resolveFamily to be set during hot reload.");
      var c3 = false, d3 = false;
      if (null !== u3) {
        var f3 = Uy2(u3);
        void 0 !== f3 && (r3.has(f3) ? d3 = true : t2.has(f3) && (1 === a3 ? d3 = true : c3 = true));
      }
      null !== Vy2 && (Vy2.has(e28) || null !== n3 && Vy2.has(n3)) && (d3 = true), d3 && (e28._debugNeedsRemount = true), (d3 || c3) && Gm2(e28, 1, Fo2), null === o3 || d3 || Ky2(o3, t2, r3), null !== i3 && Ky2(i3, t2, r3);
    }
    var Zy2, Jy2 = function(e28, t2) {
      var r3 = /* @__PURE__ */ new Set(), n3 = new Set(t2.map(function(e29) {
        return e29.current;
      }));
      return eb2(e28.current, n3, r3), r3;
    };
    function eb2(e28, t2, r3) {
      var n3 = e28.child, o3 = e28.sibling, i3 = e28.tag, a3 = e28.type, l3 = null;
      switch (i3) {
        case 0:
        case p2:
        case 1:
          l3 = a3;
          break;
        case s2:
          l3 = a3.render;
      }
      var u3 = false;
      null !== l3 && t2.has(l3) && (u3 = true), u3 ? function(e29, t3) {
        if (function(e30, t4) {
          var r5 = e30, n4 = false;
          for (; ; ) {
            if (5 === r5.tag)
              n4 = true, t4.add(r5.stateNode);
            else if (null !== r5.child) {
              r5.child.return = r5, r5 = r5.child;
              continue;
            }
            if (r5 === e30)
              return n4;
            for (; null === r5.sibling; ) {
              if (null === r5.return || r5.return === e30)
                return n4;
              r5 = r5.return;
            }
            r5.sibling.return = r5.return, r5 = r5.sibling;
          }
          return false;
        }(e29, t3))
          return;
        var r4 = e29;
        for (; ; ) {
          switch (r4.tag) {
            case 5:
              return void t3.add(r4.stateNode);
            case 4:
            case 3:
              return void t3.add(r4.stateNode.containerInfo);
          }
          if (null === r4.return)
            throw new Error("Expected to reach root first.");
          r4 = r4.return;
        }
      }(e28, r3) : null !== n3 && eb2(n3, t2, r3), null !== o3 && eb2(o3, t2, r3);
    }
    Zy2 = false;
    try {
      var tb2 = Object.preventExtensions({});
      /* @__PURE__ */ new Map([[tb2, null]]), /* @__PURE__ */ new Set([tb2]);
    } catch (e28) {
      Zy2 = true;
    }
    function rb2(e28, t2, r3, n3) {
      this.tag = e28, this.key = r3, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = t2, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = n3, this.flags = 0, this.subtreeFlags = 0, this.deletions = null, this.lanes = 0, this.childLanes = 0, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = false, this._debugHookTypes = null, Zy2 || "function" != typeof Object.preventExtensions || Object.preventExtensions(this);
    }
    var nb2 = function(e28, t2, r3, n3) {
      return new rb2(e28, t2, r3, n3);
    };
    function ob2(e28) {
      var t2 = e28.prototype;
      return !(!t2 || !t2.isReactComponent);
    }
    function ib2(e28, t2) {
      var r3 = e28.alternate;
      null === r3 ? ((r3 = nb2(e28.tag, t2, e28.key, e28.mode)).elementType = e28.elementType, r3.type = e28.type, r3.stateNode = e28.stateNode, r3._debugSource = e28._debugSource, r3._debugOwner = e28._debugOwner, r3._debugHookTypes = e28._debugHookTypes, r3.alternate = e28, e28.alternate = r3) : (r3.pendingProps = t2, r3.type = e28.type, r3.flags = 0, r3.subtreeFlags = 0, r3.deletions = null, r3.actualDuration = 0, r3.actualStartTime = -1), r3.flags = e28.flags & yn2, r3.childLanes = e28.childLanes, r3.lanes = e28.lanes, r3.child = e28.child, r3.memoizedProps = e28.memoizedProps, r3.memoizedState = e28.memoizedState, r3.updateQueue = e28.updateQueue;
      var n3 = e28.dependencies;
      switch (r3.dependencies = null === n3 ? null : { lanes: n3.lanes, firstContext: n3.firstContext }, r3.sibling = e28.sibling, r3.index = e28.index, r3.ref = e28.ref, r3.selfBaseDuration = e28.selfBaseDuration, r3.treeBaseDuration = e28.treeBaseDuration, r3._debugNeedsRemount = e28._debugNeedsRemount, r3.tag) {
        case 2:
        case 0:
        case p2:
          r3.type = Hy2(e28.type);
          break;
        case 1:
          r3.type = $y2(e28.type);
          break;
        case s2:
          r3.type = qy2(e28.type);
      }
      return r3;
    }
    function ab2(e28, t2) {
      e28.flags &= 14680066;
      var r3 = e28.alternate;
      if (null === r3)
        e28.childLanes = 0, e28.lanes = t2, e28.child = null, e28.subtreeFlags = 0, e28.memoizedProps = null, e28.memoizedState = null, e28.updateQueue = null, e28.dependencies = null, e28.stateNode = null, e28.selfBaseDuration = 0, e28.treeBaseDuration = 0;
      else {
        e28.childLanes = r3.childLanes, e28.lanes = r3.lanes, e28.child = r3.child, e28.subtreeFlags = 0, e28.deletions = null, e28.memoizedProps = r3.memoizedProps, e28.memoizedState = r3.memoizedState, e28.updateQueue = r3.updateQueue, e28.type = r3.type;
        var n3 = r3.dependencies;
        e28.dependencies = null === n3 ? null : { lanes: n3.lanes, firstContext: n3.firstContext }, e28.selfBaseDuration = r3.selfBaseDuration, e28.treeBaseDuration = r3.treeBaseDuration;
      }
      return e28;
    }
    function lb2(e28, t2, r3, n3, o3, i3) {
      var l3 = 2, p3 = e28;
      if ("function" == typeof e28)
        ob2(e28) ? (l3 = 1, p3 = $y2(p3)) : p3 = Hy2(p3);
      else if ("string" == typeof e28)
        l3 = 5;
      else
        e:
          switch (e28) {
            case te2:
              return sb2(r3.children, o3, i3, t2);
            case re2:
              l3 = 8, 0 != (1 & (o3 |= 8)) && (o3 |= lo2);
              break;
            case ne2:
              return function(e29, t3, r4, n4) {
                "string" != typeof e29.id && a2('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof e29.id);
                var o4 = nb2(c2, e29, n4, 2 | t3);
                return o4.elementType = ne2, o4.lanes = r4, o4.stateNode = { effectDuration: 0, passiveEffectDuration: 0 }, o4;
              }(r3, o3, i3, t2);
            case le2:
              return function(e29, t3, r4, n4) {
                var o4 = nb2(d2, e29, n4, t3);
                return o4.elementType = le2, o4.lanes = r4, o4;
              }(r3, o3, i3, t2);
            case ue2:
              return function(e29, t3, r4, n4) {
                var o4 = nb2(v2, e29, n4, t3);
                return o4.elementType = ue2, o4.lanes = r4, o4;
              }(r3, o3, i3, t2);
            case de2:
              return cb2(r3, o3, i3, t2);
            default:
              if ("object" == typeof e28 && null !== e28)
                switch (e28.$$typeof) {
                  case oe2:
                    l3 = u2;
                    break e;
                  case ie2:
                    l3 = 9;
                    break e;
                  case ae2:
                    l3 = s2, p3 = qy2(p3);
                    break e;
                  case se2:
                    l3 = f2;
                    break e;
                  case ce2:
                    l3 = 16, p3 = null;
                    break e;
                }
              var h3 = "";
              (void 0 === e28 || "object" == typeof e28 && null !== e28 && 0 === Object.keys(e28).length) && (h3 += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
              var g3 = n3 ? Ie2(n3) : null;
              throw g3 && (h3 += "\n\nCheck the render method of `" + g3 + "`."), new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == e28 ? e28 : typeof e28) + "." + h3);
          }
      var m3 = nb2(l3, r3, t2, o3);
      return m3.elementType = e28, m3.type = p3, m3.lanes = i3, m3._debugOwner = n3, m3;
    }
    function ub2(e28, t2, r3) {
      var n3;
      n3 = e28._owner;
      var o3 = lb2(e28.type, e28.key, e28.props, n3, t2, r3);
      return o3._debugSource = e28._source, o3._debugOwner = e28._owner, o3;
    }
    function sb2(e28, t2, r3, n3) {
      var o3 = nb2(7, e28, n3, t2);
      return o3.lanes = r3, o3;
    }
    function cb2(e28, t2, r3, n3) {
      var o3 = nb2(m2, e28, n3, t2);
      o3.elementType = de2, o3.lanes = r3;
      return o3.stateNode = {}, o3;
    }
    function db2(e28, t2, r3) {
      var n3 = nb2(6, e28, null, t2);
      return n3.lanes = r3, n3;
    }
    function fb2(e28, t2, r3) {
      var n3 = null !== e28.children ? e28.children : [], o3 = nb2(4, n3, e28.key, t2);
      return o3.lanes = r3, o3.stateNode = { containerInfo: e28.containerInfo, pendingChildren: null, implementation: e28.implementation }, o3;
    }
    function pb2(e28, t2) {
      return null === e28 && (e28 = nb2(2, null, null, 0)), e28.tag = t2.tag, e28.key = t2.key, e28.elementType = t2.elementType, e28.type = t2.type, e28.stateNode = t2.stateNode, e28.return = t2.return, e28.child = t2.child, e28.sibling = t2.sibling, e28.index = t2.index, e28.ref = t2.ref, e28.pendingProps = t2.pendingProps, e28.memoizedProps = t2.memoizedProps, e28.updateQueue = t2.updateQueue, e28.memoizedState = t2.memoizedState, e28.dependencies = t2.dependencies, e28.mode = t2.mode, e28.flags = t2.flags, e28.subtreeFlags = t2.subtreeFlags, e28.deletions = t2.deletions, e28.lanes = t2.lanes, e28.childLanes = t2.childLanes, e28.alternate = t2.alternate, e28.actualDuration = t2.actualDuration, e28.actualStartTime = t2.actualStartTime, e28.selfBaseDuration = t2.selfBaseDuration, e28.treeBaseDuration = t2.treeBaseDuration, e28._debugSource = t2._debugSource, e28._debugOwner = t2._debugOwner, e28._debugNeedsRemount = t2._debugNeedsRemount, e28._debugHookTypes = t2._debugHookTypes, e28;
    }
    function hb2(e28, t2, r3, n3, o3) {
      this.tag = t2, this.containerInfo = e28, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = -1, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = 0, this.eventTimes = ai2(0), this.expirationTimes = ai2(Fo2), this.pendingLanes = 0, this.suspendedLanes = 0, this.pingedLanes = 0, this.expiredLanes = 0, this.mutableReadLanes = 0, this.finishedLanes = 0, this.entangledLanes = 0, this.entanglements = ai2(0), this.identifierPrefix = n3, this.onRecoverableError = o3, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0, this.memoizedUpdaters = /* @__PURE__ */ new Set();
      for (var i3 = this.pendingUpdatersLaneMap = [], a3 = 0; a3 < fo2; a3++)
        i3.push(/* @__PURE__ */ new Set());
      switch (t2) {
        case 1:
          this._debugRootType = r3 ? "hydrateRoot()" : "createRoot()";
          break;
        case 0:
          this._debugRootType = r3 ? "hydrate()" : "render()";
      }
    }
    function gb2(e28, t2, r3, n3, o3, i3, a3, l3, u3, s3) {
      var c3 = new hb2(e28, t2, r3, l3, u3), d3 = function(e29, t3, r4) {
        var n4;
        return 1 === e29 ? (n4 = 1, true === t3 && (n4 |= 8, n4 |= lo2)) : n4 = 0, qn2 && (n4 |= 2), nb2(3, null, null, n4);
      }(t2, i3);
      c3.current = d3, d3.stateNode = c3;
      var f3 = { element: n3, isDehydrated: r3, cache: null, transitions: null };
      return d3.memoizedState = f3, $c2(d3), c3;
    }
    var vb2, mb2, yb2 = "18.0.0-fc46dba67-20220329";
    function bb2(e28, t2, r3) {
      var n3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
      return M2(n3), { $$typeof: ee2, key: null == n3 ? null : "" + n3, children: e28, containerInfo: t2, implementation: r3 };
    }
    function Cb2(e28) {
      if (!e28)
        return Vs2;
      var t2 = Xr2(e28), r3 = nc2(t2);
      if (1 === t2.tag) {
        var n3 = t2.type;
        if (Qs2(n3))
          return ec2(t2, n3, r3);
      }
      return r3;
    }
    function xb2(e28, t2, r3, n3, o3, i3, a3, l3) {
      return gb2(e28, t2, false, null, 0, n3, 0, i3, a3);
    }
    function wb2(e28, t2, r3, n3, o3, i3, a3, l3, u3, s3) {
      var c3 = gb2(r3, n3, true, e28, 0, i3, 0, l3, u3);
      c3.context = Cb2(null);
      var d3 = c3.current, f3 = $m2(), p3 = qm2(d3), h3 = Yc2(f3, p3);
      return h3.callback = null != t2 ? t2 : null, Gc2(d3, h3), function(e29, t3, r4) {
        e29.current.lanes = t3, li2(e29, t3, r4), Km2(e29, r4);
      }(c3, p3, f3), c3;
    }
    function kb2(e28, t2, r3, n3) {
      !function(e29, t3) {
        if (Wn2 && "function" == typeof Wn2.onScheduleFiberRoot)
          try {
            Wn2.onScheduleFiberRoot(Vn2, e29, t3);
          } catch (e30) {
            $n2 || ($n2 = true, a2("React instrumentation encountered an error: %s", e30));
          }
      }(t2, e28);
      var o3 = t2.current, i3 = $m2(), l3 = qm2(o3);
      !function(e29) {
        null !== Hn2 && "function" == typeof Hn2.markRenderScheduled && Hn2.markRenderScheduled(e29);
      }(l3);
      var u3 = Cb2(r3);
      null === t2.context ? t2.context = u3 : t2.pendingContext = u3, Ue2 && null !== Fe2 && !vb2 && (vb2 = true, a2("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", Ie2(Fe2) || "Unknown"));
      var s3 = Yc2(i3, l3);
      s3.payload = { element: e28 }, null !== (n3 = void 0 === n3 ? null : n3) && ("function" != typeof n3 && a2("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", n3), s3.callback = n3), Gc2(o3, s3);
      var c3 = Gm2(o3, l3, i3);
      return null !== c3 && Xc2(c3, o3, l3), l3;
    }
    function Sb2(e28) {
      var t2 = e28.current;
      return t2.child ? (t2.child.tag, t2.child.stateNode) : null;
    }
    function Eb2(e28, t2) {
      var r3 = e28.memoizedState;
      null !== r3 && null !== r3.dehydrated && (r3.retryLane = function(e29, t3) {
        return 0 !== e29 && e29 < t3 ? e29 : t3;
      }(r3.retryLane, t2));
    }
    function Tb2(e28, t2) {
      Eb2(e28, t2);
      var r3 = e28.alternate;
      r3 && Eb2(r3, t2);
    }
    function Rb2(e28) {
      var t2 = Rn2(e28);
      return null === t2 ? null : t2.stateNode;
    }
    vb2 = false, mb2 = {};
    var Ob2 = function(e28) {
      return null;
    };
    var _b2 = function(e28) {
      return false;
    };
    var Pb2, Mb2, Bb2, Ab2, Nb2, jb2, Db2, Lb2, Ib2, zb2 = function(e28, t2, r3) {
      var n3 = t2[r3], o3 = Ct2(e28) ? e28.slice() : xe2({}, e28);
      return r3 + 1 === t2.length ? (Ct2(o3) ? o3.splice(n3, 1) : delete o3[n3], o3) : (o3[n3] = zb2(e28[n3], t2, r3 + 1), o3);
    }, Fb2 = function(e28, t2) {
      return zb2(e28, t2, 0);
    }, Ub2 = function(e28, t2, r3, n3) {
      var o3 = t2[n3], i3 = Ct2(e28) ? e28.slice() : xe2({}, e28);
      n3 + 1 === t2.length ? (i3[r3[n3]] = i3[o3], Ct2(i3) ? i3.splice(o3, 1) : delete i3[o3]) : i3[o3] = Ub2(e28[o3], t2, r3, n3 + 1);
      return i3;
    }, Vb2 = function(e28, t2, r3) {
      if (t2.length === r3.length) {
        for (var n3 = 0; n3 < r3.length - 1; n3++)
          if (t2[n3] !== r3[n3])
            return void i2("copyWithRename() expects paths to be the same except for the deepest key");
        return Ub2(e28, t2, r3, 0);
      }
      i2("copyWithRename() expects paths of the same length");
    }, Wb2 = function(e28, t2, r3, n3) {
      if (r3 >= t2.length)
        return n3;
      var o3 = t2[r3], i3 = Ct2(e28) ? e28.slice() : xe2({}, e28);
      return i3[o3] = Wb2(e28[o3], t2, r3 + 1, n3), i3;
    }, Hb2 = function(e28, t2, r3) {
      return Wb2(e28, t2, 0, r3);
    }, $b2 = function(e28, t2) {
      for (var r3 = e28.memoizedState; null !== r3 && t2 > 0; )
        r3 = r3.next, t2--;
      return r3;
    };
    function qb2(e28) {
      var t2 = En2(e28);
      return null === t2 ? null : t2.stateNode;
    }
    function Yb2(e28) {
      return null;
    }
    function Gb2() {
      return Fe2;
    }
    Pb2 = function(e28, t2, r3, n3) {
      var o3 = $b2(e28, t2);
      if (null !== o3) {
        var i3 = Hb2(o3.memoizedState, r3, n3);
        o3.memoizedState = i3, o3.baseState = i3, e28.memoizedProps = xe2({}, e28.memoizedProps), Gm2(e28, 1, Fo2);
      }
    }, Mb2 = function(e28, t2, r3) {
      var n3 = $b2(e28, t2);
      if (null !== n3) {
        var o3 = Fb2(n3.memoizedState, r3);
        n3.memoizedState = o3, n3.baseState = o3, e28.memoizedProps = xe2({}, e28.memoizedProps), Gm2(e28, 1, Fo2);
      }
    }, Bb2 = function(e28, t2, r3, n3) {
      var o3 = $b2(e28, t2);
      if (null !== o3) {
        var i3 = Vb2(o3.memoizedState, r3, n3);
        o3.memoizedState = i3, o3.baseState = i3, e28.memoizedProps = xe2({}, e28.memoizedProps), Gm2(e28, 1, Fo2);
      }
    }, Ab2 = function(e28, t2, r3) {
      e28.pendingProps = Hb2(e28.memoizedProps, t2, r3), e28.alternate && (e28.alternate.pendingProps = e28.pendingProps), Gm2(e28, 1, Fo2);
    }, Nb2 = function(e28, t2) {
      e28.pendingProps = Fb2(e28.memoizedProps, t2), e28.alternate && (e28.alternate.pendingProps = e28.pendingProps), Gm2(e28, 1, Fo2);
    }, jb2 = function(e28, t2, r3) {
      e28.pendingProps = Vb2(e28.memoizedProps, t2, r3), e28.alternate && (e28.alternate.pendingProps = e28.pendingProps), Gm2(e28, 1, Fo2);
    }, Db2 = function(e28) {
      Gm2(e28, 1, Fo2);
    }, Lb2 = function(e28) {
      Ob2 = e28;
    }, Ib2 = function(e28) {
      _b2 = e28;
    };
    var Xb2 = "function" == typeof reportError ? reportError : function(e28) {
      console.error(e28);
    };
    function Qb2(e28) {
      this._internalRoot = e28;
    }
    function Kb2(e28) {
      this._internalRoot = e28;
    }
    function Zb2(e28) {
      return !(!e28 || 1 !== e28.nodeType && 9 !== e28.nodeType && 11 !== e28.nodeType);
    }
    function Jb2(e28) {
      return !(!e28 || 1 !== e28.nodeType && 9 !== e28.nodeType && 11 !== e28.nodeType && (8 !== e28.nodeType || " react-mount-point-unstable " !== e28.nodeValue));
    }
    function eC2(e28) {
      1 === e28.nodeType && e28.tagName && "BODY" === e28.tagName.toUpperCase() && a2("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), Es2(e28) && (e28._reactRootContainer ? a2("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : a2("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    Kb2.prototype.render = Qb2.prototype.render = function(e28) {
      var t2 = this._internalRoot;
      if (null === t2)
        throw new Error("Cannot update an unmounted root.");
      "function" == typeof arguments[1] ? a2("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : Zb2(arguments[1]) ? a2("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : void 0 !== arguments[1] && a2("You passed a second argument to root.render(...) but it only accepts one argument.");
      var r3 = t2.containerInfo;
      if (8 !== r3.nodeType) {
        var n3 = Rb2(t2.current);
        n3 && n3.parentNode !== r3 && a2("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
      }
      kb2(e28, t2, null, null);
    }, Kb2.prototype.unmount = Qb2.prototype.unmount = function() {
      "function" == typeof arguments[0] && a2("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var e28 = this._internalRoot;
      if (null !== e28) {
        this._internalRoot = null;
        var t2 = e28.containerInfo;
        iy2() && a2("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), oy2(function() {
          kb2(null, e28, null, null);
        }), Ss2(t2);
      }
    }, Kb2.prototype.unstable_scheduleHydration = function(e28) {
      e28 && function(e29) {
        for (var t2 = gi2(), r3 = { blockedOn: null, target: e29, priority: t2 }, n3 = 0; n3 < ji2.length && Si2(t2, ji2[n3].priority); n3++)
          ;
        ji2.splice(n3, 0, r3), 0 === n3 && zi2(r3);
      }(e28);
    };
    var tC2, rC2, nC2 = n2.ReactCurrentOwner;
    function oC2(e28) {
      return e28 ? 9 === e28.nodeType ? e28.documentElement : e28.firstChild : null;
    }
    function iC2() {
    }
    function aC2(e28, t2, r3, n3, o3) {
      tC2(r3), function(e29, t3) {
        null !== e29 && "function" != typeof e29 && a2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", t3, e29);
      }(void 0 === o3 ? null : o3, "render");
      var i3, l3 = r3._reactRootContainer;
      if (l3) {
        if ("function" == typeof o3) {
          var u3 = o3;
          o3 = function() {
            var e29 = Sb2(i3);
            u3.call(e29);
          };
        }
        kb2(t2, i3 = l3, e28, o3);
      } else
        i3 = function(e29, t3, r4, n4, o4) {
          if (o4) {
            if ("function" == typeof n4) {
              var i4 = n4;
              n4 = function() {
                var e30 = Sb2(a3);
                i4.call(e30);
              };
            }
            var a3 = wb2(t3, n4, e29, 0, 0, false, 0, "", iC2);
            return e29._reactRootContainer = a3, ks2(a3.current, e29), Kl2(8 === e29.nodeType ? e29.parentNode : e29), oy2(), a3;
          }
          for (var l4; l4 = e29.lastChild; )
            e29.removeChild(l4);
          if ("function" == typeof n4) {
            var u4 = n4;
            n4 = function() {
              var e30 = Sb2(s3);
              u4.call(e30);
            };
          }
          var s3 = xb2(e29, 0, 0, false, 0, "", iC2);
          return e29._reactRootContainer = s3, ks2(s3.current, e29), Kl2(8 === e29.nodeType ? e29.parentNode : e29), oy2(function() {
            kb2(t3, s3, r4, n4);
          }), s3;
        }(r3, t2, e28, o3, n3);
      return Sb2(i3);
    }
    tC2 = function(e28) {
      if (e28._reactRootContainer && 8 !== e28.nodeType) {
        var t2 = Rb2(e28._reactRootContainer.current);
        t2 && t2.parentNode !== e28 && a2("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var r3 = !!e28._reactRootContainer, n3 = oC2(e28);
      !(!n3 || !Rs2(n3)) && !r3 && a2("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), 1 === e28.nodeType && e28.tagName && "BODY" === e28.tagName.toUpperCase() && a2("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    }, rC2 = function(e28) {
      switch (e28.tag) {
        case 3:
          var t2 = e28.stateNode;
          if (Ti2(t2)) {
            var r3 = function(e29) {
              return Wo2(e29.pendingLanes);
            }(t2);
            !function(e29, t3) {
              0 !== t3 && (si2(e29, ni2(t3, 1)), Km2(e29, An2()), 0 == (6 & gm2) && (Pm2(), sc2()));
            }(t2, r3);
          }
          break;
        case d2:
          var n3 = $m2();
          oy2(function() {
            return Gm2(e28, 1, n3);
          }), Tb2(e28, 1);
      }
    }, fi2 = rC2, function(e28) {
      pi2 = e28;
    }(function(e28) {
      if (e28.tag === d2) {
        var t2 = $m2(), r3 = No2;
        Gm2(e28, r3, t2), Tb2(e28, r3);
      }
    }), function(e28) {
      hi2 = e28;
    }(function(e28) {
      if (e28.tag === d2) {
        var t2 = $m2(), r3 = qm2(e28);
        Gm2(e28, r3, t2), Tb2(e28, r3);
      }
    }), function(e28) {
      gi2 = e28;
    }(wi2), function(e28) {
      vi2 = e28;
    }(function(e28, t2) {
      var r3 = xi2;
      try {
        return xi2 = e28, t2();
      } finally {
        xi2 = r3;
      }
    }), "function" == typeof Map && null != Map.prototype && "function" == typeof Map.prototype.forEach && "function" == typeof Set && null != Set.prototype && "function" == typeof Set.prototype.clear && "function" == typeof Set.prototype.forEach || a2("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), Sr2 = function(e28, t2, r3) {
      switch (t2) {
        case "input":
          return void ft2(e28, r3);
        case "textarea":
          return void function(e29, t3) {
            _t2(e29, t3);
          }(e28, r3);
        case "select":
          return void function(e29, t3) {
            var r4 = e29, n3 = t3.value;
            null != n3 && kt2(r4, !!t3.multiple, n3, false);
          }(e28, r3);
      }
    }, Pr2 = ny2, Mr2 = oy2;
    var lC2 = { usingClientEntryPoint: false, Events: [Rs2, Os2, _s2, Or2, _r2, ny2] };
    var uC2 = function(e28) {
      var t2 = e28.findFiberByHostInstance, r3 = n2.ReactCurrentDispatcher;
      return function(e29) {
        if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
          return false;
        var t3 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (t3.isDisabled)
          return true;
        if (!t3.supportsFiber)
          return a2("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), true;
        try {
          e29 = xe2({}, e29, { getLaneLabelMap: Xn2, injectProfilingHooks: Gn2 }), Vn2 = t3.inject(e29), Wn2 = t3;
        } catch (e30) {
          a2("React instrumentation encountered an error: %s.", e30);
        }
        return !!t3.checkDCE;
      }({ bundleType: e28.bundleType, version: e28.version, rendererPackageName: e28.rendererPackageName, rendererConfig: e28.rendererConfig, overrideHookState: Pb2, overrideHookStateDeletePath: Mb2, overrideHookStateRenamePath: Bb2, overrideProps: Ab2, overridePropsDeletePath: Nb2, overridePropsRenamePath: jb2, setErrorHandler: Lb2, setSuspenseHandler: Ib2, scheduleUpdate: Db2, currentDispatcherRef: r3, findHostInstanceByFiber: qb2, findFiberByHostInstance: t2 || Yb2, findHostInstancesForRefresh: Jy2, scheduleRefresh: Xy2, scheduleRoot: Qy2, setRefreshHandler: Wy2, getCurrentFiber: Gb2, reconcilerVersion: yb2 });
    }({ findFiberByHostInstance: Ts2, bundleType: 1, version: yb2, rendererPackageName: "react-dom" });
    if (!uC2 && E2 && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && -1 === navigator.userAgent.indexOf("Edge") || navigator.userAgent.indexOf("Firefox") > -1)) {
      var sC2 = window.location.protocol;
      /^(https?|file):$/.test(sC2) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + ("file:" === sC2 ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
    }
    wx.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = lC2, wx.createPortal = function(e28, t2) {
      var r3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
      if (!Zb2(t2))
        throw new Error("Target container is not a DOM element.");
      return bb2(e28, t2, null, r3);
    }, wx.createRoot = function(e28, t2) {
      return lC2.usingClientEntryPoint || a2('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), function(e29, t3) {
        if (!Zb2(e29))
          throw new Error("createRoot(...): Target container is not a DOM element.");
        eC2(e29);
        var r3 = false, n3 = "", o3 = Xb2;
        null != t3 && (t3.hydrate ? i2("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : "object" == typeof t3 && null !== t3 && t3.$$typeof === J2 && a2("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);"), true === t3.unstable_strictMode && (r3 = true), void 0 !== t3.identifierPrefix && (n3 = t3.identifierPrefix), void 0 !== t3.onRecoverableError && (o3 = t3.onRecoverableError), t3.transitionCallbacks);
        var l3 = xb2(e29, 1, 0, r3, 0, n3, o3);
        return ks2(l3.current, e29), Kl2(8 === e29.nodeType ? e29.parentNode : e29), new Qb2(l3);
      }(e28, t2);
    }, wx.findDOMNode = function(e28) {
      var t2 = nC2.current;
      return null !== t2 && null !== t2.stateNode && (t2.stateNode._warnedAboutRefsInRender || a2("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", De2(t2.type) || "A component"), t2.stateNode._warnedAboutRefsInRender = true), null == e28 ? null : 1 === e28.nodeType ? e28 : function(e29, t3) {
        var r3 = Xr2(e29);
        if (void 0 === r3) {
          if ("function" == typeof e29.render)
            throw new Error("Unable to find node on an unmounted component.");
          var n3 = Object.keys(e29).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + n3);
        }
        var o3 = En2(r3);
        if (null === o3)
          return null;
        if (8 & o3.mode) {
          var i3 = Ie2(r3) || "Component";
          if (!mb2[i3]) {
            mb2[i3] = true;
            var l3 = Fe2;
            try {
              $e2(o3), 8 & r3.mode ? a2("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", t3, t3, i3) : a2("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", t3, t3, i3);
            } finally {
              l3 ? $e2(l3) : He2();
            }
          }
        }
        return o3.stateNode;
      }(e28, "findDOMNode");
    }, wx.flushSync = function(e28) {
      return iy2() && a2("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), oy2(e28);
    }, wx.hydrate = function(e28, t2, r3) {
      if (a2("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Jb2(t2))
        throw new Error("Target container is not a DOM element.");
      return Es2(t2) && void 0 === t2._reactRootContainer && a2("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?"), aC2(null, e28, t2, true, r3);
    }, wx.hydrateRoot = function(e28, t2, r3) {
      return lC2.usingClientEntryPoint || a2('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), function(e29, t3, r4) {
        if (!Zb2(e29))
          throw new Error("hydrateRoot(...): Target container is not a DOM element.");
        eC2(e29), void 0 === t3 && a2("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        var n3 = null != r4 && r4.hydratedSources || null, o3 = false, i3 = "", l3 = Xb2;
        null != r4 && (true === r4.unstable_strictMode && (o3 = true), void 0 !== r4.identifierPrefix && (i3 = r4.identifierPrefix), void 0 !== r4.onRecoverableError && (l3 = r4.onRecoverableError));
        var u3 = wb2(t3, null, e29, 1, 0, o3, 0, i3, l3);
        if (ks2(u3.current, e29), Kl2(e29), n3)
          for (var s3 = 0; s3 < n3.length; s3++)
            qf2(u3, n3[s3]);
        return new Kb2(u3);
      }(e28, t2, r3);
    }, wx.render = function(e28, t2, r3) {
      if (a2("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Jb2(t2))
        throw new Error("Target container is not a DOM element.");
      return Es2(t2) && void 0 === t2._reactRootContainer && a2("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?"), aC2(null, e28, t2, false, r3);
    }, wx.unmountComponentAtNode = function(e28) {
      if (!Jb2(e28))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      if (Es2(e28) && void 0 === e28._reactRootContainer && a2("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?"), e28._reactRootContainer) {
        var t2 = oC2(e28);
        return t2 && !Rs2(t2) && a2("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React."), oy2(function() {
          aC2(null, null, e28, false, function() {
            e28._reactRootContainer = null, Ss2(e28);
          });
        }), true;
      }
      var r3 = oC2(e28), n3 = !(!r3 || !Rs2(r3)), o3 = 1 === e28.nodeType && Jb2(e28.parentNode) && !!e28.parentNode._reactRootContainer;
      return n3 && a2("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", o3 ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component."), false;
    }, wx.unstable_batchedUpdates = ny2, wx.unstable_renderSubtreeIntoContainer = function(e28, t2, r3, n3) {
      return function(e29, t3, r4, n4) {
        if (a2("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Jb2(r4))
          throw new Error("Target container is not a DOM element.");
        if (null == e29 || void 0 === e29._reactInternals)
          throw new Error("parentComponent must be a valid React Component");
        return aC2(e29, t3, r4, false, n4);
      }(e28, t2, r3, n3);
    }, wx.version = yb2, "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  })(), false ? (!function e5() {
    if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) {
      if (true)
        throw new Error("^_^");
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e5);
      } catch (e27) {
        console.error(e27);
      }
    }
  }(), Rc.exports = Oc) : Rc.exports = wx;
  var kx = Rc.exports;
  void 0 === Number.isFinite && (Number.isFinite = function(e27) {
    return "number" == typeof e27 && isFinite(e27);
  }), ps.object, ps.object, ps.object, ps.element, ps.object, ps.object, ps.object, ps.oneOfType([ps.array, ps.element]), ps.any;
  var Sx = xr;
  var Ex = tr;
  var Tx = I ? I.isConcatSpreadable : void 0;
  var Rx = er;
  var Ox = function(e27) {
    return Ex(e27) || Sx(e27) || !!(Tx && e27 && e27[Tx]);
  };
  var _x = function e6(t2, r2, n2, o2, i2) {
    var a2 = -1, l2 = t2.length;
    for (n2 || (n2 = Ox), i2 || (i2 = []); ++a2 < l2; ) {
      var u2 = t2[a2];
      r2 > 0 && n2(u2) ? r2 > 1 ? e6(u2, r2 - 1, n2, o2, i2) : Rx(i2, u2) : o2 || (i2[i2.length] = u2);
    }
    return i2;
  };
  var Px = function(e27) {
    return function(t2, r2, n2) {
      for (var o2 = -1, i2 = Object(t2), a2 = n2(t2), l2 = a2.length; l2--; ) {
        var u2 = a2[e27 ? l2 : ++o2];
        if (false === r2(i2[u2], u2, i2))
          break;
      }
      return t2;
    };
  };
  var Mx = Px();
  var Bx = un;
  var Ax = function(e27, t2) {
    return e27 && Mx(e27, t2, Bx);
  };
  var Nx = nn;
  var jx = function(e27, t2) {
    return function(r2, n2) {
      if (null == r2)
        return r2;
      if (!Nx(r2))
        return e27(r2, n2);
      for (var o2 = r2.length, i2 = t2 ? o2 : -1, a2 = Object(r2); (t2 ? i2-- : ++i2 < o2) && false !== n2(a2[i2], i2, a2); )
        ;
      return r2;
    };
  };
  var Dx = jx(Ax);
  var Lx = Dx;
  var Ix = nn;
  var zx = function(e27, t2) {
    var r2 = -1, n2 = Ix(e27) ? Array(e27.length) : [];
    return Lx(e27, function(e28, o2, i2) {
      n2[++r2] = t2(e28, o2, i2);
    }), n2;
  };
  var Fx = function(e27, t2) {
    var r2 = e27.length;
    for (e27.sort(t2); r2--; )
      e27[r2] = e27[r2].value;
    return e27;
  };
  var Ux = ao;
  var Vx = function(e27, t2) {
    if (e27 !== t2) {
      var r2 = void 0 !== e27, n2 = null === e27, o2 = e27 == e27, i2 = Ux(e27), a2 = void 0 !== t2, l2 = null === t2, u2 = t2 == t2, s2 = Ux(t2);
      if (!l2 && !s2 && !i2 && e27 > t2 || i2 && a2 && u2 && !l2 && !s2 || n2 && a2 && u2 || !r2 && u2 || !o2)
        return 1;
      if (!n2 && !i2 && !s2 && e27 < t2 || s2 && r2 && o2 && !n2 && !i2 || l2 && r2 && o2 || !a2 && o2 || !u2)
        return -1;
    }
    return 0;
  };
  var Wx = function(e27, t2, r2) {
    for (var n2 = -1, o2 = e27.criteria, i2 = t2.criteria, a2 = o2.length, l2 = r2.length; ++n2 < a2; ) {
      var u2 = Vx(o2[n2], i2[n2]);
      if (u2)
        return n2 >= l2 ? u2 : u2 * ("desc" == r2[n2] ? -1 : 1);
    }
    return e27.index - t2.index;
  };
  var Hx = Co;
  var $x = Io;
  var qx = Ci;
  var Yx = zx;
  var Gx = Fx;
  var Xx = Br;
  var Qx = Wx;
  var Kx = ai;
  var Zx = tr;
  var Jx = function(e27, t2, r2) {
    t2 = t2.length ? Hx(t2, function(e28) {
      return Zx(e28) ? function(t3) {
        return $x(t3, 1 === e28.length ? e28[0] : e28);
      } : e28;
    }) : [Kx];
    var n2 = -1;
    t2 = Hx(t2, Xx(qx));
    var o2 = Yx(e27, function(e28, r3, o3) {
      return { criteria: Hx(t2, function(t3) {
        return t3(e28);
      }), index: ++n2, value: e28 };
    });
    return Gx(o2, function(e28, t3) {
      return Qx(e28, t3, r2);
    });
  };
  var ew = function(e27, t2, r2) {
    switch (r2.length) {
      case 0:
        return e27.call(t2);
      case 1:
        return e27.call(t2, r2[0]);
      case 2:
        return e27.call(t2, r2[0], r2[1]);
      case 3:
        return e27.call(t2, r2[0], r2[1], r2[2]);
    }
    return e27.apply(t2, r2);
  };
  var tw = ew;
  var rw = Math.max;
  var nw = function(e27, t2, r2) {
    return t2 = rw(void 0 === t2 ? e27.length - 1 : t2, 0), function() {
      for (var n2 = arguments, o2 = -1, i2 = rw(n2.length - t2, 0), a2 = Array(i2); ++o2 < i2; )
        a2[o2] = n2[t2 + o2];
      o2 = -1;
      for (var l2 = Array(t2 + 1); ++o2 < t2; )
        l2[o2] = n2[o2];
      return l2[t2] = r2(a2), tw(e27, this, l2);
    };
  };
  var ow = function(e27) {
    return function() {
      return e27;
    };
  };
  var iw = Ve;
  var aw = function() {
    try {
      var e27 = iw(Object, "defineProperty");
      return e27({}, "", {}), e27;
    } catch (e28) {
    }
  }();
  var lw = ow;
  var uw = aw;
  var sw = uw ? function(e27, t2) {
    return uw(e27, "toString", { configurable: true, enumerable: false, value: lw(t2), writable: true });
  } : ai;
  var cw = sw;
  var dw = Date.now;
  var fw = function(e27) {
    var t2 = 0, r2 = 0;
    return function() {
      var n2 = dw(), o2 = 16 - (n2 - r2);
      if (r2 = n2, o2 > 0) {
        if (++t2 >= 800)
          return arguments[0];
      } else
        t2 = 0;
      return e27.apply(void 0, arguments);
    };
  }(cw);
  var pw = ai;
  var hw = nw;
  var gw = fw;
  var vw = function(e27, t2) {
    return gw(hw(e27, t2, pw), e27 + "");
  };
  var mw = ee;
  var yw = nn;
  var bw = Er;
  var Cw = C;
  var xw = function(e27, t2, r2) {
    if (!Cw(r2))
      return false;
    var n2 = typeof t2;
    return !!("number" == n2 ? yw(r2) && bw(t2, r2.length) : "string" == n2 && t2 in r2) && mw(r2[t2], e27);
  };
  var ww = _x;
  var kw = Jx;
  var Sw = xw;
  var Ew = vw(function(e27, t2) {
    if (null == e27)
      return [];
    var r2 = t2.length;
    return r2 > 1 && Sw(e27, t2[0], t2[1]) ? t2 = [] : r2 > 2 && Sw(t2[0], t2[1], t2[2]) && (t2 = [t2[0]]), kw(e27, ww(t2, 1), []);
  });
  function Tw(e27) {
    return Tw = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, Tw(e27);
  }
  function Rw(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || function(e28, t3) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return Ow(e28, t3);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return Ow(e28, t3);
    }(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function Ow(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function _w(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function Pw(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? _w(Object(r2), true).forEach(function(t3) {
        Mw(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : _w(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function Mw(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function Bw(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function Aw(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function Nw(e27, t2) {
    return Nw = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, Nw(e27, t2);
  }
  function jw(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = Lw(e27);
      if (t2) {
        var o2 = Lw(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return Dw(this, r2);
    };
  }
  function Dw(e27, t2) {
    return !t2 || "object" !== Tw(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function Lw(e27) {
    return Lw = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, Lw(e27);
  }
  function Iw(e27) {
    return tr(e27) && Kl(e27[0]) && Kl(e27[1]) ? e27.join(" ~ ") : e27;
  }
  var zw = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && Nw(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = jw(l2);
    function l2() {
      return Bw(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, (o2 = [{ key: "renderContent", value: function() {
      var e28 = this.props, r3 = e28.payload, n2 = e28.separator, o3 = e28.formatter, i3 = e28.itemStyle, a3 = e28.itemSorter;
      if (r3 && r3.length) {
        var l3 = (a3 ? Ew(r3, a3) : r3).map(function(e29, a4) {
          if ("none" === e29.type)
            return null;
          var l4 = Pw({ display: "block", paddingTop: 4, paddingBottom: 4, color: e29.color || "#000" }, i3), u2 = e29.formatter || o3 || Iw, s2 = e29.name, c2 = e29.value;
          if (u2) {
            var d2 = u2(c2, s2, e29, a4, r3);
            if (Array.isArray(d2)) {
              var f2 = Rw(d2, 2);
              c2 = f2[0], s2 = f2[1];
            } else
              c2 = d2;
          }
          return import_react.default.createElement("li", { className: "recharts-tooltip-item", key: "tooltip-item-".concat(a4), style: l4 }, Kl(s2) ? import_react.default.createElement("span", { className: "recharts-tooltip-item-name" }, s2) : null, Kl(s2) ? import_react.default.createElement("span", { className: "recharts-tooltip-item-separator" }, n2) : null, import_react.default.createElement("span", { className: "recharts-tooltip-item-value" }, c2), import_react.default.createElement("span", { className: "recharts-tooltip-item-unit" }, e29.unit || ""));
        });
        return import_react.default.createElement("ul", { className: "recharts-tooltip-item-list", style: { padding: 0, margin: 0 } }, l3);
      }
      return null;
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.wrapperClassName, n2 = e28.contentStyle, o3 = e28.labelClassName, i3 = e28.labelStyle, a3 = e28.label, l3 = e28.labelFormatter, u2 = e28.payload, s2 = Pw({ margin: 0, padding: 10, backgroundColor: "#fff", border: "1px solid #ccc", whiteSpace: "nowrap" }, n2), c2 = Pw({ margin: 0 }, i3), d2 = !yu(a3), f2 = d2 ? a3 : "", p2 = b("recharts-default-tooltip", r3), h2 = b("recharts-tooltip-label", o3);
      return d2 && l3 && null != u2 && (f2 = l3(a3, u2)), import_react.default.createElement("div", { className: p2, style: s2 }, import_react.default.createElement("p", { className: h2, style: c2 }, import_react.default.isValidElement(f2) ? f2 : "".concat(f2)), this.renderContent());
    } }]) && Aw(r2.prototype, o2), i2 && Aw(r2, i2), l2;
  }();
  zw.displayName = "DefaultTooltipContent", zw.defaultProps = { separator: " : ", contentStyle: {}, itemStyle: {}, labelStyle: {} };
  var Fw = { isSsr: !("undefined" != typeof window && window.document && window.document.createElement && window.setTimeout), get: function(e27) {
    return Fw[e27];
  }, set: function(e27, t2) {
    if ("string" == typeof e27)
      Fw[e27] = t2;
    else {
      var r2 = Object.keys(e27);
      r2 && r2.length && r2.forEach(function(t3) {
        Fw[t3] = e27[t3];
      });
    }
  } };
  function Uw(e27) {
    return Uw = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, Uw(e27);
  }
  function Vw(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function Ww(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? Vw(Object(r2), true).forEach(function(t3) {
        Hw(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : Vw(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function Hw(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function $w(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function qw(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function Yw(e27, t2) {
    return Yw = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, Yw(e27, t2);
  }
  function Gw(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = Qw(e27);
      if (t2) {
        var o2 = Qw(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return Xw(this, r2);
    };
  }
  function Xw(e27, t2) {
    return !t2 || "object" !== Uw(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function Qw(e27) {
    return Qw = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, Qw(e27);
  }
  var Kw = "recharts-tooltip-wrapper";
  function Zw(e27) {
    return e27.dataKey;
  }
  var Jw = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && Yw(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = Gw(l2);
    function l2() {
      var e28;
      $w(this, l2);
      for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
        r3[n2] = arguments[n2];
      return (e28 = a2.call.apply(a2, [this].concat(r3))).state = { boxWidth: -1, boxHeight: -1, dismissed: false, dismissedAtCoordinate: { x: 0, y: 0 } }, e28.wrapperNode = void 0, e28.getTranslate = function(t3) {
        var r4 = t3.key, n3 = t3.tooltipDimension, o3 = t3.viewBoxDimension, i3 = e28.props, a3 = i3.allowEscapeViewBox, l3 = i3.coordinate, u2 = i3.offset, s2 = i3.position, c2 = i3.viewBox;
        if (s2 && Ql(s2[r4]))
          return s2[r4];
        var d2 = l3[r4] - n3 - u2, f2 = l3[r4] + u2;
        return a3[r4] ? f2 : l3[r4] + n3 + u2 > c2[r4] + o3 ? Math.max(d2, c2[r4]) : Math.max(f2, c2[r4]);
      }, e28;
    }
    return r2 = l2, (o2 = [{ key: "componentDidMount", value: function() {
      this.updateBBox();
    } }, { key: "componentDidUpdate", value: function() {
      this.updateBBox();
    } }, { key: "updateBBox", value: function() {
      var e28 = this.state, t2 = e28.boxWidth, r3 = e28.boxHeight;
      if (e28.dismissed ? (this.wrapperNode.blur(), this.props.coordinate.x === this.state.dismissedAtCoordinate.x && this.props.coordinate.y === this.state.dismissedAtCoordinate.y || this.setState({ dismissed: false })) : this.wrapperNode.focus(), this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
        var n2 = this.wrapperNode.getBoundingClientRect();
        (Math.abs(n2.width - t2) > 1 || Math.abs(n2.height - r3) > 1) && this.setState({ boxWidth: n2.width, boxHeight: n2.height });
      } else
        -1 === t2 && -1 === r3 || this.setState({ boxWidth: -1, boxHeight: -1 });
    } }, { key: "render", value: function() {
      var e28, r3, n2, o3 = this, i3 = this.props, a3 = i3.payload, l3 = i3.isAnimationActive, u2 = i3.animationDuration, s2 = i3.animationEasing, c2 = i3.filterNull, d2 = function(e29, t2) {
        return true === e29 ? Vi(t2, Zw) : Z(e29) ? Vi(t2, e29) : t2;
      }(i3.payloadUniqBy, c2 && a3 && a3.length ? a3.filter(function(e29) {
        return !yu(e29.value);
      }) : a3), f2 = d2 && d2.length, p2 = this.props, h2 = p2.content, g2 = p2.viewBox, v2 = p2.coordinate, m2 = p2.position, y2 = p2.active, C2 = p2.wrapperStyle, x2 = Ww({ pointerEvents: "none", visibility: !this.state.dismissed && y2 && f2 ? "visible" : "hidden", position: "absolute", top: 0, left: 0 }, C2);
      if (m2 && Ql(m2.x) && Ql(m2.y))
        r3 = m2.x, n2 = m2.y;
      else {
        var w2 = this.state, k2 = w2.boxWidth, S2 = w2.boxHeight;
        k2 > 0 && S2 > 0 && v2 ? (r3 = this.getTranslate({ key: "x", tooltipDimension: k2, viewBoxDimension: g2.width }), n2 = this.getTranslate({ key: "y", tooltipDimension: S2, viewBoxDimension: g2.height })) : x2.visibility = "hidden";
      }
      x2 = Ww(Ww({}, Vs({ transform: this.props.useTranslate3d ? "translate3d(".concat(r3, "px, ").concat(n2, "px, 0)") : "translate(".concat(r3, "px, ").concat(n2, "px)") })), x2), l3 && y2 && (x2 = Ww(Ww({}, Vs({ transition: "transform ".concat(u2, "ms ").concat(s2) })), x2));
      var E2 = b(Kw, (Hw(e28 = {}, "".concat(Kw, "-right"), Ql(r3) && v2 && Ql(v2.x) && r3 >= v2.x), Hw(e28, "".concat(Kw, "-left"), Ql(r3) && v2 && Ql(v2.x) && r3 < v2.x), Hw(e28, "".concat(Kw, "-bottom"), Ql(n2) && v2 && Ql(v2.y) && n2 >= v2.y), Hw(e28, "".concat(Kw, "-top"), Ql(n2) && v2 && Ql(v2.y) && n2 < v2.y), e28));
      return import_react.default.createElement("div", { tabIndex: 0, onKeyDown: function(e29) {
        "Escape" === e29.key && o3.setState({ dismissed: true, dismissedAtCoordinate: Ww(Ww({}, o3.state.dismissedAtCoordinate), {}, { x: o3.props.coordinate.x, y: o3.props.coordinate.y }) });
      }, className: E2, style: x2, ref: function(e29) {
        o3.wrapperNode = e29;
      } }, function(e29, r4) {
        return import_react.default.isValidElement(e29) ? import_react.default.cloneElement(e29, r4) : Z(e29) ? import_react.default.createElement(e29, r4) : import_react.default.createElement(zw, r4);
      }(h2, Ww(Ww({}, this.props), {}, { payload: d2 })));
    } }]) && qw(r2.prototype, o2), i2 && qw(r2, i2), l2;
  }();
  Jw.displayName = "Tooltip", Jw.defaultProps = { active: false, allowEscapeViewBox: { x: false, y: false }, offset: 10, viewBox: { x1: 0, x2: 0, y1: 0, y2: 0 }, coordinate: { x: 0, y: 0 }, cursorStyle: {}, separator: " : ", wrapperStyle: {}, contentStyle: {}, itemStyle: {}, labelStyle: {}, cursor: true, trigger: "hover", isAnimationActive: !Fw.isSsr, animationEasing: "ease", animationDuration: 400, filterNull: true, useTranslate3d: false };
  var ek = L;
  var tk = /\s/;
  var rk = function(e27) {
    for (var t2 = e27.length; t2-- && tk.test(e27.charAt(t2)); )
      ;
    return t2;
  };
  var nk = rk;
  var ok = /^\s+/;
  var ik = function(e27) {
    return e27 ? e27.slice(0, nk(e27) + 1).replace(ok, "") : e27;
  };
  var ak = ik;
  var lk = C;
  var uk = ao;
  var sk = /^[-+]0x[0-9a-f]+$/i;
  var ck = /^0b[01]+$/i;
  var dk = /^0o[0-7]+$/i;
  var fk = parseInt;
  var pk = function(e27) {
    if ("number" == typeof e27)
      return e27;
    if (uk(e27))
      return NaN;
    if (lk(e27)) {
      var t2 = "function" == typeof e27.valueOf ? e27.valueOf() : e27;
      e27 = lk(t2) ? t2 + "" : t2;
    }
    if ("string" != typeof e27)
      return 0 === e27 ? e27 : +e27;
    e27 = ak(e27);
    var r2 = ck.test(e27);
    return r2 || dk.test(e27) ? fk(e27.slice(2), r2 ? 2 : 8) : sk.test(e27) ? NaN : +e27;
  };
  var hk = C;
  var gk = function() {
    return ek.Date.now();
  };
  var vk = pk;
  var mk = Math.max;
  var yk = Math.min;
  var bk = function(e27, t2, r2) {
    var n2, o2, i2, a2, l2, u2, s2 = 0, c2 = false, d2 = false, f2 = true;
    if ("function" != typeof e27)
      throw new TypeError("Expected a function");
    function p2(t3) {
      var r3 = n2, i3 = o2;
      return n2 = o2 = void 0, s2 = t3, a2 = e27.apply(i3, r3);
    }
    function h2(e28) {
      return s2 = e28, l2 = setTimeout(v2, t2), c2 ? p2(e28) : a2;
    }
    function g2(e28) {
      var r3 = e28 - u2;
      return void 0 === u2 || r3 >= t2 || r3 < 0 || d2 && e28 - s2 >= i2;
    }
    function v2() {
      var e28 = gk();
      if (g2(e28))
        return m2(e28);
      l2 = setTimeout(v2, function(e29) {
        var r3 = t2 - (e29 - u2);
        return d2 ? yk(r3, i2 - (e29 - s2)) : r3;
      }(e28));
    }
    function m2(e28) {
      return l2 = void 0, f2 && n2 ? p2(e28) : (n2 = o2 = void 0, a2);
    }
    function y2() {
      var e28 = gk(), r3 = g2(e28);
      if (n2 = arguments, o2 = this, u2 = e28, r3) {
        if (void 0 === l2)
          return h2(u2);
        if (d2)
          return clearTimeout(l2), l2 = setTimeout(v2, t2), p2(u2);
      }
      return void 0 === l2 && (l2 = setTimeout(v2, t2)), a2;
    }
    return t2 = vk(t2) || 0, hk(r2) && (c2 = !!r2.leading, i2 = (d2 = "maxWait" in r2) ? mk(vk(r2.maxWait) || 0, t2) : i2, f2 = "trailing" in r2 ? !!r2.trailing : f2), y2.cancel = function() {
      void 0 !== l2 && clearTimeout(l2), s2 = 0, n2 = u2 = o2 = l2 = void 0;
    }, y2.flush = function() {
      return void 0 === l2 ? a2 : m2(gk());
    }, y2;
  };
  var Ck = function(e27, t2) {
    return Ck = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e28, t3) {
      e28.__proto__ = t3;
    } || function(e28, t3) {
      for (var r2 in t3)
        Object.prototype.hasOwnProperty.call(t3, r2) && (e28[r2] = t3[r2]);
    }, Ck(e27, t2);
  };
  var xk = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
  var wk = function(e27) {
    var t2 = typeof e27;
    return null != e27 && ("object" == t2 || "function" == t2);
  };
  var kk = "object" == typeof xk && xk && xk.Object === Object && xk;
  var Sk = "object" == typeof self && self && self.Object === Object && self;
  var Ek = kk || Sk || Function("return this")();
  var Tk = Ek;
  var Rk = function() {
    return Tk.Date.now();
  };
  var Ok = /\s/;
  var _k = function(e27) {
    for (var t2 = e27.length; t2-- && Ok.test(e27.charAt(t2)); )
      ;
    return t2;
  };
  var Pk = _k;
  var Mk = /^\s+/;
  var Bk = function(e27) {
    return e27 ? e27.slice(0, Pk(e27) + 1).replace(Mk, "") : e27;
  };
  var Ak = Ek.Symbol;
  var Nk = Ak;
  var jk = Object.prototype;
  var Dk = jk.hasOwnProperty;
  var Lk = jk.toString;
  var Ik = Nk ? Nk.toStringTag : void 0;
  var zk = function(e27) {
    var t2 = Dk.call(e27, Ik), r2 = e27[Ik];
    try {
      e27[Ik] = void 0;
      var n2 = true;
    } catch (e28) {
    }
    var o2 = Lk.call(e27);
    return n2 && (t2 ? e27[Ik] = r2 : delete e27[Ik]), o2;
  };
  var Fk = Object.prototype.toString;
  var Uk = zk;
  var Vk = function(e27) {
    return Fk.call(e27);
  };
  var Wk = Ak ? Ak.toStringTag : void 0;
  var Hk = function(e27) {
    return null == e27 ? void 0 === e27 ? "[object Undefined]" : "[object Null]" : Wk && Wk in Object(e27) ? Uk(e27) : Vk(e27);
  };
  var $k = function(e27) {
    return null != e27 && "object" == typeof e27;
  };
  var qk = Bk;
  var Yk = wk;
  var Gk = function(e27) {
    return "symbol" == typeof e27 || $k(e27) && "[object Symbol]" == Hk(e27);
  };
  var Xk = /^[-+]0x[0-9a-f]+$/i;
  var Qk = /^0b[01]+$/i;
  var Kk = /^0o[0-7]+$/i;
  var Zk = parseInt;
  var Jk = wk;
  var eS = Rk;
  var tS = function(e27) {
    if ("number" == typeof e27)
      return e27;
    if (Gk(e27))
      return NaN;
    if (Yk(e27)) {
      var t2 = "function" == typeof e27.valueOf ? e27.valueOf() : e27;
      e27 = Yk(t2) ? t2 + "" : t2;
    }
    if ("string" != typeof e27)
      return 0 === e27 ? e27 : +e27;
    e27 = qk(e27);
    var r2 = Qk.test(e27);
    return r2 || Kk.test(e27) ? Zk(e27.slice(2), r2 ? 2 : 8) : Xk.test(e27) ? NaN : +e27;
  };
  var rS = Math.max;
  var nS = Math.min;
  var oS = function(e27, t2, r2) {
    var n2, o2, i2, a2, l2, u2, s2 = 0, c2 = false, d2 = false, f2 = true;
    if ("function" != typeof e27)
      throw new TypeError("Expected a function");
    function p2(t3) {
      var r3 = n2, i3 = o2;
      return n2 = o2 = void 0, s2 = t3, a2 = e27.apply(i3, r3);
    }
    function h2(e28) {
      return s2 = e28, l2 = setTimeout(v2, t2), c2 ? p2(e28) : a2;
    }
    function g2(e28) {
      var r3 = e28 - u2;
      return void 0 === u2 || r3 >= t2 || r3 < 0 || d2 && e28 - s2 >= i2;
    }
    function v2() {
      var e28 = eS();
      if (g2(e28))
        return m2(e28);
      l2 = setTimeout(v2, function(e29) {
        var r3 = t2 - (e29 - u2);
        return d2 ? nS(r3, i2 - (e29 - s2)) : r3;
      }(e28));
    }
    function m2(e28) {
      return l2 = void 0, f2 && n2 ? p2(e28) : (n2 = o2 = void 0, a2);
    }
    function y2() {
      var e28 = eS(), r3 = g2(e28);
      if (n2 = arguments, o2 = this, u2 = e28, r3) {
        if (void 0 === l2)
          return h2(u2);
        if (d2)
          return clearTimeout(l2), l2 = setTimeout(v2, t2), p2(u2);
      }
      return void 0 === l2 && (l2 = setTimeout(v2, t2)), a2;
    }
    return t2 = tS(t2) || 0, Jk(r2) && (c2 = !!r2.leading, i2 = (d2 = "maxWait" in r2) ? rS(tS(r2.maxWait) || 0, t2) : i2, f2 = "trailing" in r2 ? !!r2.trailing : f2), y2.cancel = function() {
      void 0 !== l2 && clearTimeout(l2), s2 = 0, n2 = u2 = o2 = l2 = void 0;
    }, y2.flush = function() {
      return void 0 === l2 ? a2 : m2(eS());
    }, y2;
  };
  var iS = oS;
  var aS = wk;
  var lS = function(e27, t2, r2) {
    var n2 = true, o2 = true;
    if ("function" != typeof e27)
      throw new TypeError("Expected a function");
    return aS(r2) && (n2 = "leading" in r2 ? !!r2.leading : n2, o2 = "trailing" in r2 ? !!r2.trailing : o2), iS(e27, t2, { leading: n2, maxWait: t2, trailing: o2 });
  };
  var uS = function(e27) {
    return "function" == typeof e27;
  };
  var sS = function() {
    return "undefined" == typeof window;
  };
  var cS = function(e27) {
    return e27 instanceof Element || e27 instanceof HTMLDocument;
  };
  var dS = function(t2) {
    function n2(e27) {
      var n3 = t2.call(this, e27) || this;
      n3.cancelHandler = function() {
        n3.resizeHandler && n3.resizeHandler.cancel && (n3.resizeHandler.cancel(), n3.resizeHandler = null);
      }, n3.attachObserver = function() {
        var e28 = n3.props, t3 = e28.targetRef, r2 = e28.observerOptions;
        if (!sS()) {
          t3 && t3.current && (n3.targetRef.current = t3.current);
          var o3 = n3.getElement();
          o3 && (n3.observableElement && n3.observableElement === o3 || (n3.observableElement = o3, n3.resizeObserver.observe(o3, r2)));
        }
      }, n3.getElement = function() {
        var e28 = n3.props, t3 = e28.querySelector, r2 = e28.targetDomEl;
        if (sS())
          return null;
        if (t3)
          return document.querySelector(t3);
        if (r2 && cS(r2))
          return r2;
        if (n3.targetRef && cS(n3.targetRef.current))
          return n3.targetRef.current;
        var o3 = Rc.exports.findDOMNode(n3);
        if (!o3)
          return null;
        switch (n3.getRenderType()) {
          case "renderProp":
          case "childFunction":
          case "child":
          case "childArray":
            return o3;
          default:
            return o3.parentElement;
        }
      }, n3.createResizeHandler = function(e28) {
        var t3 = n3.props, r2 = t3.handleWidth, o3 = void 0 === r2 || r2, i3 = t3.handleHeight, a2 = void 0 === i3 || i3, l3 = t3.onResize;
        if (o3 || a2) {
          var u3 = function(e29, t4, r3, n4) {
            return function(o4) {
              var i4 = o4.width, a3 = o4.height;
              t4(function(t5) {
                return t5.width === i4 && t5.height === a3 || t5.width === i4 && !n4 || t5.height === a3 && !r3 ? t5 : (e29 && uS(e29) && e29(i4, a3), { width: i4, height: a3 });
              });
            };
          }(l3, n3.setState.bind(n3), o3, a2);
          e28.forEach(function(e29) {
            var t4 = e29 && e29.contentRect || {}, r3 = t4.width, o4 = t4.height;
            !n3.skipOnMount && !sS() && u3({ width: r3, height: o4 }), n3.skipOnMount = false;
          });
        }
      }, n3.getRenderType = function() {
        var e28 = n3.props, t3 = e28.render, o3 = e28.children;
        return uS(t3) ? "renderProp" : uS(o3) ? "childFunction" : (0, import_react.isValidElement)(o3) ? "child" : Array.isArray(o3) ? "childArray" : "parent";
      };
      var o2 = e27.skipOnMount, i2 = e27.refreshMode, l2 = e27.refreshRate, u2 = void 0 === l2 ? 1e3 : l2, s2 = e27.refreshOptions;
      return n3.state = { width: void 0, height: void 0 }, n3.skipOnMount = o2, n3.targetRef = (0, import_react.createRef)(), n3.observableElement = null, sS() || (n3.resizeHandler = function(e28, t3, r2, n4) {
        switch (t3) {
          case "debounce":
            return oS(e28, r2, n4);
          case "throttle":
            return lS(e28, r2, n4);
          default:
            return e28;
        }
      }(n3.createResizeHandler, i2, u2, s2), n3.resizeObserver = new window.ResizeObserver(n3.resizeHandler)), n3;
    }
    return function(e27, t3) {
      if ("function" != typeof t3 && null !== t3)
        throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
      function r2() {
        this.constructor = e27;
      }
      Ck(e27, t3), e27.prototype = null === t3 ? Object.create(t3) : (r2.prototype = t3.prototype, new r2());
    }(n2, t2), n2.prototype.componentDidMount = function() {
      this.attachObserver();
    }, n2.prototype.componentDidUpdate = function() {
      this.attachObserver();
    }, n2.prototype.componentWillUnmount = function() {
      sS() || (this.observableElement = null, this.resizeObserver.disconnect(), this.cancelHandler());
    }, n2.prototype.render = function() {
      var t3, r2 = this.props, n3 = r2.render, o2 = r2.children, a2 = r2.nodeType, l2 = void 0 === a2 ? "div" : a2, u2 = this.state, s2 = { width: u2.width, height: u2.height, targetRef: this.targetRef };
      switch (this.getRenderType()) {
        case "renderProp":
          return n3 && n3(s2);
        case "childFunction":
          return (t3 = o2)(s2);
        case "child":
          if ((t3 = o2).type && "string" == typeof t3.type) {
            var c2 = function(e27, t4) {
              var r3 = {};
              for (var n4 in e27)
                Object.prototype.hasOwnProperty.call(e27, n4) && t4.indexOf(n4) < 0 && (r3[n4] = e27[n4]);
              if (null != e27 && "function" == typeof Object.getOwnPropertySymbols) {
                var o3 = 0;
                for (n4 = Object.getOwnPropertySymbols(e27); o3 < n4.length; o3++)
                  t4.indexOf(n4[o3]) < 0 && Object.prototype.propertyIsEnumerable.call(e27, n4[o3]) && (r3[n4[o3]] = e27[n4[o3]]);
              }
              return r3;
            }(s2, ["targetRef"]);
            return (0, import_react.cloneElement)(t3, c2);
          }
          return (0, import_react.cloneElement)(t3, s2);
        case "childArray":
          return (t3 = o2).map(function(e27) {
            return !!e27 && (0, import_react.cloneElement)(e27, s2);
          });
        default:
          return e.createElement(l2, null);
      }
    }, n2;
  }(import_react.PureComponent);
  var fS = true;
  var pS = function(e27, t2) {
    for (var r2 = arguments.length, n2 = new Array(r2 > 2 ? r2 - 2 : 0), o2 = 2; o2 < r2; o2++)
      n2[o2 - 2] = arguments[o2];
    if (fS && "undefined" != typeof console && console.warn && (void 0 === t2 && console.warn("LogUtils requires an error message argument"), !e27))
      if (void 0 === t2)
        console.warn("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      else {
        var i2 = 0;
        console.warn(t2.replace(/%s/g, function() {
          return n2[i2++];
        }));
      }
  };
  function hS() {
    return hS = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, hS.apply(this, arguments);
  }
  function gS(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || function(e28, t3) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return vS(e28, t3);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return vS(e28, t3);
    }(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function vS(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  var mS = (0, import_react.forwardRef)(function(e27, r2) {
    var n2 = e27.aspect, o2 = e27.width, a2 = void 0 === o2 ? "100%" : o2, l2 = e27.height, f2 = void 0 === l2 ? "100%" : l2, p2 = e27.minWidth, h2 = e27.minHeight, g2 = e27.maxHeight, v2 = e27.children, m2 = e27.debounce, y2 = void 0 === m2 ? 0 : m2, C2 = e27.id, x2 = e27.className, w2 = gS((0, import_react.useState)({ containerWidth: -1, containerHeight: -1 }), 2), k2 = w2[0], S2 = w2[1], E2 = (0, import_react.useRef)(null);
    (0, import_react.useImperativeHandle)(r2, function() {
      return E2;
    }, [E2]);
    var T2 = gS((0, import_react.useState)(false), 2), R2 = T2[0], O2 = T2[1], _2 = function() {
      return E2.current ? { containerWidth: E2.current.clientWidth, containerHeight: E2.current.clientHeight } : null;
    }, P2 = function() {
      if (R2) {
        var e28 = _2();
        if (e28) {
          var t2 = k2.containerWidth, r3 = k2.containerHeight, n3 = e28.containerWidth, o3 = e28.containerHeight;
          n3 === t2 && o3 === r3 || S2({ containerWidth: n3, containerHeight: o3 });
        }
      }
    }, M2 = y2 > 0 ? bk(P2, y2) : P2;
    (0, import_react.useEffect)(function() {
      if (R2) {
        var e28 = _2();
        e28 && S2(e28);
      }
    }, [R2]), (0, import_react.useEffect)(function() {
      O2(true);
    }, []);
    var B2 = { width: a2, height: f2, minWidth: p2, minHeight: h2, maxHeight: g2 };
    return import_react.default.createElement(dS, { handleWidth: true, handleHeight: true, onResize: M2, targetRef: E2 }, import_react.default.createElement("div", hS({}, null != C2 ? { id: "".concat(C2) } : {}, { className: b("recharts-responsive-container", x2), style: B2, ref: E2 }), function() {
      var e28 = k2.containerWidth, t2 = k2.containerHeight;
      if (e28 < 0 || t2 < 0)
        return null;
      pS(Xl(a2) || Xl(f2), "The width(%s) and height(%s) are both fixed numbers,\n       maybe you don't need to use a ResponsiveContainer.", a2, f2), pS(!n2 || n2 > 0, "The aspect(%s) must be greater than zero.", n2);
      var r3 = Xl(a2) ? e28 : a2, o3 = Xl(f2) ? t2 : f2;
      return n2 && n2 > 0 && (r3 ? o3 = r3 / n2 : o3 && (r3 = o3 * n2), g2 && o3 > g2 && (o3 = g2)), pS(r3 > 0 || o3 > 0, "The width(%s) and height(%s) of chart should be greater than 0,\n       please check the style of container, or the props width(%s) and height(%s),\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\n       height and width.", r3, o3, a2, f2, p2, h2, n2), (0, import_react.cloneElement)(v2, { width: r3, height: o3 });
    }()));
  });
  var yS = function(e27) {
    return null;
  };
  yS.displayName = "Cell";
  var bS = { exports: {} };
  var CS = "(".charCodeAt(0);
  var xS = ")".charCodeAt(0);
  var wS = "'".charCodeAt(0);
  var kS = '"'.charCodeAt(0);
  var SS = "\\".charCodeAt(0);
  var ES = "/".charCodeAt(0);
  var TS = ",".charCodeAt(0);
  var RS = ":".charCodeAt(0);
  var OS = "*".charCodeAt(0);
  function _S(e27, t2) {
    var r2, n2, o2 = e27.type, i2 = e27.value;
    return t2 && void 0 !== (n2 = t2(e27)) ? n2 : "word" === o2 || "space" === o2 ? i2 : "string" === o2 ? (r2 = e27.quote || "") + i2 + (e27.unclosed ? "" : r2) : "comment" === o2 ? "/*" + i2 + (e27.unclosed ? "" : "*/") : "div" === o2 ? (e27.before || "") + i2 + (e27.after || "") : Array.isArray(e27.nodes) ? (r2 = PS(e27.nodes), "function" !== o2 ? r2 : i2 + "(" + (e27.before || "") + r2 + (e27.after || "") + (e27.unclosed ? "" : ")")) : i2;
  }
  function PS(e27, t2) {
    var r2, n2;
    if (Array.isArray(e27)) {
      for (r2 = "", n2 = e27.length - 1; ~n2; n2 -= 1)
        r2 = _S(e27[n2], t2) + r2;
      return r2;
    }
    return _S(e27, t2);
  }
  var MS = PS;
  var BS = "-".charCodeAt(0);
  var AS = "+".charCodeAt(0);
  var NS = ".".charCodeAt(0);
  var jS = "e".charCodeAt(0);
  var DS = "E".charCodeAt(0);
  var LS = function(e27) {
    for (var t2, r2, n2, o2, i2, a2, l2, u2, s2 = [], c2 = e27, d2 = 0, f2 = c2.charCodeAt(d2), p2 = c2.length, h2 = [{ nodes: s2 }], g2 = 0, v2 = "", m2 = "", y2 = ""; d2 < p2; )
      if (f2 <= 32) {
        t2 = d2;
        do {
          t2 += 1, f2 = c2.charCodeAt(t2);
        } while (f2 <= 32);
        o2 = c2.slice(d2, t2), n2 = s2[s2.length - 1], f2 === xS && g2 ? y2 = o2 : n2 && "div" === n2.type ? n2.after = o2 : f2 === TS || f2 === RS || f2 === ES && c2.charCodeAt(t2 + 1) !== OS ? m2 = o2 : s2.push({ type: "space", sourceIndex: d2, value: o2 }), d2 = t2;
      } else if (f2 === wS || f2 === kS) {
        t2 = d2, o2 = { type: "string", sourceIndex: d2, quote: r2 = f2 === wS ? "'" : '"' };
        do {
          if (i2 = false, ~(t2 = c2.indexOf(r2, t2 + 1)))
            for (a2 = t2; c2.charCodeAt(a2 - 1) === SS; )
              a2 -= 1, i2 = !i2;
          else
            t2 = (c2 += r2).length - 1, o2.unclosed = true;
        } while (i2);
        o2.value = c2.slice(d2 + 1, t2), s2.push(o2), d2 = t2 + 1, f2 = c2.charCodeAt(d2);
      } else if (f2 === ES && c2.charCodeAt(d2 + 1) === OS)
        o2 = { type: "comment", sourceIndex: d2 }, -1 === (t2 = c2.indexOf("*/", d2)) && (o2.unclosed = true, t2 = c2.length), o2.value = c2.slice(d2 + 2, t2), s2.push(o2), d2 = t2 + 2, f2 = c2.charCodeAt(d2);
      else if (f2 === ES || f2 === TS || f2 === RS)
        o2 = c2[d2], s2.push({ type: "div", sourceIndex: d2 - m2.length, value: o2, before: m2, after: "" }), m2 = "", d2 += 1, f2 = c2.charCodeAt(d2);
      else if (CS === f2) {
        t2 = d2;
        do {
          t2 += 1, f2 = c2.charCodeAt(t2);
        } while (f2 <= 32);
        if (o2 = { type: "function", sourceIndex: d2 - v2.length, value: v2, before: c2.slice(d2 + 1, t2) }, d2 = t2, "url" === v2 && f2 !== wS && f2 !== kS) {
          t2 -= 1;
          do {
            if (i2 = false, ~(t2 = c2.indexOf(")", t2 + 1)))
              for (a2 = t2; c2.charCodeAt(a2 - 1) === SS; )
                a2 -= 1, i2 = !i2;
            else
              t2 = (c2 += ")").length - 1, o2.unclosed = true;
          } while (i2);
          l2 = t2;
          do {
            l2 -= 1, f2 = c2.charCodeAt(l2);
          } while (f2 <= 32);
          o2.nodes = d2 !== l2 + 1 ? [{ type: "word", sourceIndex: d2, value: c2.slice(d2, l2 + 1) }] : [], o2.unclosed && l2 + 1 !== t2 ? (o2.after = "", o2.nodes.push({ type: "space", sourceIndex: l2 + 1, value: c2.slice(l2 + 1, t2) })) : o2.after = c2.slice(l2 + 1, t2), d2 = t2 + 1, f2 = c2.charCodeAt(d2), s2.push(o2);
        } else
          g2 += 1, o2.after = "", s2.push(o2), h2.push(o2), s2 = o2.nodes = [], u2 = o2;
        v2 = "";
      } else if (xS === f2 && g2)
        d2 += 1, f2 = c2.charCodeAt(d2), u2.after = y2, y2 = "", g2 -= 1, h2.pop(), s2 = (u2 = h2[g2]).nodes;
      else {
        t2 = d2;
        do {
          f2 === SS && (t2 += 1), t2 += 1, f2 = c2.charCodeAt(t2);
        } while (t2 < p2 && !(f2 <= 32 || f2 === wS || f2 === kS || f2 === TS || f2 === RS || f2 === ES || f2 === CS || f2 === xS && g2));
        o2 = c2.slice(d2, t2), CS === f2 ? v2 = o2 : s2.push({ type: "word", sourceIndex: d2, value: o2 }), d2 = t2;
      }
    for (d2 = h2.length - 1; d2; d2 -= 1)
      h2[d2].unclosed = true;
    return h2[0].nodes;
  };
  var IS = function e7(t2, r2, n2) {
    var o2, i2, a2, l2;
    for (o2 = 0, i2 = t2.length; o2 < i2; o2 += 1)
      a2 = t2[o2], n2 || (l2 = r2(a2, o2, t2)), false !== l2 && "function" === a2.type && Array.isArray(a2.nodes) && e7(a2.nodes, r2, n2), n2 && r2(a2, o2, t2);
  };
  var zS = MS;
  function FS(e27) {
    return this instanceof FS ? (this.nodes = LS(e27), this) : new FS(e27);
  }
  FS.prototype.toString = function() {
    return Array.isArray(this.nodes) ? zS(this.nodes) : "";
  }, FS.prototype.walk = function(e27, t2) {
    return IS(this.nodes, e27, t2), this;
  }, FS.unit = function(e27) {
    for (var t2, r2 = 0, n2 = e27.length, o2 = false, i2 = -1, a2 = false; r2 < n2; ) {
      if ((t2 = e27.charCodeAt(r2)) >= 48 && t2 <= 57)
        a2 = true;
      else if (t2 === jS || t2 === DS) {
        if (i2 > -1)
          break;
        i2 = r2;
      } else if (t2 === NS) {
        if (o2)
          break;
        o2 = true;
      } else {
        if (t2 !== AS && t2 !== BS)
          break;
        if (0 !== r2)
          break;
      }
      r2 += 1;
    }
    return i2 + 1 === r2 && r2--, !!a2 && { number: e27.slice(0, r2), unit: e27.slice(r2) };
  }, FS.walk = IS, FS.stringify = zS;
  var US = FS;
  var VS = {};
  !function(e27) {
    var t2 = function() {
      function e28(e29, t4) {
        var r3;
        if (Object.defineProperty(this, "name", { enumerable: false, writable: false, value: "JisonParserError" }), null == e29 && (e29 = "???"), Object.defineProperty(this, "message", { enumerable: false, writable: true, value: e29 }), this.hash = t4, t4 && t4.exception instanceof Error) {
          var n3 = t4.exception;
          this.message = n3.message || e29, r3 = n3.stack;
        }
        r3 || (Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(this, this.constructor) : r3 = new Error(e29).stack), r3 && Object.defineProperty(this, "stack", { enumerable: false, writable: false, value: r3 });
      }
      function t3(e29, t4, r3) {
        r3 = r3 || 0;
        for (var n3 = 0; n3 < t4; n3++)
          this.push(e29), e29 += r3;
      }
      function r2(e29, t4) {
        for (t4 += e29 = this.length - e29; e29 < t4; e29++)
          this.push(this[e29]);
      }
      function n2(e29) {
        for (var t4 = [], r3 = 0, n3 = e29.length; r3 < n3; r3++) {
          var o3 = e29[r3];
          "function" == typeof o3 ? (r3++, o3.apply(t4, e29[r3])) : t4.push(o3);
        }
        return t4;
      }
      "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf(e28.prototype, Error.prototype) : e28.prototype = Object.create(Error.prototype), e28.prototype.constructor = e28, e28.prototype.name = "JisonParserError";
      var o2 = { trace: function() {
      }, JisonParserError: e28, yy: {}, options: { type: "lalr", hasPartialLrUpgradeOnConflict: true, errorRecoveryTokenDiscardCount: 3 }, symbols_: { $accept: 0, $end: 1, ADD: 3, ANGLE: 16, CHS: 22, COMMA: 14, CSS_CPROP: 13, CSS_VAR: 12, DIV: 6, EMS: 20, EOF: 1, EXS: 21, FREQ: 18, LENGTH: 15, LPAREN: 7, MUL: 5, NESTED_CALC: 9, NUMBER: 11, PERCENTAGE: 28, PREFIX: 10, REMS: 23, RES: 19, RPAREN: 8, SUB: 4, TIME: 17, VHS: 24, VMAXS: 27, VMINS: 26, VWS: 25, css_value: 33, css_variable: 32, error: 2, expression: 29, math_expression: 30, value: 31 }, terminals_: { 1: "EOF", 2: "error", 3: "ADD", 4: "SUB", 5: "MUL", 6: "DIV", 7: "LPAREN", 8: "RPAREN", 9: "NESTED_CALC", 10: "PREFIX", 11: "NUMBER", 12: "CSS_VAR", 13: "CSS_CPROP", 14: "COMMA", 15: "LENGTH", 16: "ANGLE", 17: "TIME", 18: "FREQ", 19: "RES", 20: "EMS", 21: "EXS", 22: "CHS", 23: "REMS", 24: "VHS", 25: "VWS", 26: "VMINS", 27: "VMAXS", 28: "PERCENTAGE" }, TERROR: 2, EOF: 1, originalQuoteName: null, originalParseError: null, cleanupAfterParse: null, constructParseErrorInfo: null, yyMergeLocationInfo: null, __reentrant_call_depth: 0, __error_infos: [], __error_recovery_infos: [], quoteName: function(e29) {
        return '"' + e29 + '"';
      }, getSymbolName: function(e29) {
        if (this.terminals_[e29])
          return this.terminals_[e29];
        var t4 = this.symbols_;
        for (var r3 in t4)
          if (t4[r3] === e29)
            return r3;
        return null;
      }, describeSymbol: function(e29) {
        if (e29 !== this.EOF && this.terminal_descriptions_ && this.terminal_descriptions_[e29])
          return this.terminal_descriptions_[e29];
        if (e29 === this.EOF)
          return "end of input";
        var t4 = this.getSymbolName(e29);
        return t4 ? this.quoteName(t4) : null;
      }, collect_expected_token_set: function(e29, t4) {
        var r3 = this.TERROR, n3 = [], o3 = {};
        if (!t4 && this.state_descriptions_ && this.state_descriptions_[e29])
          return [this.state_descriptions_[e29]];
        for (var i3 in this.table[e29])
          if ((i3 = +i3) !== r3) {
            var a3 = t4 ? i3 : this.describeSymbol(i3);
            a3 && !o3[a3] && (n3.push(a3), o3[a3] = true);
          }
        return n3;
      }, productions_: function(e29) {
        for (var t4 = [], r3 = e29.pop, n3 = e29.rule, o3 = 0, i3 = r3.length; o3 < i3; o3++)
          t4.push([r3[o3], n3[o3]]);
        return t4;
      }({ pop: n2([29, t3, [30, 10], 31, 31, 32, 32, t3, [33, 15]]), rule: n2([2, t3, [3, 5], 4, 7, t3, [1, 4], 2, 4, 6, t3, [1, 14], 2]) }), performAction: function(e29, t4, r3) {
        var n3 = this.yy;
        switch (n3.parser, n3.lexer, e29) {
          case 0:
          case 6:
            this.$ = r3[t4 - 1];
            break;
          case 1:
            return this.$ = r3[t4 - 1], r3[t4 - 1];
          case 2:
          case 3:
          case 4:
          case 5:
            this.$ = { type: "MathExpression", operator: r3[t4 - 1], left: r3[t4 - 2], right: r3[t4] };
            break;
          case 7:
            this.$ = { type: "Calc", value: r3[t4 - 1] };
            break;
          case 8:
            this.$ = { type: "Calc", value: r3[t4 - 1], prefix: r3[t4 - 5] };
            break;
          case 9:
          case 10:
          case 11:
            this.$ = r3[t4];
            break;
          case 12:
            this.$ = { type: "Value", value: parseFloat(r3[t4]) };
            break;
          case 13:
            this.$ = { type: "Value", value: -1 * parseFloat(r3[t4]) };
            break;
          case 14:
            this.$ = { type: "CssVariable", value: r3[t4 - 1] };
            break;
          case 15:
            this.$ = { type: "CssVariable", value: r3[t4 - 3], fallback: r3[t4 - 1] };
            break;
          case 16:
            this.$ = { type: "LengthValue", value: parseFloat(r3[t4]), unit: /[a-z]+/.exec(r3[t4])[0] };
            break;
          case 17:
            this.$ = { type: "AngleValue", value: parseFloat(r3[t4]), unit: /[a-z]+/.exec(r3[t4])[0] };
            break;
          case 18:
            this.$ = { type: "TimeValue", value: parseFloat(r3[t4]), unit: /[a-z]+/.exec(r3[t4])[0] };
            break;
          case 19:
            this.$ = { type: "FrequencyValue", value: parseFloat(r3[t4]), unit: /[a-z]+/.exec(r3[t4])[0] };
            break;
          case 20:
            this.$ = { type: "ResolutionValue", value: parseFloat(r3[t4]), unit: /[a-z]+/.exec(r3[t4])[0] };
            break;
          case 21:
            this.$ = { type: "EmValue", value: parseFloat(r3[t4]), unit: "em" };
            break;
          case 22:
            this.$ = { type: "ExValue", value: parseFloat(r3[t4]), unit: "ex" };
            break;
          case 23:
            this.$ = { type: "ChValue", value: parseFloat(r3[t4]), unit: "ch" };
            break;
          case 24:
            this.$ = { type: "RemValue", value: parseFloat(r3[t4]), unit: "rem" };
            break;
          case 25:
            this.$ = { type: "VhValue", value: parseFloat(r3[t4]), unit: "vh" };
            break;
          case 26:
            this.$ = { type: "VwValue", value: parseFloat(r3[t4]), unit: "vw" };
            break;
          case 27:
            this.$ = { type: "VminValue", value: parseFloat(r3[t4]), unit: "vmin" };
            break;
          case 28:
            this.$ = { type: "VmaxValue", value: parseFloat(r3[t4]), unit: "vmax" };
            break;
          case 29:
            this.$ = { type: "PercentageValue", value: parseFloat(r3[t4]), unit: "%" };
            break;
          case 30:
            var o3 = r3[t4];
            o3.value *= -1, this.$ = o3;
        }
      }, table: function(e29) {
        for (var t4 = [], r3 = e29.len, n3 = e29.symbol, o3 = e29.type, i3 = e29.state, a3 = e29.mode, l2 = e29.goto, u2 = 0, s2 = r3.length; u2 < s2; u2++) {
          for (var c2 = r3[u2], d2 = {}, f2 = 0; f2 < c2; f2++) {
            var p2 = n3.shift();
            switch (o3.shift()) {
              case 2:
                d2[p2] = [a3.shift(), l2.shift()];
                break;
              case 0:
                d2[p2] = i3.shift();
                break;
              default:
                d2[p2] = [3];
            }
          }
          t4.push(d2);
        }
        return t4;
      }({ len: n2([24, 1, 5, 23, 1, 18, t3, [0, 3], 1, t3, [0, 16], t3, [23, 4], r2, [28, 3], 0, 0, 16, 1, 6, 6, t3, [0, 3], 5, 1, 2, r2, [37, 3], r2, [20, 3], 5, 0, 0]), symbol: n2([4, 7, 9, 11, 12, t3, [15, 19, 1], 1, 1, t3, [3, 4, 1], r2, [30, 19], r2, [29, 4], 7, 4, 10, 11, r2, [22, 14], r2, [19, 3], r2, [43, 22], r2, [23, 69], r2, [139, 4], 8, r2, [51, 24], 4, r2, [138, 15], 13, r2, [186, 5], 8, r2, [6, 6], r2, [5, 5], 9, 8, 14, r2, [159, 47], r2, [60, 10]]), type: n2([t3, [2, 19], t3, [0, 5], 1, t3, [2, 24], t3, [0, 4], r2, [22, 19], r2, [43, 42], r2, [23, 70], r2, [28, 25], r2, [45, 25], r2, [113, 54]]), state: n2([1, 2, 8, 6, 7, 30, r2, [4, 3], 33, 37, r2, [5, 3], 38, r2, [4, 3], 39, r2, [4, 3], 40, r2, [4, 3], 42, r2, [21, 4], 50, r2, [5, 3], 51, r2, [4, 3]]), mode: n2([t3, [1, 179], t3, [2, 3], r2, [5, 5], r2, [6, 4], t3, [1, 57]]), goto: n2([5, 3, 4, 24, t3, [9, 15, 1], t3, [25, 5, 1], r2, [24, 19], 31, 35, 32, 34, r2, [18, 14], 36, r2, [38, 19], r2, [19, 57], r2, [118, 4], 41, r2, [24, 19], 43, 35, r2, [16, 14], 44, t3, [2, 3], 28, 29, 2, t3, [3, 3], 28, 29, 3, r2, [53, 4], t3, [45, 5, 1], r2, [100, 42], 52, r2, [5, 4], 53]) }), defaultActions: function(e29) {
        for (var t4 = {}, r3 = e29.idx, n3 = e29.goto, o3 = 0, i3 = r3.length; o3 < i3; o3++) {
          t4[r3[o3]] = n3[o3];
        }
        return t4;
      }({ idx: n2([6, 7, 8, t3, [10, 16, 1], 33, 34, 39, 40, 41, 45, 47, 52, 53]), goto: n2([9, 10, 11, t3, [16, 14, 1], 12, 1, 30, 13, t3, [4, 4, 1], 14, 15, 8]) }), parseError: function(e29, t4, r3) {
        if (!t4.recoverable)
          throw "function" == typeof this.trace && this.trace(e29), r3 || (r3 = this.JisonParserError), new r3(e29, t4);
        "function" == typeof this.trace && this.trace(e29), t4.destroy();
      }, parse: function(e29) {
        var t4 = this, r3 = new Array(128), n3 = new Array(128), o3 = new Array(128), i3 = this.table, a3 = 0, l2 = 0;
        this.TERROR;
        var u2 = this.EOF;
        this.options.errorRecoveryTokenDiscardCount;
        var s2, c2 = [0, 54];
        s2 = this.__lexer__ ? this.__lexer__ : this.__lexer__ = Object.create(this.lexer);
        var d2 = { parseError: void 0, quoteName: void 0, lexer: void 0, parser: void 0, pre_parse: void 0, post_parse: void 0, pre_lex: void 0, post_lex: void 0 };
        function f2() {
          var e30 = s2.fastLex();
          return "number" != typeof e30 && (e30 = t4.symbols_[e30] || e30), e30 || u2;
        }
        "function" != typeof assert || assert, this.yyGetSharedState = function() {
          return d2;
        }, function(e30, t5) {
          for (var r4 in t5)
            void 0 === e30[r4] && Object.prototype.hasOwnProperty.call(t5, r4) && (e30[r4] = t5[r4]);
        }(d2, this.yy), d2.lexer = s2, d2.parser = this, "function" == typeof d2.parseError ? this.parseError = function(e30, t5, r4) {
          return r4 || (r4 = this.JisonParserError), d2.parseError.call(this, e30, t5, r4);
        } : this.parseError = this.originalParseError, "function" == typeof d2.quoteName ? this.quoteName = function(e30) {
          return d2.quoteName.call(this, e30);
        } : this.quoteName = this.originalQuoteName, this.cleanupAfterParse = function(e30, t5, i4) {
          var l3, u3;
          t5 && ((d2.post_parse || this.post_parse) && (u3 = this.constructParseErrorInfo(null, null, null, false)), d2.post_parse && void 0 !== (l3 = d2.post_parse.call(this, d2, e30, u3)) && (e30 = l3), this.post_parse && void 0 !== (l3 = this.post_parse.call(this, d2, e30, u3)) && (e30 = l3), u3 && u3.destroy && u3.destroy());
          if (this.__reentrant_call_depth > 1)
            return e30;
          if (s2.cleanupAfterLex && s2.cleanupAfterLex(i4), d2 && (d2.lexer = void 0, d2.parser = void 0, s2.yy === d2 && (s2.yy = void 0)), d2 = void 0, this.parseError = this.originalParseError, this.quoteName = this.originalQuoteName, r3.length = 0, n3.length = 0, o3.length = 0, a3 = 0, !i4) {
            for (var c3 = this.__error_infos.length - 1; c3 >= 0; c3--) {
              var f3 = this.__error_infos[c3];
              f3 && "function" == typeof f3.destroy && f3.destroy();
            }
            this.__error_infos.length = 0;
          }
          return e30;
        }, this.constructParseErrorInfo = function(e30, t5, i4, u3) {
          var c3 = { errStr: e30, exception: t5, text: s2.match, value: s2.yytext, token: this.describeSymbol(l2) || l2, token_id: l2, line: s2.yylineno, expected: i4, recoverable: u3, state: p2, action: h2, new_state: C2, symbol_stack: r3, state_stack: n3, value_stack: o3, stack_pointer: a3, yy: d2, lexer: s2, parser: this, destroy: function() {
            var e31 = !!this.recoverable;
            for (var t6 in this)
              this.hasOwnProperty(t6) && "object" == typeof t6 && (this[t6] = void 0);
            this.recoverable = e31;
          } };
          return this.__error_infos.push(c3), c3;
        };
        var p2, h2, g2, v2, m2, y2, b2, C2, x2 = function() {
          var e30 = s2.lex();
          return "number" != typeof e30 && (e30 = t4.symbols_[e30] || e30), e30 || u2;
        }, w2 = { $: true, _$: void 0, yy: d2 }, k2 = false;
        try {
          if (this.__reentrant_call_depth++, s2.setInput(e29, d2), "function" == typeof s2.canIUse)
            s2.canIUse().fastLex && (x2 = f2);
          for (o3[a3] = null, n3[a3] = 0, r3[a3] = 0, ++a3, this.pre_parse && this.pre_parse.call(this, d2), d2.pre_parse && d2.pre_parse.call(this, d2), C2 = n3[a3 - 1]; ; ) {
            if (p2 = C2, this.defaultActions[p2])
              h2 = 2, C2 = this.defaultActions[p2];
            else if (l2 || (l2 = x2()), v2 = i3[p2] && i3[p2][l2] || c2, C2 = v2[1], !(h2 = v2[0])) {
              var S2, E2 = this.describeSymbol(l2) || l2, T2 = this.collect_expected_token_set(p2);
              S2 = "number" == typeof s2.yylineno ? "Parse error on line " + (s2.yylineno + 1) + ": " : "Parse error: ", "function" == typeof s2.showPosition && (S2 += "\n" + s2.showPosition(69, 10) + "\n"), T2.length ? S2 += "Expecting " + T2.join(", ") + ", got unexpected " + E2 : S2 += "Unexpected " + E2, m2 = this.constructParseErrorInfo(S2, null, T2, false), void 0 !== (g2 = this.parseError(m2.errStr, m2, this.JisonParserError)) && (k2 = g2);
              break;
            }
            switch (h2) {
              default:
                if (h2 instanceof Array) {
                  m2 = this.constructParseErrorInfo("Parse Error: multiple actions possible at state: " + p2 + ", token: " + l2, null, null, false), void 0 !== (g2 = this.parseError(m2.errStr, m2, this.JisonParserError)) && (k2 = g2);
                  break;
                }
                m2 = this.constructParseErrorInfo("Parsing halted. No viable error recovery approach available due to internal system failure.", null, null, false), void 0 !== (g2 = this.parseError(m2.errStr, m2, this.JisonParserError)) && (k2 = g2);
                break;
              case 1:
                r3[a3] = l2, o3[a3] = s2.yytext, n3[a3] = C2, ++a3, l2 = 0;
                continue;
              case 2:
                if (y2 = (b2 = this.productions_[C2 - 1])[1], void 0 !== (g2 = this.performAction.call(w2, C2, a3 - 1, o3))) {
                  k2 = g2;
                  break;
                }
                a3 -= y2;
                var R2 = b2[0];
                r3[a3] = R2, o3[a3] = w2.$, C2 = i3[n3[a3 - 1]][R2], n3[a3] = C2, ++a3;
                continue;
              case 3:
                -2 !== a3 && (k2 = true, a3--, void 0 !== o3[a3] && (k2 = o3[a3]));
            }
            break;
          }
        } catch (e30) {
          if (e30 instanceof this.JisonParserError)
            throw e30;
          if (s2 && "function" == typeof s2.JisonLexerError && e30 instanceof s2.JisonLexerError)
            throw e30;
          m2 = this.constructParseErrorInfo("Parsing aborted due to exception.", e30, null, false), k2 = false, void 0 !== (g2 = this.parseError(m2.errStr, m2, this.JisonParserError)) && (k2 = g2);
        } finally {
          k2 = this.cleanupAfterParse(k2, true, true), this.__reentrant_call_depth--;
        }
        return k2;
      } };
      o2.originalParseError = o2.parseError, o2.originalQuoteName = o2.quoteName;
      var i2 = function() {
        function e29(e30, t5) {
          var r3;
          if (Object.defineProperty(this, "name", { enumerable: false, writable: false, value: "JisonLexerError" }), null == e30 && (e30 = "???"), Object.defineProperty(this, "message", { enumerable: false, writable: true, value: e30 }), this.hash = t5, t5 && t5.exception instanceof Error) {
            var n3 = t5.exception;
            this.message = n3.message || e30, r3 = n3.stack;
          }
          r3 || (Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(this, this.constructor) : r3 = new Error(e30).stack), r3 && Object.defineProperty(this, "stack", { enumerable: false, writable: false, value: r3 });
        }
        "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf(e29.prototype, Error.prototype) : e29.prototype = Object.create(Error.prototype), e29.prototype.constructor = e29, e29.prototype.name = "JisonLexerError";
        var t4 = { EOF: 1, ERROR: 2, __currentRuleSet__: null, __error_infos: [], __decompressed: false, done: false, _backtrack: false, _input: "", _more: false, _signaled_error_token: false, conditionStack: [], match: "", matched: "", matches: false, yytext: "", offset: 0, yyleng: 0, yylineno: 0, yylloc: null, constructLexErrorInfo: function(e30, t5, r3) {
          if (e30 = "" + e30, null == r3 && (r3 = !(e30.indexOf("\n") > 0 && e30.indexOf("^") > 0)), this.yylloc && r3) {
            if ("function" == typeof this.prettyPrintRange)
              this.prettyPrintRange(this.yylloc), /\n\s*$/.test(e30) || (e30 += "\n"), e30 += "\n  Erroneous area:\n" + this.prettyPrintRange(this.yylloc);
            else if ("function" == typeof this.showPosition) {
              var n3 = this.showPosition();
              n3 && (e30.length && "\n" !== e30[e30.length - 1] && "\n" !== n3[0] ? e30 += "\n" + n3 : e30 += n3);
            }
          }
          var o3 = { errStr: e30, recoverable: !!t5, text: this.match, token: null, line: this.yylineno, loc: this.yylloc, yy: this.yy, lexer: this, destroy: function() {
            var e31 = !!this.recoverable;
            for (var t6 in this)
              this.hasOwnProperty(t6) && "object" == typeof t6 && (this[t6] = void 0);
            this.recoverable = e31;
          } };
          return this.__error_infos.push(o3), o3;
        }, parseError: function(e30, t5, r3) {
          if (r3 || (r3 = this.JisonLexerError), this.yy) {
            if (this.yy.parser && "function" == typeof this.yy.parser.parseError)
              return this.yy.parser.parseError.call(this, e30, t5, r3) || this.ERROR;
            if ("function" == typeof this.yy.parseError)
              return this.yy.parseError.call(this, e30, t5, r3) || this.ERROR;
          }
          throw new r3(e30, t5);
        }, yyerror: function(e30) {
          var t5 = "";
          this.yylloc && (t5 = " on line " + (this.yylineno + 1));
          var r3 = this.constructLexErrorInfo("Lexical error" + t5 + ": " + e30, this.options.lexerErrorsAreRecoverable), n3 = Array.prototype.slice.call(arguments, 1);
          return n3.length && (r3.extra_error_attributes = n3), this.parseError(r3.errStr, r3, this.JisonLexerError) || this.ERROR;
        }, cleanupAfterLex: function(e30) {
          if (this.setInput("", {}), !e30) {
            for (var t5 = this.__error_infos.length - 1; t5 >= 0; t5--) {
              var r3 = this.__error_infos[t5];
              r3 && "function" == typeof r3.destroy && r3.destroy();
            }
            this.__error_infos.length = 0;
          }
          return this;
        }, clear: function() {
          this.yytext = "", this.yyleng = 0, this.match = "", this.matches = false, this._more = false, this._backtrack = false;
          var e30 = this.yylloc ? this.yylloc.last_column : 0;
          this.yylloc = { first_line: this.yylineno + 1, first_column: e30, last_line: this.yylineno + 1, last_column: e30, range: [this.offset, this.offset] };
        }, setInput: function(e30, t5) {
          if (this.yy = t5 || this.yy || {}, !this.__decompressed) {
            for (var r3 = this.rules, n3 = 0, o3 = r3.length; n3 < o3; n3++) {
              "number" == typeof (f2 = r3[n3]) && (r3[n3] = r3[f2]);
            }
            var i3 = this.conditions;
            for (var a3 in i3) {
              var l2 = i3[a3], u2 = l2.rules, s2 = (o3 = u2.length, new Array(o3 + 1)), c2 = new Array(o3 + 1);
              for (n3 = 0; n3 < o3; n3++) {
                var d2 = u2[n3], f2 = r3[d2];
                s2[n3 + 1] = f2, c2[n3 + 1] = d2;
              }
              l2.rules = c2, l2.__rule_regexes = s2, l2.__rule_count = o3;
            }
            this.__decompressed = true;
          }
          return this._input = e30 || "", this.clear(), this._signaled_error_token = false, this.done = false, this.yylineno = 0, this.matched = "", this.conditionStack = ["INITIAL"], this.__currentRuleSet__ = null, this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0, range: [0, 0] }, this.offset = 0, this;
        }, editRemainingInput: function(e30, t5) {
          var r3 = e30.call(this, this._input, t5);
          return "string" != typeof r3 ? r3 && (this._input = "" + r3) : this._input = r3, this;
        }, input: function() {
          if (!this._input)
            return null;
          var e30 = this._input[0];
          this.yytext += e30, this.yyleng++, this.offset++, this.match += e30, this.matched += e30;
          var t5 = 1, r3 = false;
          if ("\n" === e30)
            r3 = true;
          else if ("\r" === e30) {
            r3 = true;
            var n3 = this._input[1];
            "\n" === n3 && (t5++, e30 += n3, this.yytext += n3, this.yyleng++, this.offset++, this.match += n3, this.matched += n3, this.yylloc.range[1]++);
          }
          return r3 ? (this.yylineno++, this.yylloc.last_line++, this.yylloc.last_column = 0) : this.yylloc.last_column++, this.yylloc.range[1]++, this._input = this._input.slice(t5), e30;
        }, unput: function(e30) {
          var t5 = e30.length, r3 = e30.split(/(?:\r\n?|\n)/g);
          if (this._input = e30 + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - t5), this.yyleng = this.yytext.length, this.offset -= t5, this.match = this.match.substr(0, this.match.length - t5), this.matched = this.matched.substr(0, this.matched.length - t5), r3.length > 1) {
            this.yylineno -= r3.length - 1, this.yylloc.last_line = this.yylineno + 1;
            var n3 = this.match, o3 = n3.split(/(?:\r\n?|\n)/g);
            1 === o3.length && (o3 = (n3 = this.matched).split(/(?:\r\n?|\n)/g)), this.yylloc.last_column = o3[o3.length - 1].length;
          } else
            this.yylloc.last_column -= t5;
          return this.yylloc.range[1] = this.yylloc.range[0] + this.yyleng, this.done = false, this;
        }, more: function() {
          return this._more = true, this;
        }, reject: function() {
          if (this.options.backtrack_lexer)
            this._backtrack = true;
          else {
            var e30 = "";
            this.yylloc && (e30 = " on line " + (this.yylineno + 1));
            var t5 = this.constructLexErrorInfo("Lexical error" + e30 + ": You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).", false);
            this._signaled_error_token = this.parseError(t5.errStr, t5, this.JisonLexerError) || this.ERROR;
          }
          return this;
        }, less: function(e30) {
          return this.unput(this.match.slice(e30));
        }, pastInput: function(e30, t5) {
          var r3 = this.matched.substring(0, this.matched.length - this.match.length);
          e30 < 0 ? e30 = r3.length : e30 || (e30 = 20), t5 < 0 ? t5 = r3.length : t5 || (t5 = 1);
          var n3 = (r3 = r3.substr(2 * -e30 - 2)).replace(/\r\n|\r/g, "\n").split("\n");
          return (r3 = (n3 = n3.slice(-t5)).join("\n")).length > e30 && (r3 = "..." + r3.substr(-e30)), r3;
        }, upcomingInput: function(e30, t5) {
          var r3 = this.match;
          e30 < 0 ? e30 = r3.length + this._input.length : e30 || (e30 = 20), t5 < 0 ? t5 = e30 : t5 || (t5 = 1), r3.length < 2 * e30 + 2 && (r3 += this._input.substring(0, 2 * e30 + 2));
          var n3 = r3.replace(/\r\n|\r/g, "\n").split("\n");
          return (r3 = (n3 = n3.slice(0, t5)).join("\n")).length > e30 && (r3 = r3.substring(0, e30) + "..."), r3;
        }, showPosition: function(e30, t5) {
          var r3 = this.pastInput(e30).replace(/\s/g, " "), n3 = new Array(r3.length + 1).join("-");
          return r3 + this.upcomingInput(t5).replace(/\s/g, " ") + "\n" + n3 + "^";
        }, deriveLocationInfo: function(e30, t5, r3, n3) {
          var o3 = { first_line: 1, first_column: 0, last_line: 1, last_column: 0, range: [0, 0] };
          return e30 && (o3.first_line = 0 | e30.first_line, o3.last_line = 0 | e30.last_line, o3.first_column = 0 | e30.first_column, o3.last_column = 0 | e30.last_column, e30.range && (o3.range[0] = 0 | e30.range[0], o3.range[1] = 0 | e30.range[1])), (o3.first_line <= 0 || o3.last_line < o3.first_line) && (o3.first_line <= 0 && t5 && (o3.first_line = 0 | t5.last_line, o3.first_column = 0 | t5.last_column, t5.range && (o3.range[0] = 0 | e30.range[1])), (o3.last_line <= 0 || o3.last_line < o3.first_line) && r3 && (o3.last_line = 0 | r3.first_line, o3.last_column = 0 | r3.first_column, r3.range && (o3.range[1] = 0 | e30.range[0])), o3.first_line <= 0 && n3 && (o3.last_line <= 0 || n3.last_line <= o3.last_line) && (o3.first_line = 0 | n3.first_line, o3.first_column = 0 | n3.first_column, n3.range && (o3.range[0] = 0 | n3.range[0])), o3.last_line <= 0 && n3 && (o3.first_line <= 0 || n3.first_line >= o3.first_line) && (o3.last_line = 0 | n3.last_line, o3.last_column = 0 | n3.last_column, n3.range && (o3.range[1] = 0 | n3.range[1]))), o3.last_line <= 0 && (o3.first_line <= 0 ? (o3.first_line = this.yylloc.first_line, o3.last_line = this.yylloc.last_line, o3.first_column = this.yylloc.first_column, o3.last_column = this.yylloc.last_column, o3.range[0] = this.yylloc.range[0], o3.range[1] = this.yylloc.range[1]) : (o3.last_line = this.yylloc.last_line, o3.last_column = this.yylloc.last_column, o3.range[1] = this.yylloc.range[1])), o3.first_line <= 0 && (o3.first_line = o3.last_line, o3.first_column = 0, o3.range[1] = o3.range[0]), o3.first_column < 0 && (o3.first_column = 0), o3.last_column < 0 && (o3.last_column = o3.first_column > 0 ? o3.first_column : 80), o3;
        }, prettyPrintRange: function(e30, t5, r3) {
          e30 = this.deriveLocationInfo(e30, t5, r3);
          var n3 = (this.matched + this._input).split("\n"), o3 = Math.max(1, t5 ? t5.first_line : e30.first_line - 3), i3 = Math.max(1, r3 ? r3.last_line : e30.last_line + 1), a3 = 1 + Math.log10(1 | i3) | 0, l2 = new Array(a3).join(" "), u2 = [], s2 = n3.slice(o3 - 1, i3 + 1).map(function(t6, r4) {
            var n4 = r4 + o3, i4 = (l2 + n4).substr(-a3) + ": " + t6, s3 = new Array(a3 + 1).join("^"), c3 = 3, d3 = 0;
            (n4 === e30.first_line ? (c3 += e30.first_column, d3 = Math.max(2, (n4 === e30.last_line ? e30.last_column : t6.length) - e30.first_column + 1)) : n4 === e30.last_line ? d3 = Math.max(2, e30.last_column + 1) : n4 > e30.first_line && n4 < e30.last_line && (d3 = Math.max(2, t6.length + 1)), d3) && (i4 += "\n" + s3 + new Array(c3).join(".") + new Array(d3).join("^"), t6.trim().length > 0 && u2.push(r4));
            return i4 = i4.replace(/\t/g, " ");
          });
          if (u2.length > 4) {
            var c2 = u2[1] + 1, d2 = u2[u2.length - 2] - 1, f2 = new Array(a3 + 1).join(" ") + "  (...continued...)";
            f2 += "\n" + new Array(a3 + 1).join("-") + "  (---------------)", s2.splice(c2, d2 - c2 + 1, f2);
          }
          return s2.join("\n");
        }, describeYYLLOC: function(e30, t5) {
          var r3, n3 = e30.first_line, o3 = e30.last_line, i3 = e30.first_column, a3 = e30.last_column;
          if (0 === o3 - n3 ? (r3 = "line " + n3 + ", ", r3 += a3 - i3 <= 1 ? "column " + i3 : "columns " + i3 + " .. " + a3) : r3 = "lines " + n3 + "(column " + i3 + ") .. " + o3 + "(column " + a3 + ")", e30.range && t5) {
            var l2 = e30.range[0], u2 = e30.range[1] - 1;
            r3 += u2 <= l2 ? " {String Offset: " + l2 + "}" : " {String Offset range: " + l2 + " .. " + u2 + "}";
          }
          return r3;
        }, test_match: function(e30, t5) {
          var r3, n3, o3, i3, a3;
          if (this.options.backtrack_lexer && (o3 = { yylineno: this.yylineno, yylloc: { first_line: this.yylloc.first_line, last_line: this.yylloc.last_line, first_column: this.yylloc.first_column, last_column: this.yylloc.last_column, range: this.yylloc.range.slice(0) }, yytext: this.yytext, match: this.match, matches: this.matches, matched: this.matched, yyleng: this.yyleng, offset: this.offset, _more: this._more, _input: this._input, yy: this.yy, conditionStack: this.conditionStack.slice(0), done: this.done }), a3 = (i3 = e30[0]).length, (n3 = i3.split(/(?:\r\n?|\n)/g)).length > 1 ? (this.yylineno += n3.length - 1, this.yylloc.last_line = this.yylineno + 1, this.yylloc.last_column = n3[n3.length - 1].length) : this.yylloc.last_column += a3, this.yytext += i3, this.match += i3, this.matched += i3, this.matches = e30, this.yyleng = this.yytext.length, this.yylloc.range[1] += a3, this.offset += a3, this._more = false, this._backtrack = false, this._input = this._input.slice(a3), r3 = this.performAction.call(this, this.yy, t5, this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = false), r3)
            return r3;
          if (this._backtrack) {
            for (var l2 in o3)
              this[l2] = o3[l2];
            return this.__currentRuleSet__ = null, false;
          }
          return !!this._signaled_error_token && (r3 = this._signaled_error_token, this._signaled_error_token = false, r3);
        }, next: function() {
          if (this.done)
            return this.clear(), this.EOF;
          var e30, t5, r3, n3;
          this._input || (this.done = true), this._more || this.clear();
          var o3 = this.__currentRuleSet__;
          if (!(o3 || (o3 = this.__currentRuleSet__ = this._currentRules()) && o3.rules)) {
            var i3 = "";
            this.options.trackPosition && (i3 = " on line " + (this.yylineno + 1));
            var a3 = this.constructLexErrorInfo("Internal lexer engine error" + i3 + ': The lex grammar programmer pushed a non-existing condition name "' + this.topState() + '"; this is a fatal error and should be reported to the application programmer team!', false);
            return this.parseError(a3.errStr, a3, this.JisonLexerError) || this.ERROR;
          }
          for (var l2 = o3.rules, u2 = o3.__rule_regexes, s2 = o3.__rule_count, c2 = 1; c2 <= s2; c2++)
            if ((r3 = this._input.match(u2[c2])) && (!t5 || r3[0].length > t5[0].length)) {
              if (t5 = r3, n3 = c2, this.options.backtrack_lexer) {
                if (false !== (e30 = this.test_match(r3, l2[c2])))
                  return e30;
                if (this._backtrack) {
                  t5 = void 0;
                  continue;
                }
                return false;
              }
              if (!this.options.flex)
                break;
            }
          if (t5)
            return false !== (e30 = this.test_match(t5, l2[n3])) && e30;
          if (this._input) {
            i3 = "";
            this.options.trackPosition && (i3 = " on line " + (this.yylineno + 1));
            a3 = this.constructLexErrorInfo("Lexical error" + i3 + ": Unrecognized text.", this.options.lexerErrorsAreRecoverable);
            var d2 = this._input, f2 = this.topState(), p2 = this.conditionStack.length;
            return (e30 = this.parseError(a3.errStr, a3, this.JisonLexerError) || this.ERROR) === this.ERROR && (this.matches || d2 !== this._input || f2 !== this.topState() || p2 !== this.conditionStack.length || this.input()), e30;
          }
          return this.done = true, this.clear(), this.EOF;
        }, lex: function() {
          var e30;
          for ("function" == typeof this.pre_lex && (e30 = this.pre_lex.call(this, 0)), "function" == typeof this.options.pre_lex && (e30 = this.options.pre_lex.call(this, e30) || e30), this.yy && "function" == typeof this.yy.pre_lex && (e30 = this.yy.pre_lex.call(this, e30) || e30); !e30; )
            e30 = this.next();
          return this.yy && "function" == typeof this.yy.post_lex && (e30 = this.yy.post_lex.call(this, e30) || e30), "function" == typeof this.options.post_lex && (e30 = this.options.post_lex.call(this, e30) || e30), "function" == typeof this.post_lex && (e30 = this.post_lex.call(this, e30) || e30), e30;
        }, fastLex: function() {
          for (var e30; !e30; )
            e30 = this.next();
          return e30;
        }, canIUse: function() {
          return { fastLex: !("function" == typeof this.pre_lex || "function" == typeof this.options.pre_lex || this.yy && "function" == typeof this.yy.pre_lex || this.yy && "function" == typeof this.yy.post_lex || "function" == typeof this.options.post_lex || "function" == typeof this.post_lex) && "function" == typeof this.fastLex };
        }, begin: function(e30) {
          return this.pushState(e30);
        }, pushState: function(e30) {
          return this.conditionStack.push(e30), this.__currentRuleSet__ = null, this;
        }, popState: function() {
          return this.conditionStack.length - 1 > 0 ? (this.__currentRuleSet__ = null, this.conditionStack.pop()) : this.conditionStack[0];
        }, topState: function(e30) {
          return (e30 = this.conditionStack.length - 1 - Math.abs(e30 || 0)) >= 0 ? this.conditionStack[e30] : "INITIAL";
        }, _currentRules: function() {
          return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]] : this.conditions.INITIAL;
        }, stateStackSize: function() {
          return this.conditionStack.length;
        }, options: { trackPosition: true }, JisonLexerError: e29, performAction: function(e30, t5, r3) {
          if (1 !== t5)
            return this.simpleCaseActionClusters[t5];
        }, simpleCaseActionClusters: {
          0: 13,
          2: 5,
          3: 6,
          4: 3,
          5: 4,
          6: 15,
          7: 15,
          8: 15,
          9: 15,
          10: 15,
          11: 15,
          12: 16,
          13: 16,
          14: 16,
          15: 16,
          16: 17,
          17: 17,
          18: 18,
          19: 18,
          20: 19,
          21: 19,
          22: 19,
          23: 20,
          24: 21,
          25: 22,
          26: 23,
          27: 25,
          28: 24,
          29: 26,
          30: 27,
          31: 28,
          32: 11,
          33: 9,
          34: 12,
          35: 10,
          36: 7,
          37: 8,
          38: 14,
          39: 1
        }, rules: [/^(?:(--[\d\-A-Za-z]*))/, /^(?:\s+)/, /^(?:\*)/, /^(?:\/)/, /^(?:\+)/, /^(?:-)/, /^(?:(\d+(\.\d*)?|\.\d+)px\b)/, /^(?:(\d+(\.\d*)?|\.\d+)cm\b)/, /^(?:(\d+(\.\d*)?|\.\d+)mm\b)/, /^(?:(\d+(\.\d*)?|\.\d+)in\b)/, /^(?:(\d+(\.\d*)?|\.\d+)pt\b)/, /^(?:(\d+(\.\d*)?|\.\d+)pc\b)/, /^(?:(\d+(\.\d*)?|\.\d+)deg\b)/, /^(?:(\d+(\.\d*)?|\.\d+)grad\b)/, /^(?:(\d+(\.\d*)?|\.\d+)rad\b)/, /^(?:(\d+(\.\d*)?|\.\d+)turn\b)/, /^(?:(\d+(\.\d*)?|\.\d+)s\b)/, /^(?:(\d+(\.\d*)?|\.\d+)ms\b)/, /^(?:(\d+(\.\d*)?|\.\d+)Hz\b)/, /^(?:(\d+(\.\d*)?|\.\d+)kHz\b)/, /^(?:(\d+(\.\d*)?|\.\d+)dpi\b)/, /^(?:(\d+(\.\d*)?|\.\d+)dpcm\b)/, /^(?:(\d+(\.\d*)?|\.\d+)dppx\b)/, /^(?:(\d+(\.\d*)?|\.\d+)em\b)/, /^(?:(\d+(\.\d*)?|\.\d+)ex\b)/, /^(?:(\d+(\.\d*)?|\.\d+)ch\b)/, /^(?:(\d+(\.\d*)?|\.\d+)rem\b)/, /^(?:(\d+(\.\d*)?|\.\d+)vw\b)/, /^(?:(\d+(\.\d*)?|\.\d+)vh\b)/, /^(?:(\d+(\.\d*)?|\.\d+)vmin\b)/, /^(?:(\d+(\.\d*)?|\.\d+)vmax\b)/, /^(?:(\d+(\.\d*)?|\.\d+)%)/, /^(?:(\d+(\.\d*)?|\.\d+)\b)/, /^(?:(calc))/, /^(?:(var))/, /^(?:([a-z]+))/, /^(?:\()/, /^(?:\))/, /^(?:,)/, /^(?:$)/], conditions: { INITIAL: { rules: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], inclusive: true } } };
        return t4;
      }();
      function a2() {
        this.yy = {};
      }
      return o2.lexer = i2, a2.prototype = o2, o2.Parser = a2, new a2();
    }();
    e27.parser = t2, e27.Parser = t2.Parser, e27.parse = function() {
      return t2.parse.apply(t2, arguments);
    };
  }(VS);
  var WS = {};
  var HS = { exports: {} };
  var $S = { px: { px: 1, cm: 96 / 2.54, mm: 96 / 25.4, in: 96, pt: 96 / 72, pc: 16 }, cm: { px: 2.54 / 96, cm: 1, mm: 0.1, in: 2.54, pt: 2.54 / 72, pc: 2.54 / 6 }, mm: { px: 25.4 / 96, cm: 10, mm: 1, in: 25.4, pt: 25.4 / 72, pc: 25.4 / 6 }, in: { px: 1 / 96, cm: 1 / 2.54, mm: 1 / 25.4, in: 1, pt: 1 / 72, pc: 1 / 6 }, pt: { px: 0.75, cm: 72 / 2.54, mm: 72 / 25.4, in: 72, pt: 1, pc: 12 }, pc: { px: 6 / 96, cm: 6 / 2.54, mm: 6 / 25.4, in: 6, pt: 6 / 72, pc: 1 }, deg: { deg: 1, grad: 0.9, rad: 180 / Math.PI, turn: 360 }, grad: { deg: 400 / 360, grad: 1, rad: 200 / Math.PI, turn: 400 }, rad: { deg: Math.PI / 180, grad: Math.PI / 200, rad: 1, turn: 2 * Math.PI }, turn: { deg: 1 / 360, grad: 1 / 400, rad: 0.5 / Math.PI, turn: 1 }, s: { s: 1, ms: 1e-3 }, ms: { s: 1e3, ms: 1 }, Hz: { Hz: 1, kHz: 1e3 }, kHz: { Hz: 1e-3, kHz: 1 }, dpi: { dpi: 1, dpcm: 1 / 2.54, dppx: 1 / 96 }, dpcm: { dpi: 2.54, dpcm: 1, dppx: 2.54 / 96 }, dppx: { dpi: 96, dpcm: 96 / 2.54, dppx: 1 } };
  var qS = function(e27, t2, r2, n2) {
    if (!$S.hasOwnProperty(r2))
      throw new Error("Cannot convert to " + r2);
    if (!$S[r2].hasOwnProperty(t2))
      throw new Error("Cannot convert from " + t2 + " to " + r2);
    var o2 = $S[r2][t2] * e27;
    return false !== n2 ? (n2 = Math.pow(10, parseInt(n2) || 5), Math.round(o2 * n2) / n2) : o2;
  };
  !function(e27, t2) {
    Object.defineProperty(t2, "__esModule", { value: true });
    var r2, n2 = (r2 = qS) && r2.__esModule ? r2 : { default: r2 };
    t2.default = function(e28, t3, r3) {
      switch (e28.type) {
        case "LengthValue":
        case "AngleValue":
        case "TimeValue":
        case "FrequencyValue":
        case "ResolutionValue":
          return function(e29, t4, r4) {
            t4.type === e29.type && (t4 = { type: e29.type, value: (0, n2.default)(t4.value, t4.unit, e29.unit, r4), unit: e29.unit });
            return { left: e29, right: t4 };
          }(e28, t3, r3);
        default:
          return { left: e28, right: t3 };
      }
    }, e27.exports = t2.default;
  }(HS, HS.exports), Object.defineProperty(WS, "__esModule", { value: true }), WS.flip = ZS;
  var YS;
  var GS = (YS = HS.exports) && YS.__esModule ? YS : { default: YS };
  function XS(e27, t2) {
    return "MathExpression" === e27.type ? function(e28, t3) {
      switch (e28 = function(e29, t4) {
        var r2 = (0, GS.default)(e29.left, e29.right, t4), n2 = XS(r2.left, t4), o2 = XS(r2.right, t4);
        "MathExpression" === n2.type && "MathExpression" === o2.type && ("/" === n2.operator && "*" === o2.operator || "-" === n2.operator && "+" === o2.operator || "*" === n2.operator && "/" === o2.operator || "+" === n2.operator && "-" === o2.operator) && (QS(n2.right, o2.right) ? r2 = (0, GS.default)(n2.left, o2.left, t4) : QS(n2.right, o2.left) && (r2 = (0, GS.default)(n2.left, o2.right, t4)), n2 = XS(r2.left, t4), o2 = XS(r2.right, t4));
        return e29.left = n2, e29.right = o2, e29;
      }(e28, t3), e28.operator) {
        case "+":
        case "-":
          return function(e29, t4) {
            var r2 = e29, n2 = r2.left, o2 = r2.right, i2 = r2.operator;
            if ("CssVariable" === n2.type || "CssVariable" === o2.type)
              return e29;
            if (0 === o2.value)
              return n2;
            if (0 === n2.value && "+" === i2)
              return o2;
            if (0 === n2.value && "-" === i2)
              return JS(o2);
            n2.type === o2.type && KS(n2.type) && ((e29 = Object.assign({}, n2)).value = "+" === i2 ? n2.value + o2.value : n2.value - o2.value);
            if (KS(n2.type) && ("+" === o2.operator || "-" === o2.operator) && "MathExpression" === o2.type) {
              if (n2.type === o2.left.type)
                return (e29 = Object.assign({}, e29)).left = XS({ type: "MathExpression", operator: i2, left: n2, right: o2.left }, t4), e29.right = o2.right, e29.operator = "-" === i2 ? ZS(o2.operator) : o2.operator, XS(e29, t4);
              if (n2.type === o2.right.type)
                return (e29 = Object.assign({}, e29)).left = XS({ type: "MathExpression", operator: "-" === i2 ? ZS(o2.operator) : o2.operator, left: n2, right: o2.right }, t4), e29.right = o2.left, XS(e29, t4);
            }
            if ("MathExpression" === n2.type && ("+" === n2.operator || "-" === n2.operator) && KS(o2.type)) {
              if (o2.type === n2.left.type)
                return (e29 = Object.assign({}, n2)).left = XS({ type: "MathExpression", operator: i2, left: n2.left, right: o2 }, t4), XS(e29, t4);
              if (o2.type === n2.right.type)
                return e29 = Object.assign({}, n2), "-" === n2.operator ? (e29.right = XS({ type: "MathExpression", operator: "-" === i2 ? "+" : "-", left: o2, right: n2.right }, t4), e29.operator = "-" === i2 ? "-" : "+") : e29.right = XS({ type: "MathExpression", operator: i2, left: n2.right, right: o2 }, t4), e29.right.value < 0 && (e29.right.value *= -1, e29.operator = "-" === e29.operator ? "+" : "-"), XS(e29, t4);
            }
            return e29;
          }(e28, t3);
        case "/":
          return function(e29, t4) {
            if (!KS(e29.right.type))
              return e29;
            if ("Value" !== e29.right.type)
              throw new Error('Cannot divide by "' + e29.right.unit + '", number expected');
            if (0 === e29.right.value)
              throw new Error("Cannot divide by zero");
            if ("MathExpression" === e29.left.type)
              return KS(e29.left.left.type) && KS(e29.left.right.type) ? (e29.left.left.value /= e29.right.value, e29.left.right.value /= e29.right.value, XS(e29.left, t4)) : e29;
            if (KS(e29.left.type))
              return e29.left.value /= e29.right.value, e29.left;
            return e29;
          }(e28, t3);
        case "*":
          return function(e29) {
            if ("MathExpression" === e29.left.type && "Value" === e29.right.type) {
              if (KS(e29.left.left.type) && KS(e29.left.right.type))
                return e29.left.left.value *= e29.right.value, e29.left.right.value *= e29.right.value, e29.left;
            } else {
              if (KS(e29.left.type) && "Value" === e29.right.type)
                return e29.left.value *= e29.right.value, e29.left;
              if ("Value" === e29.left.type && "MathExpression" === e29.right.type) {
                if (KS(e29.right.left.type) && KS(e29.right.right.type))
                  return e29.right.left.value *= e29.left.value, e29.right.right.value *= e29.left.value, e29.right;
              } else if ("Value" === e29.left.type && KS(e29.right.type))
                return e29.right.value *= e29.left.value, e29.right;
            }
            return e29;
          }(e28);
      }
      return e28;
    }(e27, t2) : "Calc" === e27.type ? XS(e27.value, t2) : e27;
  }
  function QS(e27, t2) {
    return e27.type === t2.type && e27.value === t2.value;
  }
  function KS(e27) {
    switch (e27) {
      case "LengthValue":
      case "AngleValue":
      case "TimeValue":
      case "FrequencyValue":
      case "ResolutionValue":
      case "EmValue":
      case "ExValue":
      case "ChValue":
      case "RemValue":
      case "VhValue":
      case "VwValue":
      case "VminValue":
      case "VmaxValue":
      case "PercentageValue":
      case "Value":
        return true;
    }
    return false;
  }
  function ZS(e27) {
    return "+" === e27 ? "-" : "+";
  }
  function JS(e27) {
    return KS(e27.type) ? e27.value = -e27.value : "MathExpression" == e27.type && (e27.left = JS(e27.left), e27.right = JS(e27.right)), e27;
  }
  WS.default = XS;
  var eE = { exports: {} };
  !function(e27, t2) {
    Object.defineProperty(t2, "__esModule", { value: true }), t2.default = function(e28, t3, r3) {
      var n3 = i2(t3, r3);
      return "MathExpression" === t3.type && (n3 = e28 + "(" + n3 + ")"), n3;
    };
    var r2 = WS, n2 = { "*": 0, "/": 0, "+": 1, "-": 1 };
    function o2(e28, t3) {
      if (false !== t3) {
        var r3 = Math.pow(10, t3);
        return Math.round(e28 * r3) / r3;
      }
      return e28;
    }
    function i2(e28, t3) {
      switch (e28.type) {
        case "MathExpression":
          var a2 = e28.left, l2 = e28.right, u2 = e28.operator, s2 = "";
          return "MathExpression" === a2.type && n2[u2] < n2[a2.operator] ? s2 += "(" + i2(a2, t3) + ")" : s2 += i2(a2, t3), s2 += " " + e28.operator + " ", "MathExpression" === l2.type && n2[u2] < n2[l2.operator] ? s2 += "(" + i2(l2, t3) + ")" : "MathExpression" === l2.type && "-" === u2 && ["+", "-"].includes(l2.operator) ? (l2.operator = (0, r2.flip)(l2.operator), s2 += i2(l2, t3)) : s2 += i2(l2, t3), s2;
        case "Value":
          return o2(e28.value, t3);
        case "CssVariable":
          return e28.fallback ? "var(" + e28.value + ", " + i2(e28.fallback, t3) + ")" : "var(" + e28.value + ")";
        case "Calc":
          return e28.prefix ? "-" + e28.prefix + "-calc(" + i2(e28.value, t3) + ")" : "calc(" + i2(e28.value, t3) + ")";
        default:
          return o2(e28.value, t3) + e28.unit;
      }
    }
    e27.exports = t2.default;
  }(eE, eE.exports), function(e27, t2) {
    Object.defineProperty(t2, "__esModule", { value: true });
    var r2 = a2(US), n2 = VS, o2 = a2(WS), i2 = a2(eE.exports);
    function a2(e28) {
      return e28 && e28.__esModule ? e28 : { default: e28 };
    }
    var l2 = /((?:\-[a-z]+\-)?calc)/;
    t2.default = function(e28) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5;
      return (0, r2.default)(e28).walk(function(e29) {
        if ("function" === e29.type && l2.test(e29.value)) {
          var a3 = r2.default.stringify(e29.nodes);
          if (!(a3.indexOf("constant") >= 0 || a3.indexOf("env") >= 0)) {
            var u2 = n2.parser.parse(a3), s2 = (0, o2.default)(u2, t3);
            e29.type = "word", e29.value = (0, i2.default)(e29.value, s2, t3);
          }
        }
      }, true).toString();
    }, e27.exports = t2.default;
  }(bS, bS.exports);
  var tE = v(bS.exports);
  function rE(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function nE(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? rE(Object(r2), true).forEach(function(t3) {
        oE(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : rE(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function oE(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function iE(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return aE(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return aE(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return aE(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function aE(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  var lE = { widthCache: {}, cacheCount: 0 };
  var uE = { position: "absolute", top: "-20000px", left: 0, padding: 0, margin: 0, border: "none", whiteSpace: "pre" };
  var sE = ["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height", "top", "left", "fontSize", "lineHeight", "padding", "margin", "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom"];
  var cE = function(e27) {
    return Object.keys(e27).reduce(function(t2, r2) {
      return "".concat(t2).concat((i2 = r2, i2.split("").reduce(function(e28, t3) {
        return t3 === t3.toUpperCase() ? [].concat(iE(e28), ["-", t3.toLowerCase()]) : [].concat(iE(e28), [t3]);
      }, []).join("")), ":").concat((n2 = r2, o2 = e27[r2], sE.indexOf(n2) >= 0 && o2 === +o2 ? "".concat(o2, "px") : o2), ";");
      var n2, o2, i2;
    }, "");
  };
  var dE = function(e27) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (null == e27 || Fw.isSsr)
      return { width: 0, height: 0 };
    var r2 = "".concat(e27), n2 = cE(t2), o2 = "".concat(r2, "-").concat(n2);
    if (lE.widthCache[o2])
      return lE.widthCache[o2];
    try {
      var i2 = document.getElementById("recharts_measurement_span");
      i2 || ((i2 = document.createElement("span")).setAttribute("id", "recharts_measurement_span"), i2.setAttribute("aria-hidden", "true"), document.body.appendChild(i2));
      var a2 = nE(nE({}, uE), t2);
      Object.keys(a2).map(function(e28) {
        return i2.style[e28] = a2[e28], e28;
      }), i2.textContent = r2;
      var l2 = i2.getBoundingClientRect(), u2 = { width: l2.width, height: l2.height };
      return lE.widthCache[o2] = u2, ++lE.cacheCount > 2e3 && (lE.cacheCount = 0, lE.widthCache = {}), u2;
    } catch (e28) {
      return { width: 0, height: 0 };
    }
  };
  function fE(e27) {
    return fE = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, fE(e27);
  }
  function pE() {
    return pE = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, pE.apply(this, arguments);
  }
  function hE(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function gE(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function vE(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function mE(e27, t2) {
    return mE = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, mE(e27, t2);
  }
  function yE(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = CE(e27);
      if (t2) {
        var o2 = CE(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return bE(this, r2);
    };
  }
  function bE(e27, t2) {
    return !t2 || "object" !== fE(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function CE(e27) {
    return CE = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, CE(e27);
  }
  function xE(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || function(e28, t3) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return wE(e28, t3);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return wE(e28, t3);
    }(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function wE(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function kE(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function SE(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? kE(Object(r2), true).forEach(function(t3) {
        EE(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : kE(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function EE(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  var TE = /[ \f\n\r\t\v\u2028\u2029]+/;
  var RE = function(e27) {
    try {
      var t2 = [];
      return yu(e27.children) || (t2 = e27.breakAll ? e27.children.toString().split("") : e27.children.toString().split(TE)), { wordsWithComputedWidth: t2.map(function(t3) {
        return { word: t3, width: dE(t3, e27.style).width };
      }), spaceWidth: e27.breakAll ? 0 : dE("\xA0", e27.style).width };
    } catch (e28) {
      return null;
    }
  };
  var OE = function(e27) {
    return [{ words: yu(e27) ? [] : e27.toString().split(TE) }];
  };
  var _E = function(e27, t2) {
    if ((e27.width || e27.scaleToFit) && !Fw.isSsr && t2) {
      var r2 = RE(e27);
      return r2 ? function(e28, t3, r3, n2, o2) {
        var i2 = Ql(e28.maxLines), a2 = e28.children, l2 = function() {
          return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).reduce(function(e29, t4) {
            var i3 = t4.word, a3 = t4.width, l3 = e29[e29.length - 1];
            if (l3 && (null == n2 || o2 || l3.width + a3 + r3 < n2))
              l3.words.push(i3), l3.width += a3 + r3;
            else {
              var u3 = { words: [i3], width: a3 };
              e29.push(u3);
            }
            return e29;
          }, []);
        }, u2 = l2(t3);
        if (!i2)
          return u2;
        for (var s2, c2 = function(t4) {
          var r4 = a2.slice(0, t4), o3 = RE(SE(SE({}, e28), {}, { children: r4 + "\u2026" })).wordsWithComputedWidth, i3 = l2(o3), u3 = i3.length > e28.maxLines || function(e29) {
            return e29.reduce(function(e30, t5) {
              return e30.width > t5.width ? e30 : t5;
            });
          }(i3).width > n2;
          return [u3, i3];
        }, d2 = 0, f2 = a2.length - 1, p2 = 0; d2 <= f2 && p2 <= a2.length - 1; ) {
          var h2 = Math.floor((d2 + f2) / 2), g2 = xE(c2(h2 - 1), 2), v2 = g2[0], m2 = g2[1], y2 = xE(c2(h2), 1)[0];
          if (v2 || y2 || (d2 = h2 + 1), v2 && y2 && (f2 = h2 - 1), !v2 && y2) {
            s2 = m2;
            break;
          }
          p2++;
        }
        return s2 || u2;
      }(e27, r2.wordsWithComputedWidth, r2.spaceWidth, e27.width, e27.scaleToFit) : OE(e27.children);
    }
    return OE(e27.children);
  };
  var PE = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && mE(e28, t2);
    }(a2, import_react.Component);
    var r2, n2, o2, i2 = yE(a2);
    function a2() {
      var e28;
      gE(this, a2);
      for (var t2 = arguments.length, r3 = new Array(t2), n3 = 0; n3 < t2; n3++)
        r3[n3] = arguments[n3];
      return (e28 = i2.call.apply(i2, [this].concat(r3))).state = {}, e28;
    }
    return r2 = a2, n2 = [{ key: "render", value: function() {
      var e28 = this.props, r3 = e28.dx, n3 = e28.dy, o3 = e28.textAnchor, i3 = e28.verticalAnchor, a3 = e28.scaleToFit, l2 = e28.angle, u2 = e28.lineHeight, s2 = e28.capHeight, c2 = e28.className, d2 = e28.breakAll, f2 = hE(e28, ["dx", "dy", "textAnchor", "verticalAnchor", "scaleToFit", "angle", "lineHeight", "capHeight", "className", "breakAll"]), p2 = this.state.wordsByLines;
      if (!Kl(f2.x) || !Kl(f2.y))
        return null;
      var h2, g2 = f2.x + (Ql(r3) ? r3 : 0), v2 = f2.y + (Ql(n3) ? n3 : 0);
      switch (i3) {
        case "start":
          h2 = tE("calc(".concat(s2, ")"));
          break;
        case "middle":
          h2 = tE("calc(".concat((p2.length - 1) / 2, " * -").concat(u2, " + (").concat(s2, " / 2))"));
          break;
        default:
          h2 = tE("calc(".concat(p2.length - 1, " * -").concat(u2, ")"));
      }
      var m2 = [];
      if (a3) {
        var y2 = p2[0].width, C2 = this.props.width;
        m2.push("scale(".concat((Ql(C2) ? C2 / y2 : 1) / y2, ")"));
      }
      return l2 && m2.push("rotate(".concat(l2, ", ").concat(g2, ", ").concat(v2, ")")), m2.length && (f2.transform = m2.join(" ")), import_react.default.createElement("text", pE({}, E(f2, true), { x: g2, y: v2, className: b("recharts-text", c2), textAnchor: o3 }), p2.map(function(e29, r4) {
        return import_react.default.createElement("tspan", { x: g2, dy: 0 === r4 ? h2 : u2, key: r4 }, e29.words.join(d2 ? "" : " "));
      }));
    } }], o2 = [{ key: "getDerivedStateFromProps", value: function(e28, t2) {
      if (e28.width !== t2.prevWidth || e28.scaleToFit !== t2.prevScaleToFit || e28.children !== t2.prevChildren || e28.style !== t2.prevStyle || e28.breakAll !== t2.prevBreakAll) {
        var r3 = e28.children !== t2.prevChildren || e28.style !== t2.prevStyle || e28.breakAll !== t2.prevBreakAll;
        return { prevWidth: e28.width, prevScaleToFit: e28.scaleToFit, prevChildren: e28.children, prevStyle: e28.style, wordsByLines: _E(e28, r3) };
      }
      return null;
    } }], n2 && vE(r2.prototype, n2), o2 && vE(r2, o2), a2;
  }();
  PE.defaultProps = { x: 0, y: 0, lineHeight: "1em", capHeight: "0.71em", scaleToFit: false, textAnchor: "start", verticalAnchor: "end" };
  var ME = { exports: {} };
  var BE = {};
  var AE = "function" == typeof Symbol && Symbol.for;
  var NE = AE ? Symbol.for("react.element") : 60103;
  var jE = AE ? Symbol.for("react.portal") : 60106;
  var DE = AE ? Symbol.for("react.fragment") : 60107;
  var LE = AE ? Symbol.for("react.strict_mode") : 60108;
  var IE = AE ? Symbol.for("react.profiler") : 60114;
  var zE = AE ? Symbol.for("react.provider") : 60109;
  var FE = AE ? Symbol.for("react.context") : 60110;
  var UE = AE ? Symbol.for("react.async_mode") : 60111;
  var VE = AE ? Symbol.for("react.concurrent_mode") : 60111;
  var WE = AE ? Symbol.for("react.forward_ref") : 60112;
  var HE = AE ? Symbol.for("react.suspense") : 60113;
  var $E = AE ? Symbol.for("react.suspense_list") : 60120;
  var qE = AE ? Symbol.for("react.memo") : 60115;
  var YE = AE ? Symbol.for("react.lazy") : 60116;
  var GE = AE ? Symbol.for("react.block") : 60121;
  var XE = AE ? Symbol.for("react.fundamental") : 60117;
  var QE = AE ? Symbol.for("react.responder") : 60118;
  var KE = AE ? Symbol.for("react.scope") : 60119;
  function ZE(e27) {
    if ("object" == typeof e27 && null !== e27) {
      var t2 = e27.$$typeof;
      switch (t2) {
        case NE:
          switch (e27 = e27.type) {
            case UE:
            case VE:
            case DE:
            case IE:
            case LE:
            case HE:
              return e27;
            default:
              switch (e27 = e27 && e27.$$typeof) {
                case FE:
                case WE:
                case YE:
                case qE:
                case zE:
                  return e27;
                default:
                  return t2;
              }
          }
        case jE:
          return t2;
      }
    }
  }
  function JE(e27) {
    return ZE(e27) === VE;
  }
  BE.AsyncMode = UE, BE.ConcurrentMode = VE, BE.ContextConsumer = FE, BE.ContextProvider = zE, BE.Element = NE, BE.ForwardRef = WE, BE.Fragment = DE, BE.Lazy = YE, BE.Memo = qE, BE.Portal = jE, BE.Profiler = IE, BE.StrictMode = LE, BE.Suspense = HE, BE.isAsyncMode = function(e27) {
    return JE(e27) || ZE(e27) === UE;
  }, BE.isConcurrentMode = JE, BE.isContextConsumer = function(e27) {
    return ZE(e27) === FE;
  }, BE.isContextProvider = function(e27) {
    return ZE(e27) === zE;
  }, BE.isElement = function(e27) {
    return "object" == typeof e27 && null !== e27 && e27.$$typeof === NE;
  }, BE.isForwardRef = function(e27) {
    return ZE(e27) === WE;
  }, BE.isFragment = function(e27) {
    return ZE(e27) === DE;
  }, BE.isLazy = function(e27) {
    return ZE(e27) === YE;
  }, BE.isMemo = function(e27) {
    return ZE(e27) === qE;
  }, BE.isPortal = function(e27) {
    return ZE(e27) === jE;
  }, BE.isProfiler = function(e27) {
    return ZE(e27) === IE;
  }, BE.isStrictMode = function(e27) {
    return ZE(e27) === LE;
  }, BE.isSuspense = function(e27) {
    return ZE(e27) === HE;
  }, BE.isValidElementType = function(e27) {
    return "string" == typeof e27 || "function" == typeof e27 || e27 === DE || e27 === VE || e27 === IE || e27 === LE || e27 === HE || e27 === $E || "object" == typeof e27 && null !== e27 && (e27.$$typeof === YE || e27.$$typeof === qE || e27.$$typeof === zE || e27.$$typeof === FE || e27.$$typeof === WE || e27.$$typeof === XE || e27.$$typeof === QE || e27.$$typeof === KE || e27.$$typeof === GE);
  }, BE.typeOf = ZE;
  var eT = {};
  function tT(e27, t2) {
    for (var r2 in e27)
      if ({}.hasOwnProperty.call(e27, r2) && (!{}.hasOwnProperty.call(t2, r2) || e27[r2] !== t2[r2]))
        return false;
    for (var n2 in t2)
      if ({}.hasOwnProperty.call(t2, n2) && !{}.hasOwnProperty.call(e27, n2))
        return false;
    return true;
  }
  function rT(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  (function() {
    var e27 = "function" == typeof Symbol && Symbol.for, t2 = e27 ? Symbol.for("react.element") : 60103, r2 = e27 ? Symbol.for("react.portal") : 60106, n2 = e27 ? Symbol.for("react.fragment") : 60107, o2 = e27 ? Symbol.for("react.strict_mode") : 60108, i2 = e27 ? Symbol.for("react.profiler") : 60114, a2 = e27 ? Symbol.for("react.provider") : 60109, l2 = e27 ? Symbol.for("react.context") : 60110, u2 = e27 ? Symbol.for("react.async_mode") : 60111, s2 = e27 ? Symbol.for("react.concurrent_mode") : 60111, c2 = e27 ? Symbol.for("react.forward_ref") : 60112, d2 = e27 ? Symbol.for("react.suspense") : 60113, f2 = e27 ? Symbol.for("react.suspense_list") : 60120, p2 = e27 ? Symbol.for("react.memo") : 60115, h2 = e27 ? Symbol.for("react.lazy") : 60116, g2 = e27 ? Symbol.for("react.block") : 60121, v2 = e27 ? Symbol.for("react.fundamental") : 60117, m2 = e27 ? Symbol.for("react.responder") : 60118, y2 = e27 ? Symbol.for("react.scope") : 60119;
    function b2(e28) {
      if ("object" == typeof e28 && null !== e28) {
        var f3 = e28.$$typeof;
        switch (f3) {
          case t2:
            var g3 = e28.type;
            switch (g3) {
              case u2:
              case s2:
              case n2:
              case i2:
              case o2:
              case d2:
                return g3;
              default:
                var v3 = g3 && g3.$$typeof;
                switch (v3) {
                  case l2:
                  case c2:
                  case h2:
                  case p2:
                  case a2:
                    return v3;
                  default:
                    return f3;
                }
            }
          case r2:
            return f3;
        }
      }
    }
    var C2 = u2, x2 = s2, w2 = l2, k2 = a2, S2 = t2, E2 = c2, T2 = n2, R2 = h2, O2 = p2, _2 = r2, P2 = i2, M2 = o2, B2 = d2, A2 = false;
    function N2(e28) {
      return b2(e28) === s2;
    }
    eT.AsyncMode = C2, eT.ConcurrentMode = x2, eT.ContextConsumer = w2, eT.ContextProvider = k2, eT.Element = S2, eT.ForwardRef = E2, eT.Fragment = T2, eT.Lazy = R2, eT.Memo = O2, eT.Portal = _2, eT.Profiler = P2, eT.StrictMode = M2, eT.Suspense = B2, eT.isAsyncMode = function(e28) {
      return A2 || (A2 = true, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), N2(e28) || b2(e28) === u2;
    }, eT.isConcurrentMode = N2, eT.isContextConsumer = function(e28) {
      return b2(e28) === l2;
    }, eT.isContextProvider = function(e28) {
      return b2(e28) === a2;
    }, eT.isElement = function(e28) {
      return "object" == typeof e28 && null !== e28 && e28.$$typeof === t2;
    }, eT.isForwardRef = function(e28) {
      return b2(e28) === c2;
    }, eT.isFragment = function(e28) {
      return b2(e28) === n2;
    }, eT.isLazy = function(e28) {
      return b2(e28) === h2;
    }, eT.isMemo = function(e28) {
      return b2(e28) === p2;
    }, eT.isPortal = function(e28) {
      return b2(e28) === r2;
    }, eT.isProfiler = function(e28) {
      return b2(e28) === i2;
    }, eT.isStrictMode = function(e28) {
      return b2(e28) === o2;
    }, eT.isSuspense = function(e28) {
      return b2(e28) === d2;
    }, eT.isValidElementType = function(e28) {
      return "string" == typeof e28 || "function" == typeof e28 || e28 === n2 || e28 === s2 || e28 === i2 || e28 === o2 || e28 === d2 || e28 === f2 || "object" == typeof e28 && null !== e28 && (e28.$$typeof === h2 || e28.$$typeof === p2 || e28.$$typeof === a2 || e28.$$typeof === l2 || e28.$$typeof === c2 || e28.$$typeof === v2 || e28.$$typeof === m2 || e28.$$typeof === y2 || e28.$$typeof === g2);
    }, eT.typeOf = b2;
  })(), false ? ME.exports = BE : ME.exports = eT;
  var nT = { click: "onClick", mousedown: "onMouseDown", mouseup: "onMouseUp", mouseover: "onMouseOver", mousemove: "onMouseMove", mouseout: "onMouseOut", mouseenter: "onMouseEnter", mouseleave: "onMouseLeave", touchcancel: "onTouchCancel", touchend: "onTouchEnd", touchmove: "onTouchMove", touchstart: "onTouchStart" };
  var oT = function(e27) {
    return "string" == typeof e27 ? e27 : e27 ? e27.displayName || e27.name || "Component" : "";
  };
  var iT = null;
  var aT = null;
  var lT = function e8(t2) {
    if (t2 === iT && tr(aT))
      return aT;
    var r2 = [];
    return import_react.Children.forEach(t2, function(t3) {
      yu(t3) || (ME.exports.isFragment(t3) ? r2 = r2.concat(e8(t3.props.children)) : r2.push(t3));
    }), aT = r2, iT = t2, r2;
  };
  var uT = function(e27, t2) {
    var r2 = [], n2 = [];
    return n2 = tr(t2) ? t2.map(function(e28) {
      return oT(e28);
    }) : [oT(t2)], lT(e27).forEach(function(e28) {
      var t3 = Fo(e28, "type.displayName") || Fo(e28, "type.name");
      -1 !== n2.indexOf(t3) && r2.push(e28);
    }), r2;
  };
  var sT = function(e27, t2) {
    var r2 = uT(e27, t2);
    return r2 && r2[0];
  };
  var cT = function(e27) {
    if (!e27 || !e27.props)
      return false;
    var t2 = e27.props, r2 = t2.width, n2 = t2.height;
    return !(!Ql(r2) || r2 <= 0 || !Ql(n2) || n2 <= 0);
  };
  var dT = ["a", "altGlyph", "altGlyphDef", "altGlyphItem", "animate", "animateColor", "animateMotion", "animateTransform", "circle", "clipPath", "color-profile", "cursor", "defs", "desc", "ellipse", "feBlend", "feColormatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "font", "font-face", "font-face-format", "font-face-name", "font-face-url", "foreignObject", "g", "glyph", "glyphRef", "hkern", "image", "line", "lineGradient", "marker", "mask", "metadata", "missing-glyph", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "script", "set", "stop", "style", "svg", "switch", "symbol", "text", "textPath", "title", "tref", "tspan", "use", "view", "vkern"];
  var fT = function e9(t2, r2) {
    if (t2 === r2)
      return true;
    var n2 = import_react.Children.count(t2);
    if (n2 !== import_react.Children.count(r2))
      return false;
    if (0 === n2)
      return true;
    if (1 === n2)
      return pT(tr(t2) ? t2[0] : t2, tr(r2) ? r2[0] : r2);
    for (var i2 = 0; i2 < n2; i2++) {
      var a2 = t2[i2], l2 = r2[i2];
      if (tr(a2) || tr(l2)) {
        if (!e9(a2, l2))
          return false;
      } else if (!pT(a2, l2))
        return false;
    }
    return true;
  };
  var pT = function(e27, t2) {
    if (yu(e27) && yu(t2))
      return true;
    if (!yu(e27) && !yu(t2)) {
      var r2 = e27.props || {}, n2 = r2.children, o2 = rT(r2, ["children"]), i2 = t2.props || {}, a2 = i2.children, l2 = rT(i2, ["children"]);
      return n2 && a2 ? tT(o2, l2) && fT(n2, a2) : !n2 && !a2 && tT(o2, l2);
    }
    return false;
  };
  var hT = function(e27, t2) {
    var r2 = [], n2 = {};
    return lT(e27).forEach(function(e28, o2) {
      if (function(e29) {
        return e29 && e29.type && Yl(e29.type) && dT.indexOf(e29.type) >= 0;
      }(e28))
        r2.push(e28);
      else if (e28) {
        var i2 = oT(e28.type), a2 = t2[i2] || {}, l2 = a2.handler, u2 = a2.once;
        if (l2 && (!u2 || !n2[i2])) {
          var s2 = l2(e28, i2, o2);
          r2.push(s2), n2[i2] = true;
        }
      }
    }), r2;
  };
  var gT = Hn;
  var vT = function(e27, t2) {
    return gT(e27, t2);
  };
  var mT = ao;
  var yT = function(e27, t2, r2) {
    for (var n2 = -1, o2 = e27.length; ++n2 < o2; ) {
      var i2 = e27[n2], a2 = t2(i2);
      if (null != a2 && (void 0 === l2 ? a2 == a2 && !mT(a2) : r2(a2, l2)))
        var l2 = a2, u2 = i2;
    }
    return u2;
  };
  var bT = function(e27, t2) {
    return e27 > t2;
  };
  var CT = yT;
  var xT = bT;
  var wT = ai;
  var kT = function(e27) {
    return e27 && e27.length ? CT(e27, wT, xT) : void 0;
  };
  var ST = function(e27, t2) {
    return e27 < t2;
  };
  var ET = yT;
  var TT = ST;
  var RT = ai;
  var OT = function(e27) {
    return e27 && e27.length ? ET(e27, RT, TT) : void 0;
  };
  var _T = Co;
  var PT = Ci;
  var MT = zx;
  var BT = tr;
  var AT = _x;
  var NT = function(e27, t2) {
    return (BT(e27) ? _T : MT)(e27, PT(t2));
  };
  var jT;
  var DT = function(e27, t2) {
    return AT(NT(e27, t2), 1);
  };
  var LT = true;
  var IT = "[DecimalError] ";
  var zT = IT + "Invalid argument: ";
  var FT = IT + "Exponent out of range: ";
  var UT = Math.floor;
  var VT = Math.pow;
  var WT = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
  var HT = 1e7;
  var $T = UT(12867427506772845e-1);
  var qT = {};
  function YT(e27, t2) {
    var r2, n2, o2, i2, a2, l2, u2, s2, c2 = e27.constructor, d2 = c2.precision;
    if (!e27.s || !t2.s)
      return t2.s || (t2 = new c2(e27)), LT ? nR(t2, d2) : t2;
    if (u2 = e27.d, s2 = t2.d, a2 = e27.e, o2 = t2.e, u2 = u2.slice(), i2 = a2 - o2) {
      for (i2 < 0 ? (n2 = u2, i2 = -i2, l2 = s2.length) : (n2 = s2, o2 = a2, l2 = u2.length), i2 > (l2 = (a2 = Math.ceil(d2 / 7)) > l2 ? a2 + 1 : l2 + 1) && (i2 = l2, n2.length = 1), n2.reverse(); i2--; )
        n2.push(0);
      n2.reverse();
    }
    for ((l2 = u2.length) - (i2 = s2.length) < 0 && (i2 = l2, n2 = s2, s2 = u2, u2 = n2), r2 = 0; i2; )
      r2 = (u2[--i2] = u2[i2] + s2[i2] + r2) / HT | 0, u2[i2] %= HT;
    for (r2 && (u2.unshift(r2), ++o2), l2 = u2.length; 0 == u2[--l2]; )
      u2.pop();
    return t2.d = u2, t2.e = o2, LT ? nR(t2, d2) : t2;
  }
  function GT(e27, t2, r2) {
    if (e27 !== ~~e27 || e27 < t2 || e27 > r2)
      throw Error(zT + e27);
  }
  function XT(e27) {
    var t2, r2, n2, o2 = e27.length - 1, i2 = "", a2 = e27[0];
    if (o2 > 0) {
      for (i2 += a2, t2 = 1; t2 < o2; t2++)
        (r2 = 7 - (n2 = e27[t2] + "").length) && (i2 += eR(r2)), i2 += n2;
      (r2 = 7 - (n2 = (a2 = e27[t2]) + "").length) && (i2 += eR(r2));
    } else if (0 === a2)
      return "0";
    for (; a2 % 10 == 0; )
      a2 /= 10;
    return i2 + a2;
  }
  qT.absoluteValue = qT.abs = function() {
    var e27 = new this.constructor(this);
    return e27.s && (e27.s = 1), e27;
  }, qT.comparedTo = qT.cmp = function(e27) {
    var t2, r2, n2, o2, i2 = this;
    if (e27 = new i2.constructor(e27), i2.s !== e27.s)
      return i2.s || -e27.s;
    if (i2.e !== e27.e)
      return i2.e > e27.e ^ i2.s < 0 ? 1 : -1;
    for (t2 = 0, r2 = (n2 = i2.d.length) < (o2 = e27.d.length) ? n2 : o2; t2 < r2; ++t2)
      if (i2.d[t2] !== e27.d[t2])
        return i2.d[t2] > e27.d[t2] ^ i2.s < 0 ? 1 : -1;
    return n2 === o2 ? 0 : n2 > o2 ^ i2.s < 0 ? 1 : -1;
  }, qT.decimalPlaces = qT.dp = function() {
    var e27 = this, t2 = e27.d.length - 1, r2 = 7 * (t2 - e27.e);
    if (t2 = e27.d[t2])
      for (; t2 % 10 == 0; t2 /= 10)
        r2--;
    return r2 < 0 ? 0 : r2;
  }, qT.dividedBy = qT.div = function(e27) {
    return QT(this, new this.constructor(e27));
  }, qT.dividedToIntegerBy = qT.idiv = function(e27) {
    var t2 = this.constructor;
    return nR(QT(this, new t2(e27), 0, 1), t2.precision);
  }, qT.equals = qT.eq = function(e27) {
    return !this.cmp(e27);
  }, qT.exponent = function() {
    return ZT(this);
  }, qT.greaterThan = qT.gt = function(e27) {
    return this.cmp(e27) > 0;
  }, qT.greaterThanOrEqualTo = qT.gte = function(e27) {
    return this.cmp(e27) >= 0;
  }, qT.isInteger = qT.isint = function() {
    return this.e > this.d.length - 2;
  }, qT.isNegative = qT.isneg = function() {
    return this.s < 0;
  }, qT.isPositive = qT.ispos = function() {
    return this.s > 0;
  }, qT.isZero = function() {
    return 0 === this.s;
  }, qT.lessThan = qT.lt = function(e27) {
    return this.cmp(e27) < 0;
  }, qT.lessThanOrEqualTo = qT.lte = function(e27) {
    return this.cmp(e27) < 1;
  }, qT.logarithm = qT.log = function(e27) {
    var t2, r2 = this, n2 = r2.constructor, o2 = n2.precision, i2 = o2 + 5;
    if (void 0 === e27)
      e27 = new n2(10);
    else if ((e27 = new n2(e27)).s < 1 || e27.eq(jT))
      throw Error(IT + "NaN");
    if (r2.s < 1)
      throw Error(IT + (r2.s ? "NaN" : "-Infinity"));
    return r2.eq(jT) ? new n2(0) : (LT = false, t2 = QT(tR(r2, i2), tR(e27, i2), i2), LT = true, nR(t2, o2));
  }, qT.minus = qT.sub = function(e27) {
    var t2 = this;
    return e27 = new t2.constructor(e27), t2.s == e27.s ? oR(t2, e27) : YT(t2, (e27.s = -e27.s, e27));
  }, qT.modulo = qT.mod = function(e27) {
    var t2, r2 = this, n2 = r2.constructor, o2 = n2.precision;
    if (!(e27 = new n2(e27)).s)
      throw Error(IT + "NaN");
    return r2.s ? (LT = false, t2 = QT(r2, e27, 0, 1).times(e27), LT = true, r2.minus(t2)) : nR(new n2(r2), o2);
  }, qT.naturalExponential = qT.exp = function() {
    return KT(this);
  }, qT.naturalLogarithm = qT.ln = function() {
    return tR(this);
  }, qT.negated = qT.neg = function() {
    var e27 = new this.constructor(this);
    return e27.s = -e27.s || 0, e27;
  }, qT.plus = qT.add = function(e27) {
    var t2 = this;
    return e27 = new t2.constructor(e27), t2.s == e27.s ? YT(t2, e27) : oR(t2, (e27.s = -e27.s, e27));
  }, qT.precision = qT.sd = function(e27) {
    var t2, r2, n2, o2 = this;
    if (void 0 !== e27 && e27 !== !!e27 && 1 !== e27 && 0 !== e27)
      throw Error(zT + e27);
    if (t2 = ZT(o2) + 1, r2 = 7 * (n2 = o2.d.length - 1) + 1, n2 = o2.d[n2]) {
      for (; n2 % 10 == 0; n2 /= 10)
        r2--;
      for (n2 = o2.d[0]; n2 >= 10; n2 /= 10)
        r2++;
    }
    return e27 && t2 > r2 ? t2 : r2;
  }, qT.squareRoot = qT.sqrt = function() {
    var e27, t2, r2, n2, o2, i2, a2, l2 = this, u2 = l2.constructor;
    if (l2.s < 1) {
      if (!l2.s)
        return new u2(0);
      throw Error(IT + "NaN");
    }
    for (e27 = ZT(l2), LT = false, 0 == (o2 = Math.sqrt(+l2)) || o2 == 1 / 0 ? (((t2 = XT(l2.d)).length + e27) % 2 == 0 && (t2 += "0"), o2 = Math.sqrt(t2), e27 = UT((e27 + 1) / 2) - (e27 < 0 || e27 % 2), n2 = new u2(t2 = o2 == 1 / 0 ? "5e" + e27 : (t2 = o2.toExponential()).slice(0, t2.indexOf("e") + 1) + e27)) : n2 = new u2(o2.toString()), o2 = a2 = (r2 = u2.precision) + 3; ; )
      if (n2 = (i2 = n2).plus(QT(l2, i2, a2 + 2)).times(0.5), XT(i2.d).slice(0, a2) === (t2 = XT(n2.d)).slice(0, a2)) {
        if (t2 = t2.slice(a2 - 3, a2 + 1), o2 == a2 && "4999" == t2) {
          if (nR(i2, r2 + 1, 0), i2.times(i2).eq(l2)) {
            n2 = i2;
            break;
          }
        } else if ("9999" != t2)
          break;
        a2 += 4;
      }
    return LT = true, nR(n2, r2);
  }, qT.times = qT.mul = function(e27) {
    var t2, r2, n2, o2, i2, a2, l2, u2, s2, c2 = this, d2 = c2.constructor, f2 = c2.d, p2 = (e27 = new d2(e27)).d;
    if (!c2.s || !e27.s)
      return new d2(0);
    for (e27.s *= c2.s, r2 = c2.e + e27.e, (u2 = f2.length) < (s2 = p2.length) && (i2 = f2, f2 = p2, p2 = i2, a2 = u2, u2 = s2, s2 = a2), i2 = [], n2 = a2 = u2 + s2; n2--; )
      i2.push(0);
    for (n2 = s2; --n2 >= 0; ) {
      for (t2 = 0, o2 = u2 + n2; o2 > n2; )
        l2 = i2[o2] + p2[n2] * f2[o2 - n2 - 1] + t2, i2[o2--] = l2 % HT | 0, t2 = l2 / HT | 0;
      i2[o2] = (i2[o2] + t2) % HT | 0;
    }
    for (; !i2[--a2]; )
      i2.pop();
    return t2 ? ++r2 : i2.shift(), e27.d = i2, e27.e = r2, LT ? nR(e27, d2.precision) : e27;
  }, qT.toDecimalPlaces = qT.todp = function(e27, t2) {
    var r2 = this, n2 = r2.constructor;
    return r2 = new n2(r2), void 0 === e27 ? r2 : (GT(e27, 0, 1e9), void 0 === t2 ? t2 = n2.rounding : GT(t2, 0, 8), nR(r2, e27 + ZT(r2) + 1, t2));
  }, qT.toExponential = function(e27, t2) {
    var r2, n2 = this, o2 = n2.constructor;
    return void 0 === e27 ? r2 = iR(n2, true) : (GT(e27, 0, 1e9), void 0 === t2 ? t2 = o2.rounding : GT(t2, 0, 8), r2 = iR(n2 = nR(new o2(n2), e27 + 1, t2), true, e27 + 1)), r2;
  }, qT.toFixed = function(e27, t2) {
    var r2, n2, o2 = this, i2 = o2.constructor;
    return void 0 === e27 ? iR(o2) : (GT(e27, 0, 1e9), void 0 === t2 ? t2 = i2.rounding : GT(t2, 0, 8), r2 = iR((n2 = nR(new i2(o2), e27 + ZT(o2) + 1, t2)).abs(), false, e27 + ZT(n2) + 1), o2.isneg() && !o2.isZero() ? "-" + r2 : r2);
  }, qT.toInteger = qT.toint = function() {
    var e27 = this, t2 = e27.constructor;
    return nR(new t2(e27), ZT(e27) + 1, t2.rounding);
  }, qT.toNumber = function() {
    return +this;
  }, qT.toPower = qT.pow = function(e27) {
    var t2, r2, n2, o2, i2, a2, l2 = this, u2 = l2.constructor, s2 = +(e27 = new u2(e27));
    if (!e27.s)
      return new u2(jT);
    if (!(l2 = new u2(l2)).s) {
      if (e27.s < 1)
        throw Error(IT + "Infinity");
      return l2;
    }
    if (l2.eq(jT))
      return l2;
    if (n2 = u2.precision, e27.eq(jT))
      return nR(l2, n2);
    if (a2 = (t2 = e27.e) >= (r2 = e27.d.length - 1), i2 = l2.s, a2) {
      if ((r2 = s2 < 0 ? -s2 : s2) <= 9007199254740991) {
        for (o2 = new u2(jT), t2 = Math.ceil(n2 / 7 + 4), LT = false; r2 % 2 && aR((o2 = o2.times(l2)).d, t2), 0 !== (r2 = UT(r2 / 2)); )
          aR((l2 = l2.times(l2)).d, t2);
        return LT = true, e27.s < 0 ? new u2(jT).div(o2) : nR(o2, n2);
      }
    } else if (i2 < 0)
      throw Error(IT + "NaN");
    return i2 = i2 < 0 && 1 & e27.d[Math.max(t2, r2)] ? -1 : 1, l2.s = 1, LT = false, o2 = e27.times(tR(l2, n2 + 12)), LT = true, (o2 = KT(o2)).s = i2, o2;
  }, qT.toPrecision = function(e27, t2) {
    var r2, n2, o2 = this, i2 = o2.constructor;
    return void 0 === e27 ? n2 = iR(o2, (r2 = ZT(o2)) <= i2.toExpNeg || r2 >= i2.toExpPos) : (GT(e27, 1, 1e9), void 0 === t2 ? t2 = i2.rounding : GT(t2, 0, 8), n2 = iR(o2 = nR(new i2(o2), e27, t2), e27 <= (r2 = ZT(o2)) || r2 <= i2.toExpNeg, e27)), n2;
  }, qT.toSignificantDigits = qT.tosd = function(e27, t2) {
    var r2 = this.constructor;
    return void 0 === e27 ? (e27 = r2.precision, t2 = r2.rounding) : (GT(e27, 1, 1e9), void 0 === t2 ? t2 = r2.rounding : GT(t2, 0, 8)), nR(new r2(this), e27, t2);
  }, qT.toString = qT.valueOf = qT.val = qT.toJSON = qT[Symbol.for("nodejs.util.inspect.custom")] = function() {
    var e27 = this, t2 = ZT(e27), r2 = e27.constructor;
    return iR(e27, t2 <= r2.toExpNeg || t2 >= r2.toExpPos);
  };
  var QT = function() {
    function e27(e28, t3) {
      var r3, n2 = 0, o2 = e28.length;
      for (e28 = e28.slice(); o2--; )
        r3 = e28[o2] * t3 + n2, e28[o2] = r3 % HT | 0, n2 = r3 / HT | 0;
      return n2 && e28.unshift(n2), e28;
    }
    function t2(e28, t3, r3, n2) {
      var o2, i2;
      if (r3 != n2)
        i2 = r3 > n2 ? 1 : -1;
      else
        for (o2 = i2 = 0; o2 < r3; o2++)
          if (e28[o2] != t3[o2]) {
            i2 = e28[o2] > t3[o2] ? 1 : -1;
            break;
          }
      return i2;
    }
    function r2(e28, t3, r3) {
      for (var n2 = 0; r3--; )
        e28[r3] -= n2, n2 = e28[r3] < t3[r3] ? 1 : 0, e28[r3] = n2 * HT + e28[r3] - t3[r3];
      for (; !e28[0] && e28.length > 1; )
        e28.shift();
    }
    return function(n2, o2, i2, a2) {
      var l2, u2, s2, c2, d2, f2, p2, h2, g2, v2, m2, y2, b2, C2, x2, w2, k2, S2, E2 = n2.constructor, T2 = n2.s == o2.s ? 1 : -1, R2 = n2.d, O2 = o2.d;
      if (!n2.s)
        return new E2(n2);
      if (!o2.s)
        throw Error(IT + "Division by zero");
      for (u2 = n2.e - o2.e, k2 = O2.length, x2 = R2.length, h2 = (p2 = new E2(T2)).d = [], s2 = 0; O2[s2] == (R2[s2] || 0); )
        ++s2;
      if (O2[s2] > (R2[s2] || 0) && --u2, (y2 = null == i2 ? i2 = E2.precision : a2 ? i2 + (ZT(n2) - ZT(o2)) + 1 : i2) < 0)
        return new E2(0);
      if (y2 = y2 / 7 + 2 | 0, s2 = 0, 1 == k2)
        for (c2 = 0, O2 = O2[0], y2++; (s2 < x2 || c2) && y2--; s2++)
          b2 = c2 * HT + (R2[s2] || 0), h2[s2] = b2 / O2 | 0, c2 = b2 % O2 | 0;
      else {
        for ((c2 = HT / (O2[0] + 1) | 0) > 1 && (O2 = e27(O2, c2), R2 = e27(R2, c2), k2 = O2.length, x2 = R2.length), C2 = k2, v2 = (g2 = R2.slice(0, k2)).length; v2 < k2; )
          g2[v2++] = 0;
        (S2 = O2.slice()).unshift(0), w2 = O2[0], O2[1] >= HT / 2 && ++w2;
        do {
          c2 = 0, (l2 = t2(O2, g2, k2, v2)) < 0 ? (m2 = g2[0], k2 != v2 && (m2 = m2 * HT + (g2[1] || 0)), (c2 = m2 / w2 | 0) > 1 ? (c2 >= HT && (c2 = HT - 1), 1 == (l2 = t2(d2 = e27(O2, c2), g2, f2 = d2.length, v2 = g2.length)) && (c2--, r2(d2, k2 < f2 ? S2 : O2, f2))) : (0 == c2 && (l2 = c2 = 1), d2 = O2.slice()), (f2 = d2.length) < v2 && d2.unshift(0), r2(g2, d2, v2), -1 == l2 && (l2 = t2(O2, g2, k2, v2 = g2.length)) < 1 && (c2++, r2(g2, k2 < v2 ? S2 : O2, v2)), v2 = g2.length) : 0 === l2 && (c2++, g2 = [0]), h2[s2++] = c2, l2 && g2[0] ? g2[v2++] = R2[C2] || 0 : (g2 = [R2[C2]], v2 = 1);
        } while ((C2++ < x2 || void 0 !== g2[0]) && y2--);
      }
      return h2[0] || h2.shift(), p2.e = u2, nR(p2, a2 ? i2 + ZT(p2) + 1 : i2);
    };
  }();
  function KT(e27, t2) {
    var r2, n2, o2, i2, a2, l2 = 0, u2 = 0, s2 = e27.constructor, c2 = s2.precision;
    if (ZT(e27) > 16)
      throw Error(FT + ZT(e27));
    if (!e27.s)
      return new s2(jT);
    for (null == t2 ? (LT = false, a2 = c2) : a2 = t2, i2 = new s2(0.03125); e27.abs().gte(0.1); )
      e27 = e27.times(i2), u2 += 5;
    for (a2 += Math.log(VT(2, u2)) / Math.LN10 * 2 + 5 | 0, r2 = n2 = o2 = new s2(jT), s2.precision = a2; ; ) {
      if (n2 = nR(n2.times(e27), a2), r2 = r2.times(++l2), XT((i2 = o2.plus(QT(n2, r2, a2))).d).slice(0, a2) === XT(o2.d).slice(0, a2)) {
        for (; u2--; )
          o2 = nR(o2.times(o2), a2);
        return s2.precision = c2, null == t2 ? (LT = true, nR(o2, c2)) : o2;
      }
      o2 = i2;
    }
  }
  function ZT(e27) {
    for (var t2 = 7 * e27.e, r2 = e27.d[0]; r2 >= 10; r2 /= 10)
      t2++;
    return t2;
  }
  function JT(e27, t2, r2) {
    if (t2 > e27.LN10.sd())
      throw LT = true, r2 && (e27.precision = r2), Error(IT + "LN10 precision limit exceeded");
    return nR(new e27(e27.LN10), t2);
  }
  function eR(e27) {
    for (var t2 = ""; e27--; )
      t2 += "0";
    return t2;
  }
  function tR(e27, t2) {
    var r2, n2, o2, i2, a2, l2, u2, s2, c2, d2 = 1, f2 = e27, p2 = f2.d, h2 = f2.constructor, g2 = h2.precision;
    if (f2.s < 1)
      throw Error(IT + (f2.s ? "NaN" : "-Infinity"));
    if (f2.eq(jT))
      return new h2(0);
    if (null == t2 ? (LT = false, s2 = g2) : s2 = t2, f2.eq(10))
      return null == t2 && (LT = true), JT(h2, s2);
    if (s2 += 10, h2.precision = s2, n2 = (r2 = XT(p2)).charAt(0), i2 = ZT(f2), !(Math.abs(i2) < 15e14))
      return u2 = JT(h2, s2 + 2, g2).times(i2 + ""), f2 = tR(new h2(n2 + "." + r2.slice(1)), s2 - 10).plus(u2), h2.precision = g2, null == t2 ? (LT = true, nR(f2, g2)) : f2;
    for (; n2 < 7 && 1 != n2 || 1 == n2 && r2.charAt(1) > 3; )
      n2 = (r2 = XT((f2 = f2.times(e27)).d)).charAt(0), d2++;
    for (i2 = ZT(f2), n2 > 1 ? (f2 = new h2("0." + r2), i2++) : f2 = new h2(n2 + "." + r2.slice(1)), l2 = a2 = f2 = QT(f2.minus(jT), f2.plus(jT), s2), c2 = nR(f2.times(f2), s2), o2 = 3; ; ) {
      if (a2 = nR(a2.times(c2), s2), XT((u2 = l2.plus(QT(a2, new h2(o2), s2))).d).slice(0, s2) === XT(l2.d).slice(0, s2))
        return l2 = l2.times(2), 0 !== i2 && (l2 = l2.plus(JT(h2, s2 + 2, g2).times(i2 + ""))), l2 = QT(l2, new h2(d2), s2), h2.precision = g2, null == t2 ? (LT = true, nR(l2, g2)) : l2;
      l2 = u2, o2 += 2;
    }
  }
  function rR(e27, t2) {
    var r2, n2, o2;
    for ((r2 = t2.indexOf(".")) > -1 && (t2 = t2.replace(".", "")), (n2 = t2.search(/e/i)) > 0 ? (r2 < 0 && (r2 = n2), r2 += +t2.slice(n2 + 1), t2 = t2.substring(0, n2)) : r2 < 0 && (r2 = t2.length), n2 = 0; 48 === t2.charCodeAt(n2); )
      ++n2;
    for (o2 = t2.length; 48 === t2.charCodeAt(o2 - 1); )
      --o2;
    if (t2 = t2.slice(n2, o2)) {
      if (o2 -= n2, r2 = r2 - n2 - 1, e27.e = UT(r2 / 7), e27.d = [], n2 = (r2 + 1) % 7, r2 < 0 && (n2 += 7), n2 < o2) {
        for (n2 && e27.d.push(+t2.slice(0, n2)), o2 -= 7; n2 < o2; )
          e27.d.push(+t2.slice(n2, n2 += 7));
        n2 = 7 - (t2 = t2.slice(n2)).length;
      } else
        n2 -= o2;
      for (; n2--; )
        t2 += "0";
      if (e27.d.push(+t2), LT && (e27.e > $T || e27.e < -$T))
        throw Error(FT + r2);
    } else
      e27.s = 0, e27.e = 0, e27.d = [0];
    return e27;
  }
  function nR(e27, t2, r2) {
    var n2, o2, i2, a2, l2, u2, s2, c2, d2 = e27.d;
    for (a2 = 1, i2 = d2[0]; i2 >= 10; i2 /= 10)
      a2++;
    if ((n2 = t2 - a2) < 0)
      n2 += 7, o2 = t2, s2 = d2[c2 = 0];
    else {
      if ((c2 = Math.ceil((n2 + 1) / 7)) >= (i2 = d2.length))
        return e27;
      for (s2 = i2 = d2[c2], a2 = 1; i2 >= 10; i2 /= 10)
        a2++;
      o2 = (n2 %= 7) - 7 + a2;
    }
    if (void 0 !== r2 && (l2 = s2 / (i2 = VT(10, a2 - o2 - 1)) % 10 | 0, u2 = t2 < 0 || void 0 !== d2[c2 + 1] || s2 % i2, u2 = r2 < 4 ? (l2 || u2) && (0 == r2 || r2 == (e27.s < 0 ? 3 : 2)) : l2 > 5 || 5 == l2 && (4 == r2 || u2 || 6 == r2 && (n2 > 0 ? o2 > 0 ? s2 / VT(10, a2 - o2) : 0 : d2[c2 - 1]) % 10 & 1 || r2 == (e27.s < 0 ? 8 : 7))), t2 < 1 || !d2[0])
      return u2 ? (i2 = ZT(e27), d2.length = 1, t2 = t2 - i2 - 1, d2[0] = VT(10, (7 - t2 % 7) % 7), e27.e = UT(-t2 / 7) || 0) : (d2.length = 1, d2[0] = e27.e = e27.s = 0), e27;
    if (0 == n2 ? (d2.length = c2, i2 = 1, c2--) : (d2.length = c2 + 1, i2 = VT(10, 7 - n2), d2[c2] = o2 > 0 ? (s2 / VT(10, a2 - o2) % VT(10, o2) | 0) * i2 : 0), u2)
      for (; ; ) {
        if (0 == c2) {
          (d2[0] += i2) == HT && (d2[0] = 1, ++e27.e);
          break;
        }
        if (d2[c2] += i2, d2[c2] != HT)
          break;
        d2[c2--] = 0, i2 = 1;
      }
    for (n2 = d2.length; 0 === d2[--n2]; )
      d2.pop();
    if (LT && (e27.e > $T || e27.e < -$T))
      throw Error(FT + ZT(e27));
    return e27;
  }
  function oR(e27, t2) {
    var r2, n2, o2, i2, a2, l2, u2, s2, c2, d2, f2 = e27.constructor, p2 = f2.precision;
    if (!e27.s || !t2.s)
      return t2.s ? t2.s = -t2.s : t2 = new f2(e27), LT ? nR(t2, p2) : t2;
    if (u2 = e27.d, d2 = t2.d, n2 = t2.e, s2 = e27.e, u2 = u2.slice(), a2 = s2 - n2) {
      for ((c2 = a2 < 0) ? (r2 = u2, a2 = -a2, l2 = d2.length) : (r2 = d2, n2 = s2, l2 = u2.length), a2 > (o2 = Math.max(Math.ceil(p2 / 7), l2) + 2) && (a2 = o2, r2.length = 1), r2.reverse(), o2 = a2; o2--; )
        r2.push(0);
      r2.reverse();
    } else {
      for ((c2 = (o2 = u2.length) < (l2 = d2.length)) && (l2 = o2), o2 = 0; o2 < l2; o2++)
        if (u2[o2] != d2[o2]) {
          c2 = u2[o2] < d2[o2];
          break;
        }
      a2 = 0;
    }
    for (c2 && (r2 = u2, u2 = d2, d2 = r2, t2.s = -t2.s), l2 = u2.length, o2 = d2.length - l2; o2 > 0; --o2)
      u2[l2++] = 0;
    for (o2 = d2.length; o2 > a2; ) {
      if (u2[--o2] < d2[o2]) {
        for (i2 = o2; i2 && 0 === u2[--i2]; )
          u2[i2] = HT - 1;
        --u2[i2], u2[o2] += HT;
      }
      u2[o2] -= d2[o2];
    }
    for (; 0 === u2[--l2]; )
      u2.pop();
    for (; 0 === u2[0]; u2.shift())
      --n2;
    return u2[0] ? (t2.d = u2, t2.e = n2, LT ? nR(t2, p2) : t2) : new f2(0);
  }
  function iR(e27, t2, r2) {
    var n2, o2 = ZT(e27), i2 = XT(e27.d), a2 = i2.length;
    return t2 ? (r2 && (n2 = r2 - a2) > 0 ? i2 = i2.charAt(0) + "." + i2.slice(1) + eR(n2) : a2 > 1 && (i2 = i2.charAt(0) + "." + i2.slice(1)), i2 = i2 + (o2 < 0 ? "e" : "e+") + o2) : o2 < 0 ? (i2 = "0." + eR(-o2 - 1) + i2, r2 && (n2 = r2 - a2) > 0 && (i2 += eR(n2))) : o2 >= a2 ? (i2 += eR(o2 + 1 - a2), r2 && (n2 = r2 - o2 - 1) > 0 && (i2 = i2 + "." + eR(n2))) : ((n2 = o2 + 1) < a2 && (i2 = i2.slice(0, n2) + "." + i2.slice(n2)), r2 && (n2 = r2 - a2) > 0 && (o2 + 1 === a2 && (i2 += "."), i2 += eR(n2))), e27.s < 0 ? "-" + i2 : i2;
  }
  function aR(e27, t2) {
    if (e27.length > t2)
      return e27.length = t2, true;
  }
  function lR(e27) {
    if (!e27 || "object" != typeof e27)
      throw Error(IT + "Object expected");
    var t2, r2, n2, o2 = ["precision", 1, 1e9, "rounding", 0, 8, "toExpNeg", -1 / 0, 0, "toExpPos", 0, 1 / 0];
    for (t2 = 0; t2 < o2.length; t2 += 3)
      if (void 0 !== (n2 = e27[r2 = o2[t2]])) {
        if (!(UT(n2) === n2 && n2 >= o2[t2 + 1] && n2 <= o2[t2 + 2]))
          throw Error(zT + r2 + ": " + n2);
        this[r2] = n2;
      }
    if (void 0 !== (n2 = e27[r2 = "LN10"])) {
      if (n2 != Math.LN10)
        throw Error(zT + r2 + ": " + n2);
      this[r2] = new this(n2);
    }
    return this;
  }
  var uR = function e10(t2) {
    var r2, n2, o2;
    function i2(e27) {
      var t3 = this;
      if (!(t3 instanceof i2))
        return new i2(e27);
      if (t3.constructor = i2, e27 instanceof i2)
        return t3.s = e27.s, t3.e = e27.e, void (t3.d = (e27 = e27.d) ? e27.slice() : e27);
      if ("number" == typeof e27) {
        if (0 * e27 != 0)
          throw Error(zT + e27);
        if (e27 > 0)
          t3.s = 1;
        else {
          if (!(e27 < 0))
            return t3.s = 0, t3.e = 0, void (t3.d = [0]);
          e27 = -e27, t3.s = -1;
        }
        return e27 === ~~e27 && e27 < 1e7 ? (t3.e = 0, void (t3.d = [e27])) : rR(t3, e27.toString());
      }
      if ("string" != typeof e27)
        throw Error(zT + e27);
      if (45 === e27.charCodeAt(0) ? (e27 = e27.slice(1), t3.s = -1) : t3.s = 1, !WT.test(e27))
        throw Error(zT + e27);
      rR(t3, e27);
    }
    if (i2.prototype = qT, i2.ROUND_UP = 0, i2.ROUND_DOWN = 1, i2.ROUND_CEIL = 2, i2.ROUND_FLOOR = 3, i2.ROUND_HALF_UP = 4, i2.ROUND_HALF_DOWN = 5, i2.ROUND_HALF_EVEN = 6, i2.ROUND_HALF_CEIL = 7, i2.ROUND_HALF_FLOOR = 8, i2.clone = e10, i2.config = i2.set = lR, void 0 === t2 && (t2 = {}), t2)
      for (o2 = ["precision", "rounding", "toExpNeg", "toExpPos", "LN10"], r2 = 0; r2 < o2.length; )
        t2.hasOwnProperty(n2 = o2[r2++]) || (t2[n2] = this[n2]);
    return i2.config(t2), i2;
  }({ precision: 20, rounding: 4, toExpNeg: -7, toExpPos: 21, LN10: "2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286" });
  jT = new uR(1);
  var sR = uR;
  function cR(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return dR(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return dR(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return dR(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function dR(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  var fR = function(e27) {
    return e27;
  };
  var pR = { "@@functional/placeholder": true };
  var hR = function(e27) {
    return e27 === pR;
  };
  var gR = function(e27) {
    return function t2() {
      return 0 === arguments.length || 1 === arguments.length && hR(arguments.length <= 0 ? void 0 : arguments[0]) ? t2 : e27.apply(void 0, arguments);
    };
  };
  var vR = function e11(t2, r2) {
    return 1 === t2 ? r2 : gR(function() {
      for (var n2 = arguments.length, o2 = new Array(n2), i2 = 0; i2 < n2; i2++)
        o2[i2] = arguments[i2];
      var a2 = o2.filter(function(e27) {
        return e27 !== pR;
      }).length;
      return a2 >= t2 ? r2.apply(void 0, o2) : e11(t2 - a2, gR(function() {
        for (var e27 = arguments.length, t3 = new Array(e27), n3 = 0; n3 < e27; n3++)
          t3[n3] = arguments[n3];
        var i3 = o2.map(function(e28) {
          return hR(e28) ? t3.shift() : e28;
        });
        return r2.apply(void 0, cR(i3).concat(t3));
      }));
    });
  };
  var mR = function(e27) {
    return vR(e27.length, e27);
  };
  var yR = function(e27, t2) {
    for (var r2 = [], n2 = e27; n2 < t2; ++n2)
      r2[n2 - e27] = n2;
    return r2;
  };
  var bR = mR(function(e27, t2) {
    return Array.isArray(t2) ? t2.map(e27) : Object.keys(t2).map(function(e28) {
      return t2[e28];
    }).map(e27);
  });
  var CR = function(e27) {
    return Array.isArray(e27) ? e27.reverse() : e27.split("").reverse.join("");
  };
  var xR = function(e27) {
    var t2 = null, r2 = null;
    return function() {
      for (var n2 = arguments.length, o2 = new Array(n2), i2 = 0; i2 < n2; i2++)
        o2[i2] = arguments[i2];
      return t2 && o2.every(function(e28, r3) {
        return e28 === t2[r3];
      }) ? r2 : (t2 = o2, r2 = e27.apply(void 0, o2));
    };
  };
  var wR = mR(function(e27, t2, r2) {
    var n2 = +e27;
    return n2 + r2 * (+t2 - n2);
  });
  var kR = mR(function(e27, t2, r2) {
    var n2 = t2 - +e27;
    return (r2 - e27) / (n2 = n2 || 1 / 0);
  });
  var SR = mR(function(e27, t2, r2) {
    var n2 = t2 - +e27;
    return n2 = n2 || 1 / 0, Math.max(0, Math.min(1, (r2 - e27) / n2));
  });
  var ER = { rangeStep: function(e27, t2, r2) {
    for (var n2 = new sR(e27), o2 = 0, i2 = []; n2.lt(t2) && o2 < 1e5; )
      i2.push(n2.toNumber()), n2 = n2.add(r2), o2++;
    return i2;
  }, getDigitCount: function(e27) {
    return 0 === e27 ? 1 : Math.floor(new sR(e27).abs().log(10).toNumber()) + 1;
  }, interpolateNumber: wR, uninterpolateNumber: kR, uninterpolateTruncation: SR };
  function TR(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return _R(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || OR(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function RR(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || OR(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function OR(e27, t2) {
    if (e27) {
      if ("string" == typeof e27)
        return _R(e27, t2);
      var r2 = Object.prototype.toString.call(e27).slice(8, -1);
      return "Object" === r2 && e27.constructor && (r2 = e27.constructor.name), "Map" === r2 || "Set" === r2 ? Array.from(e27) : "Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2) ? _R(e27, t2) : void 0;
    }
  }
  function _R(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function PR(e27) {
    var t2 = RR(e27, 2), r2 = t2[0], n2 = t2[1], o2 = r2, i2 = n2;
    return r2 > n2 && (o2 = n2, i2 = r2), [o2, i2];
  }
  function MR(e27, t2, r2) {
    if (e27.lte(0))
      return new sR(0);
    var n2 = ER.getDigitCount(e27.toNumber()), o2 = new sR(10).pow(n2), i2 = e27.div(o2), a2 = 1 !== n2 ? 0.05 : 0.1, l2 = new sR(Math.ceil(i2.div(a2).toNumber())).add(r2).mul(a2).mul(o2);
    return t2 ? l2 : new sR(Math.ceil(l2));
  }
  function BR(e27, t2, r2) {
    var n2 = 1, o2 = new sR(e27);
    if (!o2.isint() && r2) {
      var i2 = Math.abs(e27);
      i2 < 1 ? (n2 = new sR(10).pow(ER.getDigitCount(e27) - 1), o2 = new sR(Math.floor(o2.div(n2).toNumber())).mul(n2)) : i2 > 1 && (o2 = new sR(Math.floor(e27)));
    } else
      0 === e27 ? o2 = new sR(Math.floor((t2 - 1) / 2)) : r2 || (o2 = new sR(Math.floor(e27)));
    var a2 = Math.floor((t2 - 1) / 2), l2 = function() {
      for (var e28 = arguments.length, t3 = new Array(e28), r3 = 0; r3 < e28; r3++)
        t3[r3] = arguments[r3];
      if (!t3.length)
        return fR;
      var n3 = t3.reverse(), o3 = n3[0], i3 = n3.slice(1);
      return function() {
        return i3.reduce(function(e29, t4) {
          return t4(e29);
        }, o3.apply(void 0, arguments));
      };
    }(bR(function(e28) {
      return o2.add(new sR(e28 - a2).mul(n2)).toNumber();
    }), yR);
    return l2(0, t2);
  }
  function AR(e27, t2, r2, n2) {
    var o2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
    if (!Number.isFinite((t2 - e27) / (r2 - 1)))
      return { step: new sR(0), tickMin: new sR(0), tickMax: new sR(0) };
    var i2, a2 = MR(new sR(t2).sub(e27).div(r2 - 1), n2, o2);
    i2 = e27 <= 0 && t2 >= 0 ? new sR(0) : (i2 = new sR(e27).add(t2).div(2)).sub(new sR(i2).mod(a2));
    var l2 = Math.ceil(i2.sub(e27).div(a2).toNumber()), u2 = Math.ceil(new sR(t2).sub(i2).div(a2).toNumber()), s2 = l2 + u2 + 1;
    return s2 > r2 ? AR(e27, t2, r2, n2, o2 + 1) : (s2 < r2 && (u2 = t2 > 0 ? u2 + (r2 - s2) : u2, l2 = t2 > 0 ? l2 : l2 + (r2 - s2)), { step: a2, tickMin: i2.sub(new sR(l2).mul(a2)), tickMax: i2.add(new sR(u2).mul(a2)) });
  }
  var NR = xR(function(e27) {
    var t2 = RR(e27, 2), r2 = t2[0], n2 = t2[1], o2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6, i2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], a2 = Math.max(o2, 2), l2 = PR([r2, n2]), u2 = RR(l2, 2), s2 = u2[0], c2 = u2[1];
    if (s2 === -1 / 0 || c2 === 1 / 0) {
      var d2 = c2 === 1 / 0 ? [s2].concat(TR(yR(0, o2 - 1).map(function() {
        return 1 / 0;
      }))) : [].concat(TR(yR(0, o2 - 1).map(function() {
        return -1 / 0;
      })), [c2]);
      return r2 > n2 ? CR(d2) : d2;
    }
    if (s2 === c2)
      return BR(s2, o2, i2);
    var f2 = AR(s2, c2, a2, i2), p2 = f2.step, h2 = f2.tickMin, g2 = f2.tickMax, v2 = ER.rangeStep(h2, g2.add(new sR(0.1).mul(p2)), p2);
    return r2 > n2 ? CR(v2) : v2;
  });
  var jR = xR(function(e27, t2) {
    var r2 = RR(e27, 2), n2 = r2[0], o2 = r2[1], i2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], a2 = PR([n2, o2]), l2 = RR(a2, 2), u2 = l2[0], s2 = l2[1];
    if (u2 === -1 / 0 || s2 === 1 / 0)
      return [n2, o2];
    if (u2 === s2)
      return [u2];
    var c2 = Math.max(t2, 2), d2 = MR(new sR(s2).sub(u2).div(c2 - 1), i2, 0), f2 = [].concat(TR(ER.rangeStep(new sR(u2), new sR(s2).sub(new sR(0.99).mul(d2)), d2)), [s2]);
    return n2 > o2 ? CR(f2) : f2;
  });
  function DR(e27, t2) {
    return null == e27 || null == t2 ? NaN : e27 < t2 ? -1 : e27 > t2 ? 1 : e27 >= t2 ? 0 : NaN;
  }
  function LR(e27, t2) {
    return null == e27 || null == t2 ? NaN : t2 < e27 ? -1 : t2 > e27 ? 1 : t2 >= e27 ? 0 : NaN;
  }
  function IR(e27) {
    let t2, r2, n2;
    function o2(e28, n3, o3 = 0, i2 = e28.length) {
      if (o3 < i2) {
        if (0 !== t2(n3, n3))
          return i2;
        do {
          const t3 = o3 + i2 >>> 1;
          r2(e28[t3], n3) < 0 ? o3 = t3 + 1 : i2 = t3;
        } while (o3 < i2);
      }
      return o3;
    }
    return 2 !== e27.length ? (t2 = DR, r2 = (t3, r3) => DR(e27(t3), r3), n2 = (t3, r3) => e27(t3) - r3) : (t2 = e27 === DR || e27 === LR ? e27 : zR, r2 = e27, n2 = e27), { left: o2, center: function(e28, t3, r3 = 0, i2 = e28.length) {
      const a2 = o2(e28, t3, r3, i2 - 1);
      return a2 > r3 && n2(e28[a2 - 1], t3) > -n2(e28[a2], t3) ? a2 - 1 : a2;
    }, right: function(e28, n3, o3 = 0, i2 = e28.length) {
      if (o3 < i2) {
        if (0 !== t2(n3, n3))
          return i2;
        do {
          const t3 = o3 + i2 >>> 1;
          r2(e28[t3], n3) <= 0 ? o3 = t3 + 1 : i2 = t3;
        } while (o3 < i2);
      }
      return o3;
    } };
  }
  function zR() {
    return 0;
  }
  function FR(e27) {
    return null === e27 ? NaN : +e27;
  }
  var UR = IR(DR).right;
  IR(FR).center;
  var VR = UR;
  var WR = class extends Map {
    constructor(e27, t2 = $R) {
      if (super(), Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: t2 } }), null != e27)
        for (const [t3, r2] of e27)
          this.set(t3, r2);
    }
    get(e27) {
      return super.get(HR(this, e27));
    }
    has(e27) {
      return super.has(HR(this, e27));
    }
    set(e27, t2) {
      return super.set(function({ _intern: e28, _key: t3 }, r2) {
        const n2 = t3(r2);
        return e28.has(n2) ? e28.get(n2) : (e28.set(n2, r2), r2);
      }(this, e27), t2);
    }
    delete(e27) {
      return super.delete(function({ _intern: e28, _key: t2 }, r2) {
        const n2 = t2(r2);
        e28.has(n2) && (r2 = e28.get(n2), e28.delete(n2));
        return r2;
      }(this, e27));
    }
  };
  function HR({ _intern: e27, _key: t2 }, r2) {
    const n2 = t2(r2);
    return e27.has(n2) ? e27.get(n2) : r2;
  }
  function $R(e27) {
    return null !== e27 && "object" == typeof e27 ? e27.valueOf() : e27;
  }
  function qR(e27, t2) {
    return (null == e27 || !(e27 >= e27)) - (null == t2 || !(t2 >= t2)) || (e27 < t2 ? -1 : e27 > t2 ? 1 : 0);
  }
  var YR = Math.sqrt(50);
  var GR = Math.sqrt(10);
  var XR = Math.sqrt(2);
  function QR(e27, t2, r2) {
    var n2, o2, i2, a2, l2 = -1;
    if (r2 = +r2, (e27 = +e27) === (t2 = +t2) && r2 > 0)
      return [e27];
    if ((n2 = t2 < e27) && (o2 = e27, e27 = t2, t2 = o2), 0 === (a2 = KR(e27, t2, r2)) || !isFinite(a2))
      return [];
    if (a2 > 0) {
      let r3 = Math.round(e27 / a2), n3 = Math.round(t2 / a2);
      for (r3 * a2 < e27 && ++r3, n3 * a2 > t2 && --n3, i2 = new Array(o2 = n3 - r3 + 1); ++l2 < o2; )
        i2[l2] = (r3 + l2) * a2;
    } else {
      a2 = -a2;
      let r3 = Math.round(e27 * a2), n3 = Math.round(t2 * a2);
      for (r3 / a2 < e27 && ++r3, n3 / a2 > t2 && --n3, i2 = new Array(o2 = n3 - r3 + 1); ++l2 < o2; )
        i2[l2] = (r3 + l2) / a2;
    }
    return n2 && i2.reverse(), i2;
  }
  function KR(e27, t2, r2) {
    var n2 = (t2 - e27) / Math.max(0, r2), o2 = Math.floor(Math.log(n2) / Math.LN10), i2 = n2 / Math.pow(10, o2);
    return o2 >= 0 ? (i2 >= YR ? 10 : i2 >= GR ? 5 : i2 >= XR ? 2 : 1) * Math.pow(10, o2) : -Math.pow(10, -o2) / (i2 >= YR ? 10 : i2 >= GR ? 5 : i2 >= XR ? 2 : 1);
  }
  function ZR(e27, t2, r2) {
    var n2 = Math.abs(t2 - e27) / Math.max(0, r2), o2 = Math.pow(10, Math.floor(Math.log(n2) / Math.LN10)), i2 = n2 / o2;
    return i2 >= YR ? o2 *= 10 : i2 >= GR ? o2 *= 5 : i2 >= XR && (o2 *= 2), t2 < e27 ? -o2 : o2;
  }
  function JR(e27, t2) {
    let r2;
    if (void 0 === t2)
      for (const t3 of e27)
        null != t3 && (r2 < t3 || void 0 === r2 && t3 >= t3) && (r2 = t3);
    else {
      let n2 = -1;
      for (let o2 of e27)
        null != (o2 = t2(o2, ++n2, e27)) && (r2 < o2 || void 0 === r2 && o2 >= o2) && (r2 = o2);
    }
    return r2;
  }
  function eO(e27, t2) {
    let r2;
    if (void 0 === t2)
      for (const t3 of e27)
        null != t3 && (r2 > t3 || void 0 === r2 && t3 >= t3) && (r2 = t3);
    else {
      let n2 = -1;
      for (let o2 of e27)
        null != (o2 = t2(o2, ++n2, e27)) && (r2 > o2 || void 0 === r2 && o2 >= o2) && (r2 = o2);
    }
    return r2;
  }
  function tO(e27, t2, r2 = 0, n2 = e27.length - 1, o2) {
    for (o2 = void 0 === o2 ? qR : function(e28 = DR) {
      if (e28 === DR)
        return qR;
      if ("function" != typeof e28)
        throw new TypeError("compare is not a function");
      return (t3, r3) => {
        const n3 = e28(t3, r3);
        return n3 || 0 === n3 ? n3 : (0 === e28(r3, r3)) - (0 === e28(t3, t3));
      };
    }(o2); n2 > r2; ) {
      if (n2 - r2 > 600) {
        const i3 = n2 - r2 + 1, a3 = t2 - r2 + 1, l3 = Math.log(i3), u2 = 0.5 * Math.exp(2 * l3 / 3), s2 = 0.5 * Math.sqrt(l3 * u2 * (i3 - u2) / i3) * (a3 - i3 / 2 < 0 ? -1 : 1);
        tO(e27, t2, Math.max(r2, Math.floor(t2 - a3 * u2 / i3 + s2)), Math.min(n2, Math.floor(t2 + (i3 - a3) * u2 / i3 + s2)), o2);
      }
      const i2 = e27[t2];
      let a2 = r2, l2 = n2;
      for (rO(e27, r2, t2), o2(e27[n2], i2) > 0 && rO(e27, r2, n2); a2 < l2; ) {
        for (rO(e27, a2, l2), ++a2, --l2; o2(e27[a2], i2) < 0; )
          ++a2;
        for (; o2(e27[l2], i2) > 0; )
          --l2;
      }
      0 === o2(e27[r2], i2) ? rO(e27, r2, l2) : (++l2, rO(e27, l2, n2)), l2 <= t2 && (r2 = l2 + 1), t2 <= l2 && (n2 = l2 - 1);
    }
    return e27;
  }
  function rO(e27, t2, r2) {
    const n2 = e27[t2];
    e27[t2] = e27[r2], e27[r2] = n2;
  }
  function nO(e27, t2, r2) {
    if (e27 = Float64Array.from(function* (e28, t3) {
      if (void 0 === t3)
        for (let t4 of e28)
          null != t4 && (t4 = +t4) >= t4 && (yield t4);
      else {
        let r3 = -1;
        for (let n3 of e28)
          null != (n3 = t3(n3, ++r3, e28)) && (n3 = +n3) >= n3 && (yield n3);
      }
    }(e27, r2)), n2 = e27.length) {
      if ((t2 = +t2) <= 0 || n2 < 2)
        return eO(e27);
      if (t2 >= 1)
        return JR(e27);
      var n2, o2 = (n2 - 1) * t2, i2 = Math.floor(o2), a2 = JR(tO(e27, i2).subarray(0, i2 + 1));
      return a2 + (eO(e27.subarray(i2 + 1)) - a2) * (o2 - i2);
    }
  }
  function oO(e27, t2, r2 = FR) {
    if (n2 = e27.length) {
      if ((t2 = +t2) <= 0 || n2 < 2)
        return +r2(e27[0], 0, e27);
      if (t2 >= 1)
        return +r2(e27[n2 - 1], n2 - 1, e27);
      var n2, o2 = (n2 - 1) * t2, i2 = Math.floor(o2), a2 = +r2(e27[i2], i2, e27);
      return a2 + (+r2(e27[i2 + 1], i2 + 1, e27) - a2) * (o2 - i2);
    }
  }
  function iO(e27, t2, r2) {
    e27 = +e27, t2 = +t2, r2 = (o2 = arguments.length) < 2 ? (t2 = e27, e27 = 0, 1) : o2 < 3 ? 1 : +r2;
    for (var n2 = -1, o2 = 0 | Math.max(0, Math.ceil((t2 - e27) / r2)), i2 = new Array(o2); ++n2 < o2; )
      i2[n2] = e27 + n2 * r2;
    return i2;
  }
  function aO(e27, t2) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        this.range(e27);
        break;
      default:
        this.range(t2).domain(e27);
    }
    return this;
  }
  function lO(e27, t2) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        "function" == typeof e27 ? this.interpolator(e27) : this.range(e27);
        break;
      default:
        this.domain(e27), "function" == typeof t2 ? this.interpolator(t2) : this.range(t2);
    }
    return this;
  }
  var uO = Symbol("implicit");
  function sO() {
    var e27 = new WR(), t2 = [], r2 = [], n2 = uO;
    function o2(o3) {
      let i2 = e27.get(o3);
      if (void 0 === i2) {
        if (n2 !== uO)
          return n2;
        e27.set(o3, i2 = t2.push(o3) - 1);
      }
      return r2[i2 % r2.length];
    }
    return o2.domain = function(r3) {
      if (!arguments.length)
        return t2.slice();
      t2 = [], e27 = new WR();
      for (const n3 of r3)
        e27.has(n3) || e27.set(n3, t2.push(n3) - 1);
      return o2;
    }, o2.range = function(e28) {
      return arguments.length ? (r2 = Array.from(e28), o2) : r2.slice();
    }, o2.unknown = function(e28) {
      return arguments.length ? (n2 = e28, o2) : n2;
    }, o2.copy = function() {
      return sO(t2, r2).unknown(n2);
    }, aO.apply(o2, arguments), o2;
  }
  function cO() {
    var e27, t2, r2 = sO().unknown(void 0), n2 = r2.domain, o2 = r2.range, i2 = 0, a2 = 1, l2 = false, u2 = 0, s2 = 0, c2 = 0.5;
    function d2() {
      var r3 = n2().length, d3 = a2 < i2, f2 = d3 ? a2 : i2, p2 = d3 ? i2 : a2;
      e27 = (p2 - f2) / Math.max(1, r3 - u2 + 2 * s2), l2 && (e27 = Math.floor(e27)), f2 += (p2 - f2 - e27 * (r3 - u2)) * c2, t2 = e27 * (1 - u2), l2 && (f2 = Math.round(f2), t2 = Math.round(t2));
      var h2 = iO(r3).map(function(t3) {
        return f2 + e27 * t3;
      });
      return o2(d3 ? h2.reverse() : h2);
    }
    return delete r2.unknown, r2.domain = function(e28) {
      return arguments.length ? (n2(e28), d2()) : n2();
    }, r2.range = function(e28) {
      return arguments.length ? ([i2, a2] = e28, i2 = +i2, a2 = +a2, d2()) : [i2, a2];
    }, r2.rangeRound = function(e28) {
      return [i2, a2] = e28, i2 = +i2, a2 = +a2, l2 = true, d2();
    }, r2.bandwidth = function() {
      return t2;
    }, r2.step = function() {
      return e27;
    }, r2.round = function(e28) {
      return arguments.length ? (l2 = !!e28, d2()) : l2;
    }, r2.padding = function(e28) {
      return arguments.length ? (u2 = Math.min(1, s2 = +e28), d2()) : u2;
    }, r2.paddingInner = function(e28) {
      return arguments.length ? (u2 = Math.min(1, e28), d2()) : u2;
    }, r2.paddingOuter = function(e28) {
      return arguments.length ? (s2 = +e28, d2()) : s2;
    }, r2.align = function(e28) {
      return arguments.length ? (c2 = Math.max(0, Math.min(1, e28)), d2()) : c2;
    }, r2.copy = function() {
      return cO(n2(), [i2, a2]).round(l2).paddingInner(u2).paddingOuter(s2).align(c2);
    }, aO.apply(d2(), arguments);
  }
  function dO(e27) {
    var t2 = e27.copy;
    return e27.padding = e27.paddingOuter, delete e27.paddingInner, delete e27.paddingOuter, e27.copy = function() {
      return dO(t2());
    }, e27;
  }
  function fO() {
    return dO(cO.apply(null, arguments).paddingInner(1));
  }
  function pO(e27, t2, r2) {
    e27.prototype = t2.prototype = r2, r2.constructor = e27;
  }
  function hO(e27, t2) {
    var r2 = Object.create(e27.prototype);
    for (var n2 in t2)
      r2[n2] = t2[n2];
    return r2;
  }
  function gO() {
  }
  var vO = 1 / 0.7;
  var mO = "\\s*([+-]?\\d+)\\s*";
  var yO = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
  var bO = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
  var CO = /^#([0-9a-f]{3,8})$/;
  var xO = new RegExp(`^rgb\\(${mO},${mO},${mO}\\)$`);
  var wO = new RegExp(`^rgb\\(${bO},${bO},${bO}\\)$`);
  var kO = new RegExp(`^rgba\\(${mO},${mO},${mO},${yO}\\)$`);
  var SO = new RegExp(`^rgba\\(${bO},${bO},${bO},${yO}\\)$`);
  var EO = new RegExp(`^hsl\\(${yO},${bO},${bO}\\)$`);
  var TO = new RegExp(`^hsla\\(${yO},${bO},${bO},${yO}\\)$`);
  var RO = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
  function OO() {
    return this.rgb().formatHex();
  }
  function _O() {
    return this.rgb().formatRgb();
  }
  function PO(e27) {
    var t2, r2;
    return e27 = (e27 + "").trim().toLowerCase(), (t2 = CO.exec(e27)) ? (r2 = t2[1].length, t2 = parseInt(t2[1], 16), 6 === r2 ? MO(t2) : 3 === r2 ? new jO(t2 >> 8 & 15 | t2 >> 4 & 240, t2 >> 4 & 15 | 240 & t2, (15 & t2) << 4 | 15 & t2, 1) : 8 === r2 ? BO(t2 >> 24 & 255, t2 >> 16 & 255, t2 >> 8 & 255, (255 & t2) / 255) : 4 === r2 ? BO(t2 >> 12 & 15 | t2 >> 8 & 240, t2 >> 8 & 15 | t2 >> 4 & 240, t2 >> 4 & 15 | 240 & t2, ((15 & t2) << 4 | 15 & t2) / 255) : null) : (t2 = xO.exec(e27)) ? new jO(t2[1], t2[2], t2[3], 1) : (t2 = wO.exec(e27)) ? new jO(255 * t2[1] / 100, 255 * t2[2] / 100, 255 * t2[3] / 100, 1) : (t2 = kO.exec(e27)) ? BO(t2[1], t2[2], t2[3], t2[4]) : (t2 = SO.exec(e27)) ? BO(255 * t2[1] / 100, 255 * t2[2] / 100, 255 * t2[3] / 100, t2[4]) : (t2 = EO.exec(e27)) ? UO(t2[1], t2[2] / 100, t2[3] / 100, 1) : (t2 = TO.exec(e27)) ? UO(t2[1], t2[2] / 100, t2[3] / 100, t2[4]) : RO.hasOwnProperty(e27) ? MO(RO[e27]) : "transparent" === e27 ? new jO(NaN, NaN, NaN, 0) : null;
  }
  function MO(e27) {
    return new jO(e27 >> 16 & 255, e27 >> 8 & 255, 255 & e27, 1);
  }
  function BO(e27, t2, r2, n2) {
    return n2 <= 0 && (e27 = t2 = r2 = NaN), new jO(e27, t2, r2, n2);
  }
  function AO(e27) {
    return e27 instanceof gO || (e27 = PO(e27)), e27 ? new jO((e27 = e27.rgb()).r, e27.g, e27.b, e27.opacity) : new jO();
  }
  function NO(e27, t2, r2, n2) {
    return 1 === arguments.length ? AO(e27) : new jO(e27, t2, r2, null == n2 ? 1 : n2);
  }
  function jO(e27, t2, r2, n2) {
    this.r = +e27, this.g = +t2, this.b = +r2, this.opacity = +n2;
  }
  function DO() {
    return `#${FO(this.r)}${FO(this.g)}${FO(this.b)}`;
  }
  function LO() {
    const e27 = IO(this.opacity);
    return `${1 === e27 ? "rgb(" : "rgba("}${zO(this.r)}, ${zO(this.g)}, ${zO(this.b)}${1 === e27 ? ")" : `, ${e27})`}`;
  }
  function IO(e27) {
    return isNaN(e27) ? 1 : Math.max(0, Math.min(1, e27));
  }
  function zO(e27) {
    return Math.max(0, Math.min(255, Math.round(e27) || 0));
  }
  function FO(e27) {
    return ((e27 = zO(e27)) < 16 ? "0" : "") + e27.toString(16);
  }
  function UO(e27, t2, r2, n2) {
    return n2 <= 0 ? e27 = t2 = r2 = NaN : r2 <= 0 || r2 >= 1 ? e27 = t2 = NaN : t2 <= 0 && (e27 = NaN), new WO(e27, t2, r2, n2);
  }
  function VO(e27) {
    if (e27 instanceof WO)
      return new WO(e27.h, e27.s, e27.l, e27.opacity);
    if (e27 instanceof gO || (e27 = PO(e27)), !e27)
      return new WO();
    if (e27 instanceof WO)
      return e27;
    var t2 = (e27 = e27.rgb()).r / 255, r2 = e27.g / 255, n2 = e27.b / 255, o2 = Math.min(t2, r2, n2), i2 = Math.max(t2, r2, n2), a2 = NaN, l2 = i2 - o2, u2 = (i2 + o2) / 2;
    return l2 ? (a2 = t2 === i2 ? (r2 - n2) / l2 + 6 * (r2 < n2) : r2 === i2 ? (n2 - t2) / l2 + 2 : (t2 - r2) / l2 + 4, l2 /= u2 < 0.5 ? i2 + o2 : 2 - i2 - o2, a2 *= 60) : l2 = u2 > 0 && u2 < 1 ? 0 : a2, new WO(a2, l2, u2, e27.opacity);
  }
  function WO(e27, t2, r2, n2) {
    this.h = +e27, this.s = +t2, this.l = +r2, this.opacity = +n2;
  }
  function HO(e27) {
    return (e27 = (e27 || 0) % 360) < 0 ? e27 + 360 : e27;
  }
  function $O(e27) {
    return Math.max(0, Math.min(1, e27 || 0));
  }
  function qO(e27, t2, r2) {
    return 255 * (e27 < 60 ? t2 + (r2 - t2) * e27 / 60 : e27 < 180 ? r2 : e27 < 240 ? t2 + (r2 - t2) * (240 - e27) / 60 : t2);
  }
  pO(gO, PO, { copy(e27) {
    return Object.assign(new this.constructor(), this, e27);
  }, displayable() {
    return this.rgb().displayable();
  }, hex: OO, formatHex: OO, formatHex8: function() {
    return this.rgb().formatHex8();
  }, formatHsl: function() {
    return VO(this).formatHsl();
  }, formatRgb: _O, toString: _O }), pO(jO, NO, hO(gO, { brighter(e27) {
    return e27 = null == e27 ? vO : Math.pow(vO, e27), new jO(this.r * e27, this.g * e27, this.b * e27, this.opacity);
  }, darker(e27) {
    return e27 = null == e27 ? 0.7 : Math.pow(0.7, e27), new jO(this.r * e27, this.g * e27, this.b * e27, this.opacity);
  }, rgb() {
    return this;
  }, clamp() {
    return new jO(zO(this.r), zO(this.g), zO(this.b), IO(this.opacity));
  }, displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  }, hex: DO, formatHex: DO, formatHex8: function() {
    return `#${FO(this.r)}${FO(this.g)}${FO(this.b)}${FO(255 * (isNaN(this.opacity) ? 1 : this.opacity))}`;
  }, formatRgb: LO, toString: LO })), pO(WO, function(e27, t2, r2, n2) {
    return 1 === arguments.length ? VO(e27) : new WO(e27, t2, r2, null == n2 ? 1 : n2);
  }, hO(gO, { brighter(e27) {
    return e27 = null == e27 ? vO : Math.pow(vO, e27), new WO(this.h, this.s, this.l * e27, this.opacity);
  }, darker(e27) {
    return e27 = null == e27 ? 0.7 : Math.pow(0.7, e27), new WO(this.h, this.s, this.l * e27, this.opacity);
  }, rgb() {
    var e27 = this.h % 360 + 360 * (this.h < 0), t2 = isNaN(e27) || isNaN(this.s) ? 0 : this.s, r2 = this.l, n2 = r2 + (r2 < 0.5 ? r2 : 1 - r2) * t2, o2 = 2 * r2 - n2;
    return new jO(qO(e27 >= 240 ? e27 - 240 : e27 + 120, o2, n2), qO(e27, o2, n2), qO(e27 < 120 ? e27 + 240 : e27 - 120, o2, n2), this.opacity);
  }, clamp() {
    return new WO(HO(this.h), $O(this.s), $O(this.l), IO(this.opacity));
  }, displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  }, formatHsl() {
    const e27 = IO(this.opacity);
    return `${1 === e27 ? "hsl(" : "hsla("}${HO(this.h)}, ${100 * $O(this.s)}%, ${100 * $O(this.l)}%${1 === e27 ? ")" : `, ${e27})`}`;
  } }));
  var YO = (e27) => () => e27;
  function GO(e27) {
    return 1 == (e27 = +e27) ? XO : function(t2, r2) {
      return r2 - t2 ? function(e28, t3, r3) {
        return e28 = Math.pow(e28, r3), t3 = Math.pow(t3, r3) - e28, r3 = 1 / r3, function(n2) {
          return Math.pow(e28 + n2 * t3, r3);
        };
      }(t2, r2, e27) : YO(isNaN(t2) ? r2 : t2);
    };
  }
  function XO(e27, t2) {
    var r2 = t2 - e27;
    return r2 ? function(e28, t3) {
      return function(r3) {
        return e28 + r3 * t3;
      };
    }(e27, r2) : YO(isNaN(e27) ? t2 : e27);
  }
  var QO = function e12(t2) {
    var r2 = GO(t2);
    function n2(e27, t3) {
      var n3 = r2((e27 = NO(e27)).r, (t3 = NO(t3)).r), o2 = r2(e27.g, t3.g), i2 = r2(e27.b, t3.b), a2 = XO(e27.opacity, t3.opacity);
      return function(t4) {
        return e27.r = n3(t4), e27.g = o2(t4), e27.b = i2(t4), e27.opacity = a2(t4), e27 + "";
      };
    }
    return n2.gamma = e12, n2;
  }(1);
  function KO(e27, t2) {
    t2 || (t2 = []);
    var r2, n2 = e27 ? Math.min(t2.length, e27.length) : 0, o2 = t2.slice();
    return function(i2) {
      for (r2 = 0; r2 < n2; ++r2)
        o2[r2] = e27[r2] * (1 - i2) + t2[r2] * i2;
      return o2;
    };
  }
  function ZO(e27, t2) {
    var r2, n2 = t2 ? t2.length : 0, o2 = e27 ? Math.min(n2, e27.length) : 0, i2 = new Array(o2), a2 = new Array(n2);
    for (r2 = 0; r2 < o2; ++r2)
      i2[r2] = i_(e27[r2], t2[r2]);
    for (; r2 < n2; ++r2)
      a2[r2] = t2[r2];
    return function(e28) {
      for (r2 = 0; r2 < o2; ++r2)
        a2[r2] = i2[r2](e28);
      return a2;
    };
  }
  function JO(e27, t2) {
    var r2 = new Date();
    return e27 = +e27, t2 = +t2, function(n2) {
      return r2.setTime(e27 * (1 - n2) + t2 * n2), r2;
    };
  }
  function e_(e27, t2) {
    return e27 = +e27, t2 = +t2, function(r2) {
      return e27 * (1 - r2) + t2 * r2;
    };
  }
  function t_(e27, t2) {
    var r2, n2 = {}, o2 = {};
    for (r2 in null !== e27 && "object" == typeof e27 || (e27 = {}), null !== t2 && "object" == typeof t2 || (t2 = {}), t2)
      r2 in e27 ? n2[r2] = i_(e27[r2], t2[r2]) : o2[r2] = t2[r2];
    return function(e28) {
      for (r2 in n2)
        o2[r2] = n2[r2](e28);
      return o2;
    };
  }
  var r_ = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  var n_ = new RegExp(r_.source, "g");
  function o_(e27, t2) {
    var r2, n2, o2, i2 = r_.lastIndex = n_.lastIndex = 0, a2 = -1, l2 = [], u2 = [];
    for (e27 += "", t2 += ""; (r2 = r_.exec(e27)) && (n2 = n_.exec(t2)); )
      (o2 = n2.index) > i2 && (o2 = t2.slice(i2, o2), l2[a2] ? l2[a2] += o2 : l2[++a2] = o2), (r2 = r2[0]) === (n2 = n2[0]) ? l2[a2] ? l2[a2] += n2 : l2[++a2] = n2 : (l2[++a2] = null, u2.push({ i: a2, x: e_(r2, n2) })), i2 = n_.lastIndex;
    return i2 < t2.length && (o2 = t2.slice(i2), l2[a2] ? l2[a2] += o2 : l2[++a2] = o2), l2.length < 2 ? u2[0] ? function(e28) {
      return function(t3) {
        return e28(t3) + "";
      };
    }(u2[0].x) : function(e28) {
      return function() {
        return e28;
      };
    }(t2) : (t2 = u2.length, function(e28) {
      for (var r3, n3 = 0; n3 < t2; ++n3)
        l2[(r3 = u2[n3]).i] = r3.x(e28);
      return l2.join("");
    });
  }
  function i_(e27, t2) {
    var r2, n2 = typeof t2;
    return null == t2 || "boolean" === n2 ? YO(t2) : ("number" === n2 ? e_ : "string" === n2 ? (r2 = PO(t2)) ? (t2 = r2, QO) : o_ : t2 instanceof PO ? QO : t2 instanceof Date ? JO : function(e28) {
      return ArrayBuffer.isView(e28) && !(e28 instanceof DataView);
    }(t2) ? KO : Array.isArray(t2) ? ZO : "function" != typeof t2.valueOf && "function" != typeof t2.toString || isNaN(t2) ? t_ : e_)(e27, t2);
  }
  function a_(e27, t2) {
    return e27 = +e27, t2 = +t2, function(r2) {
      return Math.round(e27 * (1 - r2) + t2 * r2);
    };
  }
  function l_(e27, t2) {
    void 0 === t2 && (t2 = e27, e27 = i_);
    for (var r2 = 0, n2 = t2.length - 1, o2 = t2[0], i2 = new Array(n2 < 0 ? 0 : n2); r2 < n2; )
      i2[r2] = e27(o2, o2 = t2[++r2]);
    return function(e28) {
      var t3 = Math.max(0, Math.min(n2 - 1, Math.floor(e28 *= n2)));
      return i2[t3](e28 - t3);
    };
  }
  function u_(e27) {
    return +e27;
  }
  var s_ = [0, 1];
  function c_(e27) {
    return e27;
  }
  function d_(e27, t2) {
    return (t2 -= e27 = +e27) ? function(r2) {
      return (r2 - e27) / t2;
    } : function(e28) {
      return function() {
        return e28;
      };
    }(isNaN(t2) ? NaN : 0.5);
  }
  function f_(e27, t2, r2) {
    var n2 = e27[0], o2 = e27[1], i2 = t2[0], a2 = t2[1];
    return o2 < n2 ? (n2 = d_(o2, n2), i2 = r2(a2, i2)) : (n2 = d_(n2, o2), i2 = r2(i2, a2)), function(e28) {
      return i2(n2(e28));
    };
  }
  function p_(e27, t2, r2) {
    var n2 = Math.min(e27.length, t2.length) - 1, o2 = new Array(n2), i2 = new Array(n2), a2 = -1;
    for (e27[n2] < e27[0] && (e27 = e27.slice().reverse(), t2 = t2.slice().reverse()); ++a2 < n2; )
      o2[a2] = d_(e27[a2], e27[a2 + 1]), i2[a2] = r2(t2[a2], t2[a2 + 1]);
    return function(t3) {
      var r3 = VR(e27, t3, 1, n2) - 1;
      return i2[r3](o2[r3](t3));
    };
  }
  function h_(e27, t2) {
    return t2.domain(e27.domain()).range(e27.range()).interpolate(e27.interpolate()).clamp(e27.clamp()).unknown(e27.unknown());
  }
  function g_() {
    var e27, t2, r2, n2, o2, i2, a2 = s_, l2 = s_, u2 = i_, s2 = c_;
    function c2() {
      var e28 = Math.min(a2.length, l2.length);
      return s2 !== c_ && (s2 = function(e29, t3) {
        var r3;
        return e29 > t3 && (r3 = e29, e29 = t3, t3 = r3), function(r4) {
          return Math.max(e29, Math.min(t3, r4));
        };
      }(a2[0], a2[e28 - 1])), n2 = e28 > 2 ? p_ : f_, o2 = i2 = null, d2;
    }
    function d2(t3) {
      return null == t3 || isNaN(t3 = +t3) ? r2 : (o2 || (o2 = n2(a2.map(e27), l2, u2)))(e27(s2(t3)));
    }
    return d2.invert = function(r3) {
      return s2(t2((i2 || (i2 = n2(l2, a2.map(e27), e_)))(r3)));
    }, d2.domain = function(e28) {
      return arguments.length ? (a2 = Array.from(e28, u_), c2()) : a2.slice();
    }, d2.range = function(e28) {
      return arguments.length ? (l2 = Array.from(e28), c2()) : l2.slice();
    }, d2.rangeRound = function(e28) {
      return l2 = Array.from(e28), u2 = a_, c2();
    }, d2.clamp = function(e28) {
      return arguments.length ? (s2 = !!e28 || c_, c2()) : s2 !== c_;
    }, d2.interpolate = function(e28) {
      return arguments.length ? (u2 = e28, c2()) : u2;
    }, d2.unknown = function(e28) {
      return arguments.length ? (r2 = e28, d2) : r2;
    }, function(r3, n3) {
      return e27 = r3, t2 = n3, c2();
    };
  }
  function v_() {
    return g_()(c_, c_);
  }
  function m_(e27, t2) {
    if ((r2 = (e27 = t2 ? e27.toExponential(t2 - 1) : e27.toExponential()).indexOf("e")) < 0)
      return null;
    var r2, n2 = e27.slice(0, r2);
    return [n2.length > 1 ? n2[0] + n2.slice(2) : n2, +e27.slice(r2 + 1)];
  }
  function y_(e27) {
    return (e27 = m_(Math.abs(e27))) ? e27[1] : NaN;
  }
  var b_;
  var C_ = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function x_(e27) {
    if (!(t2 = C_.exec(e27)))
      throw new Error("invalid format: " + e27);
    var t2;
    return new w_({ fill: t2[1], align: t2[2], sign: t2[3], symbol: t2[4], zero: t2[5], width: t2[6], comma: t2[7], precision: t2[8] && t2[8].slice(1), trim: t2[9], type: t2[10] });
  }
  function w_(e27) {
    this.fill = void 0 === e27.fill ? " " : e27.fill + "", this.align = void 0 === e27.align ? ">" : e27.align + "", this.sign = void 0 === e27.sign ? "-" : e27.sign + "", this.symbol = void 0 === e27.symbol ? "" : e27.symbol + "", this.zero = !!e27.zero, this.width = void 0 === e27.width ? void 0 : +e27.width, this.comma = !!e27.comma, this.precision = void 0 === e27.precision ? void 0 : +e27.precision, this.trim = !!e27.trim, this.type = void 0 === e27.type ? "" : e27.type + "";
  }
  function k_(e27, t2) {
    var r2 = m_(e27, t2);
    if (!r2)
      return e27 + "";
    var n2 = r2[0], o2 = r2[1];
    return o2 < 0 ? "0." + new Array(-o2).join("0") + n2 : n2.length > o2 + 1 ? n2.slice(0, o2 + 1) + "." + n2.slice(o2 + 1) : n2 + new Array(o2 - n2.length + 2).join("0");
  }
  x_.prototype = w_.prototype, w_.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (void 0 === this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (void 0 === this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + (this.trim ? "~" : "") + this.type;
  };
  var S_ = { "%": (e27, t2) => (100 * e27).toFixed(t2), b: (e27) => Math.round(e27).toString(2), c: (e27) => e27 + "", d: function(e27) {
    return Math.abs(e27 = Math.round(e27)) >= 1e21 ? e27.toLocaleString("en").replace(/,/g, "") : e27.toString(10);
  }, e: (e27, t2) => e27.toExponential(t2), f: (e27, t2) => e27.toFixed(t2), g: (e27, t2) => e27.toPrecision(t2), o: (e27) => Math.round(e27).toString(8), p: (e27, t2) => k_(100 * e27, t2), r: k_, s: function(e27, t2) {
    var r2 = m_(e27, t2);
    if (!r2)
      return e27 + "";
    var n2 = r2[0], o2 = r2[1], i2 = o2 - (b_ = 3 * Math.max(-8, Math.min(8, Math.floor(o2 / 3)))) + 1, a2 = n2.length;
    return i2 === a2 ? n2 : i2 > a2 ? n2 + new Array(i2 - a2 + 1).join("0") : i2 > 0 ? n2.slice(0, i2) + "." + n2.slice(i2) : "0." + new Array(1 - i2).join("0") + m_(e27, Math.max(0, t2 + i2 - 1))[0];
  }, X: (e27) => Math.round(e27).toString(16).toUpperCase(), x: (e27) => Math.round(e27).toString(16) };
  function E_(e27) {
    return e27;
  }
  var T_;
  var R_;
  var O_;
  var __ = Array.prototype.map;
  var P_ = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
  function M_(e27) {
    var t2, r2, n2 = void 0 === e27.grouping || void 0 === e27.thousands ? E_ : (t2 = __.call(e27.grouping, Number), r2 = e27.thousands + "", function(e28, n3) {
      for (var o3 = e28.length, i3 = [], a3 = 0, l3 = t2[0], u3 = 0; o3 > 0 && l3 > 0 && (u3 + l3 + 1 > n3 && (l3 = Math.max(1, n3 - u3)), i3.push(e28.substring(o3 -= l3, o3 + l3)), !((u3 += l3 + 1) > n3)); )
        l3 = t2[a3 = (a3 + 1) % t2.length];
      return i3.reverse().join(r2);
    }), o2 = void 0 === e27.currency ? "" : e27.currency[0] + "", i2 = void 0 === e27.currency ? "" : e27.currency[1] + "", a2 = void 0 === e27.decimal ? "." : e27.decimal + "", l2 = void 0 === e27.numerals ? E_ : function(e28) {
      return function(t3) {
        return t3.replace(/[0-9]/g, function(t4) {
          return e28[+t4];
        });
      };
    }(__.call(e27.numerals, String)), u2 = void 0 === e27.percent ? "%" : e27.percent + "", s2 = void 0 === e27.minus ? "\u2212" : e27.minus + "", c2 = void 0 === e27.nan ? "NaN" : e27.nan + "";
    function d2(e28) {
      var t3 = (e28 = x_(e28)).fill, r3 = e28.align, d3 = e28.sign, f2 = e28.symbol, p2 = e28.zero, h2 = e28.width, g2 = e28.comma, v2 = e28.precision, m2 = e28.trim, y2 = e28.type;
      "n" === y2 ? (g2 = true, y2 = "g") : S_[y2] || (void 0 === v2 && (v2 = 12), m2 = true, y2 = "g"), (p2 || "0" === t3 && "=" === r3) && (p2 = true, t3 = "0", r3 = "=");
      var b2 = "$" === f2 ? o2 : "#" === f2 && /[boxX]/.test(y2) ? "0" + y2.toLowerCase() : "", C2 = "$" === f2 ? i2 : /[%p]/.test(y2) ? u2 : "", x2 = S_[y2], w2 = /[defgprs%]/.test(y2);
      function k2(e29) {
        var o3, i3, u3, f3 = b2, k3 = C2;
        if ("c" === y2)
          k3 = x2(e29) + k3, e29 = "";
        else {
          var S2 = (e29 = +e29) < 0 || 1 / e29 < 0;
          if (e29 = isNaN(e29) ? c2 : x2(Math.abs(e29), v2), m2 && (e29 = function(e30) {
            e:
              for (var t4, r4 = e30.length, n3 = 1, o4 = -1; n3 < r4; ++n3)
                switch (e30[n3]) {
                  case ".":
                    o4 = t4 = n3;
                    break;
                  case "0":
                    0 === o4 && (o4 = n3), t4 = n3;
                    break;
                  default:
                    if (!+e30[n3])
                      break e;
                    o4 > 0 && (o4 = 0);
                }
            return o4 > 0 ? e30.slice(0, o4) + e30.slice(t4 + 1) : e30;
          }(e29)), S2 && 0 == +e29 && "+" !== d3 && (S2 = false), f3 = (S2 ? "(" === d3 ? d3 : s2 : "-" === d3 || "(" === d3 ? "" : d3) + f3, k3 = ("s" === y2 ? P_[8 + b_ / 3] : "") + k3 + (S2 && "(" === d3 ? ")" : ""), w2) {
            for (o3 = -1, i3 = e29.length; ++o3 < i3; )
              if (48 > (u3 = e29.charCodeAt(o3)) || u3 > 57) {
                k3 = (46 === u3 ? a2 + e29.slice(o3 + 1) : e29.slice(o3)) + k3, e29 = e29.slice(0, o3);
                break;
              }
          }
        }
        g2 && !p2 && (e29 = n2(e29, 1 / 0));
        var E2 = f3.length + e29.length + k3.length, T2 = E2 < h2 ? new Array(h2 - E2 + 1).join(t3) : "";
        switch (g2 && p2 && (e29 = n2(T2 + e29, T2.length ? h2 - k3.length : 1 / 0), T2 = ""), r3) {
          case "<":
            e29 = f3 + e29 + k3 + T2;
            break;
          case "=":
            e29 = f3 + T2 + e29 + k3;
            break;
          case "^":
            e29 = T2.slice(0, E2 = T2.length >> 1) + f3 + e29 + k3 + T2.slice(E2);
            break;
          default:
            e29 = T2 + f3 + e29 + k3;
        }
        return l2(e29);
      }
      return v2 = void 0 === v2 ? 6 : /[gprs]/.test(y2) ? Math.max(1, Math.min(21, v2)) : Math.max(0, Math.min(20, v2)), k2.toString = function() {
        return e28 + "";
      }, k2;
    }
    return { format: d2, formatPrefix: function(e28, t3) {
      var r3 = d2(((e28 = x_(e28)).type = "f", e28)), n3 = 3 * Math.max(-8, Math.min(8, Math.floor(y_(t3) / 3))), o3 = Math.pow(10, -n3), i3 = P_[8 + n3 / 3];
      return function(e29) {
        return r3(o3 * e29) + i3;
      };
    } };
  }
  function B_(e27, t2, r2, n2) {
    var o2, i2 = ZR(e27, t2, r2);
    switch ((n2 = x_(null == n2 ? ",f" : n2)).type) {
      case "s":
        var a2 = Math.max(Math.abs(e27), Math.abs(t2));
        return null != n2.precision || isNaN(o2 = function(e28, t3) {
          return Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor(y_(t3) / 3))) - y_(Math.abs(e28)));
        }(i2, a2)) || (n2.precision = o2), O_(n2, a2);
      case "":
      case "e":
      case "g":
      case "p":
      case "r":
        null != n2.precision || isNaN(o2 = function(e28, t3) {
          return e28 = Math.abs(e28), t3 = Math.abs(t3) - e28, Math.max(0, y_(t3) - y_(e28)) + 1;
        }(i2, Math.max(Math.abs(e27), Math.abs(t2)))) || (n2.precision = o2 - ("e" === n2.type));
        break;
      case "f":
      case "%":
        null != n2.precision || isNaN(o2 = function(e28) {
          return Math.max(0, -y_(Math.abs(e28)));
        }(i2)) || (n2.precision = o2 - 2 * ("%" === n2.type));
    }
    return R_(n2);
  }
  function A_(e27) {
    var t2 = e27.domain;
    return e27.ticks = function(e28) {
      var r2 = t2();
      return QR(r2[0], r2[r2.length - 1], null == e28 ? 10 : e28);
    }, e27.tickFormat = function(e28, r2) {
      var n2 = t2();
      return B_(n2[0], n2[n2.length - 1], null == e28 ? 10 : e28, r2);
    }, e27.nice = function(r2) {
      null == r2 && (r2 = 10);
      var n2, o2, i2 = t2(), a2 = 0, l2 = i2.length - 1, u2 = i2[a2], s2 = i2[l2], c2 = 10;
      for (s2 < u2 && (o2 = u2, u2 = s2, s2 = o2, o2 = a2, a2 = l2, l2 = o2); c2-- > 0; ) {
        if ((o2 = KR(u2, s2, r2)) === n2)
          return i2[a2] = u2, i2[l2] = s2, t2(i2);
        if (o2 > 0)
          u2 = Math.floor(u2 / o2) * o2, s2 = Math.ceil(s2 / o2) * o2;
        else {
          if (!(o2 < 0))
            break;
          u2 = Math.ceil(u2 * o2) / o2, s2 = Math.floor(s2 * o2) / o2;
        }
        n2 = o2;
      }
      return e27;
    }, e27;
  }
  function N_() {
    var e27 = v_();
    return e27.copy = function() {
      return h_(e27, N_());
    }, aO.apply(e27, arguments), A_(e27);
  }
  function j_(e27, t2) {
    var r2, n2 = 0, o2 = (e27 = e27.slice()).length - 1, i2 = e27[n2], a2 = e27[o2];
    return a2 < i2 && (r2 = n2, n2 = o2, o2 = r2, r2 = i2, i2 = a2, a2 = r2), e27[n2] = t2.floor(i2), e27[o2] = t2.ceil(a2), e27;
  }
  function D_(e27) {
    return Math.log(e27);
  }
  function L_(e27) {
    return Math.exp(e27);
  }
  function I_(e27) {
    return -Math.log(-e27);
  }
  function z_(e27) {
    return -Math.exp(-e27);
  }
  function F_(e27) {
    return isFinite(e27) ? +("1e" + e27) : e27 < 0 ? 0 : e27;
  }
  function U_(e27) {
    return (t2, r2) => -e27(-t2, r2);
  }
  function V_(e27) {
    const t2 = e27(D_, L_), r2 = t2.domain;
    let n2, o2, i2 = 10;
    function a2() {
      return n2 = function(e28) {
        return e28 === Math.E ? Math.log : 10 === e28 && Math.log10 || 2 === e28 && Math.log2 || (e28 = Math.log(e28), (t3) => Math.log(t3) / e28);
      }(i2), o2 = function(e28) {
        return 10 === e28 ? F_ : e28 === Math.E ? Math.exp : (t3) => Math.pow(e28, t3);
      }(i2), r2()[0] < 0 ? (n2 = U_(n2), o2 = U_(o2), e27(I_, z_)) : e27(D_, L_), t2;
    }
    return t2.base = function(e28) {
      return arguments.length ? (i2 = +e28, a2()) : i2;
    }, t2.domain = function(e28) {
      return arguments.length ? (r2(e28), a2()) : r2();
    }, t2.ticks = (e28) => {
      const t3 = r2();
      let a3 = t3[0], l2 = t3[t3.length - 1];
      const u2 = l2 < a3;
      u2 && ([a3, l2] = [l2, a3]);
      let s2, c2, d2 = n2(a3), f2 = n2(l2);
      const p2 = null == e28 ? 10 : +e28;
      let h2 = [];
      if (!(i2 % 1) && f2 - d2 < p2) {
        if (d2 = Math.floor(d2), f2 = Math.ceil(f2), a3 > 0) {
          for (; d2 <= f2; ++d2)
            for (s2 = 1; s2 < i2; ++s2)
              if (c2 = d2 < 0 ? s2 / o2(-d2) : s2 * o2(d2), !(c2 < a3)) {
                if (c2 > l2)
                  break;
                h2.push(c2);
              }
        } else
          for (; d2 <= f2; ++d2)
            for (s2 = i2 - 1; s2 >= 1; --s2)
              if (c2 = d2 > 0 ? s2 / o2(-d2) : s2 * o2(d2), !(c2 < a3)) {
                if (c2 > l2)
                  break;
                h2.push(c2);
              }
        2 * h2.length < p2 && (h2 = QR(a3, l2, p2));
      } else
        h2 = QR(d2, f2, Math.min(f2 - d2, p2)).map(o2);
      return u2 ? h2.reverse() : h2;
    }, t2.tickFormat = (e28, r3) => {
      if (null == e28 && (e28 = 10), null == r3 && (r3 = 10 === i2 ? "s" : ","), "function" != typeof r3 && (i2 % 1 || null != (r3 = x_(r3)).precision || (r3.trim = true), r3 = R_(r3)), e28 === 1 / 0)
        return r3;
      const a3 = Math.max(1, i2 * e28 / t2.ticks().length);
      return (e29) => {
        let t3 = e29 / o2(Math.round(n2(e29)));
        return t3 * i2 < i2 - 0.5 && (t3 *= i2), t3 <= a3 ? r3(e29) : "";
      };
    }, t2.nice = () => r2(j_(r2(), { floor: (e28) => o2(Math.floor(n2(e28))), ceil: (e28) => o2(Math.ceil(n2(e28))) })), t2;
  }
  function W_(e27) {
    return function(t2) {
      return Math.sign(t2) * Math.log1p(Math.abs(t2 / e27));
    };
  }
  function H_(e27) {
    return function(t2) {
      return Math.sign(t2) * Math.expm1(Math.abs(t2)) * e27;
    };
  }
  function $_(e27) {
    var t2 = 1, r2 = e27(W_(t2), H_(t2));
    return r2.constant = function(r3) {
      return arguments.length ? e27(W_(t2 = +r3), H_(t2)) : t2;
    }, A_(r2);
  }
  function q_(e27) {
    return function(t2) {
      return t2 < 0 ? -Math.pow(-t2, e27) : Math.pow(t2, e27);
    };
  }
  function Y_(e27) {
    return e27 < 0 ? -Math.sqrt(-e27) : Math.sqrt(e27);
  }
  function G_(e27) {
    return e27 < 0 ? -e27 * e27 : e27 * e27;
  }
  function X_(e27) {
    var t2 = e27(c_, c_), r2 = 1;
    function n2() {
      return 1 === r2 ? e27(c_, c_) : 0.5 === r2 ? e27(Y_, G_) : e27(q_(r2), q_(1 / r2));
    }
    return t2.exponent = function(e28) {
      return arguments.length ? (r2 = +e28, n2()) : r2;
    }, A_(t2);
  }
  function Q_() {
    var e27 = X_(g_());
    return e27.copy = function() {
      return h_(e27, Q_()).exponent(e27.exponent());
    }, aO.apply(e27, arguments), e27;
  }
  function K_(e27) {
    return Math.sign(e27) * e27 * e27;
  }
  function Z_(e27) {
    return Math.sign(e27) * Math.sqrt(Math.abs(e27));
  }
  T_ = M_({ thousands: ",", grouping: [3], currency: ["$", ""] }), R_ = T_.format, O_ = T_.formatPrefix;
  var J_ = new Date();
  var eP = new Date();
  function tP(e27, t2, r2, n2) {
    function o2(t3) {
      return e27(t3 = 0 === arguments.length ? new Date() : new Date(+t3)), t3;
    }
    return o2.floor = function(t3) {
      return e27(t3 = new Date(+t3)), t3;
    }, o2.ceil = function(r3) {
      return e27(r3 = new Date(r3 - 1)), t2(r3, 1), e27(r3), r3;
    }, o2.round = function(e28) {
      var t3 = o2(e28), r3 = o2.ceil(e28);
      return e28 - t3 < r3 - e28 ? t3 : r3;
    }, o2.offset = function(e28, r3) {
      return t2(e28 = new Date(+e28), null == r3 ? 1 : Math.floor(r3)), e28;
    }, o2.range = function(r3, n3, i2) {
      var a2, l2 = [];
      if (r3 = o2.ceil(r3), i2 = null == i2 ? 1 : Math.floor(i2), !(r3 < n3 && i2 > 0))
        return l2;
      do {
        l2.push(a2 = new Date(+r3)), t2(r3, i2), e27(r3);
      } while (a2 < r3 && r3 < n3);
      return l2;
    }, o2.filter = function(r3) {
      return tP(function(t3) {
        if (t3 >= t3)
          for (; e27(t3), !r3(t3); )
            t3.setTime(t3 - 1);
      }, function(e28, n3) {
        if (e28 >= e28)
          if (n3 < 0)
            for (; ++n3 <= 0; )
              for (; t2(e28, -1), !r3(e28); )
                ;
          else
            for (; --n3 >= 0; )
              for (; t2(e28, 1), !r3(e28); )
                ;
      });
    }, r2 && (o2.count = function(t3, n3) {
      return J_.setTime(+t3), eP.setTime(+n3), e27(J_), e27(eP), Math.floor(r2(J_, eP));
    }, o2.every = function(e28) {
      return e28 = Math.floor(e28), isFinite(e28) && e28 > 0 ? e28 > 1 ? o2.filter(n2 ? function(t3) {
        return n2(t3) % e28 == 0;
      } : function(t3) {
        return o2.count(0, t3) % e28 == 0;
      }) : o2 : null;
    }), o2;
  }
  var rP = tP(function() {
  }, function(e27, t2) {
    e27.setTime(+e27 + t2);
  }, function(e27, t2) {
    return t2 - e27;
  });
  rP.every = function(e27) {
    return e27 = Math.floor(e27), isFinite(e27) && e27 > 0 ? e27 > 1 ? tP(function(t2) {
      t2.setTime(Math.floor(t2 / e27) * e27);
    }, function(t2, r2) {
      t2.setTime(+t2 + r2 * e27);
    }, function(t2, r2) {
      return (r2 - t2) / e27;
    }) : rP : null;
  };
  var nP = rP;
  var oP = tP(function(e27) {
    e27.setTime(e27 - e27.getMilliseconds());
  }, function(e27, t2) {
    e27.setTime(+e27 + 1e3 * t2);
  }, function(e27, t2) {
    return (t2 - e27) / 1e3;
  }, function(e27) {
    return e27.getUTCSeconds();
  });
  var iP = oP;
  var aP = tP(function(e27) {
    e27.setTime(e27 - e27.getMilliseconds() - 1e3 * e27.getSeconds());
  }, function(e27, t2) {
    e27.setTime(+e27 + 6e4 * t2);
  }, function(e27, t2) {
    return (t2 - e27) / 6e4;
  }, function(e27) {
    return e27.getMinutes();
  });
  var lP = aP;
  var uP = tP(function(e27) {
    e27.setTime(e27 - e27.getMilliseconds() - 1e3 * e27.getSeconds() - 6e4 * e27.getMinutes());
  }, function(e27, t2) {
    e27.setTime(+e27 + 36e5 * t2);
  }, function(e27, t2) {
    return (t2 - e27) / 36e5;
  }, function(e27) {
    return e27.getHours();
  });
  var sP = uP;
  var cP = tP((e27) => e27.setHours(0, 0, 0, 0), (e27, t2) => e27.setDate(e27.getDate() + t2), (e27, t2) => (t2 - e27 - 6e4 * (t2.getTimezoneOffset() - e27.getTimezoneOffset())) / 864e5, (e27) => e27.getDate() - 1);
  var dP = cP;
  function fP(e27) {
    return tP(function(t2) {
      t2.setDate(t2.getDate() - (t2.getDay() + 7 - e27) % 7), t2.setHours(0, 0, 0, 0);
    }, function(e28, t2) {
      e28.setDate(e28.getDate() + 7 * t2);
    }, function(e28, t2) {
      return (t2 - e28 - 6e4 * (t2.getTimezoneOffset() - e28.getTimezoneOffset())) / 6048e5;
    });
  }
  var pP = fP(0);
  var hP = fP(1);
  fP(2), fP(3);
  var gP = fP(4);
  fP(5), fP(6);
  var vP = tP(function(e27) {
    e27.setDate(1), e27.setHours(0, 0, 0, 0);
  }, function(e27, t2) {
    e27.setMonth(e27.getMonth() + t2);
  }, function(e27, t2) {
    return t2.getMonth() - e27.getMonth() + 12 * (t2.getFullYear() - e27.getFullYear());
  }, function(e27) {
    return e27.getMonth();
  });
  var mP = vP;
  var yP = tP(function(e27) {
    e27.setMonth(0, 1), e27.setHours(0, 0, 0, 0);
  }, function(e27, t2) {
    e27.setFullYear(e27.getFullYear() + t2);
  }, function(e27, t2) {
    return t2.getFullYear() - e27.getFullYear();
  }, function(e27) {
    return e27.getFullYear();
  });
  yP.every = function(e27) {
    return isFinite(e27 = Math.floor(e27)) && e27 > 0 ? tP(function(t2) {
      t2.setFullYear(Math.floor(t2.getFullYear() / e27) * e27), t2.setMonth(0, 1), t2.setHours(0, 0, 0, 0);
    }, function(t2, r2) {
      t2.setFullYear(t2.getFullYear() + r2 * e27);
    }) : null;
  };
  var bP = yP;
  var CP = tP(function(e27) {
    e27.setUTCSeconds(0, 0);
  }, function(e27, t2) {
    e27.setTime(+e27 + 6e4 * t2);
  }, function(e27, t2) {
    return (t2 - e27) / 6e4;
  }, function(e27) {
    return e27.getUTCMinutes();
  });
  var xP = CP;
  var wP = tP(function(e27) {
    e27.setUTCMinutes(0, 0, 0);
  }, function(e27, t2) {
    e27.setTime(+e27 + 36e5 * t2);
  }, function(e27, t2) {
    return (t2 - e27) / 36e5;
  }, function(e27) {
    return e27.getUTCHours();
  });
  var kP = wP;
  var SP = tP(function(e27) {
    e27.setUTCHours(0, 0, 0, 0);
  }, function(e27, t2) {
    e27.setUTCDate(e27.getUTCDate() + t2);
  }, function(e27, t2) {
    return (t2 - e27) / 864e5;
  }, function(e27) {
    return e27.getUTCDate() - 1;
  });
  var EP = SP;
  function TP(e27) {
    return tP(function(t2) {
      t2.setUTCDate(t2.getUTCDate() - (t2.getUTCDay() + 7 - e27) % 7), t2.setUTCHours(0, 0, 0, 0);
    }, function(e28, t2) {
      e28.setUTCDate(e28.getUTCDate() + 7 * t2);
    }, function(e28, t2) {
      return (t2 - e28) / 6048e5;
    });
  }
  var RP = TP(0);
  var OP = TP(1);
  TP(2), TP(3);
  var _P = TP(4);
  TP(5), TP(6);
  var PP = tP(function(e27) {
    e27.setUTCDate(1), e27.setUTCHours(0, 0, 0, 0);
  }, function(e27, t2) {
    e27.setUTCMonth(e27.getUTCMonth() + t2);
  }, function(e27, t2) {
    return t2.getUTCMonth() - e27.getUTCMonth() + 12 * (t2.getUTCFullYear() - e27.getUTCFullYear());
  }, function(e27) {
    return e27.getUTCMonth();
  });
  var MP = PP;
  var BP = tP(function(e27) {
    e27.setUTCMonth(0, 1), e27.setUTCHours(0, 0, 0, 0);
  }, function(e27, t2) {
    e27.setUTCFullYear(e27.getUTCFullYear() + t2);
  }, function(e27, t2) {
    return t2.getUTCFullYear() - e27.getUTCFullYear();
  }, function(e27) {
    return e27.getUTCFullYear();
  });
  BP.every = function(e27) {
    return isFinite(e27 = Math.floor(e27)) && e27 > 0 ? tP(function(t2) {
      t2.setUTCFullYear(Math.floor(t2.getUTCFullYear() / e27) * e27), t2.setUTCMonth(0, 1), t2.setUTCHours(0, 0, 0, 0);
    }, function(t2, r2) {
      t2.setUTCFullYear(t2.getUTCFullYear() + r2 * e27);
    }) : null;
  };
  var AP = BP;
  function NP(e27, t2, r2, n2, o2, i2) {
    const a2 = [[iP, 1, 1e3], [iP, 5, 5e3], [iP, 15, 15e3], [iP, 30, 3e4], [i2, 1, 6e4], [i2, 5, 3e5], [i2, 15, 9e5], [i2, 30, 18e5], [o2, 1, 36e5], [o2, 3, 108e5], [o2, 6, 216e5], [o2, 12, 432e5], [n2, 1, 864e5], [n2, 2, 1728e5], [r2, 1, 6048e5], [t2, 1, 2592e6], [t2, 3, 7776e6], [e27, 1, 31536e6]];
    function l2(t3, r3, n3) {
      const o3 = Math.abs(r3 - t3) / n3, i3 = IR(([, , e28]) => e28).right(a2, o3);
      if (i3 === a2.length)
        return e27.every(ZR(t3 / 31536e6, r3 / 31536e6, n3));
      if (0 === i3)
        return nP.every(Math.max(ZR(t3, r3, n3), 1));
      const [l3, u2] = a2[o3 / a2[i3 - 1][2] < a2[i3][2] / o3 ? i3 - 1 : i3];
      return l3.every(u2);
    }
    return [function(e28, t3, r3) {
      const n3 = t3 < e28;
      n3 && ([e28, t3] = [t3, e28]);
      const o3 = r3 && "function" == typeof r3.range ? r3 : l2(e28, t3, r3), i3 = o3 ? o3.range(e28, +t3 + 1) : [];
      return n3 ? i3.reverse() : i3;
    }, l2];
  }
  var [jP, DP] = NP(AP, MP, RP, EP, kP, xP);
  var [LP, IP] = NP(bP, mP, pP, dP, sP, lP);
  function zP(e27) {
    if (0 <= e27.y && e27.y < 100) {
      var t2 = new Date(-1, e27.m, e27.d, e27.H, e27.M, e27.S, e27.L);
      return t2.setFullYear(e27.y), t2;
    }
    return new Date(e27.y, e27.m, e27.d, e27.H, e27.M, e27.S, e27.L);
  }
  function FP(e27) {
    if (0 <= e27.y && e27.y < 100) {
      var t2 = new Date(Date.UTC(-1, e27.m, e27.d, e27.H, e27.M, e27.S, e27.L));
      return t2.setUTCFullYear(e27.y), t2;
    }
    return new Date(Date.UTC(e27.y, e27.m, e27.d, e27.H, e27.M, e27.S, e27.L));
  }
  function UP(e27, t2, r2) {
    return { y: e27, m: t2, d: r2, H: 0, M: 0, S: 0, L: 0 };
  }
  var VP;
  var WP;
  var HP;
  var $P = { "-": "", _: " ", 0: "0" };
  var qP = /^\s*\d+/;
  var YP = /^%/;
  var GP = /[\\^$*+?|[\]().{}]/g;
  function XP(e27, t2, r2) {
    var n2 = e27 < 0 ? "-" : "", o2 = (n2 ? -e27 : e27) + "", i2 = o2.length;
    return n2 + (i2 < r2 ? new Array(r2 - i2 + 1).join(t2) + o2 : o2);
  }
  function QP(e27) {
    return e27.replace(GP, "\\$&");
  }
  function KP(e27) {
    return new RegExp("^(?:" + e27.map(QP).join("|") + ")", "i");
  }
  function ZP(e27) {
    return new Map(e27.map((e28, t2) => [e28.toLowerCase(), t2]));
  }
  function JP(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 1));
    return n2 ? (e27.w = +n2[0], r2 + n2[0].length) : -1;
  }
  function eM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 1));
    return n2 ? (e27.u = +n2[0], r2 + n2[0].length) : -1;
  }
  function tM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.U = +n2[0], r2 + n2[0].length) : -1;
  }
  function rM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.V = +n2[0], r2 + n2[0].length) : -1;
  }
  function nM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.W = +n2[0], r2 + n2[0].length) : -1;
  }
  function oM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 4));
    return n2 ? (e27.y = +n2[0], r2 + n2[0].length) : -1;
  }
  function iM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.y = +n2[0] + (+n2[0] > 68 ? 1900 : 2e3), r2 + n2[0].length) : -1;
  }
  function aM(e27, t2, r2) {
    var n2 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t2.slice(r2, r2 + 6));
    return n2 ? (e27.Z = n2[1] ? 0 : -(n2[2] + (n2[3] || "00")), r2 + n2[0].length) : -1;
  }
  function lM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 1));
    return n2 ? (e27.q = 3 * n2[0] - 3, r2 + n2[0].length) : -1;
  }
  function uM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.m = n2[0] - 1, r2 + n2[0].length) : -1;
  }
  function sM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.d = +n2[0], r2 + n2[0].length) : -1;
  }
  function cM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 3));
    return n2 ? (e27.m = 0, e27.d = +n2[0], r2 + n2[0].length) : -1;
  }
  function dM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.H = +n2[0], r2 + n2[0].length) : -1;
  }
  function fM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.M = +n2[0], r2 + n2[0].length) : -1;
  }
  function pM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 2));
    return n2 ? (e27.S = +n2[0], r2 + n2[0].length) : -1;
  }
  function hM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 3));
    return n2 ? (e27.L = +n2[0], r2 + n2[0].length) : -1;
  }
  function gM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2, r2 + 6));
    return n2 ? (e27.L = Math.floor(n2[0] / 1e3), r2 + n2[0].length) : -1;
  }
  function vM(e27, t2, r2) {
    var n2 = YP.exec(t2.slice(r2, r2 + 1));
    return n2 ? r2 + n2[0].length : -1;
  }
  function mM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2));
    return n2 ? (e27.Q = +n2[0], r2 + n2[0].length) : -1;
  }
  function yM(e27, t2, r2) {
    var n2 = qP.exec(t2.slice(r2));
    return n2 ? (e27.s = +n2[0], r2 + n2[0].length) : -1;
  }
  function bM(e27, t2) {
    return XP(e27.getDate(), t2, 2);
  }
  function CM(e27, t2) {
    return XP(e27.getHours(), t2, 2);
  }
  function xM(e27, t2) {
    return XP(e27.getHours() % 12 || 12, t2, 2);
  }
  function wM(e27, t2) {
    return XP(1 + dP.count(bP(e27), e27), t2, 3);
  }
  function kM(e27, t2) {
    return XP(e27.getMilliseconds(), t2, 3);
  }
  function SM(e27, t2) {
    return kM(e27, t2) + "000";
  }
  function EM(e27, t2) {
    return XP(e27.getMonth() + 1, t2, 2);
  }
  function TM(e27, t2) {
    return XP(e27.getMinutes(), t2, 2);
  }
  function RM(e27, t2) {
    return XP(e27.getSeconds(), t2, 2);
  }
  function OM(e27) {
    var t2 = e27.getDay();
    return 0 === t2 ? 7 : t2;
  }
  function _M(e27, t2) {
    return XP(pP.count(bP(e27) - 1, e27), t2, 2);
  }
  function PM(e27) {
    var t2 = e27.getDay();
    return t2 >= 4 || 0 === t2 ? gP(e27) : gP.ceil(e27);
  }
  function MM(e27, t2) {
    return e27 = PM(e27), XP(gP.count(bP(e27), e27) + (4 === bP(e27).getDay()), t2, 2);
  }
  function BM(e27) {
    return e27.getDay();
  }
  function AM(e27, t2) {
    return XP(hP.count(bP(e27) - 1, e27), t2, 2);
  }
  function NM(e27, t2) {
    return XP(e27.getFullYear() % 100, t2, 2);
  }
  function jM(e27, t2) {
    return XP((e27 = PM(e27)).getFullYear() % 100, t2, 2);
  }
  function DM(e27, t2) {
    return XP(e27.getFullYear() % 1e4, t2, 4);
  }
  function LM(e27, t2) {
    var r2 = e27.getDay();
    return XP((e27 = r2 >= 4 || 0 === r2 ? gP(e27) : gP.ceil(e27)).getFullYear() % 1e4, t2, 4);
  }
  function IM(e27) {
    var t2 = e27.getTimezoneOffset();
    return (t2 > 0 ? "-" : (t2 *= -1, "+")) + XP(t2 / 60 | 0, "0", 2) + XP(t2 % 60, "0", 2);
  }
  function zM(e27, t2) {
    return XP(e27.getUTCDate(), t2, 2);
  }
  function FM(e27, t2) {
    return XP(e27.getUTCHours(), t2, 2);
  }
  function UM(e27, t2) {
    return XP(e27.getUTCHours() % 12 || 12, t2, 2);
  }
  function VM(e27, t2) {
    return XP(1 + EP.count(AP(e27), e27), t2, 3);
  }
  function WM(e27, t2) {
    return XP(e27.getUTCMilliseconds(), t2, 3);
  }
  function HM(e27, t2) {
    return WM(e27, t2) + "000";
  }
  function $M(e27, t2) {
    return XP(e27.getUTCMonth() + 1, t2, 2);
  }
  function qM(e27, t2) {
    return XP(e27.getUTCMinutes(), t2, 2);
  }
  function YM(e27, t2) {
    return XP(e27.getUTCSeconds(), t2, 2);
  }
  function GM(e27) {
    var t2 = e27.getUTCDay();
    return 0 === t2 ? 7 : t2;
  }
  function XM(e27, t2) {
    return XP(RP.count(AP(e27) - 1, e27), t2, 2);
  }
  function QM(e27) {
    var t2 = e27.getUTCDay();
    return t2 >= 4 || 0 === t2 ? _P(e27) : _P.ceil(e27);
  }
  function KM(e27, t2) {
    return e27 = QM(e27), XP(_P.count(AP(e27), e27) + (4 === AP(e27).getUTCDay()), t2, 2);
  }
  function ZM(e27) {
    return e27.getUTCDay();
  }
  function JM(e27, t2) {
    return XP(OP.count(AP(e27) - 1, e27), t2, 2);
  }
  function eB(e27, t2) {
    return XP(e27.getUTCFullYear() % 100, t2, 2);
  }
  function tB(e27, t2) {
    return XP((e27 = QM(e27)).getUTCFullYear() % 100, t2, 2);
  }
  function rB(e27, t2) {
    return XP(e27.getUTCFullYear() % 1e4, t2, 4);
  }
  function nB(e27, t2) {
    var r2 = e27.getUTCDay();
    return XP((e27 = r2 >= 4 || 0 === r2 ? _P(e27) : _P.ceil(e27)).getUTCFullYear() % 1e4, t2, 4);
  }
  function oB() {
    return "+0000";
  }
  function iB() {
    return "%";
  }
  function aB(e27) {
    return +e27;
  }
  function lB(e27) {
    return Math.floor(+e27 / 1e3);
  }
  function uB(e27) {
    return new Date(e27);
  }
  function sB(e27) {
    return e27 instanceof Date ? +e27 : +new Date(+e27);
  }
  function cB(e27, t2, r2, n2, o2, i2, a2, l2, u2, s2) {
    var c2 = v_(), d2 = c2.invert, f2 = c2.domain, p2 = s2(".%L"), h2 = s2(":%S"), g2 = s2("%I:%M"), v2 = s2("%I %p"), m2 = s2("%a %d"), y2 = s2("%b %d"), b2 = s2("%B"), C2 = s2("%Y");
    function x2(e28) {
      return (u2(e28) < e28 ? p2 : l2(e28) < e28 ? h2 : a2(e28) < e28 ? g2 : i2(e28) < e28 ? v2 : n2(e28) < e28 ? o2(e28) < e28 ? m2 : y2 : r2(e28) < e28 ? b2 : C2)(e28);
    }
    return c2.invert = function(e28) {
      return new Date(d2(e28));
    }, c2.domain = function(e28) {
      return arguments.length ? f2(Array.from(e28, sB)) : f2().map(uB);
    }, c2.ticks = function(t3) {
      var r3 = f2();
      return e27(r3[0], r3[r3.length - 1], null == t3 ? 10 : t3);
    }, c2.tickFormat = function(e28, t3) {
      return null == t3 ? x2 : s2(t3);
    }, c2.nice = function(e28) {
      var r3 = f2();
      return e28 && "function" == typeof e28.range || (e28 = t2(r3[0], r3[r3.length - 1], null == e28 ? 10 : e28)), e28 ? f2(j_(r3, e28)) : c2;
    }, c2.copy = function() {
      return h_(c2, cB(e27, t2, r2, n2, o2, i2, a2, l2, u2, s2));
    }, c2;
  }
  function dB() {
    var e27, t2, r2, n2, o2, i2 = 0, a2 = 1, l2 = c_, u2 = false;
    function s2(t3) {
      return null == t3 || isNaN(t3 = +t3) ? o2 : l2(0 === r2 ? 0.5 : (t3 = (n2(t3) - e27) * r2, u2 ? Math.max(0, Math.min(1, t3)) : t3));
    }
    function c2(e28) {
      return function(t3) {
        var r3, n3;
        return arguments.length ? ([r3, n3] = t3, l2 = e28(r3, n3), s2) : [l2(0), l2(1)];
      };
    }
    return s2.domain = function(o3) {
      return arguments.length ? ([i2, a2] = o3, e27 = n2(i2 = +i2), t2 = n2(a2 = +a2), r2 = e27 === t2 ? 0 : 1 / (t2 - e27), s2) : [i2, a2];
    }, s2.clamp = function(e28) {
      return arguments.length ? (u2 = !!e28, s2) : u2;
    }, s2.interpolator = function(e28) {
      return arguments.length ? (l2 = e28, s2) : l2;
    }, s2.range = c2(i_), s2.rangeRound = c2(a_), s2.unknown = function(e28) {
      return arguments.length ? (o2 = e28, s2) : o2;
    }, function(o3) {
      return n2 = o3, e27 = o3(i2), t2 = o3(a2), r2 = e27 === t2 ? 0 : 1 / (t2 - e27), s2;
    };
  }
  function fB(e27, t2) {
    return t2.domain(e27.domain()).interpolator(e27.interpolator()).clamp(e27.clamp()).unknown(e27.unknown());
  }
  function pB() {
    var e27 = X_(dB());
    return e27.copy = function() {
      return fB(e27, pB()).exponent(e27.exponent());
    }, lO.apply(e27, arguments);
  }
  function hB() {
    var e27, t2, r2, n2, o2, i2, a2, l2 = 0, u2 = 0.5, s2 = 1, c2 = 1, d2 = c_, f2 = false;
    function p2(e28) {
      return isNaN(e28 = +e28) ? a2 : (e28 = 0.5 + ((e28 = +i2(e28)) - t2) * (c2 * e28 < c2 * t2 ? n2 : o2), d2(f2 ? Math.max(0, Math.min(1, e28)) : e28));
    }
    function h2(e28) {
      return function(t3) {
        var r3, n3, o3;
        return arguments.length ? ([r3, n3, o3] = t3, d2 = l_(e28, [r3, n3, o3]), p2) : [d2(0), d2(0.5), d2(1)];
      };
    }
    return p2.domain = function(a3) {
      return arguments.length ? ([l2, u2, s2] = a3, e27 = i2(l2 = +l2), t2 = i2(u2 = +u2), r2 = i2(s2 = +s2), n2 = e27 === t2 ? 0 : 0.5 / (t2 - e27), o2 = t2 === r2 ? 0 : 0.5 / (r2 - t2), c2 = t2 < e27 ? -1 : 1, p2) : [l2, u2, s2];
    }, p2.clamp = function(e28) {
      return arguments.length ? (f2 = !!e28, p2) : f2;
    }, p2.interpolator = function(e28) {
      return arguments.length ? (d2 = e28, p2) : d2;
    }, p2.range = h2(i_), p2.rangeRound = h2(a_), p2.unknown = function(e28) {
      return arguments.length ? (a2 = e28, p2) : a2;
    }, function(a3) {
      return i2 = a3, e27 = a3(l2), t2 = a3(u2), r2 = a3(s2), n2 = e27 === t2 ? 0 : 0.5 / (t2 - e27), o2 = t2 === r2 ? 0 : 0.5 / (r2 - t2), c2 = t2 < e27 ? -1 : 1, p2;
    };
  }
  function gB() {
    var e27 = X_(hB());
    return e27.copy = function() {
      return fB(e27, gB()).exponent(e27.exponent());
    }, lO.apply(e27, arguments);
  }
  !function(e27) {
    VP = function(e28) {
      var t2 = e28.dateTime, r2 = e28.date, n2 = e28.time, o2 = e28.periods, i2 = e28.days, a2 = e28.shortDays, l2 = e28.months, u2 = e28.shortMonths, s2 = KP(o2), c2 = ZP(o2), d2 = KP(i2), f2 = ZP(i2), p2 = KP(a2), h2 = ZP(a2), g2 = KP(l2), v2 = ZP(l2), m2 = KP(u2), y2 = ZP(u2), b2 = { a: function(e29) {
        return a2[e29.getDay()];
      }, A: function(e29) {
        return i2[e29.getDay()];
      }, b: function(e29) {
        return u2[e29.getMonth()];
      }, B: function(e29) {
        return l2[e29.getMonth()];
      }, c: null, d: bM, e: bM, f: SM, g: jM, G: LM, H: CM, I: xM, j: wM, L: kM, m: EM, M: TM, p: function(e29) {
        return o2[+(e29.getHours() >= 12)];
      }, q: function(e29) {
        return 1 + ~~(e29.getMonth() / 3);
      }, Q: aB, s: lB, S: RM, u: OM, U: _M, V: MM, w: BM, W: AM, x: null, X: null, y: NM, Y: DM, Z: IM, "%": iB }, C2 = { a: function(e29) {
        return a2[e29.getUTCDay()];
      }, A: function(e29) {
        return i2[e29.getUTCDay()];
      }, b: function(e29) {
        return u2[e29.getUTCMonth()];
      }, B: function(e29) {
        return l2[e29.getUTCMonth()];
      }, c: null, d: zM, e: zM, f: HM, g: tB, G: nB, H: FM, I: UM, j: VM, L: WM, m: $M, M: qM, p: function(e29) {
        return o2[+(e29.getUTCHours() >= 12)];
      }, q: function(e29) {
        return 1 + ~~(e29.getUTCMonth() / 3);
      }, Q: aB, s: lB, S: YM, u: GM, U: XM, V: KM, w: ZM, W: JM, x: null, X: null, y: eB, Y: rB, Z: oB, "%": iB }, x2 = { a: function(e29, t3, r3) {
        var n3 = p2.exec(t3.slice(r3));
        return n3 ? (e29.w = h2.get(n3[0].toLowerCase()), r3 + n3[0].length) : -1;
      }, A: function(e29, t3, r3) {
        var n3 = d2.exec(t3.slice(r3));
        return n3 ? (e29.w = f2.get(n3[0].toLowerCase()), r3 + n3[0].length) : -1;
      }, b: function(e29, t3, r3) {
        var n3 = m2.exec(t3.slice(r3));
        return n3 ? (e29.m = y2.get(n3[0].toLowerCase()), r3 + n3[0].length) : -1;
      }, B: function(e29, t3, r3) {
        var n3 = g2.exec(t3.slice(r3));
        return n3 ? (e29.m = v2.get(n3[0].toLowerCase()), r3 + n3[0].length) : -1;
      }, c: function(e29, r3, n3) {
        return S2(e29, t2, r3, n3);
      }, d: sM, e: sM, f: gM, g: iM, G: oM, H: dM, I: dM, j: cM, L: hM, m: uM, M: fM, p: function(e29, t3, r3) {
        var n3 = s2.exec(t3.slice(r3));
        return n3 ? (e29.p = c2.get(n3[0].toLowerCase()), r3 + n3[0].length) : -1;
      }, q: lM, Q: mM, s: yM, S: pM, u: eM, U: tM, V: rM, w: JP, W: nM, x: function(e29, t3, n3) {
        return S2(e29, r2, t3, n3);
      }, X: function(e29, t3, r3) {
        return S2(e29, n2, t3, r3);
      }, y: iM, Y: oM, Z: aM, "%": vM };
      function w2(e29, t3) {
        return function(r3) {
          var n3, o3, i3, a3 = [], l3 = -1, u3 = 0, s3 = e29.length;
          for (r3 instanceof Date || (r3 = new Date(+r3)); ++l3 < s3; )
            37 === e29.charCodeAt(l3) && (a3.push(e29.slice(u3, l3)), null != (o3 = $P[n3 = e29.charAt(++l3)]) ? n3 = e29.charAt(++l3) : o3 = "e" === n3 ? " " : "0", (i3 = t3[n3]) && (n3 = i3(r3, o3)), a3.push(n3), u3 = l3 + 1);
          return a3.push(e29.slice(u3, l3)), a3.join("");
        };
      }
      function k2(e29, t3) {
        return function(r3) {
          var n3, o3, i3 = UP(1900, void 0, 1);
          if (S2(i3, e29, r3 += "", 0) != r3.length)
            return null;
          if ("Q" in i3)
            return new Date(i3.Q);
          if ("s" in i3)
            return new Date(1e3 * i3.s + ("L" in i3 ? i3.L : 0));
          if (t3 && !("Z" in i3) && (i3.Z = 0), "p" in i3 && (i3.H = i3.H % 12 + 12 * i3.p), void 0 === i3.m && (i3.m = "q" in i3 ? i3.q : 0), "V" in i3) {
            if (i3.V < 1 || i3.V > 53)
              return null;
            "w" in i3 || (i3.w = 1), "Z" in i3 ? (o3 = (n3 = FP(UP(i3.y, 0, 1))).getUTCDay(), n3 = o3 > 4 || 0 === o3 ? OP.ceil(n3) : OP(n3), n3 = EP.offset(n3, 7 * (i3.V - 1)), i3.y = n3.getUTCFullYear(), i3.m = n3.getUTCMonth(), i3.d = n3.getUTCDate() + (i3.w + 6) % 7) : (o3 = (n3 = zP(UP(i3.y, 0, 1))).getDay(), n3 = o3 > 4 || 0 === o3 ? hP.ceil(n3) : hP(n3), n3 = dP.offset(n3, 7 * (i3.V - 1)), i3.y = n3.getFullYear(), i3.m = n3.getMonth(), i3.d = n3.getDate() + (i3.w + 6) % 7);
          } else
            ("W" in i3 || "U" in i3) && ("w" in i3 || (i3.w = "u" in i3 ? i3.u % 7 : "W" in i3 ? 1 : 0), o3 = "Z" in i3 ? FP(UP(i3.y, 0, 1)).getUTCDay() : zP(UP(i3.y, 0, 1)).getDay(), i3.m = 0, i3.d = "W" in i3 ? (i3.w + 6) % 7 + 7 * i3.W - (o3 + 5) % 7 : i3.w + 7 * i3.U - (o3 + 6) % 7);
          return "Z" in i3 ? (i3.H += i3.Z / 100 | 0, i3.M += i3.Z % 100, FP(i3)) : zP(i3);
        };
      }
      function S2(e29, t3, r3, n3) {
        for (var o3, i3, a3 = 0, l3 = t3.length, u3 = r3.length; a3 < l3; ) {
          if (n3 >= u3)
            return -1;
          if (37 === (o3 = t3.charCodeAt(a3++))) {
            if (o3 = t3.charAt(a3++), !(i3 = x2[o3 in $P ? t3.charAt(a3++) : o3]) || (n3 = i3(e29, r3, n3)) < 0)
              return -1;
          } else if (o3 != r3.charCodeAt(n3++))
            return -1;
        }
        return n3;
      }
      return b2.x = w2(r2, b2), b2.X = w2(n2, b2), b2.c = w2(t2, b2), C2.x = w2(r2, C2), C2.X = w2(n2, C2), C2.c = w2(t2, C2), { format: function(e29) {
        var t3 = w2(e29 += "", b2);
        return t3.toString = function() {
          return e29;
        }, t3;
      }, parse: function(e29) {
        var t3 = k2(e29 += "", false);
        return t3.toString = function() {
          return e29;
        }, t3;
      }, utcFormat: function(e29) {
        var t3 = w2(e29 += "", C2);
        return t3.toString = function() {
          return e29;
        }, t3;
      }, utcParse: function(e29) {
        var t3 = k2(e29 += "", true);
        return t3.toString = function() {
          return e29;
        }, t3;
      } };
    }(e27), WP = VP.format, HP = VP.utcFormat;
  }({ dateTime: "%x, %X", date: "%-m/%-d/%Y", time: "%-I:%M:%S %p", periods: ["AM", "PM"], days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"] });
  var vB = Object.freeze({ __proto__: null, scaleBand: cO, scalePoint: fO, scaleIdentity: function e13(t2) {
    var r2;
    function n2(e27) {
      return null == e27 || isNaN(e27 = +e27) ? r2 : e27;
    }
    return n2.invert = n2, n2.domain = n2.range = function(e27) {
      return arguments.length ? (t2 = Array.from(e27, u_), n2) : t2.slice();
    }, n2.unknown = function(e27) {
      return arguments.length ? (r2 = e27, n2) : r2;
    }, n2.copy = function() {
      return e13(t2).unknown(r2);
    }, t2 = arguments.length ? Array.from(t2, u_) : [0, 1], A_(n2);
  }, scaleLinear: N_, scaleLog: function e14() {
    const t2 = V_(g_()).domain([1, 10]);
    return t2.copy = () => h_(t2, e14()).base(t2.base()), aO.apply(t2, arguments), t2;
  }, scaleSymlog: function e15() {
    var t2 = $_(g_());
    return t2.copy = function() {
      return h_(t2, e15()).constant(t2.constant());
    }, aO.apply(t2, arguments);
  }, scaleOrdinal: sO, scaleImplicit: uO, scalePow: Q_, scaleSqrt: function() {
    return Q_.apply(null, arguments).exponent(0.5);
  }, scaleRadial: function e16() {
    var t2, r2 = v_(), n2 = [0, 1], o2 = false;
    function i2(e27) {
      var n3 = Z_(r2(e27));
      return isNaN(n3) ? t2 : o2 ? Math.round(n3) : n3;
    }
    return i2.invert = function(e27) {
      return r2.invert(K_(e27));
    }, i2.domain = function(e27) {
      return arguments.length ? (r2.domain(e27), i2) : r2.domain();
    }, i2.range = function(e27) {
      return arguments.length ? (r2.range((n2 = Array.from(e27, u_)).map(K_)), i2) : n2.slice();
    }, i2.rangeRound = function(e27) {
      return i2.range(e27).round(true);
    }, i2.round = function(e27) {
      return arguments.length ? (o2 = !!e27, i2) : o2;
    }, i2.clamp = function(e27) {
      return arguments.length ? (r2.clamp(e27), i2) : r2.clamp();
    }, i2.unknown = function(e27) {
      return arguments.length ? (t2 = e27, i2) : t2;
    }, i2.copy = function() {
      return e16(r2.domain(), n2).round(o2).clamp(r2.clamp()).unknown(t2);
    }, aO.apply(i2, arguments), A_(i2);
  }, scaleQuantile: function e17() {
    var t2, r2 = [], n2 = [], o2 = [];
    function i2() {
      var e27 = 0, t3 = Math.max(1, n2.length);
      for (o2 = new Array(t3 - 1); ++e27 < t3; )
        o2[e27 - 1] = oO(r2, e27 / t3);
      return a2;
    }
    function a2(e27) {
      return null == e27 || isNaN(e27 = +e27) ? t2 : n2[VR(o2, e27)];
    }
    return a2.invertExtent = function(e27) {
      var t3 = n2.indexOf(e27);
      return t3 < 0 ? [NaN, NaN] : [t3 > 0 ? o2[t3 - 1] : r2[0], t3 < o2.length ? o2[t3] : r2[r2.length - 1]];
    }, a2.domain = function(e27) {
      if (!arguments.length)
        return r2.slice();
      r2 = [];
      for (let t3 of e27)
        null == t3 || isNaN(t3 = +t3) || r2.push(t3);
      return r2.sort(DR), i2();
    }, a2.range = function(e27) {
      return arguments.length ? (n2 = Array.from(e27), i2()) : n2.slice();
    }, a2.unknown = function(e27) {
      return arguments.length ? (t2 = e27, a2) : t2;
    }, a2.quantiles = function() {
      return o2.slice();
    }, a2.copy = function() {
      return e17().domain(r2).range(n2).unknown(t2);
    }, aO.apply(a2, arguments);
  }, scaleQuantize: function e18() {
    var t2, r2 = 0, n2 = 1, o2 = 1, i2 = [0.5], a2 = [0, 1];
    function l2(e27) {
      return null != e27 && e27 <= e27 ? a2[VR(i2, e27, 0, o2)] : t2;
    }
    function u2() {
      var e27 = -1;
      for (i2 = new Array(o2); ++e27 < o2; )
        i2[e27] = ((e27 + 1) * n2 - (e27 - o2) * r2) / (o2 + 1);
      return l2;
    }
    return l2.domain = function(e27) {
      return arguments.length ? ([r2, n2] = e27, r2 = +r2, n2 = +n2, u2()) : [r2, n2];
    }, l2.range = function(e27) {
      return arguments.length ? (o2 = (a2 = Array.from(e27)).length - 1, u2()) : a2.slice();
    }, l2.invertExtent = function(e27) {
      var t3 = a2.indexOf(e27);
      return t3 < 0 ? [NaN, NaN] : t3 < 1 ? [r2, i2[0]] : t3 >= o2 ? [i2[o2 - 1], n2] : [i2[t3 - 1], i2[t3]];
    }, l2.unknown = function(e27) {
      return arguments.length ? (t2 = e27, l2) : l2;
    }, l2.thresholds = function() {
      return i2.slice();
    }, l2.copy = function() {
      return e18().domain([r2, n2]).range(a2).unknown(t2);
    }, aO.apply(A_(l2), arguments);
  }, scaleThreshold: function e19() {
    var t2, r2 = [0.5], n2 = [0, 1], o2 = 1;
    function i2(e27) {
      return null != e27 && e27 <= e27 ? n2[VR(r2, e27, 0, o2)] : t2;
    }
    return i2.domain = function(e27) {
      return arguments.length ? (r2 = Array.from(e27), o2 = Math.min(r2.length, n2.length - 1), i2) : r2.slice();
    }, i2.range = function(e27) {
      return arguments.length ? (n2 = Array.from(e27), o2 = Math.min(r2.length, n2.length - 1), i2) : n2.slice();
    }, i2.invertExtent = function(e27) {
      var t3 = n2.indexOf(e27);
      return [r2[t3 - 1], r2[t3]];
    }, i2.unknown = function(e27) {
      return arguments.length ? (t2 = e27, i2) : t2;
    }, i2.copy = function() {
      return e19().domain(r2).range(n2).unknown(t2);
    }, aO.apply(i2, arguments);
  }, scaleTime: function() {
    return aO.apply(cB(LP, IP, bP, mP, pP, dP, sP, lP, iP, WP).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
  }, scaleUtc: function() {
    return aO.apply(cB(jP, DP, AP, MP, RP, EP, kP, xP, iP, HP).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
  }, scaleSequential: function e20() {
    var t2 = A_(dB()(c_));
    return t2.copy = function() {
      return fB(t2, e20());
    }, lO.apply(t2, arguments);
  }, scaleSequentialLog: function e21() {
    var t2 = V_(dB()).domain([1, 10]);
    return t2.copy = function() {
      return fB(t2, e21()).base(t2.base());
    }, lO.apply(t2, arguments);
  }, scaleSequentialPow: pB, scaleSequentialSqrt: function() {
    return pB.apply(null, arguments).exponent(0.5);
  }, scaleSequentialSymlog: function e22() {
    var t2 = $_(dB());
    return t2.copy = function() {
      return fB(t2, e22()).constant(t2.constant());
    }, lO.apply(t2, arguments);
  }, scaleSequentialQuantile: function e23() {
    var t2 = [], r2 = c_;
    function n2(e27) {
      if (null != e27 && !isNaN(e27 = +e27))
        return r2((VR(t2, e27, 1) - 1) / (t2.length - 1));
    }
    return n2.domain = function(e27) {
      if (!arguments.length)
        return t2.slice();
      t2 = [];
      for (let r3 of e27)
        null == r3 || isNaN(r3 = +r3) || t2.push(r3);
      return t2.sort(DR), n2;
    }, n2.interpolator = function(e27) {
      return arguments.length ? (r2 = e27, n2) : r2;
    }, n2.range = function() {
      return t2.map((e27, n3) => r2(n3 / (t2.length - 1)));
    }, n2.quantiles = function(e27) {
      return Array.from({ length: e27 + 1 }, (r3, n3) => nO(t2, n3 / e27));
    }, n2.copy = function() {
      return e23(r2).domain(t2);
    }, lO.apply(n2, arguments);
  }, scaleDiverging: function e24() {
    var t2 = A_(hB()(c_));
    return t2.copy = function() {
      return fB(t2, e24());
    }, lO.apply(t2, arguments);
  }, scaleDivergingLog: function e25() {
    var t2 = V_(hB()).domain([0.1, 1, 10]);
    return t2.copy = function() {
      return fB(t2, e25()).base(t2.base());
    }, lO.apply(t2, arguments);
  }, scaleDivergingPow: gB, scaleDivergingSqrt: function() {
    return gB.apply(null, arguments).exponent(0.5);
  }, scaleDivergingSymlog: function e26() {
    var t2 = $_(hB());
    return t2.copy = function() {
      return fB(t2, e26()).constant(t2.constant());
    }, lO.apply(t2, arguments);
  }, tickFormat: B_ });
  function mB(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return yB(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return yB(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return yB(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function yB(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function bB(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function CB(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? bB(Object(r2), true).forEach(function(t3) {
        xB(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : bB(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function xB(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function wB(e27, t2, r2) {
    return yu(e27) || yu(t2) ? r2 : Kl(t2) ? Fo(e27, t2, r2) : Z(t2) ? t2(e27) : r2;
  }
  function kB(e27, t2, r2, n2) {
    var o2 = DT(e27, function(e28) {
      return wB(e28, t2);
    });
    if ("number" === r2) {
      var i2 = o2.filter(function(e28) {
        return Ql(e28) || parseFloat(e28);
      });
      return i2.length ? [OT(i2), kT(i2)] : [1 / 0, -1 / 0];
    }
    return (n2 ? o2.filter(function(e28) {
      return !yu(e28);
    }) : o2).map(function(e28) {
      return Kl(e28) || e28 instanceof Date ? e28 : "";
    });
  }
  var SB = function(e27) {
    var t2, r2 = e27.type.displayName, n2 = e27.props, o2 = n2.stroke, i2 = n2.fill;
    switch (r2) {
      case "Line":
        t2 = o2;
        break;
      case "Area":
      case "Radar":
        t2 = o2 && "none" !== o2 ? o2 : i2;
        break;
      default:
        t2 = i2;
    }
    return t2;
  };
  var EB = function(e27) {
    var t2, r2 = e27.children, n2 = e27.formattedGraphicalItems, o2 = e27.legendWidth, i2 = e27.legendContent, a2 = sT(r2, mu.displayName);
    return a2 ? (t2 = a2.props && a2.props.payload ? a2.props && a2.props.payload : "children" === i2 ? (n2 || []).reduce(function(e28, t3) {
      var r3 = t3.item, n3 = t3.props, o3 = n3.sectors || n3.data || [];
      return e28.concat(o3.map(function(e29) {
        return { type: a2.props.iconType || r3.props.legendType, value: e29.name, color: e29.fill, payload: e29 };
      }));
    }, []) : (n2 || []).map(function(e28) {
      var t3 = e28.item, r3 = t3.props, n3 = r3.dataKey, o3 = r3.name, i3 = r3.legendType;
      return { inactive: r3.hide, dataKey: n3, type: a2.props.iconType || i3 || "square", color: SB(t3), value: o3 || n3, payload: t3.props };
    }), CB(CB(CB({}, a2.props), mu.getWithHeight(a2, o2)), {}, { payload: t2, item: a2 })) : null;
  };
  var TB = function(e27, t2, r2, n2, o2) {
    var i2 = t2.props.children, a2 = uT(i2, "ErrorBar").filter(function(e28) {
      return function(e29, t3, r3) {
        return !!yu(t3) || ("horizontal" === e29 ? "yAxis" === t3 : "vertical" === e29 || "x" === r3 ? "xAxis" === t3 : "y" !== r3 || "yAxis" === t3);
      }(n2, o2, e28.props.direction);
    });
    if (a2 && a2.length) {
      var l2 = a2.map(function(e28) {
        return e28.props.dataKey;
      });
      return e27.reduce(function(e28, t3) {
        var n3 = wB(t3, r2, 0), o3 = tr(n3) ? [OT(n3), kT(n3)] : [n3, n3], i3 = l2.reduce(function(e29, r3) {
          var n4 = wB(t3, r3, 0), i4 = o3[0] - Math.abs(tr(n4) ? n4[0] : n4), a3 = o3[1] + Math.abs(tr(n4) ? n4[1] : n4);
          return [Math.min(i4, e29[0]), Math.max(a3, e29[1])];
        }, [1 / 0, -1 / 0]);
        return [Math.min(i3[0], e28[0]), Math.max(i3[1], e28[1])];
      }, [1 / 0, -1 / 0]);
    }
    return null;
  };
  var RB = function(e27, t2, r2, n2, o2) {
    var i2 = t2.map(function(t3) {
      var i3 = t3.props.dataKey;
      return "number" === r2 && i3 && TB(e27, t3, i3, n2) || kB(e27, i3, r2, o2);
    });
    if ("number" === r2)
      return i2.reduce(function(e28, t3) {
        return [Math.min(e28[0], t3[0]), Math.max(e28[1], t3[1])];
      }, [1 / 0, -1 / 0]);
    var a2 = {};
    return i2.reduce(function(e28, t3) {
      for (var r3 = 0, n3 = t3.length; r3 < n3; r3++)
        a2[t3[r3]] || (a2[t3[r3]] = true, e28.push(t3[r3]));
      return e28;
    }, []);
  };
  var OB = function(e27, t2) {
    return "horizontal" === e27 && "xAxis" === t2 || "vertical" === e27 && "yAxis" === t2 || "centric" === e27 && "angleAxis" === t2 || "radial" === e27 && "radiusAxis" === t2;
  };
  var _B = function(e27, t2, r2) {
    var n2, o2, i2 = e27.map(function(e28) {
      return e28.coordinate === t2 && (n2 = true), e28.coordinate === r2 && (o2 = true), e28.coordinate;
    });
    return n2 || i2.push(t2), o2 || i2.push(r2), i2;
  };
  var PB = function(e27, t2, r2) {
    if (!e27)
      return null;
    var n2 = e27.scale, o2 = e27.duplicateDomain, i2 = e27.type, a2 = e27.range, l2 = "scaleBand" === e27.realScaleType ? n2.bandwidth() / 2 : 2, u2 = (t2 || r2) && "category" === i2 && n2.bandwidth ? n2.bandwidth() / l2 : 0;
    return u2 = "angleAxis" === e27.axisType ? 2 * Gl(a2[0] - a2[1]) * u2 : u2, t2 && (e27.ticks || e27.niceTicks) ? (e27.ticks || e27.niceTicks).map(function(e28) {
      var t3 = o2 ? o2.indexOf(e28) : e28;
      return { coordinate: n2(t3) + u2, value: e28, offset: u2 };
    }) : e27.isCategorical && e27.categoricalDomain ? e27.categoricalDomain.map(function(e28, t3) {
      return { coordinate: n2(e28) + u2, value: e28, index: t3, offset: u2 };
    }) : n2.ticks && !r2 ? n2.ticks(e27.tickCount).map(function(e28) {
      return { coordinate: n2(e28) + u2, value: e28, offset: u2 };
    }) : n2.domain().map(function(e28, t3) {
      return { coordinate: n2(e28) + u2, value: o2 ? o2[e28] : e28, index: t3, offset: u2 };
    });
  };
  var MB = function(e27, t2, r2) {
    var n2;
    return Z(r2) ? n2 = r2 : Z(t2) && (n2 = t2), Z(e27) || n2 ? function(t3, r3, o2, i2) {
      Z(e27) && e27(t3, r3, o2, i2), Z(n2) && n2(t3, r3, o2, i2);
    } : null;
  };
  var BB = function(e27, t2, r2) {
    var n2 = e27.scale, o2 = e27.type, i2 = e27.layout, a2 = e27.axisType;
    if ("auto" === n2)
      return "radial" === i2 && "radiusAxis" === a2 ? { scale: cO(), realScaleType: "band" } : "radial" === i2 && "angleAxis" === a2 ? { scale: N_(), realScaleType: "linear" } : "category" === o2 && t2 && (t2.indexOf("LineChart") >= 0 || t2.indexOf("AreaChart") >= 0 || t2.indexOf("ComposedChart") >= 0 && !r2) ? { scale: fO(), realScaleType: "point" } : "category" === o2 ? { scale: cO(), realScaleType: "band" } : { scale: N_(), realScaleType: "linear" };
    if (Yl(n2)) {
      var l2 = "scale".concat(ga(n2));
      return { scale: (vB[l2] || fO)(), realScaleType: vB[l2] ? l2 : "point" };
    }
    return Z(n2) ? { scale: n2 } : { scale: fO(), realScaleType: "point" };
  };
  var AB = function(e27) {
    var t2 = e27.domain();
    if (t2 && !(t2.length <= 2)) {
      var r2 = t2.length, n2 = e27.range(), o2 = Math.min(n2[0], n2[1]) - 1e-4, i2 = Math.max(n2[0], n2[1]) + 1e-4, a2 = e27(t2[0]), l2 = e27(t2[r2 - 1]);
      (a2 < o2 || a2 > i2 || l2 < o2 || l2 > i2) && e27.domain([t2[0], t2[r2 - 1]]);
    }
  };
  var NB = { sign: function(e27) {
    var t2 = e27.length;
    if (!(t2 <= 0))
      for (var r2 = 0, n2 = e27[0].length; r2 < n2; ++r2)
        for (var o2 = 0, i2 = 0, a2 = 0; a2 < t2; ++a2) {
          var l2 = Wl(e27[a2][r2][1]) ? e27[a2][r2][0] : e27[a2][r2][1];
          l2 >= 0 ? (e27[a2][r2][0] = o2, e27[a2][r2][1] = o2 + l2, o2 = e27[a2][r2][1]) : (e27[a2][r2][0] = i2, e27[a2][r2][1] = i2 + l2, i2 = e27[a2][r2][1]);
        }
  }, expand: function(e27, t2) {
    if ((n2 = e27.length) > 0) {
      for (var r2, n2, o2, i2 = 0, a2 = e27[0].length; i2 < a2; ++i2) {
        for (o2 = r2 = 0; r2 < n2; ++r2)
          o2 += e27[r2][i2][1] || 0;
        if (o2)
          for (r2 = 0; r2 < n2; ++r2)
            e27[r2][i2][1] /= o2;
      }
      pl(e27, t2);
    }
  }, none: pl, silhouette: function(e27, t2) {
    if ((r2 = e27.length) > 0) {
      for (var r2, n2 = 0, o2 = e27[t2[0]], i2 = o2.length; n2 < i2; ++n2) {
        for (var a2 = 0, l2 = 0; a2 < r2; ++a2)
          l2 += e27[a2][n2][1] || 0;
        o2[n2][1] += o2[n2][0] = -l2 / 2;
      }
      pl(e27, t2);
    }
  }, wiggle: function(e27, t2) {
    if ((o2 = e27.length) > 0 && (n2 = (r2 = e27[t2[0]]).length) > 0) {
      for (var r2, n2, o2, i2 = 0, a2 = 1; a2 < n2; ++a2) {
        for (var l2 = 0, u2 = 0, s2 = 0; l2 < o2; ++l2) {
          for (var c2 = e27[t2[l2]], d2 = c2[a2][1] || 0, f2 = (d2 - (c2[a2 - 1][1] || 0)) / 2, p2 = 0; p2 < l2; ++p2) {
            var h2 = e27[t2[p2]];
            f2 += (h2[a2][1] || 0) - (h2[a2 - 1][1] || 0);
          }
          u2 += d2, s2 += f2 * d2;
        }
        r2[a2 - 1][1] += r2[a2 - 1][0] = i2, u2 && (i2 -= s2 / u2);
      }
      r2[a2 - 1][1] += r2[a2 - 1][0] = i2, pl(e27, t2);
    }
  }, positive: function(e27) {
    var t2 = e27.length;
    if (!(t2 <= 0))
      for (var r2 = 0, n2 = e27[0].length; r2 < n2; ++r2)
        for (var o2 = 0, i2 = 0; i2 < t2; ++i2) {
          var a2 = Wl(e27[i2][r2][1]) ? e27[i2][r2][0] : e27[i2][r2][1];
          a2 >= 0 ? (e27[i2][r2][0] = o2, e27[i2][r2][1] = o2 + a2, o2 = e27[i2][r2][1]) : (e27[i2][r2][0] = 0, e27[i2][r2][1] = 0);
        }
  } };
  var jB = function(e27, t2, r2) {
    var n2 = t2.map(function(e28) {
      return e28.props.dataKey;
    }), o2 = function() {
      var e28 = xa([]), t3 = hl, r3 = pl, n3 = gl;
      function o3(o4) {
        var i2, a2, l2 = Array.from(e28.apply(this, arguments), vl), u2 = l2.length, s2 = -1;
        for (const e29 of o4)
          for (i2 = 0, ++s2; i2 < u2; ++i2)
            (l2[i2][s2] = [0, +n3(e29, l2[i2].key, s2, o4)]).data = e29;
        for (i2 = 0, a2 = Ra(t3(l2)); i2 < u2; ++i2)
          l2[a2[i2]].index = i2;
        return r3(l2, a2), l2;
      }
      return o3.keys = function(t4) {
        return arguments.length ? (e28 = "function" == typeof t4 ? t4 : xa(Array.from(t4)), o3) : e28;
      }, o3.value = function(e29) {
        return arguments.length ? (n3 = "function" == typeof e29 ? e29 : xa(+e29), o3) : n3;
      }, o3.order = function(e29) {
        return arguments.length ? (t3 = null == e29 ? hl : "function" == typeof e29 ? e29 : xa(Array.from(e29)), o3) : t3;
      }, o3.offset = function(e29) {
        return arguments.length ? (r3 = null == e29 ? pl : e29, o3) : r3;
      }, o3;
    }().keys(n2).value(function(e28, t3) {
      return +wB(e28, t3, 0);
    }).order(hl).offset(NB[r2]);
    return o2(e27);
  };
  var DB = function(e27, t2) {
    var r2 = t2.realScaleType, n2 = t2.type, o2 = t2.tickCount, i2 = t2.originalDomain, a2 = t2.allowDecimals, l2 = r2 || t2.scale;
    if ("auto" !== l2 && "linear" !== l2)
      return null;
    if (o2 && "number" === n2 && i2 && ("auto" === i2[0] || "auto" === i2[1])) {
      var u2 = e27.domain();
      if (!u2.length)
        return null;
      var s2 = NR(u2, o2, a2);
      return e27.domain(function(e28, t3) {
        return "number" === t3 ? [OT(e28), kT(e28)] : e28;
      }(s2, n2)), { niceTicks: s2 };
    }
    if (o2 && "number" === n2) {
      var c2 = e27.domain();
      return { niceTicks: jR(c2, o2, a2) };
    }
    return null;
  };
  var LB = function(e27) {
    var t2 = e27.axis, r2 = e27.ticks, n2 = e27.bandSize, o2 = e27.entry, i2 = e27.index, a2 = e27.dataKey;
    if ("category" === t2.type) {
      if (!t2.allowDuplicatedCategory && t2.dataKey && !yu(o2[t2.dataKey])) {
        var l2 = nu(r2, "value", o2[t2.dataKey]);
        if (l2)
          return l2.coordinate + n2 / 2;
      }
      return r2[i2] ? r2[i2].coordinate + n2 / 2 : null;
    }
    var u2 = wB(o2, yu(a2) ? t2.dataKey : a2);
    return yu(u2) ? null : t2.scale(u2);
  };
  var IB = function(e27) {
    var t2 = e27.axis, r2 = e27.ticks, n2 = e27.offset, o2 = e27.bandSize, i2 = e27.entry, a2 = e27.index;
    if ("category" === t2.type)
      return r2[a2] ? r2[a2].coordinate + n2 : null;
    var l2 = wB(i2, t2.dataKey, t2.domain[a2]);
    return yu(l2) ? null : t2.scale(l2) - o2 / 2 + n2;
  };
  var zB = function(e27, t2, r2) {
    return Object.keys(e27).reduce(function(n2, o2) {
      var i2 = e27[o2].stackedData.reduce(function(e28, n3) {
        var o3 = n3.slice(t2, r2 + 1).reduce(function(e29, t3) {
          return [OT(t3.concat([e29[0]]).filter(Ql)), kT(t3.concat([e29[1]]).filter(Ql))];
        }, [1 / 0, -1 / 0]);
        return [Math.min(e28[0], o3[0]), Math.max(e28[1], o3[1])];
      }, [1 / 0, -1 / 0]);
      return [Math.min(i2[0], n2[0]), Math.max(i2[1], n2[1])];
    }, [1 / 0, -1 / 0]).map(function(e28) {
      return e28 === 1 / 0 || e28 === -1 / 0 ? 0 : e28;
    });
  };
  var FB = /^dataMin[\s]*-[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
  var UB = /^dataMax[\s]*\+[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
  var VB = function(e27, t2, r2) {
    if (Z(e27))
      return e27(t2, r2);
    if (!tr(e27))
      return t2;
    var n2 = [];
    if (Ql(e27[0]))
      n2[0] = r2 ? e27[0] : Math.min(e27[0], t2[0]);
    else if (FB.test(e27[0])) {
      var o2 = +FB.exec(e27[0])[1];
      n2[0] = t2[0] - o2;
    } else
      Z(e27[0]) ? n2[0] = e27[0](t2[0]) : n2[0] = t2[0];
    if (Ql(e27[1]))
      n2[1] = r2 ? e27[1] : Math.max(e27[1], t2[1]);
    else if (UB.test(e27[1])) {
      var i2 = +UB.exec(e27[1])[1];
      n2[1] = t2[1] + i2;
    } else
      Z(e27[1]) ? n2[1] = e27[1](t2[1]) : n2[1] = t2[1];
    return n2;
  };
  var WB = function(e27, t2, r2) {
    if (e27 && e27.scale && e27.scale.bandwidth) {
      var n2 = e27.scale.bandwidth();
      if (!r2 || n2 > 0)
        return n2;
    }
    if (e27 && t2 && t2.length >= 2) {
      for (var o2 = Ew(t2, function(e28) {
        return e28.coordinate;
      }), i2 = 1 / 0, a2 = 1, l2 = o2.length; a2 < l2; a2++) {
        var u2 = o2[a2], s2 = o2[a2 - 1];
        i2 = Math.min((u2.coordinate || 0) - (s2.coordinate || 0), i2);
      }
      return i2 === 1 / 0 ? 0 : i2;
    }
    return r2 ? void 0 : 0;
  };
  var HB = function(e27, t2, r2) {
    return e27 && e27.length ? vT(e27, Fo(r2, "type.defaultProps.domain")) ? t2 : e27 : t2;
  };
  var $B = function(e27, t2) {
    var r2 = e27.props, n2 = r2.dataKey, o2 = r2.name, i2 = r2.unit, a2 = r2.formatter, l2 = r2.tooltipType, u2 = r2.chartType;
    return CB(CB({}, E(e27)), {}, { dataKey: n2, unit: i2, formatter: a2, name: o2 || n2, color: SB(e27), value: wB(t2, n2), type: l2, payload: t2, chartType: u2 });
  };
  function qB(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function YB(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? qB(Object(r2), true).forEach(function(t3) {
        GB(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : qB(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function GB(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function XB(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || function(e28, t3) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return QB(e28, t3);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return QB(e28, t3);
    }(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function QB(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  var KB = Math.PI / 180;
  var ZB = function(e27) {
    return 180 * e27 / Math.PI;
  };
  var JB = function(e27, t2, r2, n2) {
    return { x: e27 + Math.cos(-KB * n2) * r2, y: t2 + Math.sin(-KB * n2) * r2 };
  };
  var eA = function(e27, t2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : { top: 0, right: 0, bottom: 0, left: 0 };
    return Math.min(Math.abs(e27 - (r2.left || 0) - (r2.right || 0)), Math.abs(t2 - (r2.top || 0) - (r2.bottom || 0))) / 2;
  };
  var tA = function(e27, t2) {
    var r2 = e27.x, n2 = e27.y, o2 = t2.cx, i2 = t2.cy, a2 = function(e28, t3) {
      var r3 = e28.x, n3 = e28.y, o3 = t3.x, i3 = t3.y;
      return Math.sqrt(Math.pow(r3 - o3, 2) + Math.pow(n3 - i3, 2));
    }({ x: r2, y: n2 }, { x: o2, y: i2 });
    if (a2 <= 0)
      return { radius: a2 };
    var l2 = (r2 - o2) / a2, u2 = Math.acos(l2);
    return n2 > i2 && (u2 = 2 * Math.PI - u2), { radius: a2, angle: ZB(u2), angleInRadian: u2 };
  };
  var rA = function(e27, t2) {
    var r2 = t2.startAngle, n2 = t2.endAngle, o2 = Math.floor(r2 / 360), i2 = Math.floor(n2 / 360);
    return e27 + 360 * Math.min(o2, i2);
  };
  var nA = function(e27, t2) {
    var r2 = e27.x, n2 = e27.y, o2 = tA({ x: r2, y: n2 }, t2), i2 = o2.radius, a2 = o2.angle, l2 = t2.innerRadius, u2 = t2.outerRadius;
    if (i2 < l2 || i2 > u2)
      return false;
    if (0 === i2)
      return true;
    var s2, c2 = function(e28) {
      var t3 = e28.startAngle, r3 = e28.endAngle, n3 = Math.floor(t3 / 360), o3 = Math.floor(r3 / 360), i3 = Math.min(n3, o3);
      return { startAngle: t3 - 360 * i3, endAngle: r3 - 360 * i3 };
    }(t2), d2 = c2.startAngle, f2 = c2.endAngle, p2 = a2;
    if (d2 <= f2) {
      for (; p2 > f2; )
        p2 -= 360;
      for (; p2 < d2; )
        p2 += 360;
      s2 = p2 >= d2 && p2 <= f2;
    } else {
      for (; p2 > d2; )
        p2 -= 360;
      for (; p2 < f2; )
        p2 += 360;
      s2 = p2 >= f2 && p2 <= d2;
    }
    return s2 ? YB(YB({}, t2), {}, { radius: i2, angle: rA(p2, t2) }) : null;
  };
  function oA(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return iA(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return iA(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return iA(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function iA(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function aA(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function lA(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? aA(Object(r2), true).forEach(function(t3) {
        uA(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : aA(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function uA(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function sA() {
    return sA = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, sA.apply(this, arguments);
  }
  var cA = function(e27, r2, n2) {
    var o2, i2, a2 = e27.position, l2 = e27.viewBox, u2 = e27.offset, s2 = e27.className, c2 = l2, d2 = c2.cx, f2 = c2.cy, p2 = c2.innerRadius, h2 = c2.outerRadius, g2 = c2.startAngle, v2 = c2.endAngle, m2 = c2.clockWise, y2 = (p2 + h2) / 2, C2 = function(e28, t2) {
      return Gl(t2 - e28) * Math.min(Math.abs(t2 - e28), 360);
    }(g2, v2), x2 = C2 >= 0 ? 1 : -1;
    "insideStart" === a2 ? (o2 = g2 + x2 * u2, i2 = m2) : "insideEnd" === a2 ? (o2 = v2 - x2 * u2, i2 = !m2) : "end" === a2 && (o2 = v2 + x2 * u2, i2 = m2), i2 = C2 <= 0 ? i2 : !i2;
    var w2 = JB(d2, f2, y2, o2), k2 = JB(d2, f2, y2, o2 + 359 * (i2 ? 1 : -1)), S2 = "M".concat(w2.x, ",").concat(w2.y, "\n    A").concat(y2, ",").concat(y2, ",0,1,").concat(i2 ? 0 : 1, ",\n    ").concat(k2.x, ",").concat(k2.y), E2 = yu(e27.id) ? Jl("recharts-radial-line-") : e27.id;
    return import_react.default.createElement("text", sA({}, n2, { dominantBaseline: "central", className: b("recharts-radial-bar-label", s2) }), import_react.default.createElement("defs", null, import_react.default.createElement("path", { id: E2, d: S2 })), import_react.default.createElement("textPath", { xlinkHref: "#".concat(E2) }, r2));
  };
  function dA(e27) {
    var n2, o2 = e27.viewBox, a2 = e27.position, l2 = e27.value, u2 = e27.children, s2 = e27.content, c2 = e27.className, d2 = void 0 === c2 ? "" : c2, f2 = e27.textBreakAll;
    if (!o2 || yu(l2) && yu(u2) && !(0, import_react.isValidElement)(s2) && !Z(s2))
      return null;
    if ((0, import_react.isValidElement)(s2))
      return (0, import_react.cloneElement)(s2, e27);
    if (Z(s2)) {
      if ((0, import_react.isValidElement)(n2 = (0, import_react.createElement)(s2, e27)))
        return n2;
    } else
      n2 = function(e28) {
        var t2 = e28.value, r2 = e28.formatter, n3 = yu(e28.children) ? t2 : e28.children;
        return Z(r2) ? r2(n3) : n3;
      }(e27);
    var h2 = function(e28) {
      return Ql(e28.cx);
    }(o2), g2 = E(e27, true);
    if (h2 && ("insideStart" === a2 || "insideEnd" === a2 || "end" === a2))
      return cA(e27, n2, g2);
    var v2 = h2 ? function(e28) {
      var t2 = e28.viewBox, r2 = e28.offset, n3 = e28.position, o3 = t2, i2 = o3.cx, a3 = o3.cy, l3 = o3.innerRadius, u3 = o3.outerRadius, s3 = (o3.startAngle + o3.endAngle) / 2;
      if ("outside" === n3) {
        var c3 = JB(i2, a3, u3 + r2, s3), d3 = c3.x;
        return { x: d3, y: c3.y, textAnchor: d3 >= i2 ? "start" : "end", verticalAnchor: "middle" };
      }
      if ("center" === n3)
        return { x: i2, y: a3, textAnchor: "middle", verticalAnchor: "middle" };
      if ("centerTop" === n3)
        return { x: i2, y: a3, textAnchor: "middle", verticalAnchor: "start" };
      if ("centerBottom" === n3)
        return { x: i2, y: a3, textAnchor: "middle", verticalAnchor: "end" };
      var f3 = JB(i2, a3, (l3 + u3) / 2, s3);
      return { x: f3.x, y: f3.y, textAnchor: "middle", verticalAnchor: "middle" };
    }(e27) : function(e28) {
      var t2 = e28.viewBox, r2 = e28.parentViewBox, n3 = e28.offset, o3 = e28.position, i2 = t2, a3 = i2.x, l3 = i2.y, u3 = i2.width, s3 = i2.height, c3 = s3 >= 0 ? 1 : -1, d3 = c3 * n3, f3 = c3 > 0 ? "end" : "start", p2 = c3 > 0 ? "start" : "end", h3 = u3 >= 0 ? 1 : -1, g3 = h3 * n3, v3 = h3 > 0 ? "end" : "start", m2 = h3 > 0 ? "start" : "end";
      if ("top" === o3)
        return lA(lA({}, { x: a3 + u3 / 2, y: l3 - c3 * n3, textAnchor: "middle", verticalAnchor: f3 }), r2 ? { height: Math.max(l3 - r2.y, 0), width: u3 } : {});
      if ("bottom" === o3)
        return lA(lA({}, { x: a3 + u3 / 2, y: l3 + s3 + d3, textAnchor: "middle", verticalAnchor: p2 }), r2 ? { height: Math.max(r2.y + r2.height - (l3 + s3), 0), width: u3 } : {});
      if ("left" === o3) {
        var y2 = { x: a3 - g3, y: l3 + s3 / 2, textAnchor: v3, verticalAnchor: "middle" };
        return lA(lA({}, y2), r2 ? { width: Math.max(y2.x - r2.x, 0), height: s3 } : {});
      }
      if ("right" === o3) {
        var b2 = { x: a3 + u3 + g3, y: l3 + s3 / 2, textAnchor: m2, verticalAnchor: "middle" };
        return lA(lA({}, b2), r2 ? { width: Math.max(r2.x + r2.width - b2.x, 0), height: s3 } : {});
      }
      var x2 = r2 ? { width: u3, height: s3 } : {};
      return "insideLeft" === o3 ? lA({ x: a3 + g3, y: l3 + s3 / 2, textAnchor: m2, verticalAnchor: "middle" }, x2) : "insideRight" === o3 ? lA({ x: a3 + u3 - g3, y: l3 + s3 / 2, textAnchor: v3, verticalAnchor: "middle" }, x2) : "insideTop" === o3 ? lA({ x: a3 + u3 / 2, y: l3 + d3, textAnchor: "middle", verticalAnchor: p2 }, x2) : "insideBottom" === o3 ? lA({ x: a3 + u3 / 2, y: l3 + s3 - d3, textAnchor: "middle", verticalAnchor: f3 }, x2) : "insideTopLeft" === o3 ? lA({ x: a3 + g3, y: l3 + d3, textAnchor: m2, verticalAnchor: p2 }, x2) : "insideTopRight" === o3 ? lA({ x: a3 + u3 - g3, y: l3 + d3, textAnchor: v3, verticalAnchor: p2 }, x2) : "insideBottomLeft" === o3 ? lA({ x: a3 + g3, y: l3 + s3 - d3, textAnchor: m2, verticalAnchor: f3 }, x2) : "insideBottomRight" === o3 ? lA({ x: a3 + u3 - g3, y: l3 + s3 - d3, textAnchor: v3, verticalAnchor: f3 }, x2) : C(o3) && (Ql(o3.x) || Xl(o3.x)) && (Ql(o3.y) || Xl(o3.y)) ? lA({ x: a3 + eu(o3.x, u3), y: l3 + eu(o3.y, s3), textAnchor: "end", verticalAnchor: "end" }, x2) : lA({ x: a3 + u3 / 2, y: l3 + s3 / 2, textAnchor: "middle", verticalAnchor: "middle" }, x2);
    }(e27);
    return import_react.default.createElement(PE, sA({ className: b("recharts-label", d2) }, g2, v2, { breakAll: f2 }), n2);
  }
  dA.displayName = "Label", dA.defaultProps = { offset: 5 };
  var fA = function(e27) {
    var t2 = e27.cx, r2 = e27.cy, n2 = e27.angle, o2 = e27.startAngle, i2 = e27.endAngle, a2 = e27.r, l2 = e27.radius, u2 = e27.innerRadius, s2 = e27.outerRadius, c2 = e27.x, d2 = e27.y, f2 = e27.top, p2 = e27.left, h2 = e27.width, g2 = e27.height, v2 = e27.clockWise, m2 = e27.labelViewBox;
    if (m2)
      return m2;
    if (Ql(h2) && Ql(g2)) {
      if (Ql(c2) && Ql(d2))
        return { x: c2, y: d2, width: h2, height: g2 };
      if (Ql(f2) && Ql(p2))
        return { x: f2, y: p2, width: h2, height: g2 };
    }
    return Ql(c2) && Ql(d2) ? { x: c2, y: d2, width: 0, height: 0 } : Ql(t2) && Ql(r2) ? { cx: t2, cy: r2, startAngle: o2 || n2 || 0, endAngle: i2 || n2 || 0, innerRadius: u2 || 0, outerRadius: s2 || l2 || a2 || 0, clockWise: v2 } : e27.viewBox ? e27.viewBox : {};
  };
  var pA = function(e27, n2) {
    return e27 ? true === e27 ? import_react.default.createElement(dA, { key: "label-implicit", viewBox: n2 }) : Kl(e27) ? import_react.default.createElement(dA, { key: "label-implicit", viewBox: n2, value: e27 }) : (0, import_react.isValidElement)(e27) ? e27.type === dA ? (0, import_react.cloneElement)(e27, { key: "label-implicit", viewBox: n2 }) : import_react.default.createElement(dA, { key: "label-implicit", content: e27, viewBox: n2 }) : Z(e27) ? import_react.default.createElement(dA, { key: "label-implicit", content: e27, viewBox: n2 }) : C(e27) ? import_react.default.createElement(dA, sA({ viewBox: n2 }, e27, { key: "label-implicit" })) : null : null;
  };
  dA.parseViewBox = fA, dA.renderCallByParent = function(e27, t2) {
    var r2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
    if (!e27 || !e27.children && r2 && !e27.label)
      return null;
    var n2 = e27.children, o2 = fA(e27), a2 = uT(n2, dA.displayName).map(function(e28, r3) {
      return (0, import_react.cloneElement)(e28, { viewBox: t2 || o2, key: "label-".concat(r3) });
    });
    if (!r2)
      return a2;
    var l2 = pA(e27.label, t2 || o2);
    return [l2].concat(oA(a2));
  };
  var hA = function(e27) {
    var t2 = null == e27 ? 0 : e27.length;
    return t2 ? e27[t2 - 1] : void 0;
  };
  function gA(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return vA(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return vA(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return vA(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function vA(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function mA() {
    return mA = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, mA.apply(this, arguments);
  }
  function yA(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function bA(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? yA(Object(r2), true).forEach(function(t3) {
        CA(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : yA(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function CA(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function xA(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  var wA = { valueAccessor: function(e27) {
    return tr(e27.value) ? hA(e27.value) : e27.value;
  } };
  function kA(e27) {
    var r2 = e27.data, n2 = e27.valueAccessor, o2 = e27.dataKey, i2 = e27.clockWise, a2 = e27.id, l2 = e27.textBreakAll, u2 = xA(e27, ["data", "valueAccessor", "dataKey", "clockWise", "id", "textBreakAll"]);
    return r2 && r2.length ? import_react.default.createElement(A, { className: "recharts-label-list" }, r2.map(function(e28, r3) {
      var s2 = yu(o2) ? n2(e28, r3) : wB(e28 && e28.payload, o2), c2 = yu(a2) ? {} : { id: "".concat(a2, "-").concat(r3) };
      return import_react.default.createElement(dA, mA({}, E(e28, true), u2, c2, { parentViewBox: e28.parentViewBox, index: r3, value: s2, textBreakAll: l2, viewBox: dA.parseViewBox(yu(i2) ? e28 : bA(bA({}, e28), {}, { clockWise: i2 })), key: "label-".concat(r3) }));
    })) : null;
  }
  function SA(e27, r2) {
    return e27 ? true === e27 ? import_react.default.createElement(kA, { key: "labelList-implicit", data: r2 }) : import_react.default.isValidElement(e27) || Z(e27) ? import_react.default.createElement(kA, { key: "labelList-implicit", data: r2, content: e27 }) : C(e27) ? import_react.default.createElement(kA, mA({ data: r2 }, e27, { key: "labelList-implicit" })) : null : null;
  }
  function EA(e27) {
    return EA = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, EA(e27);
  }
  function TA() {
    return TA = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, TA.apply(this, arguments);
  }
  function RA(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function OA(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function _A(e27, t2) {
    return _A = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, _A(e27, t2);
  }
  function PA(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = BA(e27);
      if (t2) {
        var o2 = BA(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return MA(this, r2);
    };
  }
  function MA(e27, t2) {
    return !t2 || "object" !== EA(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function BA(e27) {
    return BA = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, BA(e27);
  }
  kA.displayName = "LabelList", kA.renderCallByParent = function(e27, t2) {
    var r2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
    if (!e27 || !e27.children && r2 && !e27.label)
      return null;
    var n2 = e27.children, o2 = uT(n2, kA.displayName).map(function(e28, r3) {
      return (0, import_react.cloneElement)(e28, { data: t2, key: "labelList-".concat(r3) });
    });
    if (!r2)
      return o2;
    var a2 = SA(e27.label, t2);
    return [a2].concat(gA(o2));
  }, kA.defaultProps = wA;
  var AA = function(e27) {
    var t2 = e27.cx, r2 = e27.cy, n2 = e27.radius, o2 = e27.angle, i2 = e27.sign, a2 = e27.isExternal, l2 = e27.cornerRadius, u2 = e27.cornerIsExternal, s2 = l2 * (a2 ? 1 : -1) + n2, c2 = Math.asin(l2 / s2) / KB, d2 = u2 ? o2 : o2 + i2 * c2, f2 = u2 ? o2 - i2 * c2 : o2;
    return { center: JB(t2, r2, s2, d2), circleTangency: JB(t2, r2, n2, d2), lineTangency: JB(t2, r2, s2 * Math.cos(c2 * KB), f2), theta: c2 };
  };
  var NA = function(e27) {
    var t2 = e27.cx, r2 = e27.cy, n2 = e27.innerRadius, o2 = e27.outerRadius, i2 = e27.startAngle, a2 = function(e28, t3) {
      return Gl(t3 - e28) * Math.min(Math.abs(t3 - e28), 359.999);
    }(i2, e27.endAngle), l2 = i2 + a2, u2 = JB(t2, r2, o2, i2), s2 = JB(t2, r2, o2, l2), c2 = "M ".concat(u2.x, ",").concat(u2.y, "\n    A ").concat(o2, ",").concat(o2, ",0,\n    ").concat(+(Math.abs(a2) > 180), ",").concat(+(i2 > l2), ",\n    ").concat(s2.x, ",").concat(s2.y, "\n  ");
    if (n2 > 0) {
      var d2 = JB(t2, r2, n2, i2), f2 = JB(t2, r2, n2, l2);
      c2 += "L ".concat(f2.x, ",").concat(f2.y, "\n            A ").concat(n2, ",").concat(n2, ",0,\n            ").concat(+(Math.abs(a2) > 180), ",").concat(+(i2 <= l2), ",\n            ").concat(d2.x, ",").concat(d2.y, " Z");
    } else
      c2 += "L ".concat(t2, ",").concat(r2, " Z");
    return c2;
  };
  var jA = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && _A(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = PA(l2);
    function l2() {
      return RA(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "render", value: function() {
      var e28 = this.props, r3 = e28.cx, n2 = e28.cy, o3 = e28.innerRadius, i3 = e28.outerRadius, a3 = e28.cornerRadius, l3 = e28.forceCornerRadius, u2 = e28.cornerIsExternal, s2 = e28.startAngle, c2 = e28.endAngle, d2 = e28.className;
      if (i3 < o3 || s2 === c2)
        return null;
      var f2, p2 = b("recharts-sector", d2), h2 = i3 - o3, g2 = eu(a3, h2, 0, true);
      return f2 = g2 > 0 && Math.abs(s2 - c2) < 360 ? function(e29) {
        var t2 = e29.cx, r4 = e29.cy, n3 = e29.innerRadius, o4 = e29.outerRadius, i4 = e29.cornerRadius, a4 = e29.forceCornerRadius, l4 = e29.cornerIsExternal, u3 = e29.startAngle, s3 = e29.endAngle, c3 = Gl(s3 - u3), d3 = AA({ cx: t2, cy: r4, radius: o4, angle: u3, sign: c3, cornerRadius: i4, cornerIsExternal: l4 }), f3 = d3.circleTangency, p3 = d3.lineTangency, h3 = d3.theta, g3 = AA({ cx: t2, cy: r4, radius: o4, angle: s3, sign: -c3, cornerRadius: i4, cornerIsExternal: l4 }), v2 = g3.circleTangency, m2 = g3.lineTangency, y2 = g3.theta, b2 = l4 ? Math.abs(u3 - s3) : Math.abs(u3 - s3) - h3 - y2;
        if (b2 < 0)
          return a4 ? "M ".concat(p3.x, ",").concat(p3.y, "\n        a").concat(i4, ",").concat(i4, ",0,0,1,").concat(2 * i4, ",0\n        a").concat(i4, ",").concat(i4, ",0,0,1,").concat(2 * -i4, ",0\n      ") : NA({ cx: t2, cy: r4, innerRadius: n3, outerRadius: o4, startAngle: u3, endAngle: s3 });
        var C2 = "M ".concat(p3.x, ",").concat(p3.y, "\n    A").concat(i4, ",").concat(i4, ",0,0,").concat(+(c3 < 0), ",").concat(f3.x, ",").concat(f3.y, "\n    A").concat(o4, ",").concat(o4, ",0,").concat(+(b2 > 180), ",").concat(+(c3 < 0), ",").concat(v2.x, ",").concat(v2.y, "\n    A").concat(i4, ",").concat(i4, ",0,0,").concat(+(c3 < 0), ",").concat(m2.x, ",").concat(m2.y, "\n  ");
        if (n3 > 0) {
          var x2 = AA({ cx: t2, cy: r4, radius: n3, angle: u3, sign: c3, isExternal: true, cornerRadius: i4, cornerIsExternal: l4 }), w2 = x2.circleTangency, k2 = x2.lineTangency, S2 = x2.theta, E2 = AA({ cx: t2, cy: r4, radius: n3, angle: s3, sign: -c3, isExternal: true, cornerRadius: i4, cornerIsExternal: l4 }), T2 = E2.circleTangency, R2 = E2.lineTangency, O2 = E2.theta, _2 = l4 ? Math.abs(u3 - s3) : Math.abs(u3 - s3) - S2 - O2;
          if (_2 < 0 && 0 === i4)
            return "".concat(C2, "L").concat(t2, ",").concat(r4, "Z");
          C2 += "L".concat(R2.x, ",").concat(R2.y, "\n      A").concat(i4, ",").concat(i4, ",0,0,").concat(+(c3 < 0), ",").concat(T2.x, ",").concat(T2.y, "\n      A").concat(n3, ",").concat(n3, ",0,").concat(+(_2 > 180), ",").concat(+(c3 > 0), ",").concat(w2.x, ",").concat(w2.y, "\n      A").concat(i4, ",").concat(i4, ",0,0,").concat(+(c3 < 0), ",").concat(k2.x, ",").concat(k2.y, "Z");
        } else
          C2 += "L".concat(t2, ",").concat(r4, "Z");
        return C2;
      }({ cx: r3, cy: n2, innerRadius: o3, outerRadius: i3, cornerRadius: Math.min(g2, h2 / 2), forceCornerRadius: l3, cornerIsExternal: u2, startAngle: s2, endAngle: c2 }) : NA({ cx: r3, cy: n2, innerRadius: o3, outerRadius: i3, startAngle: s2, endAngle: c2 }), import_react.default.createElement("path", TA({}, E(this.props, true), { className: p2, d: f2 }));
    } }], o2 && OA(r2.prototype, o2), i2 && OA(r2, i2), l2;
  }();
  function DA(e27) {
    return DA = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, DA(e27);
  }
  function LA() {
    return LA = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, LA.apply(this, arguments);
  }
  function IA(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function zA(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? IA(Object(r2), true).forEach(function(t3) {
        FA(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : IA(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function FA(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function UA(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function VA(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function WA(e27, t2) {
    return WA = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, WA(e27, t2);
  }
  function HA(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = qA(e27);
      if (t2) {
        var o2 = qA(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return $A(this, r2);
    };
  }
  function $A(e27, t2) {
    return !t2 || "object" !== DA(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function qA(e27) {
    return qA = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, qA(e27);
  }
  jA.defaultProps = { cx: 0, cy: 0, innerRadius: 0, outerRadius: 0, startAngle: 0, endAngle: 0, cornerRadius: 0, forceCornerRadius: false, cornerIsExternal: false };
  var YA = { curveBasisClosed: function(e27) {
    return new el(e27);
  }, curveBasisOpen: function(e27) {
    return new tl(e27);
  }, curveBasis: function(e27) {
    return new Ja(e27);
  }, curveLinearClosed: function(e27) {
    return new rl(e27);
  }, curveLinear: _a, curveMonotoneX: function(e27) {
    return new ll(e27);
  }, curveMonotoneY: function(e27) {
    return new ul(e27);
  }, curveNatural: function(e27) {
    return new cl(e27);
  }, curveStep: function(e27) {
    return new fl(e27, 0.5);
  }, curveStepAfter: function(e27) {
    return new fl(e27, 1);
  }, curveStepBefore: function(e27) {
    return new fl(e27, 0);
  } };
  var GA = function(e27) {
    return e27.x === +e27.x && e27.y === +e27.y;
  };
  var XA = function(e27) {
    return e27.x;
  };
  var QA = function(e27) {
    return e27.y;
  };
  var KA = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && WA(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = HA(l2);
    function l2() {
      return UA(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "getPath", value: function() {
      var e28, t2 = this.props, r3 = t2.type, n2 = t2.points, o3 = t2.baseLine, i3 = t2.layout, a3 = t2.connectNulls, l3 = function(e29, t3) {
        if (Z(e29))
          return e29;
        var r4 = "curve".concat(ga(e29));
        return "curveMonotone" === r4 && t3 ? YA["".concat(r4).concat("vertical" === t3 ? "Y" : "X")] : YA[r4] || _a;
      }(r3, i3), u2 = a3 ? n2.filter(function(e29) {
        return GA(e29);
      }) : n2;
      if (tr(o3)) {
        var s2 = a3 ? o3.filter(function(e29) {
          return GA(e29);
        }) : o3, c2 = u2.map(function(e29, t3) {
          return zA(zA({}, e29), {}, { base: s2[t3] });
        });
        return e28 = "vertical" === i3 ? Aa().y(QA).x1(XA).x0(function(e29) {
          return e29.base.x;
        }) : Aa().x(XA).y1(QA).y0(function(e29) {
          return e29.base.y;
        }), e28.defined(GA).curve(l3), e28(c2);
      }
      return (e28 = "vertical" === i3 && Ql(o3) ? Aa().y(QA).x1(XA).x0(o3) : Ql(o3) ? Aa().x(XA).y1(QA).y0(o3) : Ba().x(XA).y(QA)).defined(GA).curve(l3), e28(u2);
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.className, n2 = e28.points, o3 = e28.path, i3 = e28.pathRef;
      if (!(n2 && n2.length || o3))
        return null;
      var a3 = n2 && n2.length ? this.getPath() : o3;
      return import_react.default.createElement("path", LA({}, E(this.props), T(this.props), { className: b("recharts-curve", r3), d: a3, ref: i3 }));
    } }], o2 && VA(r2.prototype, o2), i2 && VA(r2, i2), l2;
  }();
  function ZA(e27) {
    return ZA = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, ZA(e27);
  }
  function JA() {
    return JA = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, JA.apply(this, arguments);
  }
  function eN(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function tN(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function rN(e27, t2) {
    return rN = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, rN(e27, t2);
  }
  function nN(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = iN(e27);
      if (t2) {
        var o2 = iN(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return oN(this, r2);
    };
  }
  function oN(e27, t2) {
    return !t2 || "object" !== ZA(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function iN(e27) {
    return iN = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, iN(e27);
  }
  KA.defaultProps = { type: "linear", points: [], connectNulls: false };
  var aN = function(e27, t2, r2, n2, o2) {
    var i2, a2 = Math.min(Math.abs(r2) / 2, Math.abs(n2) / 2), l2 = n2 >= 0 ? 1 : -1, u2 = r2 >= 0 ? 1 : -1, s2 = n2 >= 0 && r2 >= 0 || n2 < 0 && r2 < 0 ? 1 : 0;
    if (a2 > 0 && o2 instanceof Array) {
      for (var c2 = [0, 0, 0, 0], d2 = 0; d2 < 4; d2++)
        c2[d2] = o2[d2] > a2 ? a2 : o2[d2];
      i2 = "M".concat(e27, ",").concat(t2 + l2 * c2[0]), c2[0] > 0 && (i2 += "A ".concat(c2[0], ",").concat(c2[0], ",0,0,").concat(s2, ",").concat(e27 + u2 * c2[0], ",").concat(t2)), i2 += "L ".concat(e27 + r2 - u2 * c2[1], ",").concat(t2), c2[1] > 0 && (i2 += "A ".concat(c2[1], ",").concat(c2[1], ",0,0,").concat(s2, ",\n        ").concat(e27 + r2, ",").concat(t2 + l2 * c2[1])), i2 += "L ".concat(e27 + r2, ",").concat(t2 + n2 - l2 * c2[2]), c2[2] > 0 && (i2 += "A ".concat(c2[2], ",").concat(c2[2], ",0,0,").concat(s2, ",\n        ").concat(e27 + r2 - u2 * c2[2], ",").concat(t2 + n2)), i2 += "L ".concat(e27 + u2 * c2[3], ",").concat(t2 + n2), c2[3] > 0 && (i2 += "A ".concat(c2[3], ",").concat(c2[3], ",0,0,").concat(s2, ",\n        ").concat(e27, ",").concat(t2 + n2 - l2 * c2[3])), i2 += "Z";
    } else if (a2 > 0 && o2 === +o2 && o2 > 0) {
      var f2 = Math.min(a2, o2);
      i2 = "M ".concat(e27, ",").concat(t2 + l2 * f2, "\n            A ").concat(f2, ",").concat(f2, ",0,0,").concat(s2, ",").concat(e27 + u2 * f2, ",").concat(t2, "\n            L ").concat(e27 + r2 - u2 * f2, ",").concat(t2, "\n            A ").concat(f2, ",").concat(f2, ",0,0,").concat(s2, ",").concat(e27 + r2, ",").concat(t2 + l2 * f2, "\n            L ").concat(e27 + r2, ",").concat(t2 + n2 - l2 * f2, "\n            A ").concat(f2, ",").concat(f2, ",0,0,").concat(s2, ",").concat(e27 + r2 - u2 * f2, ",").concat(t2 + n2, "\n            L ").concat(e27 + u2 * f2, ",").concat(t2 + n2, "\n            A ").concat(f2, ",").concat(f2, ",0,0,").concat(s2, ",").concat(e27, ",").concat(t2 + n2 - l2 * f2, " Z");
    } else
      i2 = "M ".concat(e27, ",").concat(t2, " h ").concat(r2, " v ").concat(n2, " h ").concat(-r2, " Z");
    return i2;
  };
  var lN = function(e27, t2) {
    if (!e27 || !t2)
      return false;
    var r2 = e27.x, n2 = e27.y, o2 = t2.x, i2 = t2.y, a2 = t2.width, l2 = t2.height;
    if (Math.abs(a2) > 0 && Math.abs(l2) > 0) {
      var u2 = Math.min(o2, o2 + a2), s2 = Math.max(o2, o2 + a2), c2 = Math.min(i2, i2 + l2), d2 = Math.max(i2, i2 + l2);
      return r2 >= u2 && r2 <= s2 && n2 >= c2 && n2 <= d2;
    }
    return false;
  };
  var uN = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && rN(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = nN(l2);
    function l2() {
      var e28;
      eN(this, l2);
      for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
        r3[n2] = arguments[n2];
      return (e28 = a2.call.apply(a2, [this].concat(r3))).state = { totalLength: -1 }, e28.node = void 0, e28;
    }
    return r2 = l2, o2 = [{ key: "componentDidMount", value: function() {
      if (this.node && this.node.getTotalLength)
        try {
          var e28 = this.node.getTotalLength();
          e28 && this.setState({ totalLength: e28 });
        } catch (e29) {
        }
    } }, { key: "render", value: function() {
      var e28 = this, r3 = this.props, n2 = r3.x, o3 = r3.y, i3 = r3.width, a3 = r3.height, l3 = r3.radius, u2 = r3.className, s2 = this.state.totalLength, c2 = this.props, d2 = c2.animationEasing, f2 = c2.animationDuration, p2 = c2.animationBegin, h2 = c2.isAnimationActive, g2 = c2.isUpdateAnimationActive;
      if (n2 !== +n2 || o3 !== +o3 || i3 !== +i3 || a3 !== +a3 || 0 === i3 || 0 === a3)
        return null;
      var v2 = b("recharts-rectangle", u2);
      return g2 ? import_react.default.createElement(Tc, { canBegin: s2 > 0, from: { width: i3, height: a3, x: n2, y: o3 }, to: { width: i3, height: a3, x: n2, y: o3 }, duration: f2, animationEasing: d2, isActive: g2 }, function(r4) {
        var n3 = r4.width, o4 = r4.height, i4 = r4.x, a4 = r4.y;
        return import_react.default.createElement(Tc, { canBegin: s2 > 0, from: "0px ".concat(-1 === s2 ? 1 : s2, "px"), to: "".concat(s2, "px 0px"), attributeName: "strokeDasharray", begin: p2, duration: f2, isActive: h2, easing: d2 }, import_react.default.createElement("path", JA({}, E(e28.props, true), { className: v2, d: aN(i4, a4, n3, o4, l3), ref: function(t2) {
          e28.node = t2;
        } })));
      }) : import_react.default.createElement("path", JA({}, E(this.props, true), { className: v2, d: aN(n2, o3, i3, a3, l3) }));
    } }], o2 && tN(r2.prototype, o2), i2 && tN(r2, i2), l2;
  }();
  function sN(e27) {
    return sN = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, sN(e27);
  }
  function cN() {
    return cN = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, cN.apply(this, arguments);
  }
  function dN(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function fN(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function pN(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function hN(e27, t2) {
    return hN = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, hN(e27, t2);
  }
  function gN(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = mN(e27);
      if (t2) {
        var o2 = mN(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return vN(this, r2);
    };
  }
  function vN(e27, t2) {
    return !t2 || "object" !== sN(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function mN(e27) {
    return mN = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, mN(e27);
  }
  function yN(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return bN(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return bN(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return bN(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function bN(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  uN.defaultProps = { x: 0, y: 0, width: 0, height: 0, radius: 0, isAnimationActive: false, isUpdateAnimationActive: false, animationBegin: 0, animationDuration: 1500, animationEasing: "ease" };
  var CN = function(e27) {
    return e27 && e27.x === +e27.x && e27.y === +e27.y;
  };
  var xN = function(e27, t2) {
    var r2 = function() {
      var e28 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t3 = [[]];
      return e28.forEach(function(e29) {
        CN(e29) ? t3[t3.length - 1].push(e29) : t3[t3.length - 1].length > 0 && t3.push([]);
      }), CN(e28[0]) && t3[t3.length - 1].push(e28[0]), t3[t3.length - 1].length <= 0 && (t3 = t3.slice(0, -1)), t3;
    }(e27);
    t2 && (r2 = [r2.reduce(function(e28, t3) {
      return [].concat(yN(e28), yN(t3));
    }, [])]);
    var n2 = r2.map(function(e28) {
      return e28.reduce(function(e29, t3, r3) {
        return "".concat(e29).concat(0 === r3 ? "M" : "L").concat(t3.x, ",").concat(t3.y);
      }, "");
    }).join("");
    return 1 === r2.length ? "".concat(n2, "Z") : n2;
  };
  var wN = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && hN(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = gN(l2);
    function l2() {
      return fN(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, (o2 = [{ key: "render", value: function() {
      var e28 = this.props, r3 = e28.points, n2 = e28.className, o3 = e28.baseLinePoints, i3 = e28.connectNulls, a3 = dN(e28, ["points", "className", "baseLinePoints", "connectNulls"]);
      if (!r3 || !r3.length)
        return null;
      var l3 = b("recharts-polygon", n2);
      if (o3 && o3.length) {
        var u2 = a3.stroke && "none" !== a3.stroke, s2 = function(e29, t2, r4) {
          var n3 = xN(e29, r4);
          return "".concat("Z" === n3.slice(-1) ? n3.slice(0, -1) : n3, "L").concat(xN(t2.reverse(), r4).slice(1));
        }(r3, o3, i3);
        return import_react.default.createElement("g", { className: l3 }, import_react.default.createElement("path", cN({}, E(a3, true), { fill: "Z" === s2.slice(-1) ? a3.fill : "none", stroke: "none", d: s2 })), u2 ? import_react.default.createElement("path", cN({}, E(a3, true), { fill: "none", d: xN(r3, i3) })) : null, u2 ? import_react.default.createElement("path", cN({}, E(a3, true), { fill: "none", d: xN(o3, i3) })) : null);
      }
      var c2 = xN(r3, i3);
      return import_react.default.createElement("path", cN({}, E(a3, true), { fill: "Z" === c2.slice(-1) ? a3.fill : "none", className: l3, d: c2 }));
    } }]) && pN(r2.prototype, o2), i2 && pN(r2, i2), l2;
  }();
  function kN(e27) {
    return kN = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, kN(e27);
  }
  function SN() {
    return SN = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, SN.apply(this, arguments);
  }
  function EN(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function TN(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function RN(e27, t2) {
    return RN = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, RN(e27, t2);
  }
  function ON(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = PN(e27);
      if (t2) {
        var o2 = PN(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return _N(this, r2);
    };
  }
  function _N(e27, t2) {
    return !t2 || "object" !== kN(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function PN(e27) {
    return PN = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, PN(e27);
  }
  var MN = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && RN(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = ON(l2);
    function l2() {
      return EN(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "render", value: function() {
      var e28 = this.props, r3 = e28.cx, n2 = e28.cy, o3 = e28.r, i3 = e28.className, a3 = b("recharts-dot", i3);
      return r3 === +r3 && n2 === +n2 && o3 === +o3 ? import_react.default.createElement("circle", SN({}, E(this.props), T(this.props), { className: a3, cx: r3, cy: n2, r: o3 })) : null;
    } }], o2 && TN(r2.prototype, o2), i2 && TN(r2, i2), l2;
  }();
  function BN(e27) {
    return BN = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, BN(e27);
  }
  function AN() {
    return AN = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, AN.apply(this, arguments);
  }
  function NN(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function jN(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function DN(e27, t2) {
    return DN = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, DN(e27, t2);
  }
  function LN(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = zN(e27);
      if (t2) {
        var o2 = zN(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return IN(this, r2);
    };
  }
  function IN(e27, t2) {
    return !t2 || "object" !== BN(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function zN(e27) {
    return zN = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, zN(e27);
  }
  var FN = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && DN(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = LN(l2);
    function l2() {
      return NN(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "render", value: function() {
      var e28 = this.props, r3 = e28.x, n2 = e28.y, o3 = e28.width, i3 = e28.height, a3 = e28.top, u2 = e28.left, s2 = e28.className;
      return Ql(r3) && Ql(n2) && Ql(o3) && Ql(i3) && Ql(a3) && Ql(u2) ? import_react.default.createElement("path", AN({}, E(this.props, true), { className: b("recharts-cross", s2), d: l2.getPath(r3, n2, o3, i3, a3, u2) })) : null;
    } }], i2 = [{ key: "getPath", value: function(e28, t2, r3, n2, o3, i3) {
      return "M".concat(e28, ",").concat(o3, "v").concat(n2, "M").concat(i3, ",").concat(t2, "h").concat(r3);
    } }], o2 && jN(r2.prototype, o2), i2 && jN(r2, i2), l2;
  }();
  FN.defaultProps = { x: 0, y: 0, top: 0, left: 0, width: 0, height: 0 };
  var UN = yT;
  var VN = Ci;
  var WN = ST;
  var HN = function(e27, t2) {
    return e27 && e27.length ? UN(e27, VN(t2), WN) : void 0;
  };
  var $N = yT;
  var qN = bT;
  var YN = Ci;
  var GN = function(e27, t2) {
    return e27 && e27.length ? $N(e27, YN(t2), qN) : void 0;
  };
  function XN(e27) {
    return XN = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, XN(e27);
  }
  function QN() {
    return QN = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, QN.apply(this, arguments);
  }
  function KN(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function ZN(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? KN(Object(r2), true).forEach(function(t3) {
        JN(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : KN(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function JN(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function ej(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function tj(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function rj(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function nj(e27, t2) {
    return nj = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, nj(e27, t2);
  }
  function oj(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = aj(e27);
      if (t2) {
        var o2 = aj(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return ij(this, r2);
    };
  }
  function ij(e27, t2) {
    return !t2 || "object" !== XN(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function aj(e27) {
    return aj = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, aj(e27);
  }
  var lj = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && nj(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = oj(l2);
    function l2() {
      return tj(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "getTickValueCoord", value: function(e28) {
      var t2 = e28.coordinate, r3 = this.props, n2 = r3.angle, o3 = r3.cx, i3 = r3.cy;
      return JB(o3, i3, t2, n2);
    } }, { key: "getTickTextAnchor", value: function() {
      var e28;
      switch (this.props.orientation) {
        case "left":
          e28 = "end";
          break;
        case "right":
          e28 = "start";
          break;
        default:
          e28 = "middle";
      }
      return e28;
    } }, { key: "getViewBox", value: function() {
      var e28 = this.props, t2 = e28.cx, r3 = e28.cy, n2 = e28.angle, o3 = e28.ticks, i3 = GN(o3, function(e29) {
        return e29.coordinate || 0;
      });
      return { cx: t2, cy: r3, startAngle: n2, endAngle: n2, innerRadius: HN(o3, function(e29) {
        return e29.coordinate || 0;
      }).coordinate || 0, outerRadius: i3.coordinate || 0 };
    } }, { key: "renderAxisLine", value: function() {
      var e28 = this.props, r3 = e28.cx, n2 = e28.cy, o3 = e28.angle, i3 = e28.ticks, a3 = e28.axisLine, l3 = ej(e28, ["cx", "cy", "angle", "ticks", "axisLine"]), u2 = i3.reduce(function(e29, t2) {
        return [Math.min(e29[0], t2.coordinate), Math.max(e29[1], t2.coordinate)];
      }, [1 / 0, -1 / 0]), s2 = JB(r3, n2, u2[0], o3), c2 = JB(r3, n2, u2[1], o3), d2 = ZN(ZN(ZN({}, E(l3)), {}, { fill: "none" }, E(a3)), {}, { x1: s2.x, y1: s2.y, x2: c2.x, y2: c2.y });
      return import_react.default.createElement("line", QN({ className: "recharts-polar-radius-axis-line" }, d2));
    } }, { key: "renderTicks", value: function() {
      var e28 = this, r3 = this.props, n2 = r3.ticks, o3 = r3.tick, i3 = r3.angle, a3 = r3.tickFormatter, u2 = r3.stroke, s2 = ej(r3, ["ticks", "tick", "angle", "tickFormatter", "stroke"]), c2 = this.getTickTextAnchor(), d2 = E(s2), f2 = E(o3), p2 = n2.map(function(r4, n3) {
        var s3 = e28.getTickValueCoord(r4), p3 = ZN(ZN(ZN(ZN({ textAnchor: c2, transform: "rotate(".concat(90 - i3, ", ").concat(s3.x, ", ").concat(s3.y, ")") }, d2), {}, { stroke: "none", fill: u2 }, f2), {}, { index: n3 }, s3), {}, { payload: r4 });
        return import_react.default.createElement(A, QN({ className: "recharts-polar-radius-axis-tick", key: "tick-".concat(n3) }, R(e28.props, r4, n3)), l2.renderTickItem(o3, p3, a3 ? a3(r4.value, n3) : r4.value));
      });
      return import_react.default.createElement(A, { className: "recharts-polar-radius-axis-ticks" }, p2);
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.ticks, n2 = e28.axisLine, o3 = e28.tick;
      return r3 && r3.length ? import_react.default.createElement(A, { className: "recharts-polar-radius-axis" }, n2 && this.renderAxisLine(), o3 && this.renderTicks(), dA.renderCallByParent(this.props, this.getViewBox())) : null;
    } }], i2 = [{ key: "renderTickItem", value: function(e28, r3, n2) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : import_react.default.createElement(PE, QN({}, r3, { className: "recharts-polar-radius-axis-tick-value" }), n2);
    } }], o2 && rj(r2.prototype, o2), i2 && rj(r2, i2), l2;
  }();
  function uj(e27) {
    return uj = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, uj(e27);
  }
  function sj() {
    return sj = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, sj.apply(this, arguments);
  }
  function cj(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function dj(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? cj(Object(r2), true).forEach(function(t3) {
        fj(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : cj(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function fj(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function pj(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function hj(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function gj(e27, t2) {
    return gj = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, gj(e27, t2);
  }
  function vj(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = yj(e27);
      if (t2) {
        var o2 = yj(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return mj(this, r2);
    };
  }
  function mj(e27, t2) {
    return !t2 || "object" !== uj(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function yj(e27) {
    return yj = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, yj(e27);
  }
  lj.displayName = "PolarRadiusAxis", lj.axisType = "radiusAxis", lj.defaultProps = { type: "number", radiusAxisId: 0, cx: 0, cy: 0, angle: 0, orientation: "right", stroke: "#ccc", axisLine: true, tick: true, tickCount: 5, domain: [0, "auto"], allowDataOverflow: false, scale: "auto", allowDuplicatedCategory: true };
  var bj = Math.PI / 180;
  var Cj = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && gj(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = vj(l2);
    function l2() {
      return pj(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "getTickLineCoord", value: function(e28) {
      var t2 = this.props, r3 = t2.cx, n2 = t2.cy, o3 = t2.radius, i3 = t2.orientation, a3 = t2.tickSize || 8, l3 = JB(r3, n2, o3, e28.coordinate), u2 = JB(r3, n2, o3 + ("inner" === i3 ? -1 : 1) * a3, e28.coordinate);
      return { x1: l3.x, y1: l3.y, x2: u2.x, y2: u2.y };
    } }, { key: "getTickTextAnchor", value: function(e28) {
      var t2 = this.props.orientation, r3 = Math.cos(-e28.coordinate * bj);
      return r3 > 1e-5 ? "outer" === t2 ? "start" : "end" : r3 < -1e-5 ? "outer" === t2 ? "end" : "start" : "middle";
    } }, { key: "renderAxisLine", value: function() {
      var e28 = this.props, r3 = e28.cx, n2 = e28.cy, o3 = e28.radius, i3 = e28.axisLine, a3 = e28.axisLineType, l3 = dj(dj({}, E(this.props)), {}, { fill: "none" }, E(i3));
      if ("circle" === a3)
        return import_react.default.createElement(MN, sj({ className: "recharts-polar-angle-axis-line" }, l3, { cx: r3, cy: n2, r: o3 }));
      var u2 = this.props.ticks.map(function(e29) {
        return JB(r3, n2, o3, e29.coordinate);
      });
      return import_react.default.createElement(wN, sj({ className: "recharts-polar-angle-axis-line" }, l3, { points: u2 }));
    } }, { key: "renderTicks", value: function() {
      var e28 = this, r3 = this.props, n2 = r3.ticks, o3 = r3.tick, i3 = r3.tickLine, a3 = r3.tickFormatter, u2 = r3.stroke, s2 = E(this.props), c2 = E(o3), d2 = dj(dj({}, s2), {}, { fill: "none" }, E(i3)), f2 = n2.map(function(r4, n3) {
        var f3 = e28.getTickLineCoord(r4), p2 = dj(dj(dj({ textAnchor: e28.getTickTextAnchor(r4) }, s2), {}, { stroke: "none", fill: u2 }, c2), {}, { index: n3, payload: r4, x: f3.x2, y: f3.y2 });
        return import_react.default.createElement(A, sj({ className: "recharts-polar-angle-axis-tick", key: "tick-".concat(n3) }, R(e28.props, r4, n3)), i3 && import_react.default.createElement("line", sj({ className: "recharts-polar-angle-axis-tick-line" }, d2, f3)), o3 && l2.renderTickItem(o3, p2, a3 ? a3(r4.value, n3) : r4.value));
      });
      return import_react.default.createElement(A, { className: "recharts-polar-angle-axis-ticks" }, f2);
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.ticks, n2 = e28.radius, o3 = e28.axisLine;
      return n2 <= 0 || !r3 || !r3.length ? null : import_react.default.createElement(A, { className: "recharts-polar-angle-axis" }, o3 && this.renderAxisLine(), this.renderTicks());
    } }], i2 = [{ key: "renderTickItem", value: function(e28, r3, n2) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : import_react.default.createElement(PE, sj({}, r3, { className: "recharts-polar-angle-axis-tick-value" }), n2);
    } }], o2 && hj(r2.prototype, o2), i2 && hj(r2, i2), l2;
  }();
  Cj.displayName = "PolarAngleAxis", Cj.axisType = "angleAxis", Cj.defaultProps = { type: "category", angleAxisId: 0, scale: "auto", cx: 0, cy: 0, domain: [0, "auto"], orientation: "outer", axisLine: true, tickLine: true, tickSize: 8, tick: true, hide: false, allowDuplicatedCategory: true };
  var xj = Xr(Object.getPrototypeOf, Object);
  var wj = X;
  var kj = xj;
  var Sj = pr;
  var Ej = Function.prototype;
  var Tj = Object.prototype;
  var Rj = Ej.toString;
  var Oj = Tj.hasOwnProperty;
  var _j = Rj.call(Object);
  var Pj = function(e27) {
    if (!Sj(e27) || "[object Object]" != wj(e27))
      return false;
    var t2 = kj(e27);
    if (null === t2)
      return true;
    var r2 = Oj.call(t2, "constructor") && t2.constructor;
    return "function" == typeof r2 && r2 instanceof r2 && Rj.call(r2) == _j;
  };
  function Mj(e27) {
    return Mj = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, Mj(e27);
  }
  function Bj() {
    return Bj = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, Bj.apply(this, arguments);
  }
  function Aj(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function Nj(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? Aj(Object(r2), true).forEach(function(t3) {
        jj(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : Aj(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function jj(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function Dj(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function Lj(e27, t2) {
    return Lj = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, Lj(e27, t2);
  }
  function Ij(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = Fj(e27);
      if (t2) {
        var o2 = Fj(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return zj(this, r2);
    };
  }
  function zj(e27, t2) {
    return !t2 || "object" !== Mj(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function Fj(e27) {
    return Fj = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, Fj(e27);
  }
  var Uj = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && Lj(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = Ij(l2);
    function l2(e28) {
      var t2;
      return function(e29, t3) {
        if (!(e29 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }(this, l2), (t2 = a2.call(this, e28)).state = void 0, t2.id = Jl("recharts-pie-"), t2.handleAnimationEnd = function() {
        var e29 = t2.props.onAnimationEnd;
        t2.setState({ isAnimationFinished: true }), Z(e29) && e29();
      }, t2.handleAnimationStart = function() {
        var e29 = t2.props.onAnimationStart;
        t2.setState({ isAnimationFinished: false }), Z(e29) && e29();
      }, t2.state = { isAnimationFinished: !e28.isAnimationActive, prevIsAnimationActive: e28.isAnimationActive, prevAnimationId: e28.animationId }, t2;
    }
    return r2 = l2, o2 = [{ key: "isActiveIndex", value: function(e28) {
      var t2 = this.props.activeIndex;
      return Array.isArray(t2) ? -1 !== t2.indexOf(e28) : e28 === t2;
    } }, { key: "renderLabels", value: function(e28) {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished)
        return null;
      var r3 = this.props, n2 = r3.label, o3 = r3.labelLine, i3 = r3.dataKey, a3 = r3.valueKey, u2 = E(this.props), s2 = E(n2), c2 = E(o3), d2 = n2 && n2.offsetRadius || 20, f2 = e28.map(function(e29, r4) {
        var f3 = (e29.startAngle + e29.endAngle) / 2, p2 = JB(e29.cx, e29.cy, e29.outerRadius + d2, f3), h2 = Nj(Nj(Nj(Nj({}, u2), e29), {}, { stroke: "none" }, s2), {}, { index: r4, textAnchor: l2.getTextAnchor(p2.x, e29.cx) }, p2), g2 = Nj(Nj(Nj(Nj({}, u2), e29), {}, { fill: "none", stroke: e29.fill }, c2), {}, { index: r4, points: [JB(e29.cx, e29.cy, e29.outerRadius, f3), p2], key: "line" }), v2 = i3;
        return yu(i3) && yu(a3) ? v2 = "value" : yu(i3) && (v2 = a3), import_react.default.createElement(A, { key: "label-".concat(r4) }, o3 && l2.renderLabelLineItem(o3, g2), l2.renderLabelItem(n2, h2, wB(e29, v2)));
      });
      return import_react.default.createElement(A, { className: "recharts-pie-labels" }, f2);
    } }, { key: "renderSectorsStatically", value: function(e28) {
      var r3 = this, n2 = this.props, o3 = n2.activeShape, i3 = n2.blendStroke;
      return e28.map(function(e29, n3) {
        var a3 = r3.isActiveIndex(n3) ? o3 : null, u2 = Nj(Nj({}, e29), {}, { stroke: i3 ? e29.fill : e29.stroke });
        return import_react.default.createElement(A, Bj({ className: "recharts-pie-sector" }, R(r3.props, e29, n3), { key: "sector-".concat(n3) }), l2.renderSectorItem(a3, u2));
      });
    } }, { key: "renderSectorsWithAnimation", value: function() {
      var e28 = this, r3 = this.props, n2 = r3.sectors, o3 = r3.isAnimationActive, i3 = r3.animationBegin, a3 = r3.animationDuration, l3 = r3.animationEasing, u2 = r3.animationId, s2 = this.state, c2 = s2.prevSectors, d2 = s2.prevIsAnimationActive;
      return import_react.default.createElement(Tc, { begin: i3, duration: a3, isActive: o3, easing: l3, from: { t: 0 }, to: { t: 1 }, key: "pie-".concat(u2, "-").concat(d2), onAnimationStart: this.handleAnimationStart, onAnimationEnd: this.handleAnimationEnd }, function(r4) {
        var o4 = r4.t, i4 = [], a4 = (n2 && n2[0]).startAngle;
        return n2.forEach(function(e29, t2) {
          var r5 = c2 && c2[t2], n3 = t2 > 0 ? Fo(e29, "paddingAngle", 0) : 0;
          if (r5) {
            var l4 = ru(r5.endAngle - r5.startAngle, e29.endAngle - e29.startAngle), u3 = Nj(Nj({}, e29), {}, { startAngle: a4 + n3, endAngle: a4 + l4(o4) + n3 });
            i4.push(u3), a4 = u3.endAngle;
          } else {
            var s3 = e29.endAngle, d3 = e29.startAngle, f2 = ru(0, s3 - d3)(o4), p2 = Nj(Nj({}, e29), {}, { startAngle: a4 + n3, endAngle: a4 + f2 + n3 });
            i4.push(p2), a4 = p2.endAngle;
          }
        }), import_react.default.createElement(A, null, e28.renderSectorsStatically(i4));
      });
    } }, { key: "renderSectors", value: function() {
      var e28 = this.props, t2 = e28.sectors, r3 = e28.isAnimationActive, n2 = this.state.prevSectors;
      return !(r3 && t2 && t2.length) || n2 && vT(n2, t2) ? this.renderSectorsStatically(t2) : this.renderSectorsWithAnimation();
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.hide, n2 = e28.sectors, o3 = e28.className, i3 = e28.label, a3 = e28.cx, l3 = e28.cy, u2 = e28.innerRadius, s2 = e28.outerRadius, c2 = e28.isAnimationActive, d2 = this.state.isAnimationFinished;
      if (r3 || !n2 || !n2.length || !Ql(a3) || !Ql(l3) || !Ql(u2) || !Ql(s2))
        return null;
      var f2 = b("recharts-pie", o3);
      return import_react.default.createElement(A, { className: f2 }, this.renderSectors(), i3 && this.renderLabels(n2), dA.renderCallByParent(this.props, null, false), (!c2 || d2) && kA.renderCallByParent(this.props, n2, false));
    } }], i2 = [{ key: "getDerivedStateFromProps", value: function(e28, t2) {
      return t2.prevIsAnimationActive !== e28.isAnimationActive ? { prevIsAnimationActive: e28.isAnimationActive, prevAnimationId: e28.animationId, curSectors: e28.sectors, prevSectors: [], isAnimationFinished: true } : e28.isAnimationActive && e28.animationId !== t2.prevAnimationId ? { prevAnimationId: e28.animationId, curSectors: e28.sectors, prevSectors: t2.curSectors, isAnimationFinished: true } : e28.sectors !== t2.curSectors ? { curSectors: e28.sectors, isAnimationFinished: true } : null;
    } }, { key: "getTextAnchor", value: function(e28, t2) {
      return e28 > t2 ? "start" : e28 < t2 ? "end" : "middle";
    } }, { key: "renderLabelLineItem", value: function(e28, r3) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : import_react.default.createElement(KA, Bj({}, r3, { type: "linear", className: "recharts-pie-label-line" }));
    } }, { key: "renderLabelItem", value: function(e28, r3, n2) {
      if (import_react.default.isValidElement(e28))
        return import_react.default.cloneElement(e28, r3);
      var o3 = n2;
      return Z(e28) && (o3 = e28(r3), import_react.default.isValidElement(o3)) ? o3 : import_react.default.createElement(PE, Bj({}, r3, { alignmentBaseline: "middle", className: "recharts-pie-label-text" }), o3);
    } }, { key: "renderSectorItem", value: function(e28, r3) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : Pj(e28) ? import_react.default.createElement(jA, Bj({}, r3, e28)) : import_react.default.createElement(jA, r3);
    } }], o2 && Dj(r2.prototype, o2), i2 && Dj(r2, i2), l2;
  }();
  Uj.displayName = "Pie", Uj.defaultProps = { stroke: "#fff", fill: "#808080", legendType: "rect", cx: "50%", cy: "50%", startAngle: 0, endAngle: 360, innerRadius: 0, outerRadius: "80%", paddingAngle: 0, labelLine: true, hide: false, minAngle: 0, isAnimationActive: !Fw.isSsr, animationBegin: 400, animationDuration: 1500, animationEasing: "ease", nameKey: "name", blendStroke: false }, Uj.parseDeltaAngle = function(e27, t2) {
    return Gl(t2 - e27) * Math.min(Math.abs(t2 - e27), 360);
  }, Uj.getRealPieData = function(e27) {
    var t2 = e27.props, r2 = t2.data, n2 = t2.children, o2 = E(e27.props), i2 = uT(n2, yS.displayName);
    return r2 && r2.length ? r2.map(function(e28, t3) {
      return Nj(Nj(Nj({ payload: e28 }, o2), e28), i2 && i2[t3] && i2[t3].props);
    }) : i2 && i2.length ? i2.map(function(e28) {
      return Nj(Nj({}, o2), e28.props);
    }) : [];
  }, Uj.parseCoordinateOfPie = function(e27, t2) {
    var r2 = t2.top, n2 = t2.left, o2 = t2.width, i2 = t2.height, a2 = eA(o2, i2);
    return { cx: n2 + eu(e27.props.cx, o2, o2 / 2), cy: r2 + eu(e27.props.cy, i2, i2 / 2), innerRadius: eu(e27.props.innerRadius, a2, 0), outerRadius: eu(e27.props.outerRadius, a2, 0.8 * a2), maxRadius: e27.props.maxRadius || Math.sqrt(o2 * o2 + i2 * i2) / 2 };
  }, Uj.getComposedData = function(e27) {
    var t2 = e27.item, r2 = e27.offset, n2 = Uj.getRealPieData(t2);
    if (!n2 || !n2.length)
      return null;
    var o2 = t2.props, i2 = o2.cornerRadius, a2 = o2.startAngle, l2 = o2.endAngle, u2 = o2.paddingAngle, s2 = o2.dataKey, c2 = o2.nameKey, d2 = o2.valueKey, f2 = o2.tooltipType, p2 = Math.abs(t2.props.minAngle), h2 = Uj.parseCoordinateOfPie(t2, r2), g2 = Uj.parseDeltaAngle(a2, l2), v2 = Math.abs(g2), m2 = s2;
    yu(s2) && yu(d2) ? (pS(false, 'Use "dataKey" to specify the value of pie,\n      the props "valueKey" will be deprecated in 1.1.0'), m2 = "value") : yu(s2) && (pS(false, 'Use "dataKey" to specify the value of pie,\n      the props "valueKey" will be deprecated in 1.1.0'), m2 = d2);
    var y2, b2, C2 = n2.filter(function(e28) {
      return 0 !== wB(e28, m2, 0);
    }).length, x2 = v2 - C2 * p2 - (v2 >= 360 ? C2 : C2 - 1) * u2, w2 = n2.reduce(function(e28, t3) {
      var r3 = wB(t3, m2, 0);
      return e28 + (Ql(r3) ? r3 : 0);
    }, 0);
    w2 > 0 && (y2 = n2.map(function(e28, t3) {
      var r3, n3 = wB(e28, m2, 0), o3 = wB(e28, c2, t3), l3 = (Ql(n3) ? n3 : 0) / w2, s3 = (r3 = t3 ? b2.endAngle + Gl(g2) * u2 * (0 !== n3 ? 1 : 0) : a2) + Gl(g2) * ((0 !== n3 ? p2 : 0) + l3 * x2), d3 = (r3 + s3) / 2, v3 = (h2.innerRadius + h2.outerRadius) / 2, y3 = [{ name: o3, value: n3, payload: e28, dataKey: m2, type: f2 }], C3 = JB(h2.cx, h2.cy, v3, d3);
      return b2 = Nj(Nj(Nj({ percent: l3, cornerRadius: i2, name: o3, tooltipPayload: y3, midAngle: d3, middleRadius: v3, tooltipPosition: C3 }, e28), h2), {}, { value: wB(e28, m2), startAngle: r3, endAngle: s3, payload: e28, paddingAngle: Gl(g2) * u2 });
    }));
    return Nj(Nj({}, h2), {}, { sectors: y2, data: n2 });
  };
  var Vj = Math.ceil;
  var Wj = Math.max;
  var Hj = function(e27, t2, r2, n2) {
    for (var o2 = -1, i2 = Wj(Vj((t2 - e27) / (r2 || 1)), 0), a2 = Array(i2); i2--; )
      a2[n2 ? i2 : ++o2] = e27, e27 += r2;
    return a2;
  };
  var $j = pk;
  var qj = function(e27) {
    return e27 ? Infinity === (e27 = $j(e27)) || -Infinity === e27 ? 17976931348623157e292 * (e27 < 0 ? -1 : 1) : e27 == e27 ? e27 : 0 : 0 === e27 ? e27 : 0;
  };
  var Yj = Hj;
  var Gj = xw;
  var Xj = qj;
  var Qj = function(e27) {
    return function(t2, r2, n2) {
      return n2 && "number" != typeof n2 && Gj(t2, r2, n2) && (r2 = n2 = void 0), t2 = Xj(t2), void 0 === r2 ? (r2 = t2, t2 = 0) : r2 = Xj(r2), n2 = void 0 === n2 ? t2 < r2 ? 1 : -1 : Xj(n2), Yj(t2, r2, n2, e27);
    };
  };
  var Kj = Qj();
  function Zj(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function Jj(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? Zj(Object(r2), true).forEach(function(t3) {
        eD(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : Zj(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function eD(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  var tD = ["Webkit", "Moz", "O", "ms"];
  function rD(e27) {
    return rD = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, rD(e27);
  }
  function nD() {
    return nD = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, nD.apply(this, arguments);
  }
  function oD(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function iD(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? oD(Object(r2), true).forEach(function(t3) {
        aD(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : oD(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function aD(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function lD(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function uD(e27, t2) {
    return uD = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, uD(e27, t2);
  }
  function sD(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = fD(e27);
      if (t2) {
        var o2 = fD(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return cD(this, r2);
    };
  }
  function cD(e27, t2) {
    return !t2 || "object" !== rD(t2) && "function" != typeof t2 ? dD(e27) : t2;
  }
  function dD(e27) {
    if (void 0 === e27)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e27;
  }
  function fD(e27) {
    return fD = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, fD(e27);
  }
  var pD = function(e27) {
    return e27.changedTouches && !!e27.changedTouches.length;
  };
  var hD = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && uD(e28, t2);
    }(u2, import_react.PureComponent);
    var r2, i2, a2, l2 = sD(u2);
    function u2(e28) {
      var t2;
      return function(e29, t3) {
        if (!(e29 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }(this, u2), (t2 = l2.call(this, e28)).leaveTimer = void 0, t2.travellerDragStartHandlers = void 0, t2.handleDrag = function(e29) {
        t2.leaveTimer && (clearTimeout(t2.leaveTimer), t2.leaveTimer = null), t2.state.isTravellerMoving ? t2.handleTravellerMove(e29) : t2.state.isSlideMoving && t2.handleSlideDrag(e29);
      }, t2.handleTouchMove = function(e29) {
        null != e29.changedTouches && e29.changedTouches.length > 0 && t2.handleDrag(e29.changedTouches[0]);
      }, t2.handleDragEnd = function() {
        t2.setState({ isTravellerMoving: false, isSlideMoving: false }), t2.detachDragEndListener();
      }, t2.handleLeaveWrapper = function() {
        (t2.state.isTravellerMoving || t2.state.isSlideMoving) && (t2.leaveTimer = window.setTimeout(t2.handleDragEnd, t2.props.leaveTimeOut));
      }, t2.handleEnterSlideOrTraveller = function() {
        t2.setState({ isTextActive: true });
      }, t2.handleLeaveSlideOrTraveller = function() {
        t2.setState({ isTextActive: false });
      }, t2.handleSlideDragStart = function(e29) {
        var r3 = pD(e29) ? e29.changedTouches[0] : e29;
        t2.setState({ isTravellerMoving: false, isSlideMoving: true, slideMoveStartX: r3.pageX }), t2.attachDragEndListener();
      }, t2.travellerDragStartHandlers = { startX: t2.handleTravellerDragStart.bind(dD(t2), "startX"), endX: t2.handleTravellerDragStart.bind(dD(t2), "endX") }, t2.state = {}, t2;
    }
    return r2 = u2, i2 = [{ key: "componentWillUnmount", value: function() {
      this.leaveTimer && (clearTimeout(this.leaveTimer), this.leaveTimer = null), this.detachDragEndListener();
    } }, { key: "getIndex", value: function(e28) {
      var t2 = e28.startX, r3 = e28.endX, n2 = this.state.scaleValues, o2 = this.props, i3 = o2.gap, a3 = o2.data.length - 1, l3 = Math.min(t2, r3), s2 = Math.max(t2, r3), c2 = u2.getIndexInRange(n2, l3), d2 = u2.getIndexInRange(n2, s2);
      return { startIndex: c2 - c2 % i3, endIndex: d2 === a3 ? a3 : d2 - d2 % i3 };
    } }, { key: "getTextOfTick", value: function(e28) {
      var t2 = this.props, r3 = t2.data, n2 = t2.tickFormatter, o2 = t2.dataKey, i3 = wB(r3[e28], o2, e28);
      return Z(n2) ? n2(i3, e28) : i3;
    } }, { key: "attachDragEndListener", value: function() {
      window.addEventListener("mouseup", this.handleDragEnd, true), window.addEventListener("touchend", this.handleDragEnd, true);
    } }, { key: "detachDragEndListener", value: function() {
      window.removeEventListener("mouseup", this.handleDragEnd, true), window.removeEventListener("touchend", this.handleDragEnd, true);
    } }, { key: "handleSlideDrag", value: function(e28) {
      var t2 = this.state, r3 = t2.slideMoveStartX, n2 = t2.startX, o2 = t2.endX, i3 = this.props, a3 = i3.x, l3 = i3.width, u3 = i3.travellerWidth, s2 = i3.startIndex, c2 = i3.endIndex, d2 = i3.onChange, f2 = e28.pageX - r3;
      f2 > 0 ? f2 = Math.min(f2, a3 + l3 - u3 - o2, a3 + l3 - u3 - n2) : f2 < 0 && (f2 = Math.max(f2, a3 - n2, a3 - o2));
      var p2 = this.getIndex({ startX: n2 + f2, endX: o2 + f2 });
      p2.startIndex === s2 && p2.endIndex === c2 || !d2 || d2(p2), this.setState({ startX: n2 + f2, endX: o2 + f2, slideMoveStartX: e28.pageX });
    } }, { key: "handleTravellerDragStart", value: function(e28, t2) {
      var r3 = pD(t2) ? t2.changedTouches[0] : t2;
      this.setState({ isSlideMoving: false, isTravellerMoving: true, movingTravellerId: e28, brushMoveStartX: r3.pageX }), this.attachDragEndListener();
    } }, { key: "handleTravellerMove", value: function(e28) {
      var t2, r3 = this.state, n2 = r3.brushMoveStartX, o2 = r3.movingTravellerId, i3 = r3.endX, a3 = r3.startX, l3 = this.state[o2], u3 = this.props, s2 = u3.x, c2 = u3.width, d2 = u3.travellerWidth, f2 = u3.onChange, p2 = u3.gap, h2 = u3.data, g2 = { startX: this.state.startX, endX: this.state.endX }, v2 = e28.pageX - n2;
      v2 > 0 ? v2 = Math.min(v2, s2 + c2 - d2 - l3) : v2 < 0 && (v2 = Math.max(v2, s2 - l3)), g2[o2] = l3 + v2;
      var m2 = this.getIndex(g2), y2 = m2.startIndex, b2 = m2.endIndex;
      this.setState((aD(t2 = {}, o2, l3 + v2), aD(t2, "brushMoveStartX", e28.pageX), t2), function() {
        var e29;
        f2 && (e29 = h2.length - 1, ("startX" === o2 && (i3 > a3 ? y2 % p2 == 0 : b2 % p2 == 0) || i3 < a3 && b2 === e29 || "endX" === o2 && (i3 > a3 ? b2 % p2 == 0 : y2 % p2 == 0) || i3 > a3 && b2 === e29) && f2(m2));
      });
    } }, { key: "renderBackground", value: function() {
      var e28 = this.props, r3 = e28.x, n2 = e28.y, o2 = e28.width, i3 = e28.height, a3 = e28.fill, l3 = e28.stroke;
      return import_react.default.createElement("rect", { stroke: l3, fill: a3, x: r3, y: n2, width: o2, height: i3 });
    } }, { key: "renderPanorama", value: function() {
      var e28 = this.props, r3 = e28.x, n2 = e28.y, i3 = e28.width, a3 = e28.height, l3 = e28.data, u3 = e28.children, s2 = e28.padding, c2 = import_react.Children.only(u3);
      return c2 ? import_react.default.cloneElement(c2, { x: r3, y: n2, width: i3, height: a3, margin: s2, compact: true, data: l3 }) : null;
    } }, { key: "renderTravellerLayer", value: function(e28, r3) {
      var n2 = this.props, o2 = n2.y, i3 = n2.travellerWidth, a3 = n2.height, l3 = n2.traveller, s2 = Math.max(e28, this.props.x), c2 = iD(iD({}, E(this.props)), {}, { x: s2, y: o2, width: i3, height: a3 });
      return import_react.default.createElement(A, { className: "recharts-brush-traveller", onMouseEnter: this.handleEnterSlideOrTraveller, onMouseLeave: this.handleLeaveSlideOrTraveller, onMouseDown: this.travellerDragStartHandlers[r3], onTouchStart: this.travellerDragStartHandlers[r3], style: { cursor: "col-resize" } }, u2.renderTraveller(l3, c2));
    } }, { key: "renderSlide", value: function(e28, r3) {
      var n2 = this.props, o2 = n2.y, i3 = n2.height, a3 = n2.stroke, l3 = n2.travellerWidth, u3 = Math.min(e28, r3) + l3, s2 = Math.max(Math.abs(r3 - e28) - l3, 0);
      return import_react.default.createElement("rect", { className: "recharts-brush-slide", onMouseEnter: this.handleEnterSlideOrTraveller, onMouseLeave: this.handleLeaveSlideOrTraveller, onMouseDown: this.handleSlideDragStart, onTouchStart: this.handleSlideDragStart, style: { cursor: "move" }, stroke: "none", fill: a3, fillOpacity: 0.2, x: u3, y: o2, width: s2, height: i3 });
    } }, { key: "renderText", value: function() {
      var e28 = this.props, r3 = e28.startIndex, n2 = e28.endIndex, o2 = e28.y, i3 = e28.height, a3 = e28.travellerWidth, l3 = e28.stroke, u3 = this.state, s2 = u3.startX, c2 = u3.endX, d2 = { pointerEvents: "none", fill: l3 };
      return import_react.default.createElement(A, { className: "recharts-brush-texts" }, import_react.default.createElement(PE, nD({ textAnchor: "end", verticalAnchor: "middle", x: Math.min(s2, c2) - 5, y: o2 + i3 / 2 }, d2), this.getTextOfTick(r3)), import_react.default.createElement(PE, nD({ textAnchor: "start", verticalAnchor: "middle", x: Math.max(s2, c2) + a3 + 5, y: o2 + i3 / 2 }, d2), this.getTextOfTick(n2)));
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.data, n2 = e28.className, o2 = e28.children, i3 = e28.x, a3 = e28.y, l3 = e28.width, u3 = e28.height, s2 = e28.alwaysShowText, c2 = this.state, d2 = c2.startX, f2 = c2.endX, p2 = c2.isTextActive, h2 = c2.isSlideMoving, g2 = c2.isTravellerMoving;
      if (!r3 || !r3.length || !Ql(i3) || !Ql(a3) || !Ql(l3) || !Ql(u3) || l3 <= 0 || u3 <= 0)
        return null;
      var v2 = b("recharts-brush", n2), m2 = 1 === import_react.default.Children.count(o2), y2 = function(e29, t2) {
        if (!e29)
          return null;
        var r4 = e29.replace(/(\w)/, function(e30) {
          return e30.toUpperCase();
        }), n3 = tD.reduce(function(e30, n4) {
          return Jj(Jj({}, e30), {}, eD({}, n4 + r4, t2));
        }, {});
        return n3[e29] = t2, n3;
      }("userSelect", "none");
      return import_react.default.createElement(A, { className: v2, onMouseMove: this.handleDrag, onMouseLeave: this.handleLeaveWrapper, onTouchMove: this.handleTouchMove, style: y2 }, this.renderBackground(), m2 && this.renderPanorama(), this.renderSlide(d2, f2), this.renderTravellerLayer(d2, "startX"), this.renderTravellerLayer(f2, "endX"), (p2 || h2 || g2 || s2) && this.renderText());
    } }], a2 = [{ key: "renderDefaultTraveller", value: function(e28) {
      var r3 = e28.x, n2 = e28.y, o2 = e28.width, i3 = e28.height, a3 = e28.stroke, l3 = Math.floor(n2 + i3 / 2) - 1;
      return import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("rect", { x: r3, y: n2, width: o2, height: i3, fill: a3, stroke: "none" }), import_react.default.createElement("line", { x1: r3 + 1, y1: l3, x2: r3 + o2 - 1, y2: l3, fill: "none", stroke: "#fff" }), import_react.default.createElement("line", { x1: r3 + 1, y1: l3 + 2, x2: r3 + o2 - 1, y2: l3 + 2, fill: "none", stroke: "#fff" }));
    } }, { key: "renderTraveller", value: function(e28, r3) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : u2.renderDefaultTraveller(r3);
    } }, { key: "getDerivedStateFromProps", value: function(e28, t2) {
      var r3 = e28.data, n2 = e28.width, o2 = e28.x, i3 = e28.travellerWidth, a3 = e28.updateId, l3 = e28.startIndex, u3 = e28.endIndex;
      if (r3 !== t2.prevData || a3 !== t2.prevUpdateId)
        return iD({ prevData: r3, prevTravellerWidth: i3, prevUpdateId: a3, prevX: o2, prevWidth: n2 }, r3 && r3.length ? function(e29) {
          var t3 = e29.data, r4 = e29.startIndex, n3 = e29.endIndex, o3 = e29.x, i4 = e29.width, a4 = e29.travellerWidth;
          if (!t3 || !t3.length)
            return {};
          var l4 = t3.length, u4 = fO().domain(Kj(0, l4)).range([o3, o3 + i4 - a4]), s3 = u4.domain().map(function(e30) {
            return u4(e30);
          });
          return { isTextActive: false, isSlideMoving: false, isTravellerMoving: false, startX: u4(r4), endX: u4(n3), scale: u4, scaleValues: s3 };
        }({ data: r3, width: n2, x: o2, travellerWidth: i3, startIndex: l3, endIndex: u3 }) : { scale: null, scaleValues: null });
      if (t2.scale && (n2 !== t2.prevWidth || o2 !== t2.prevX || i3 !== t2.prevTravellerWidth)) {
        t2.scale.range([o2, o2 + n2 - i3]);
        var s2 = t2.scale.domain().map(function(e29) {
          return t2.scale(e29);
        });
        return { prevData: r3, prevTravellerWidth: i3, prevUpdateId: a3, prevX: o2, prevWidth: n2, startX: t2.scale(e28.startIndex), endX: t2.scale(e28.endIndex), scaleValues: s2 };
      }
      return null;
    } }, { key: "getIndexInRange", value: function(e28, t2) {
      for (var r3 = 0, n2 = e28.length - 1; n2 - r3 > 1; ) {
        var o2 = Math.floor((r3 + n2) / 2);
        e28[o2] > t2 ? n2 = o2 : r3 = o2;
      }
      return t2 >= e28[n2] ? n2 : r3;
    } }], i2 && lD(r2.prototype, i2), a2 && lD(r2, a2), u2;
  }();
  hD.displayName = "Brush", hD.defaultProps = { height: 40, travellerWidth: 5, gap: 1, fill: "#fff", stroke: "#666", padding: { top: 1, right: 1, bottom: 1, left: 1 }, leaveTimeOut: 1e3, alwaysShowText: false };
  var gD = Dx;
  var vD = function(e27, t2) {
    var r2;
    return gD(e27, function(e28, n2, o2) {
      return !(r2 = t2(e28, n2, o2));
    }), !!r2;
  };
  var mD = It;
  var yD = Ci;
  var bD = vD;
  var CD = tr;
  var xD = xw;
  var wD = function(e27, t2, r2) {
    var n2 = CD(e27) ? mD : bD;
    return r2 && xD(e27, t2, r2) && (t2 = void 0), n2(e27, yD(t2));
  };
  var kD = function(e27, t2) {
    var r2 = e27.alwaysShow, n2 = e27.ifOverflow;
    return r2 && (n2 = "extendDomain"), n2 === t2;
  };
  var SD = function(e27, t2) {
    for (var r2 = -1, n2 = null == e27 ? 0 : e27.length; ++r2 < n2; )
      if (!t2(e27[r2], r2, e27))
        return false;
    return true;
  };
  var ED = Dx;
  var TD = function(e27, t2) {
    var r2 = true;
    return ED(e27, function(e28, n2, o2) {
      return r2 = !!t2(e28, n2, o2);
    }), r2;
  };
  var RD = SD;
  var OD = TD;
  var _D = Ci;
  var PD = tr;
  var MD = xw;
  var BD = function(e27, t2, r2) {
    var n2 = PD(e27) ? RD : OD;
    return r2 && MD(e27, t2, r2) && (t2 = void 0), n2(e27, _D(t2));
  };
  var AD = aw;
  var ND = function(e27, t2, r2) {
    "__proto__" == t2 && AD ? AD(e27, t2, { configurable: true, enumerable: true, value: r2, writable: true }) : e27[t2] = r2;
  };
  var jD = ND;
  var DD = Ax;
  var LD = Ci;
  var ID = function(e27, t2) {
    var r2 = {};
    return t2 = LD(t2), DD(e27, function(e28, n2, o2) {
      jD(r2, n2, t2(e28, n2, o2));
    }), r2;
  };
  function zD(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function FD(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function UD(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? FD(Object(r2), true).forEach(function(t3) {
        VD(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : FD(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function VD(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  var WD = function(e27, t2, r2, n2, o2) {
    var i2 = e27.width, a2 = e27.height, l2 = e27.layout, u2 = e27.children, s2 = Object.keys(t2), c2 = { left: r2.left, leftMirror: r2.left, right: i2 - r2.right, rightMirror: i2 - r2.right, top: r2.top, topMirror: r2.top, bottom: a2 - r2.bottom, bottomMirror: a2 - r2.bottom }, d2 = !!sT(u2, "Bar");
    return s2.reduce(function(i3, a3) {
      var u3, s3, f2, p2, h2, g2 = t2[a3], v2 = g2.orientation, m2 = g2.domain, y2 = g2.padding, b2 = void 0 === y2 ? {} : y2, C2 = g2.mirror, x2 = g2.reversed, w2 = "".concat(v2).concat(C2 ? "Mirror" : "");
      if ("number" === g2.type && ("gap" === g2.padding || "no-gap" === g2.padding)) {
        var k2 = m2[1] - m2[0], S2 = 1 / 0, E2 = g2.categoricalDomain.sort();
        E2.forEach(function(e28, t3) {
          t3 > 0 && (S2 = Math.min((e28 || 0) - (E2[t3 - 1] || 0), S2));
        });
        var T2 = S2 / k2, R2 = "vertical" === g2.layout ? r2.height : r2.width;
        if ("gap" === g2.padding && (u3 = T2 * R2 / 2), "no-gap" === g2.padding) {
          var O2 = eu(e27.barCategoryGap, T2 * R2), _2 = T2 * R2 / 2;
          u3 = _2 - O2 - (_2 - O2) / R2 * O2;
        }
      }
      s3 = "xAxis" === n2 ? [r2.left + (b2.left || 0) + (u3 || 0), r2.left + r2.width - (b2.right || 0) - (u3 || 0)] : "yAxis" === n2 ? "horizontal" === l2 ? [r2.top + r2.height - (b2.bottom || 0), r2.top + (b2.top || 0)] : [r2.top + (b2.top || 0) + (u3 || 0), r2.top + r2.height - (b2.bottom || 0) - (u3 || 0)] : g2.range, x2 && (s3 = [s3[1], s3[0]]);
      var P2 = BB(g2, o2, d2), M2 = P2.scale, B2 = P2.realScaleType;
      M2.domain(m2).range(s3), AB(M2);
      var A2 = DB(M2, UD(UD({}, g2), {}, { realScaleType: B2 }));
      "xAxis" === n2 ? (h2 = "top" === v2 && !C2 || "bottom" === v2 && C2, f2 = r2.left, p2 = c2[w2] - h2 * g2.height) : "yAxis" === n2 && (h2 = "left" === v2 && !C2 || "right" === v2 && C2, f2 = c2[w2] - h2 * g2.width, p2 = r2.top);
      var N2 = UD(UD(UD({}, g2), A2), {}, { realScaleType: B2, x: f2, y: p2, scale: M2, width: "xAxis" === n2 ? r2.width : g2.width, height: "yAxis" === n2 ? r2.height : g2.height });
      return N2.bandSize = WB(N2, A2), g2.hide || "xAxis" !== n2 ? g2.hide || (c2[w2] += (h2 ? -1 : 1) * N2.width) : c2[w2] += (h2 ? -1 : 1) * N2.height, UD(UD({}, i3), {}, VD({}, a3, N2));
    }, {});
  };
  var HD = function(e27, t2) {
    var r2 = e27.x, n2 = e27.y, o2 = t2.x, i2 = t2.y;
    return { x: Math.min(r2, o2), y: Math.min(n2, i2), width: Math.abs(o2 - r2), height: Math.abs(i2 - n2) };
  };
  var $D = function() {
    function e27(t3) {
      !function(e28, t4) {
        if (!(e28 instanceof t4))
          throw new TypeError("Cannot call a class as a function");
      }(this, e27), this.scale = void 0, this.scale = t3;
    }
    var t2, r2, n2;
    return t2 = e27, r2 = [{ key: "domain", get: function() {
      return this.scale.domain;
    } }, { key: "range", get: function() {
      return this.scale.range;
    } }, { key: "rangeMin", get: function() {
      return this.range()[0];
    } }, { key: "rangeMax", get: function() {
      return this.range()[1];
    } }, { key: "bandwidth", get: function() {
      return this.scale.bandwidth;
    } }, { key: "apply", value: function(e28) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r3 = t3.bandAware, n3 = t3.position;
      if (void 0 !== e28) {
        if (n3)
          switch (n3) {
            case "start":
            default:
              return this.scale(e28);
            case "middle":
              var o2 = this.bandwidth ? this.bandwidth() / 2 : 0;
              return this.scale(e28) + o2;
            case "end":
              var i2 = this.bandwidth ? this.bandwidth() : 0;
              return this.scale(e28) + i2;
          }
        if (r3) {
          var a2 = this.bandwidth ? this.bandwidth() / 2 : 0;
          return this.scale(e28) + a2;
        }
        return this.scale(e28);
      }
    } }, { key: "isInRange", value: function(e28) {
      var t3 = this.range(), r3 = t3[0], n3 = t3[t3.length - 1];
      return r3 <= n3 ? e28 >= r3 && e28 <= n3 : e28 >= n3 && e28 <= r3;
    } }], n2 = [{ key: "create", value: function(t3) {
      return new e27(t3);
    } }], r2 && zD(t2.prototype, r2), n2 && zD(t2, n2), e27;
  }();
  $D.EPS = 1e-4;
  var qD = function(e27) {
    var t2 = Object.keys(e27).reduce(function(t3, r2) {
      return UD(UD({}, t3), {}, VD({}, r2, $D.create(e27[r2])));
    }, {});
    return UD(UD({}, t2), {}, { apply: function(e28) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n2 = r2.bandAware, o2 = r2.position;
      return ID(e28, function(e29, r3) {
        return t2[r3].apply(e29, { bandAware: n2, position: o2 });
      });
    }, isInRange: function(e28) {
      return BD(e28, function(e29, r2) {
        return t2[r2].isInRange(e29);
      });
    } });
  };
  function YD(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function GD(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? YD(Object(r2), true).forEach(function(t3) {
        XD(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : YD(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function XD(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function QD(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || function(e28, t3) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return KD(e28, t3);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return KD(e28, t3);
    }(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function KD(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function ZD() {
    return ZD = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, ZD.apply(this, arguments);
  }
  function JD(e27) {
    var r2 = e27.x, n2 = e27.y, o2 = e27.segment, i2 = e27.xAxis, a2 = e27.yAxis, l2 = e27.shape, u2 = e27.className, s2 = e27.alwaysShow, c2 = e27.clipPathId;
    pS(void 0 === s2, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
    var d2 = function(e28, t2, r3, n3, o3) {
      var i3 = o3.viewBox, a3 = i3.x, l3 = i3.y, u3 = i3.width, s3 = i3.height, c3 = o3.position;
      if (r3) {
        var d3 = o3.y, f3 = o3.yAxis.orientation, p3 = e28.y.apply(d3, { position: c3 });
        if (kD(o3, "discard") && !e28.y.isInRange(p3))
          return null;
        var h3 = [{ x: a3 + u3, y: p3 }, { x: a3, y: p3 }];
        return "left" === f3 ? h3.reverse() : h3;
      }
      if (t2) {
        var g3 = o3.x, v3 = o3.xAxis.orientation, m3 = e28.x.apply(g3, { position: c3 });
        if (kD(o3, "discard") && !e28.x.isInRange(m3))
          return null;
        var y3 = [{ x: m3, y: l3 + s3 }, { x: m3, y: l3 }];
        return "top" === v3 ? y3.reverse() : y3;
      }
      if (n3) {
        var b2 = o3.segment.map(function(t3) {
          return e28.apply(t3, { position: c3 });
        });
        return kD(o3, "discard") && wD(b2, function(t3) {
          return !e28.isInRange(t3);
        }) ? null : b2;
      }
      return null;
    }(qD({ x: i2.scale, y: a2.scale }), Kl(r2), Kl(n2), o2 && 2 === o2.length, e27);
    if (!d2)
      return null;
    var f2 = QD(d2, 2), p2 = f2[0], h2 = p2.x, g2 = p2.y, v2 = f2[1], m2 = v2.x, y2 = v2.y, C2 = GD(GD({ clipPath: kD(e27, "hidden") ? "url(#".concat(c2, ")") : void 0 }, E(e27, true)), {}, { x1: h2, y1: g2, x2: m2, y2 });
    return import_react.default.createElement(A, { className: b("recharts-reference-line", u2) }, function(e28, r3) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : import_react.default.createElement("line", ZD({}, r3, { className: "recharts-reference-line-line" }));
    }(l2, C2), dA.renderCallByParent(e27, function(e28) {
      var t2 = e28.x1, r3 = e28.y1, n3 = e28.x2, o3 = e28.y2;
      return HD({ x: t2, y: r3 }, { x: n3, y: o3 });
    }({ x1: h2, y1: g2, x2: m2, y2 })));
  }
  function eL() {
    return eL = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, eL.apply(this, arguments);
  }
  function tL(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function rL(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? tL(Object(r2), true).forEach(function(t3) {
        nL(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : tL(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function nL(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  JD.displayName = "ReferenceLine", JD.defaultProps = { isFront: false, ifOverflow: "discard", xAxisId: 0, yAxisId: 0, fill: "none", stroke: "#ccc", fillOpacity: 1, strokeWidth: 1, position: "middle" };
  function oL(e27) {
    var r2 = e27.x, n2 = e27.y, o2 = e27.r, i2 = e27.alwaysShow, a2 = e27.clipPathId, l2 = Kl(r2), u2 = Kl(n2);
    if (pS(void 0 === i2, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.'), !l2 || !u2)
      return null;
    var s2 = function(e28) {
      var t2 = e28.x, r3 = e28.y, n3 = e28.xAxis, o3 = e28.yAxis, i3 = qD({ x: n3.scale, y: o3.scale }), a3 = i3.apply({ x: t2, y: r3 }, { bandAware: true });
      return kD(e28, "discard") && !i3.isInRange(a3) ? null : a3;
    }(e27);
    if (!s2)
      return null;
    var c2 = s2.x, d2 = s2.y, f2 = e27.shape, p2 = e27.className, h2 = rL(rL({ clipPath: kD(e27, "hidden") ? "url(#".concat(a2, ")") : void 0 }, E(e27, true)), {}, { cx: c2, cy: d2 });
    return import_react.default.createElement(A, { className: b("recharts-reference-dot", p2) }, oL.renderDot(f2, h2), dA.renderCallByParent(e27, { x: c2 - o2, y: d2 - o2, width: 2 * o2, height: 2 * o2 }));
  }
  function iL() {
    return iL = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, iL.apply(this, arguments);
  }
  function aL(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function lL(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? aL(Object(r2), true).forEach(function(t3) {
        uL(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : aL(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function uL(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  oL.displayName = "ReferenceDot", oL.defaultProps = { isFront: false, ifOverflow: "discard", xAxisId: 0, yAxisId: 0, r: 10, fill: "#fff", stroke: "#ccc", fillOpacity: 1, strokeWidth: 1 }, oL.renderDot = function(e27, r2) {
    return import_react.default.isValidElement(e27) ? import_react.default.cloneElement(e27, r2) : Z(e27) ? e27(r2) : import_react.default.createElement(MN, eL({}, r2, { cx: r2.cx, cy: r2.cy, className: "recharts-reference-dot-dot" }));
  };
  function sL(e27) {
    var r2 = e27.x1, n2 = e27.x2, o2 = e27.y1, i2 = e27.y2, a2 = e27.className, l2 = e27.alwaysShow, u2 = e27.clipPathId;
    pS(void 0 === l2, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
    var s2 = Kl(r2), c2 = Kl(n2), d2 = Kl(o2), f2 = Kl(i2), p2 = e27.shape;
    if (!(s2 || c2 || d2 || f2 || p2))
      return null;
    var h2 = function(e28, t2, r3, n3, o3) {
      var i3 = o3.x1, a3 = o3.x2, l3 = o3.y1, u3 = o3.y2, s3 = o3.xAxis, c3 = o3.yAxis;
      if (!s3 || !c3)
        return null;
      var d3 = qD({ x: s3.scale, y: c3.scale }), f3 = { x: e28 ? d3.x.apply(i3, { position: "start" }) : d3.x.rangeMin, y: r3 ? d3.y.apply(l3, { position: "start" }) : d3.y.rangeMin }, p3 = { x: t2 ? d3.x.apply(a3, { position: "end" }) : d3.x.rangeMax, y: n3 ? d3.y.apply(u3, { position: "end" }) : d3.y.rangeMax };
      return !kD(o3, "discard") || d3.isInRange(f3) && d3.isInRange(p3) ? HD(f3, p3) : null;
    }(s2, c2, d2, f2, e27);
    if (!h2 && !p2)
      return null;
    var g2 = kD(e27, "hidden") ? "url(#".concat(u2, ")") : void 0;
    return import_react.default.createElement(A, { className: b("recharts-reference-area", a2) }, sL.renderRect(p2, lL(lL({ clipPath: g2 }, E(e27, true)), h2)), dA.renderCallByParent(e27, h2));
  }
  function cL(e27) {
    return cL = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, cL(e27);
  }
  function dL() {
    return dL = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, dL.apply(this, arguments);
  }
  function fL(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function pL(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? fL(Object(r2), true).forEach(function(t3) {
        hL(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : fL(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function hL(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function gL(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function vL(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function mL(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function yL(e27, t2) {
    return yL = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, yL(e27, t2);
  }
  function bL(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = xL(e27);
      if (t2) {
        var o2 = xL(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return CL(this, r2);
    };
  }
  function CL(e27, t2) {
    return !t2 || "object" !== cL(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function xL(e27) {
    return xL = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, xL(e27);
  }
  sL.displayName = "ReferenceArea", sL.defaultProps = { isFront: false, ifOverflow: "discard", xAxisId: 0, yAxisId: 0, r: 10, fill: "#ccc", fillOpacity: 0.5, stroke: "none", strokeWidth: 1 }, sL.renderRect = function(e27, r2) {
    return import_react.default.isValidElement(e27) ? import_react.default.cloneElement(e27, r2) : Z(e27) ? e27(r2) : import_react.default.createElement(uN, iL({}, r2, { className: "recharts-reference-area-rect" }));
  };
  var wL = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && yL(e28, t2);
    }(a2, import_react.Component);
    var r2, n2, o2, i2 = bL(a2);
    function a2() {
      return vL(this, a2), i2.apply(this, arguments);
    }
    return r2 = a2, n2 = [{ key: "shouldComponentUpdate", value: function(e28) {
      var t2 = e28.viewBox, r3 = gL(e28, ["viewBox"]), n3 = this.props, o3 = n3.viewBox, i3 = gL(n3, ["viewBox"]);
      return !tT(t2, o3) || !tT(r3, i3);
    } }, { key: "getTickLineCoord", value: function(e28) {
      var t2, r3, n3, o3, i3, a3, l2 = this.props, u2 = l2.x, s2 = l2.y, c2 = l2.width, d2 = l2.height, f2 = l2.orientation, p2 = l2.tickSize, h2 = l2.mirror, g2 = l2.tickMargin, v2 = h2 ? -1 : 1, m2 = e28.tickSize || p2, y2 = Ql(e28.tickCoord) ? e28.tickCoord : e28.coordinate;
      switch (f2) {
        case "top":
          t2 = r3 = e28.coordinate, a3 = (n3 = (o3 = s2 + +!h2 * d2) - v2 * m2) - v2 * g2, i3 = y2;
          break;
        case "left":
          n3 = o3 = e28.coordinate, i3 = (t2 = (r3 = u2 + +!h2 * c2) - v2 * m2) - v2 * g2, a3 = y2;
          break;
        case "right":
          n3 = o3 = e28.coordinate, i3 = (t2 = (r3 = u2 + +h2 * c2) + v2 * m2) + v2 * g2, a3 = y2;
          break;
        default:
          t2 = r3 = e28.coordinate, a3 = (n3 = (o3 = s2 + +h2 * d2) + v2 * m2) + v2 * g2, i3 = y2;
      }
      return { line: { x1: t2, y1: n3, x2: r3, y2: o3 }, tick: { x: i3, y: a3 } };
    } }, { key: "getTickTextAnchor", value: function() {
      var e28, t2 = this.props, r3 = t2.orientation, n3 = t2.mirror;
      switch (r3) {
        case "left":
          e28 = n3 ? "start" : "end";
          break;
        case "right":
          e28 = n3 ? "end" : "start";
          break;
        default:
          e28 = "middle";
      }
      return e28;
    } }, { key: "getTickVerticalAnchor", value: function() {
      var e28 = this.props, t2 = e28.orientation, r3 = e28.mirror, n3 = "end";
      switch (t2) {
        case "left":
        case "right":
          n3 = "middle";
          break;
        case "top":
          n3 = r3 ? "start" : "end";
          break;
        default:
          n3 = r3 ? "end" : "start";
      }
      return n3;
    } }, { key: "renderAxisLine", value: function() {
      var e28 = this.props, r3 = e28.x, n3 = e28.y, o3 = e28.width, i3 = e28.height, a3 = e28.orientation, l2 = e28.mirror, u2 = e28.axisLine, s2 = pL(pL(pL({}, E(this.props)), E(u2)), {}, { fill: "none" });
      if ("top" === a3 || "bottom" === a3) {
        var c2 = +("top" === a3 && !l2 || "bottom" === a3 && l2);
        s2 = pL(pL({}, s2), {}, { x1: r3, y1: n3 + c2 * i3, x2: r3 + o3, y2: n3 + c2 * i3 });
      } else {
        var d2 = +("left" === a3 && !l2 || "right" === a3 && l2);
        s2 = pL(pL({}, s2), {}, { x1: r3 + d2 * o3, y1: n3, x2: r3 + d2 * o3, y2: n3 + i3 });
      }
      return import_react.default.createElement("line", dL({}, s2, { className: b("recharts-cartesian-axis-line", Fo(u2, "className")) }));
    } }, { key: "renderTicks", value: function(e28) {
      var r3 = this, n3 = this.props, o3 = n3.tickLine, i3 = n3.stroke, l2 = n3.tick, u2 = n3.tickFormatter, s2 = n3.unit, c2 = a2.getTicks(pL(pL({}, this.props), {}, { ticks: e28 })), d2 = this.getTickTextAnchor(), f2 = this.getTickVerticalAnchor(), p2 = E(this.props), h2 = E(l2), g2 = pL(pL({}, p2), {}, { fill: "none" }, E(o3)), v2 = c2.map(function(e29, n4) {
        var v3 = r3.getTickLineCoord(e29), m2 = v3.line, y2 = v3.tick, C2 = pL(pL(pL(pL({ textAnchor: d2, verticalAnchor: f2 }, p2), {}, { stroke: "none", fill: i3 }, h2), y2), {}, { index: n4, payload: e29, visibleTicksCount: c2.length, tickFormatter: u2 });
        return import_react.default.createElement(A, dL({ className: "recharts-cartesian-axis-tick", key: "tick-".concat(n4) }, R(r3.props, e29, n4)), o3 && import_react.default.createElement("line", dL({}, g2, m2, { className: b("recharts-cartesian-axis-tick-line", Fo(o3, "className")) })), l2 && a2.renderTickItem(l2, C2, "".concat(Z(u2) ? u2(e29.value, n4) : e29.value).concat(s2 || "")));
      });
      return import_react.default.createElement("g", { className: "recharts-cartesian-axis-ticks" }, v2);
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.axisLine, n3 = e28.width, o3 = e28.height, i3 = e28.ticksGenerator, a3 = e28.className;
      if (e28.hide)
        return null;
      var l2 = this.props, u2 = l2.ticks, s2 = gL(l2, ["ticks"]), c2 = u2;
      return Z(i3) && (c2 = u2 && u2.length > 0 ? i3(this.props) : i3(s2)), n3 <= 0 || o3 <= 0 || !c2 || !c2.length ? null : import_react.default.createElement(A, { className: b("recharts-cartesian-axis", a3) }, r3 && this.renderAxisLine(), this.renderTicks(c2), dA.renderCallByParent(this.props));
    } }], o2 = [{ key: "getTicks", value: function(e28) {
      var t2 = e28.tick, r3 = e28.ticks, n3 = e28.viewBox, o3 = e28.minTickGap, i3 = e28.orientation, l2 = e28.interval, u2 = e28.tickFormatter, s2 = e28.unit;
      return r3 && r3.length && t2 ? Ql(l2) || Fw.isSsr ? a2.getNumberIntervalTicks(r3, "number" == typeof l2 && Ql(l2) ? l2 : 0) : "preserveStartEnd" === l2 ? a2.getTicksStart({ ticks: r3, tickFormatter: u2, viewBox: n3, orientation: i3, minTickGap: o3, unit: s2 }, true) : "preserveStart" === l2 ? a2.getTicksStart({ ticks: r3, tickFormatter: u2, viewBox: n3, orientation: i3, minTickGap: o3, unit: s2 }) : a2.getTicksEnd({ ticks: r3, tickFormatter: u2, viewBox: n3, orientation: i3, minTickGap: o3, unit: s2 }) : [];
    } }, { key: "getNumberIntervalTicks", value: function(e28, t2) {
      return e28.filter(function(e29, r3) {
        return r3 % (t2 + 1) == 0;
      });
    } }, { key: "getTicksStart", value: function(e28, t2) {
      var r3, n3, o3 = e28.ticks, i3 = e28.tickFormatter, a3 = e28.viewBox, l2 = e28.orientation, u2 = e28.minTickGap, s2 = e28.unit, c2 = a3.x, d2 = a3.y, f2 = a3.width, p2 = a3.height, h2 = "top" === l2 || "bottom" === l2 ? "width" : "height", g2 = (o3 || []).slice(), v2 = s2 && "width" === h2 ? dE(s2)[h2] : 0, m2 = g2.length, y2 = m2 >= 2 ? Gl(g2[1].coordinate - g2[0].coordinate) : 1;
      if (1 === y2 ? (r3 = "width" === h2 ? c2 : d2, n3 = "width" === h2 ? c2 + f2 : d2 + p2) : (r3 = "width" === h2 ? c2 + f2 : d2 + p2, n3 = "width" === h2 ? c2 : d2), t2) {
        var b2 = o3[m2 - 1], C2 = Z(i3) ? i3(b2.value, m2 - 1) : b2.value, x2 = dE(C2)[h2] + v2, w2 = y2 * (b2.coordinate + y2 * x2 / 2 - n3);
        g2[m2 - 1] = b2 = pL(pL({}, b2), {}, { tickCoord: w2 > 0 ? b2.coordinate - w2 * y2 : b2.coordinate }), y2 * (b2.tickCoord - y2 * x2 / 2 - r3) >= 0 && y2 * (b2.tickCoord + y2 * x2 / 2 - n3) <= 0 && (n3 = b2.tickCoord - y2 * (x2 / 2 + u2), g2[m2 - 1] = pL(pL({}, b2), {}, { isShow: true }));
      }
      for (var k2 = t2 ? m2 - 1 : m2, S2 = 0; S2 < k2; S2++) {
        var E2 = g2[S2], T2 = Z(i3) ? i3(E2.value, S2) : E2.value, R2 = dE(T2)[h2] + v2;
        if (0 === S2) {
          var O2 = y2 * (E2.coordinate - y2 * R2 / 2 - r3);
          g2[S2] = E2 = pL(pL({}, E2), {}, { tickCoord: O2 < 0 ? E2.coordinate - O2 * y2 : E2.coordinate });
        } else
          g2[S2] = E2 = pL(pL({}, E2), {}, { tickCoord: E2.coordinate });
        y2 * (E2.tickCoord - y2 * R2 / 2 - r3) >= 0 && y2 * (E2.tickCoord + y2 * R2 / 2 - n3) <= 0 && (r3 = E2.tickCoord + y2 * (R2 / 2 + u2), g2[S2] = pL(pL({}, E2), {}, { isShow: true }));
      }
      return g2.filter(function(e29) {
        return e29.isShow;
      });
    } }, { key: "getTicksEnd", value: function(e28) {
      var t2, r3, n3 = e28.ticks, o3 = e28.tickFormatter, i3 = e28.viewBox, a3 = e28.orientation, l2 = e28.minTickGap, u2 = e28.unit, s2 = i3.x, c2 = i3.y, d2 = i3.width, f2 = i3.height, p2 = "top" === a3 || "bottom" === a3 ? "width" : "height", h2 = u2 && "width" === p2 ? dE(u2)[p2] : 0, g2 = (n3 || []).slice(), v2 = g2.length, m2 = v2 >= 2 ? Gl(g2[1].coordinate - g2[0].coordinate) : 1;
      1 === m2 ? (t2 = "width" === p2 ? s2 : c2, r3 = "width" === p2 ? s2 + d2 : c2 + f2) : (t2 = "width" === p2 ? s2 + d2 : c2 + f2, r3 = "width" === p2 ? s2 : c2);
      for (var y2 = v2 - 1; y2 >= 0; y2--) {
        var b2 = g2[y2], C2 = Z(o3) ? o3(b2.value, v2 - y2 - 1) : b2.value, x2 = dE(C2)[p2] + h2;
        if (y2 === v2 - 1) {
          var w2 = m2 * (b2.coordinate + m2 * x2 / 2 - r3);
          g2[y2] = b2 = pL(pL({}, b2), {}, { tickCoord: w2 > 0 ? b2.coordinate - w2 * m2 : b2.coordinate });
        } else
          g2[y2] = b2 = pL(pL({}, b2), {}, { tickCoord: b2.coordinate });
        m2 * (b2.tickCoord - m2 * x2 / 2 - t2) >= 0 && m2 * (b2.tickCoord + m2 * x2 / 2 - r3) <= 0 && (r3 = b2.tickCoord - m2 * (x2 / 2 + l2), g2[y2] = pL(pL({}, b2), {}, { isShow: true }));
      }
      return g2.filter(function(e29) {
        return e29.isShow;
      });
    } }, { key: "renderTickItem", value: function(e28, r3, n3) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : import_react.default.createElement(PE, dL({}, r3, { className: "recharts-cartesian-axis-tick-value" }), n3);
    } }], n2 && mL(r2.prototype, n2), o2 && mL(r2, o2), a2;
  }();
  function kL(e27) {
    return kL = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, kL(e27);
  }
  function SL() {
    return SL = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, SL.apply(this, arguments);
  }
  function EL(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function TL(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function RL(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? TL(Object(r2), true).forEach(function(t3) {
        OL(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : TL(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function OL(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function _L(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function PL(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function ML(e27, t2) {
    return ML = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, ML(e27, t2);
  }
  function BL(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = NL(e27);
      if (t2) {
        var o2 = NL(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return AL(this, r2);
    };
  }
  function AL(e27, t2) {
    return !t2 || "object" !== kL(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function NL(e27) {
    return NL = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, NL(e27);
  }
  wL.displayName = "CartesianAxis", wL.defaultProps = { x: 0, y: 0, width: 0, height: 0, viewBox: { x: 0, y: 0, width: 0, height: 0 }, orientation: "bottom", ticks: [], stroke: "#666", tickLine: true, axisLine: true, tick: true, mirror: false, minTickGap: 5, tickSize: 6, tickMargin: 2, interval: "preserveEnd" };
  var jL = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && ML(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = BL(l2);
    function l2() {
      return _L(this, l2), a2.apply(this, arguments);
    }
    return r2 = l2, o2 = [{ key: "renderHorizontal", value: function(e28) {
      var r3 = this, n2 = this.props, o3 = n2.x, i3 = n2.width, a3 = n2.horizontal;
      if (!e28 || !e28.length)
        return null;
      var u2 = e28.map(function(e29, t2) {
        var n3 = RL(RL({}, r3.props), {}, { x1: o3, y1: e29, x2: o3 + i3, y2: e29, key: "line-".concat(t2), index: t2 });
        return l2.renderLineItem(a3, n3);
      });
      return import_react.default.createElement("g", { className: "recharts-cartesian-grid-horizontal" }, u2);
    } }, { key: "renderVertical", value: function(e28) {
      var r3 = this, n2 = this.props, o3 = n2.y, i3 = n2.height, a3 = n2.vertical;
      if (!e28 || !e28.length)
        return null;
      var u2 = e28.map(function(e29, t2) {
        var n3 = RL(RL({}, r3.props), {}, { x1: e29, y1: o3, x2: e29, y2: o3 + i3, key: "line-".concat(t2), index: t2 });
        return l2.renderLineItem(a3, n3);
      });
      return import_react.default.createElement("g", { className: "recharts-cartesian-grid-vertical" }, u2);
    } }, { key: "renderVerticalStripes", value: function(e28) {
      var r3 = this.props.verticalFill;
      if (!r3 || !r3.length)
        return null;
      var n2 = this.props, o3 = n2.fillOpacity, i3 = n2.x, a3 = n2.y, l3 = n2.width, u2 = n2.height, s2 = e28.slice().sort(function(e29, t2) {
        return e29 - t2;
      });
      i3 !== s2[0] && s2.unshift(0);
      var c2 = s2.map(function(e29, n3) {
        var c3 = s2[n3 + 1] ? s2[n3 + 1] - e29 : i3 + l3 - e29;
        if (c3 <= 0)
          return null;
        var d2 = n3 % r3.length;
        return import_react.default.createElement("rect", { key: "react-".concat(n3), x: Math.round(e29 + i3 - i3), y: a3, width: c3, height: u2, stroke: "none", fill: r3[d2], fillOpacity: o3, className: "recharts-cartesian-grid-bg" });
      });
      return import_react.default.createElement("g", { className: "recharts-cartesian-gridstripes-vertical" }, c2);
    } }, { key: "renderHorizontalStripes", value: function(e28) {
      var r3 = this.props.horizontalFill;
      if (!r3 || !r3.length)
        return null;
      var n2 = this.props, o3 = n2.fillOpacity, i3 = n2.x, a3 = n2.y, l3 = n2.width, u2 = n2.height, s2 = e28.slice().sort(function(e29, t2) {
        return e29 - t2;
      });
      a3 !== s2[0] && s2.unshift(0);
      var c2 = s2.map(function(e29, n3) {
        var c3 = s2[n3 + 1] ? s2[n3 + 1] - e29 : a3 + u2 - e29;
        if (c3 <= 0)
          return null;
        var d2 = n3 % r3.length;
        return import_react.default.createElement("rect", { key: "react-".concat(n3), y: Math.round(e29 + a3 - a3), x: i3, height: c3, width: l3, stroke: "none", fill: r3[d2], fillOpacity: o3, className: "recharts-cartesian-grid-bg" });
      });
      return import_react.default.createElement("g", { className: "recharts-cartesian-gridstripes-horizontal" }, c2);
    } }, { key: "renderBackground", value: function() {
      var e28 = this.props.fill;
      if (!e28 || "none" === e28)
        return null;
      var r3 = this.props, n2 = r3.fillOpacity, o3 = r3.x, i3 = r3.y, a3 = r3.width, l3 = r3.height;
      return import_react.default.createElement("rect", { x: o3, y: i3, width: a3, height: l3, stroke: "none", fill: e28, fillOpacity: n2, className: "recharts-cartesian-grid-bg" });
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.x, n2 = e28.y, o3 = e28.width, i3 = e28.height, a3 = e28.horizontal, l3 = e28.vertical, u2 = e28.horizontalCoordinatesGenerator, s2 = e28.verticalCoordinatesGenerator, c2 = e28.xAxis, d2 = e28.yAxis, f2 = e28.offset, p2 = e28.chartWidth, h2 = e28.chartHeight;
      if (!Ql(o3) || o3 <= 0 || !Ql(i3) || i3 <= 0 || !Ql(r3) || r3 !== +r3 || !Ql(n2) || n2 !== +n2)
        return null;
      var g2 = this.props, v2 = g2.horizontalPoints, m2 = g2.verticalPoints;
      return v2 && v2.length || !Z(u2) || (v2 = u2({ yAxis: d2, width: p2, height: h2, offset: f2 })), m2 && m2.length || !Z(s2) || (m2 = s2({ xAxis: c2, width: p2, height: h2, offset: f2 })), import_react.default.createElement("g", { className: "recharts-cartesian-grid" }, this.renderBackground(), a3 && this.renderHorizontal(v2), l3 && this.renderVertical(m2), a3 && this.renderHorizontalStripes(v2), l3 && this.renderVerticalStripes(m2));
    } }], i2 = [{ key: "renderLineItem", value: function(e28, r3) {
      var n2;
      if (import_react.default.isValidElement(e28))
        n2 = import_react.default.cloneElement(e28, r3);
      else if (Z(e28))
        n2 = e28(r3);
      else {
        var o3 = r3.x1, i3 = r3.y1, a3 = r3.x2, l3 = r3.y2, u2 = r3.key, s2 = EL(r3, ["x1", "y1", "x2", "y2", "key"]);
        n2 = import_react.default.createElement("line", SL({}, E(s2), { x1: o3, y1: i3, x2: a3, y2: l3, fill: "none", key: u2 }));
      }
      return n2;
    } }], o2 && PL(r2.prototype, o2), i2 && PL(r2, i2), l2;
  }();
  function DL() {
    return DL = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, DL.apply(this, arguments);
  }
  function LL(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || function(e28, t3) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return IL(e28, t3);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return IL(e28, t3);
    }(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function IL(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function zL(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function FL(e27) {
    var r2 = e27.offset, n2 = e27.layout, o2 = e27.width, i2 = e27.dataKey, a2 = e27.data, l2 = e27.dataPointFormatter, u2 = e27.xAxis, s2 = e27.yAxis, c2 = zL(e27, ["offset", "layout", "width", "dataKey", "data", "dataPointFormatter", "xAxis", "yAxis"]), d2 = E(c2), f2 = a2.map(function(e28, a3) {
      var c3 = l2(e28, i2), f3 = c3.x, p2 = c3.y, h2 = c3.value, g2 = c3.errorVal;
      if (!g2)
        return null;
      var v2, m2, y2 = [];
      if (Array.isArray(g2)) {
        var b2 = LL(g2, 2);
        v2 = b2[0], m2 = b2[1];
      } else
        v2 = m2 = g2;
      if ("vertical" === n2) {
        var C2 = u2.scale, x2 = p2 + r2, w2 = x2 + o2, k2 = x2 - o2, S2 = C2(h2 - v2), E2 = C2(h2 + m2);
        y2.push({ x1: E2, y1: w2, x2: E2, y2: k2 }), y2.push({ x1: S2, y1: x2, x2: E2, y2: x2 }), y2.push({ x1: S2, y1: w2, x2: S2, y2: k2 });
      } else if ("horizontal" === n2) {
        var T2 = s2.scale, R2 = f3 + r2, O2 = R2 - o2, _2 = R2 + o2, P2 = T2(h2 - v2), M2 = T2(h2 + m2);
        y2.push({ x1: O2, y1: M2, x2: _2, y2: M2 }), y2.push({ x1: R2, y1: P2, x2: R2, y2: M2 }), y2.push({ x1: O2, y1: P2, x2: _2, y2: P2 });
      }
      return import_react.default.createElement(A, DL({ className: "recharts-errorBar", key: "bar-".concat(a3) }, d2), y2.map(function(e29, r3) {
        return import_react.default.createElement("line", DL({}, e29, { key: "line-".concat(r3) }));
      }));
    });
    return import_react.default.createElement(A, { className: "recharts-errorBars" }, f2);
  }
  function UL(e27) {
    return UL = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, UL(e27);
  }
  function VL(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function WL() {
    return WL = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, WL.apply(this, arguments);
  }
  function HL(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function $L(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? HL(Object(r2), true).forEach(function(t3) {
        qL(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : HL(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function qL(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function YL(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return GL(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || function(e28, t2) {
      if (!e28)
        return;
      if ("string" == typeof e28)
        return GL(e28, t2);
      var r2 = Object.prototype.toString.call(e28).slice(8, -1);
      "Object" === r2 && e28.constructor && (r2 = e28.constructor.name);
      if ("Map" === r2 || "Set" === r2)
        return Array.from(e28);
      if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2))
        return GL(e28, t2);
    }(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function GL(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function XL(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function QL(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function KL(e27, t2) {
    return KL = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, KL(e27, t2);
  }
  function ZL(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = eI(e27);
      if (t2) {
        var o2 = eI(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return JL(this, r2);
    };
  }
  function JL(e27, t2) {
    return !t2 || "object" !== UL(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function eI(e27) {
    return eI = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, eI(e27);
  }
  jL.displayName = "CartesianGrid", jL.defaultProps = { horizontal: true, vertical: true, horizontalPoints: [], verticalPoints: [], stroke: "#ccc", fill: "none", verticalFill: [], horizontalFill: [] }, FL.defaultProps = { stroke: "black", strokeWidth: 1.5, width: 5, offset: 0, layout: "horizontal" }, FL.displayName = "ErrorBar";
  var tI = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && KL(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = ZL(l2);
    function l2() {
      var e28;
      XL(this, l2);
      for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
        r3[n2] = arguments[n2];
      return (e28 = a2.call.apply(a2, [this].concat(r3))).mainCurve = void 0, e28.state = { isAnimationFinished: true, totalLength: 0 }, e28.getStrokeDasharray = function(e29, t3, r4) {
        for (var n3 = r4.reduce(function(e30, t4) {
          return e30 + t4;
        }), o3 = Math.floor(e29 / n3), i3 = e29 % n3, a3 = t3 - e29, u2 = [], s2 = 0, c2 = 0; ; c2 += r4[s2], ++s2)
          if (c2 + r4[s2] > i3) {
            u2 = [].concat(YL(r4.slice(0, s2)), [i3 - c2]);
            break;
          }
        var d2 = u2.length % 2 == 0 ? [0, a3] : [a3];
        return [].concat(YL(l2.repeat(r4, o3)), YL(u2), d2).map(function(e30) {
          return "".concat(e30, "px");
        }).join(", ");
      }, e28.id = Jl("recharts-line-"), e28.pathRef = function(t3) {
        e28.mainCurve = t3;
      }, e28.handleAnimationEnd = function() {
        e28.setState({ isAnimationFinished: true }), e28.props.onAnimationEnd && e28.props.onAnimationEnd();
      }, e28.handleAnimationStart = function() {
        e28.setState({ isAnimationFinished: false }), e28.props.onAnimationStart && e28.props.onAnimationStart();
      }, e28;
    }
    return r2 = l2, o2 = [{ key: "componentDidMount", value: function() {
      if (this.props.isAnimationActive) {
        var e28 = this.getTotalLength();
        this.setState({ totalLength: e28 });
      }
    } }, { key: "getTotalLength", value: function() {
      var e28 = this.mainCurve;
      try {
        return e28 && e28.getTotalLength && e28.getTotalLength() || 0;
      } catch (e29) {
        return 0;
      }
    } }, { key: "renderErrorBar", value: function() {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished)
        return null;
      var e28 = this.props, r3 = e28.points, n2 = e28.xAxis, o3 = e28.yAxis, i3 = e28.layout, a3 = e28.children, l3 = uT(a3, FL.displayName);
      if (!l3)
        return null;
      function u2(e29, t2) {
        return { x: e29.x, y: e29.y, value: e29.value, errorVal: wB(e29.payload, t2) };
      }
      return l3.map(function(e29, a4) {
        return import_react.default.cloneElement(e29, { key: "bar-".concat(a4), data: r3, xAxis: n2, yAxis: o3, layout: i3, dataPointFormatter: u2 });
      });
    } }, { key: "renderDots", value: function(e28, r3) {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished)
        return null;
      var n2 = this.props, o3 = n2.dot, i3 = n2.points, a3 = n2.dataKey, u2 = E(this.props), s2 = E(o3, true), c2 = i3.map(function(e29, t2) {
        var r4 = $L($L($L({ key: "dot-".concat(t2), r: 3 }, u2), s2), {}, { value: e29.value, dataKey: a3, cx: e29.x, cy: e29.y, index: t2, payload: e29.payload });
        return l2.renderDotItem(o3, r4);
      }), d2 = { clipPath: e28 ? "url(#clipPath-".concat(r3, ")") : null };
      return import_react.default.createElement(A, WL({ className: "recharts-line-dots", key: "dots" }, d2), c2);
    } }, { key: "renderCurveStatically", value: function(e28, r3, n2, o3) {
      var i3 = this.props, a3 = i3.type, l3 = i3.layout, u2 = i3.connectNulls;
      i3.ref;
      var s2 = VL(i3, ["type", "layout", "connectNulls", "ref"]), c2 = $L($L($L({}, E(s2, true)), {}, { fill: "none", className: "recharts-line-curve", clipPath: r3 ? "url(#clipPath-".concat(n2, ")") : null, points: e28 }, o3), {}, { type: a3, layout: l3, connectNulls: u2 });
      return import_react.default.createElement(KA, WL({}, c2, { pathRef: this.pathRef }));
    } }, { key: "renderCurveWithAnimation", value: function(e28, r3) {
      var n2 = this, o3 = this.props, i3 = o3.points, a3 = o3.strokeDasharray, l3 = o3.isAnimationActive, u2 = o3.animationBegin, s2 = o3.animationDuration, c2 = o3.animationEasing, d2 = o3.animationId, f2 = o3.animateNewValues, p2 = o3.width, h2 = o3.height, g2 = this.state, v2 = g2.prevPoints, m2 = g2.totalLength;
      return import_react.default.createElement(Tc, { begin: u2, duration: s2, isActive: l3, easing: c2, from: { t: 0 }, to: { t: 1 }, key: "line-".concat(d2), onAnimationEnd: this.handleAnimationEnd, onAnimationStart: this.handleAnimationStart }, function(t2) {
        var o4 = t2.t;
        if (v2) {
          var l4 = v2.length / i3.length, u3 = i3.map(function(e29, t3) {
            var r4 = Math.floor(t3 * l4);
            if (v2[r4]) {
              var n3 = v2[r4], i4 = ru(n3.x, e29.x), a4 = ru(n3.y, e29.y);
              return $L($L({}, e29), {}, { x: i4(o4), y: a4(o4) });
            }
            if (f2) {
              var u4 = ru(2 * p2, e29.x), s4 = ru(h2 / 2, e29.y);
              return $L($L({}, e29), {}, { x: u4(o4), y: s4(o4) });
            }
            return $L($L({}, e29), {}, { x: e29.x, y: e29.y });
          });
          return n2.renderCurveStatically(u3, e28, r3);
        }
        var s3, c3 = ru(0, m2)(o4);
        if (a3) {
          var d3 = "".concat(a3).split(/[,\s]+/gim).map(function(e29) {
            return parseFloat(e29);
          });
          s3 = n2.getStrokeDasharray(c3, m2, d3);
        } else
          s3 = "".concat(c3, "px ").concat(m2 - c3, "px");
        return n2.renderCurveStatically(i3, e28, r3, { strokeDasharray: s3 });
      });
    } }, { key: "renderCurve", value: function(e28, t2) {
      var r3 = this.props, n2 = r3.points, o3 = r3.isAnimationActive, i3 = this.state, a3 = i3.prevPoints, l3 = i3.totalLength;
      return o3 && n2 && n2.length && (!a3 && l3 > 0 || !vT(a3, n2)) ? this.renderCurveWithAnimation(e28, t2) : this.renderCurveStatically(n2, e28, t2);
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.hide, n2 = e28.dot, o3 = e28.points, i3 = e28.className, a3 = e28.xAxis, l3 = e28.yAxis, u2 = e28.top, s2 = e28.left, c2 = e28.width, d2 = e28.height, f2 = e28.isAnimationActive, p2 = e28.id;
      if (r3 || !o3 || !o3.length)
        return null;
      var h2 = this.state.isAnimationFinished, g2 = 1 === o3.length, v2 = b("recharts-line", i3), m2 = a3 && a3.allowDataOverflow || l3 && l3.allowDataOverflow, y2 = yu(p2) ? this.id : p2;
      return import_react.default.createElement(A, { className: v2 }, m2 ? import_react.default.createElement("defs", null, import_react.default.createElement("clipPath", { id: "clipPath-".concat(y2) }, import_react.default.createElement("rect", { x: s2, y: u2, width: c2, height: d2 }))) : null, !g2 && this.renderCurve(m2, y2), this.renderErrorBar(), (g2 || n2) && this.renderDots(m2, y2), (!f2 || h2) && kA.renderCallByParent(this.props, o3));
    } }], i2 = [{ key: "getDerivedStateFromProps", value: function(e28, t2) {
      return e28.animationId !== t2.prevAnimationId ? { prevAnimationId: e28.animationId, curPoints: e28.points, prevPoints: t2.curPoints } : e28.points !== t2.curPoints ? { curPoints: e28.points } : null;
    } }, { key: "repeat", value: function(e28, t2) {
      for (var r3 = e28.length % 2 != 0 ? [].concat(YL(e28), [0]) : e28, n2 = [], o3 = 0; o3 < t2; ++o3)
        n2 = [].concat(YL(n2), YL(r3));
      return n2;
    } }, { key: "renderDotItem", value: function(e28, r3) {
      var n2;
      if (import_react.default.isValidElement(e28))
        n2 = import_react.default.cloneElement(e28, r3);
      else if (Z(e28))
        n2 = e28(r3);
      else {
        var o3 = b("recharts-line-dot", e28 ? e28.className : "");
        n2 = import_react.default.createElement(MN, WL({}, r3, { className: o3 }));
      }
      return n2;
    } }], o2 && QL(r2.prototype, o2), i2 && QL(r2, i2), l2;
  }();
  function rI(e27) {
    return rI = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, rI(e27);
  }
  function nI(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function oI() {
    return oI = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, oI.apply(this, arguments);
  }
  function iI(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function aI(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? iI(Object(r2), true).forEach(function(t3) {
        lI(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : iI(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function lI(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function uI(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function sI(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function cI(e27, t2) {
    return cI = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, cI(e27, t2);
  }
  function dI(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = pI(e27);
      if (t2) {
        var o2 = pI(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return fI(this, r2);
    };
  }
  function fI(e27, t2) {
    return !t2 || "object" !== rI(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function pI(e27) {
    return pI = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, pI(e27);
  }
  tI.displayName = "Line", tI.defaultProps = { xAxisId: 0, yAxisId: 0, connectNulls: false, activeDot: true, dot: true, legendType: "line", stroke: "#3182bd", strokeWidth: 1, fill: "#fff", points: [], isAnimationActive: !Fw.isSsr, animateNewValues: true, animationBegin: 0, animationDuration: 1500, animationEasing: "ease", hide: false }, tI.getComposedData = function(e27) {
    var t2 = e27.props, r2 = e27.xAxis, n2 = e27.yAxis, o2 = e27.xAxisTicks, i2 = e27.yAxisTicks, a2 = e27.dataKey, l2 = e27.bandSize, u2 = e27.displayedData, s2 = e27.offset, c2 = t2.layout, d2 = u2.map(function(e28, t3) {
      var u3 = wB(e28, a2);
      return "horizontal" === c2 ? { x: LB({ axis: r2, ticks: o2, bandSize: l2, entry: e28, index: t3 }), y: yu(u3) ? null : n2.scale(u3), value: u3, payload: e28 } : { x: yu(u3) ? null : r2.scale(u3), y: LB({ axis: n2, ticks: i2, bandSize: l2, entry: e28, index: t3 }), value: u3, payload: e28 };
    });
    return $L({ points: d2, layout: c2 }, s2);
  };
  var hI = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && cI(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = dI(l2);
    function l2() {
      var e28;
      uI(this, l2);
      for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
        r3[n2] = arguments[n2];
      return (e28 = a2.call.apply(a2, [this].concat(r3))).state = { isAnimationFinished: true }, e28.id = Jl("recharts-area-"), e28.handleAnimationEnd = function() {
        var t3 = e28.props.onAnimationEnd;
        e28.setState({ isAnimationFinished: true }), Z(t3) && t3();
      }, e28.handleAnimationStart = function() {
        var t3 = e28.props.onAnimationStart;
        e28.setState({ isAnimationFinished: false }), Z(t3) && t3();
      }, e28;
    }
    return r2 = l2, o2 = [{ key: "renderDots", value: function(e28, r3) {
      var n2 = this.props.isAnimationActive, o3 = this.state.isAnimationFinished;
      if (n2 && !o3)
        return null;
      var i3 = this.props, a3 = i3.dot, u2 = i3.points, s2 = i3.dataKey, c2 = E(this.props), d2 = E(a3, true), f2 = u2.map(function(e29, t2) {
        var r4 = aI(aI(aI({ key: "dot-".concat(t2), r: 3 }, c2), d2), {}, { dataKey: s2, cx: e29.x, cy: e29.y, index: t2, value: e29.value, payload: e29.payload });
        return l2.renderDotItem(a3, r4);
      }), p2 = { clipPath: e28 ? "url(#clipPath-".concat(r3, ")") : null };
      return import_react.default.createElement(A, oI({ className: "recharts-area-dots" }, p2), f2);
    } }, { key: "renderHorizontalRect", value: function(e28) {
      var r3 = this.props, n2 = r3.baseLine, o3 = r3.points, i3 = r3.strokeWidth, a3 = o3[0].x, l3 = o3[o3.length - 1].x, u2 = e28 * Math.abs(a3 - l3), s2 = kT(o3.map(function(e29) {
        return e29.y || 0;
      }));
      return Ql(n2) && "number" == typeof n2 ? s2 = Math.max(n2, s2) : n2 && tr(n2) && n2.length && (s2 = Math.max(kT(n2.map(function(e29) {
        return e29.y || 0;
      })), s2)), Ql(s2) ? import_react.default.createElement("rect", { x: a3 < l3 ? a3 : a3 - u2, y: 0, width: u2, height: Math.floor(s2 + (i3 ? parseInt("".concat(i3), 10) : 1)) }) : null;
    } }, { key: "renderVerticalRect", value: function(e28) {
      var r3 = this.props, n2 = r3.baseLine, o3 = r3.points, i3 = r3.strokeWidth, a3 = o3[0].y, l3 = o3[o3.length - 1].y, u2 = e28 * Math.abs(a3 - l3), s2 = kT(o3.map(function(e29) {
        return e29.x || 0;
      }));
      return Ql(n2) && "number" == typeof n2 ? s2 = Math.max(n2, s2) : n2 && tr(n2) && n2.length && (s2 = Math.max(kT(n2.map(function(e29) {
        return e29.x || 0;
      })), s2)), Ql(s2) ? import_react.default.createElement("rect", { x: 0, y: a3 < l3 ? a3 : a3 - u2, width: s2 + (i3 ? parseInt("".concat(i3), 10) : 1), height: Math.floor(u2) }) : null;
    } }, { key: "renderClipRect", value: function(e28) {
      return "vertical" === this.props.layout ? this.renderVerticalRect(e28) : this.renderHorizontalRect(e28);
    } }, { key: "renderAreaStatically", value: function(e28, r3, n2, o3) {
      var i3 = this.props, a3 = i3.layout, l3 = i3.type, u2 = i3.stroke, s2 = i3.connectNulls, c2 = i3.isRange;
      i3.ref;
      var d2 = nI(i3, ["layout", "type", "stroke", "connectNulls", "isRange", "ref"]);
      return import_react.default.createElement(A, { clipPath: n2 ? "url(#clipPath-".concat(o3, ")") : null }, import_react.default.createElement(KA, oI({}, E(d2, true), { points: e28, connectNulls: s2, type: l3, baseLine: r3, layout: a3, stroke: "none", className: "recharts-area-area" })), "none" !== u2 && import_react.default.createElement(KA, oI({}, E(this.props), { className: "recharts-area-curve", layout: a3, type: l3, connectNulls: s2, fill: "none", points: e28 })), "none" !== u2 && c2 && import_react.default.createElement(KA, oI({}, E(this.props), { className: "recharts-area-curve", layout: a3, type: l3, connectNulls: s2, fill: "none", points: r3 })));
    } }, { key: "renderAreaWithAnimation", value: function(e28, r3) {
      var n2 = this, o3 = this.props, i3 = o3.points, a3 = o3.baseLine, l3 = o3.isAnimationActive, u2 = o3.animationBegin, s2 = o3.animationDuration, c2 = o3.animationEasing, d2 = o3.animationId, f2 = this.state, p2 = f2.prevPoints, h2 = f2.prevBaseLine;
      return import_react.default.createElement(Tc, { begin: u2, duration: s2, isActive: l3, easing: c2, from: { t: 0 }, to: { t: 1 }, key: "area-".concat(d2), onAnimationEnd: this.handleAnimationEnd, onAnimationStart: this.handleAnimationStart }, function(o4) {
        var l4 = o4.t;
        if (p2) {
          var u3, s3 = p2.length / i3.length, c3 = i3.map(function(e29, t2) {
            var r4 = Math.floor(t2 * s3);
            if (p2[r4]) {
              var n3 = p2[r4], o5 = ru(n3.x, e29.x), i4 = ru(n3.y, e29.y);
              return aI(aI({}, e29), {}, { x: o5(l4), y: i4(l4) });
            }
            return e29;
          });
          return u3 = Ql(a3) && "number" == typeof a3 ? ru(h2, a3)(l4) : yu(a3) || Wl(a3) ? ru(h2, 0)(l4) : a3.map(function(e29, t2) {
            var r4 = Math.floor(t2 * s3);
            if (h2[r4]) {
              var n3 = h2[r4], o5 = ru(n3.x, e29.x), i4 = ru(n3.y, e29.y);
              return aI(aI({}, e29), {}, { x: o5(l4), y: i4(l4) });
            }
            return e29;
          }), n2.renderAreaStatically(c3, u3, e28, r3);
        }
        return import_react.default.createElement(A, null, import_react.default.createElement("defs", null, import_react.default.createElement("clipPath", { id: "animationClipPath-".concat(r3) }, n2.renderClipRect(l4))), import_react.default.createElement(A, { clipPath: "url(#animationClipPath-".concat(r3, ")") }, n2.renderAreaStatically(i3, a3, e28, r3)));
      });
    } }, { key: "renderArea", value: function(e28, t2) {
      var r3 = this.props, n2 = r3.points, o3 = r3.baseLine, i3 = r3.isAnimationActive, a3 = this.state, l3 = a3.prevPoints, u2 = a3.prevBaseLine, s2 = a3.totalLength;
      return i3 && n2 && n2.length && (!l3 && s2 > 0 || !vT(l3, n2) || !vT(u2, o3)) ? this.renderAreaWithAnimation(e28, t2) : this.renderAreaStatically(n2, o3, e28, t2);
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.hide, n2 = e28.dot, o3 = e28.points, i3 = e28.className, a3 = e28.top, l3 = e28.left, u2 = e28.xAxis, s2 = e28.yAxis, c2 = e28.width, d2 = e28.height, f2 = e28.isAnimationActive, p2 = e28.id;
      if (r3 || !o3 || !o3.length)
        return null;
      var h2 = this.state.isAnimationFinished, g2 = 1 === o3.length, v2 = b("recharts-area", i3), m2 = u2 && u2.allowDataOverflow || s2 && s2.allowDataOverflow, y2 = yu(p2) ? this.id : p2;
      return import_react.default.createElement(A, { className: v2 }, m2 ? import_react.default.createElement("defs", null, import_react.default.createElement("clipPath", { id: "clipPath-".concat(y2) }, import_react.default.createElement("rect", { x: l3, y: a3, width: c2, height: Math.floor(d2) }))) : null, g2 ? null : this.renderArea(m2, y2), (n2 || g2) && this.renderDots(m2, y2), (!f2 || h2) && kA.renderCallByParent(this.props, o3));
    } }], i2 = [{ key: "getDerivedStateFromProps", value: function(e28, t2) {
      return e28.animationId !== t2.prevAnimationId ? { prevAnimationId: e28.animationId, curPoints: e28.points, curBaseLine: e28.baseLine, prevPoints: t2.curPoints, prevBaseLine: t2.curBaseLine } : e28.points !== t2.curPoints || e28.baseLine !== t2.curBaseLine ? { curPoints: e28.points, curBaseLine: e28.baseLine } : null;
    } }], o2 && sI(r2.prototype, o2), i2 && sI(r2, i2), l2;
  }();
  function gI(e27) {
    return gI = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, gI(e27);
  }
  function vI(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function mI() {
    return mI = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, mI.apply(this, arguments);
  }
  function yI(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function bI(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? yI(Object(r2), true).forEach(function(t3) {
        CI(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : yI(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function CI(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  function xI(e27, t2) {
    if (!(e27 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function wI(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function kI(e27, t2) {
    return kI = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, kI(e27, t2);
  }
  function SI(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = TI(e27);
      if (t2) {
        var o2 = TI(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return EI(this, r2);
    };
  }
  function EI(e27, t2) {
    return !t2 || "object" !== gI(t2) && "function" != typeof t2 ? function(e28) {
      if (void 0 === e28)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e28;
    }(e27) : t2;
  }
  function TI(e27) {
    return TI = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, TI(e27);
  }
  hI.displayName = "Area", hI.defaultProps = { stroke: "#3182bd", fill: "#3182bd", fillOpacity: 0.6, xAxisId: 0, yAxisId: 0, legendType: "line", connectNulls: false, points: [], dot: false, activeDot: true, hide: false, isAnimationActive: !Fw.isSsr, animationBegin: 0, animationDuration: 1500, animationEasing: "ease" }, hI.getBaseValue = function(e27, t2, r2) {
    var n2 = e27.layout, o2 = e27.baseValue;
    if (Ql(o2) && "number" == typeof o2)
      return o2;
    var i2 = "horizontal" === n2 ? r2 : t2, a2 = i2.scale.domain();
    if ("number" === i2.type) {
      var l2 = Math.max(a2[0], a2[1]), u2 = Math.min(a2[0], a2[1]);
      return "dataMin" === o2 ? u2 : "dataMax" === o2 || l2 < 0 ? l2 : Math.max(Math.min(a2[0], a2[1]), 0);
    }
    return "dataMin" === o2 ? a2[0] : "dataMax" === o2 ? a2[1] : a2[0];
  }, hI.getComposedData = function(e27) {
    var t2, r2 = e27.props, n2 = e27.xAxis, o2 = e27.yAxis, i2 = e27.xAxisTicks, a2 = e27.yAxisTicks, l2 = e27.bandSize, u2 = e27.dataKey, s2 = e27.stackedData, c2 = e27.dataStartIndex, d2 = e27.displayedData, f2 = e27.offset, p2 = r2.layout, h2 = s2 && s2.length, g2 = hI.getBaseValue(r2, n2, o2), v2 = false, m2 = d2.map(function(e28, t3) {
      var r3, d3 = wB(e28, u2);
      h2 ? r3 = s2[c2 + t3] : tr(r3 = d3) ? v2 = true : r3 = [g2, r3];
      var f3 = yu(r3[1]) || h2 && yu(d3);
      return "horizontal" === p2 ? { x: LB({ axis: n2, ticks: i2, bandSize: l2, entry: e28, index: t3 }), y: f3 ? null : o2.scale(r3[1]), value: r3, payload: e28 } : { x: f3 ? null : n2.scale(r3[1]), y: LB({ axis: o2, ticks: a2, bandSize: l2, entry: e28, index: t3 }), value: r3, payload: e28 };
    });
    return t2 = h2 || v2 ? m2.map(function(e28) {
      return "horizontal" === p2 ? { x: e28.x, y: yu(Fo(e28, "value[0]")) || yu(Fo(e28, "y")) ? null : o2.scale(Fo(e28, "value[0]")) } : { x: yu(Fo(e28, "value[0]")) ? null : n2.scale(Fo(e28, "value[0]")), y: e28.y };
    }) : "horizontal" === p2 ? o2.scale(g2) : n2.scale(g2), aI({ points: m2, baseLine: t2, layout: p2, isRange: v2 }, f2);
  }, hI.renderDotItem = function(e27, r2) {
    return import_react.default.isValidElement(e27) ? import_react.default.cloneElement(e27, r2) : Z(e27) ? e27(r2) : import_react.default.createElement(MN, oI({}, r2, { className: "recharts-area-dot" }));
  };
  var RI = function(e27) {
    !function(e28, t2) {
      if ("function" != typeof t2 && null !== t2)
        throw new TypeError("Super expression must either be null or a function");
      e28.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e28, writable: true, configurable: true } }), t2 && kI(e28, t2);
    }(l2, import_react.PureComponent);
    var r2, o2, i2, a2 = SI(l2);
    function l2() {
      var e28;
      xI(this, l2);
      for (var t2 = arguments.length, r3 = new Array(t2), n2 = 0; n2 < t2; n2++)
        r3[n2] = arguments[n2];
      return (e28 = a2.call.apply(a2, [this].concat(r3))).state = { isAnimationFinished: false }, e28.id = Jl("recharts-bar-"), e28.handleAnimationEnd = function() {
        var t3 = e28.props.onAnimationEnd;
        e28.setState({ isAnimationFinished: true }), t3 && t3();
      }, e28.handleAnimationStart = function() {
        var t3 = e28.props.onAnimationStart;
        e28.setState({ isAnimationFinished: false }), t3 && t3();
      }, e28;
    }
    return r2 = l2, o2 = [{ key: "renderRectanglesStatically", value: function(e28) {
      var r3 = this, n2 = this.props.shape, o3 = E(this.props);
      return e28 && e28.map(function(e29, i3) {
        var a3 = bI(bI(bI({}, o3), e29), {}, { index: i3 });
        return import_react.default.createElement(A, mI({ className: "recharts-bar-rectangle" }, R(r3.props, e29, i3), { key: "rectangle-".concat(i3) }), l2.renderRectangle(n2, a3));
      });
    } }, { key: "renderRectanglesWithAnimation", value: function() {
      var e28 = this, r3 = this.props, n2 = r3.data, o3 = r3.layout, i3 = r3.isAnimationActive, a3 = r3.animationBegin, l3 = r3.animationDuration, u2 = r3.animationEasing, s2 = r3.animationId, c2 = this.state.prevData;
      return import_react.default.createElement(Tc, { begin: a3, duration: l3, isActive: i3, easing: u2, from: { t: 0 }, to: { t: 1 }, key: "bar-".concat(s2), onAnimationEnd: this.handleAnimationEnd, onAnimationStart: this.handleAnimationStart }, function(r4) {
        var i4 = r4.t, a4 = n2.map(function(e29, t2) {
          var r5 = c2 && c2[t2];
          if (r5) {
            var n3 = ru(r5.x, e29.x), a5 = ru(r5.y, e29.y), l4 = ru(r5.width, e29.width), u3 = ru(r5.height, e29.height);
            return bI(bI({}, e29), {}, { x: n3(i4), y: a5(i4), width: l4(i4), height: u3(i4) });
          }
          if ("horizontal" === o3) {
            var s3 = ru(0, e29.height)(i4);
            return bI(bI({}, e29), {}, { y: e29.y + e29.height - s3, height: s3 });
          }
          var d2 = ru(0, e29.width)(i4);
          return bI(bI({}, e29), {}, { width: d2 });
        });
        return import_react.default.createElement(A, null, e28.renderRectanglesStatically(a4));
      });
    } }, { key: "renderRectangles", value: function() {
      var e28 = this.props, t2 = e28.data, r3 = e28.isAnimationActive, n2 = this.state.prevData;
      return !(r3 && t2 && t2.length) || n2 && vT(n2, t2) ? this.renderRectanglesStatically(t2) : this.renderRectanglesWithAnimation();
    } }, { key: "renderBackground", value: function() {
      var e28 = this, t2 = this.props.data, r3 = E(this.props.background);
      return t2.map(function(t3, n2) {
        t3.value;
        var o3 = t3.background, i3 = vI(t3, ["value", "background"]);
        if (!o3)
          return null;
        var a3 = bI(bI(bI(bI(bI({}, i3), {}, { fill: "#eee" }, o3), r3), R(e28.props, t3, n2)), {}, { index: n2, key: "background-bar-".concat(n2), className: "recharts-bar-background-rectangle" });
        return l2.renderRectangle(e28.props.background, a3);
      });
    } }, { key: "renderErrorBar", value: function() {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished)
        return null;
      var e28 = this.props, r3 = e28.data, n2 = e28.xAxis, o3 = e28.yAxis, i3 = e28.layout, a3 = e28.children, l3 = uT(a3, FL.displayName);
      if (!l3)
        return null;
      var u2 = "vertical" === i3 ? r3[0].height / 2 : r3[0].width / 2;
      function s2(e29, t2) {
        return { x: e29.x, y: e29.y, value: e29.value, errorVal: wB(e29, t2) };
      }
      return l3.map(function(e29, a4) {
        return import_react.default.cloneElement(e29, { key: "error-bar-".concat(a4), data: r3, xAxis: n2, yAxis: o3, layout: i3, offset: u2, dataPointFormatter: s2 });
      });
    } }, { key: "render", value: function() {
      var e28 = this.props, r3 = e28.hide, n2 = e28.data, o3 = e28.className, i3 = e28.xAxis, a3 = e28.yAxis, l3 = e28.left, u2 = e28.top, s2 = e28.width, c2 = e28.height, d2 = e28.isAnimationActive, f2 = e28.background, p2 = e28.id;
      if (r3 || !n2 || !n2.length)
        return null;
      var h2 = this.state.isAnimationFinished, g2 = b("recharts-bar", o3), v2 = i3 && i3.allowDataOverflow || a3 && a3.allowDataOverflow, m2 = yu(p2) ? this.id : p2;
      return import_react.default.createElement(A, { className: g2 }, v2 ? import_react.default.createElement("defs", null, import_react.default.createElement("clipPath", { id: "clipPath-".concat(m2) }, import_react.default.createElement("rect", { x: l3, y: u2, width: s2, height: c2 }))) : null, import_react.default.createElement(A, { className: "recharts-bar-rectangles", clipPath: v2 ? "url(#clipPath-".concat(m2, ")") : null }, f2 ? this.renderBackground() : null, this.renderRectangles()), this.renderErrorBar(), (!d2 || h2) && kA.renderCallByParent(this.props, n2));
    } }], i2 = [{ key: "getDerivedStateFromProps", value: function(e28, t2) {
      return e28.animationId !== t2.prevAnimationId ? { prevAnimationId: e28.animationId, curData: e28.data, prevData: t2.curData } : e28.data !== t2.curData ? { curData: e28.data } : null;
    } }, { key: "renderRectangle", value: function(e28, r3) {
      return import_react.default.isValidElement(e28) ? import_react.default.cloneElement(e28, r3) : Z(e28) ? e28(r3) : import_react.default.createElement(uN, r3);
    } }], o2 && wI(r2.prototype, o2), i2 && wI(r2, i2), l2;
  }();
  RI.displayName = "Bar", RI.defaultProps = { xAxisId: 0, yAxisId: 0, legendType: "rect", minPointSize: 0, hide: false, data: [], layout: "vertical", isAnimationActive: !Fw.isSsr, animationBegin: 0, animationDuration: 400, animationEasing: "ease" }, RI.getComposedData = function(e27) {
    var t2 = e27.props, r2 = e27.item, n2 = e27.barPosition, o2 = e27.bandSize, i2 = e27.xAxis, a2 = e27.yAxis, l2 = e27.xAxisTicks, u2 = e27.yAxisTicks, s2 = e27.stackedData, c2 = e27.dataStartIndex, d2 = e27.displayedData, f2 = e27.offset, p2 = function(e28, t3) {
      if (!e28)
        return null;
      for (var r3 = 0, n3 = e28.length; r3 < n3; r3++)
        if (e28[r3].item === t3)
          return e28[r3].position;
      return null;
    }(n2, r2);
    if (!p2)
      return null;
    var h2 = t2.layout, g2 = r2.props, v2 = g2.dataKey, m2 = g2.children, y2 = g2.minPointSize, b2 = "horizontal" === h2 ? a2 : i2, C2 = s2 ? b2.scale.domain() : null, x2 = function(e28) {
      var t3 = e28.numericAxis, r3 = t3.scale.domain();
      if ("number" === t3.type) {
        var n3 = Math.min(r3[0], r3[1]), o3 = Math.max(r3[0], r3[1]);
        return n3 <= 0 && o3 >= 0 ? 0 : o3 < 0 ? o3 : n3;
      }
      return r3[0];
    }({ numericAxis: b2 }), w2 = uT(m2, yS.displayName), k2 = d2.map(function(e28, t3) {
      var n3, d3, f3, g3, m3, b3;
      if (s2 ? n3 = function(e29, t4) {
        if (!t4 || 2 !== t4.length || !Ql(t4[0]) || !Ql(t4[1]))
          return e29;
        var r3 = Math.min(t4[0], t4[1]), n4 = Math.max(t4[0], t4[1]), o3 = [e29[0], e29[1]];
        return (!Ql(e29[0]) || e29[0] < r3) && (o3[0] = r3), (!Ql(e29[1]) || e29[1] > n4) && (o3[1] = n4), o3[0] > n4 && (o3[0] = n4), o3[1] < r3 && (o3[1] = r3), o3;
      }(s2[c2 + t3], C2) : (n3 = wB(e28, v2), tr(n3) || (n3 = [x2, n3])), "horizontal" === h2) {
        if (d3 = IB({ axis: i2, ticks: l2, bandSize: o2, offset: p2.offset, entry: e28, index: t3 }), f3 = a2.scale(n3[1]), g3 = p2.size, m3 = a2.scale(n3[0]) - a2.scale(n3[1]), b3 = { x: d3, y: a2.y, width: g3, height: a2.height }, Math.abs(y2) > 0 && Math.abs(m3) < Math.abs(y2)) {
          var k3 = Gl(m3 || y2) * (Math.abs(y2) - Math.abs(m3));
          f3 -= k3, m3 += k3;
        }
      } else
        d3 = i2.scale(n3[0]), f3 = IB({ axis: a2, ticks: u2, bandSize: o2, offset: p2.offset, entry: e28, index: t3 }), g3 = i2.scale(n3[1]) - i2.scale(n3[0]), m3 = p2.size, b3 = { x: i2.x, y: f3, width: i2.width, height: m3 }, Math.abs(y2) > 0 && Math.abs(g3) < Math.abs(y2) && (g3 += Gl(g3 || y2) * (Math.abs(y2) - Math.abs(g3)));
      return bI(bI(bI({}, e28), {}, { x: d3, y: f3, width: g3, height: m3, value: s2 ? n3 : n3[1], payload: e28, background: b3 }, w2 && w2[t3] && w2[t3].props), {}, { tooltipPayload: [$B(r2, e28)], tooltipPosition: { x: d3 + g3 / 2, y: f3 + m3 / 2 } });
    });
    return bI({ data: k2, layout: h2 }, f2);
  };
  var OI = function() {
    return null;
  };
  OI.displayName = "XAxis", OI.defaultProps = { allowDecimals: true, hide: false, orientation: "bottom", width: 0, height: 30, mirror: false, xAxisId: 0, tickCount: 5, type: "category", domain: [0, "auto"], padding: { left: 0, right: 0 }, allowDataOverflow: false, scale: "auto", reversed: false, allowDuplicatedCategory: true };
  var _I = function() {
    return null;
  };
  _I.displayName = "YAxis", _I.defaultProps = { allowDuplicatedCategory: true, allowDecimals: true, hide: false, orientation: "left", width: 60, height: 0, mirror: false, yAxisId: 0, tickCount: 5, type: "number", domain: [0, "auto"], padding: { top: 0, bottom: 0 }, allowDataOverflow: false, scale: "auto", reversed: false };
  var PI = Ci;
  var MI = nn;
  var BI = un;
  var AI = function(e27) {
    return function(t2, r2, n2) {
      var o2 = Object(t2);
      if (!MI(t2)) {
        var i2 = PI(r2);
        t2 = BI(t2), r2 = function(e28) {
          return i2(o2[e28], e28, o2);
        };
      }
      var a2 = e27(t2, r2, n2);
      return a2 > -1 ? o2[i2 ? t2[a2] : a2] : void 0;
    };
  };
  var NI = qj;
  var jI = xi;
  var DI = Ci;
  var LI = function(e27) {
    var t2 = NI(e27), r2 = t2 % 1;
    return t2 == t2 ? r2 ? t2 - r2 : t2 : 0;
  };
  var II = Math.max;
  var zI = function(e27, t2, r2) {
    var n2 = null == e27 ? 0 : e27.length;
    if (!n2)
      return -1;
    var o2 = null == r2 ? 0 : LI(r2);
    return o2 < 0 && (o2 = II(n2 + o2, 0)), jI(e27, DI(t2), o2);
  };
  var FI = AI(zI);
  var UI = bk;
  var VI = C;
  var WI = function(e27, t2, r2) {
    var n2 = true, o2 = true;
    if ("function" != typeof e27)
      throw new TypeError("Expected a function");
    return VI(r2) && (n2 = "leading" in r2 ? !!r2.leading : n2, o2 = "trailing" in r2 ? !!r2.trailing : o2), UI(e27, t2, { leading: n2, maxWait: t2, trailing: o2 });
  };
  var HI = X;
  var $I = pr;
  var qI = function(e27) {
    return true === e27 || false === e27 || $I(e27) && "[object Boolean]" == HI(e27);
  };
  var YI = function(e27, t2, r2, n2, o2) {
    var i2 = uT(e27, JD.displayName), a2 = uT(e27, oL.displayName), l2 = i2.concat(a2), u2 = uT(e27, sL.displayName), s2 = "".concat(n2, "Id"), c2 = n2[0], d2 = t2;
    if (l2.length && (d2 = l2.reduce(function(e28, t3) {
      if (t3.props[s2] === r2 && kD(t3.props, "extendDomain") && Ql(t3.props[c2])) {
        var n3 = t3.props[c2];
        return [Math.min(e28[0], n3), Math.max(e28[1], n3)];
      }
      return e28;
    }, d2)), u2.length) {
      var f2 = "".concat(c2, "1"), p2 = "".concat(c2, "2");
      d2 = u2.reduce(function(e28, t3) {
        if (t3.props[s2] === r2 && kD(t3.props, "extendDomain") && Ql(t3.props[f2]) && Ql(t3.props[p2])) {
          var n3 = t3.props[f2], o3 = t3.props[p2];
          return [Math.min(e28[0], n3, o3), Math.max(e28[1], n3, o3)];
        }
        return e28;
      }, d2);
    }
    return o2 && o2.length && (d2 = o2.reduce(function(e28, t3) {
      return Ql(t3) ? [Math.min(e28[0], t3), Math.max(e28[1], t3)] : e28;
    }, d2)), d2;
  };
  var GI = { exports: {} };
  !function(e27) {
    var t2 = Object.prototype.hasOwnProperty, r2 = "~";
    function n2() {
    }
    function o2(e28, t3, r3) {
      this.fn = e28, this.context = t3, this.once = r3 || false;
    }
    function i2(e28, t3, n3, i3, a3) {
      if ("function" != typeof n3)
        throw new TypeError("The listener must be a function");
      var l3 = new o2(n3, i3 || e28, a3), u2 = r2 ? r2 + t3 : t3;
      return e28._events[u2] ? e28._events[u2].fn ? e28._events[u2] = [e28._events[u2], l3] : e28._events[u2].push(l3) : (e28._events[u2] = l3, e28._eventsCount++), e28;
    }
    function a2(e28, t3) {
      0 == --e28._eventsCount ? e28._events = new n2() : delete e28._events[t3];
    }
    function l2() {
      this._events = new n2(), this._eventsCount = 0;
    }
    Object.create && (n2.prototype = /* @__PURE__ */ Object.create(null), new n2().__proto__ || (r2 = false)), l2.prototype.eventNames = function() {
      var e28, n3, o3 = [];
      if (0 === this._eventsCount)
        return o3;
      for (n3 in e28 = this._events)
        t2.call(e28, n3) && o3.push(r2 ? n3.slice(1) : n3);
      return Object.getOwnPropertySymbols ? o3.concat(Object.getOwnPropertySymbols(e28)) : o3;
    }, l2.prototype.listeners = function(e28) {
      var t3 = r2 ? r2 + e28 : e28, n3 = this._events[t3];
      if (!n3)
        return [];
      if (n3.fn)
        return [n3.fn];
      for (var o3 = 0, i3 = n3.length, a3 = new Array(i3); o3 < i3; o3++)
        a3[o3] = n3[o3].fn;
      return a3;
    }, l2.prototype.listenerCount = function(e28) {
      var t3 = r2 ? r2 + e28 : e28, n3 = this._events[t3];
      return n3 ? n3.fn ? 1 : n3.length : 0;
    }, l2.prototype.emit = function(e28, t3, n3, o3, i3, a3) {
      var l3 = r2 ? r2 + e28 : e28;
      if (!this._events[l3])
        return false;
      var u2, s2, c2 = this._events[l3], d2 = arguments.length;
      if (c2.fn) {
        switch (c2.once && this.removeListener(e28, c2.fn, void 0, true), d2) {
          case 1:
            return c2.fn.call(c2.context), true;
          case 2:
            return c2.fn.call(c2.context, t3), true;
          case 3:
            return c2.fn.call(c2.context, t3, n3), true;
          case 4:
            return c2.fn.call(c2.context, t3, n3, o3), true;
          case 5:
            return c2.fn.call(c2.context, t3, n3, o3, i3), true;
          case 6:
            return c2.fn.call(c2.context, t3, n3, o3, i3, a3), true;
        }
        for (s2 = 1, u2 = new Array(d2 - 1); s2 < d2; s2++)
          u2[s2 - 1] = arguments[s2];
        c2.fn.apply(c2.context, u2);
      } else {
        var f2, p2 = c2.length;
        for (s2 = 0; s2 < p2; s2++)
          switch (c2[s2].once && this.removeListener(e28, c2[s2].fn, void 0, true), d2) {
            case 1:
              c2[s2].fn.call(c2[s2].context);
              break;
            case 2:
              c2[s2].fn.call(c2[s2].context, t3);
              break;
            case 3:
              c2[s2].fn.call(c2[s2].context, t3, n3);
              break;
            case 4:
              c2[s2].fn.call(c2[s2].context, t3, n3, o3);
              break;
            default:
              if (!u2)
                for (f2 = 1, u2 = new Array(d2 - 1); f2 < d2; f2++)
                  u2[f2 - 1] = arguments[f2];
              c2[s2].fn.apply(c2[s2].context, u2);
          }
      }
      return true;
    }, l2.prototype.on = function(e28, t3, r3) {
      return i2(this, e28, t3, r3, false);
    }, l2.prototype.once = function(e28, t3, r3) {
      return i2(this, e28, t3, r3, true);
    }, l2.prototype.removeListener = function(e28, t3, n3, o3) {
      var i3 = r2 ? r2 + e28 : e28;
      if (!this._events[i3])
        return this;
      if (!t3)
        return a2(this, i3), this;
      var l3 = this._events[i3];
      if (l3.fn)
        l3.fn !== t3 || o3 && !l3.once || n3 && l3.context !== n3 || a2(this, i3);
      else {
        for (var u2 = 0, s2 = [], c2 = l3.length; u2 < c2; u2++)
          (l3[u2].fn !== t3 || o3 && !l3[u2].once || n3 && l3[u2].context !== n3) && s2.push(l3[u2]);
        s2.length ? this._events[i3] = 1 === s2.length ? s2[0] : s2 : a2(this, i3);
      }
      return this;
    }, l2.prototype.removeAllListeners = function(e28) {
      var t3;
      return e28 ? (t3 = r2 ? r2 + e28 : e28, this._events[t3] && a2(this, t3)) : (this._events = new n2(), this._eventsCount = 0), this;
    }, l2.prototype.off = l2.prototype.removeListener, l2.prototype.addListener = l2.prototype.on, l2.prefixed = r2, l2.EventEmitter = l2, e27.exports = l2;
  }(GI);
  var XI = new (0, GI.exports)();
  XI.setMaxListeners && XI.setMaxListeners(10);
  var QI = "recharts.syncMouseEvents";
  function KI(e27) {
    return KI = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e28) {
      return typeof e28;
    } : function(e28) {
      return e28 && "function" == typeof Symbol && e28.constructor === Symbol && e28 !== Symbol.prototype ? "symbol" : typeof e28;
    }, KI(e27);
  }
  function ZI(e27, t2) {
    return function(e28) {
      if (Array.isArray(e28))
        return e28;
    }(e27) || function(e28, t3) {
      if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e28)))
        return;
      var r2 = [], n2 = true, o2 = false, i2 = void 0;
      try {
        for (var a2, l2 = e28[Symbol.iterator](); !(n2 = (a2 = l2.next()).done) && (r2.push(a2.value), !t3 || r2.length !== t3); n2 = true)
          ;
      } catch (e29) {
        o2 = true, i2 = e29;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (o2)
            throw i2;
        }
      }
      return r2;
    }(e27, t2) || uz(e27, t2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function JI() {
    return JI = Object.assign || function(e27) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var r2 = arguments[t2];
        for (var n2 in r2)
          Object.prototype.hasOwnProperty.call(r2, n2) && (e27[n2] = r2[n2]);
      }
      return e27;
    }, JI.apply(this, arguments);
  }
  function ez(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = function(e28, t3) {
      if (null == e28)
        return {};
      var r3, n3, o3 = {}, i3 = Object.keys(e28);
      for (n3 = 0; n3 < i3.length; n3++)
        r3 = i3[n3], t3.indexOf(r3) >= 0 || (o3[r3] = e28[r3]);
      return o3;
    }(e27, t2);
    if (Object.getOwnPropertySymbols) {
      var i2 = Object.getOwnPropertySymbols(e27);
      for (n2 = 0; n2 < i2.length; n2++)
        r2 = i2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e27, r2) && (o2[r2] = e27[r2]);
    }
    return o2;
  }
  function tz(e27, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e27, n2.key, n2);
    }
  }
  function rz(e27, t2) {
    return rz = Object.setPrototypeOf || function(e28, t3) {
      return e28.__proto__ = t3, e28;
    }, rz(e27, t2);
  }
  function nz(e27) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e28) {
        return false;
      }
    }();
    return function() {
      var r2, n2 = az(e27);
      if (t2) {
        var o2 = az(this).constructor;
        r2 = Reflect.construct(n2, arguments, o2);
      } else
        r2 = n2.apply(this, arguments);
      return oz(this, r2);
    };
  }
  function oz(e27, t2) {
    return !t2 || "object" !== KI(t2) && "function" != typeof t2 ? iz(e27) : t2;
  }
  function iz(e27) {
    if (void 0 === e27)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e27;
  }
  function az(e27) {
    return az = Object.setPrototypeOf ? Object.getPrototypeOf : function(e28) {
      return e28.__proto__ || Object.getPrototypeOf(e28);
    }, az(e27);
  }
  function lz(e27) {
    return function(e28) {
      if (Array.isArray(e28))
        return sz(e28);
    }(e27) || function(e28) {
      if ("undefined" != typeof Symbol && Symbol.iterator in Object(e28))
        return Array.from(e28);
    }(e27) || uz(e27) || function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function uz(e27, t2) {
    if (e27) {
      if ("string" == typeof e27)
        return sz(e27, t2);
      var r2 = Object.prototype.toString.call(e27).slice(8, -1);
      return "Object" === r2 && e27.constructor && (r2 = e27.constructor.name), "Map" === r2 || "Set" === r2 ? Array.from(e27) : "Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2) ? sz(e27, t2) : void 0;
    }
  }
  function sz(e27, t2) {
    (null == t2 || t2 > e27.length) && (t2 = e27.length);
    for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
      n2[r2] = e27[r2];
    return n2;
  }
  function cz(e27, t2) {
    var r2 = Object.keys(e27);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e27);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e27, t3).enumerable;
      })), r2.push.apply(r2, n2);
    }
    return r2;
  }
  function dz(e27) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? cz(Object(r2), true).forEach(function(t3) {
        fz(e27, t3, r2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e27, Object.getOwnPropertyDescriptors(r2)) : cz(Object(r2)).forEach(function(t3) {
        Object.defineProperty(e27, t3, Object.getOwnPropertyDescriptor(r2, t3));
      });
    }
    return e27;
  }
  function fz(e27, t2, r2) {
    return t2 in e27 ? Object.defineProperty(e27, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e27[t2] = r2, e27;
  }
  var pz = { xAxis: ["bottom", "top"], yAxis: ["left", "right"] };
  var hz = { x: 0, y: 0 };
  var gz = Number.isFinite ? Number.isFinite : isFinite;
  var vz = "function" == typeof requestAnimationFrame ? requestAnimationFrame : "function" == typeof setImmediate ? setImmediate : setTimeout;
  var mz = "function" == typeof cancelAnimationFrame ? cancelAnimationFrame : "function" == typeof clearImmediate ? clearImmediate : clearTimeout;
  var yz = function(e27, t2, r2) {
    var n2 = t2.graphicalItems, o2 = t2.dataStartIndex, i2 = t2.dataEndIndex, a2 = (n2 || []).reduce(function(e28, t3) {
      var r3 = t3.props.data;
      return r3 && r3.length ? [].concat(lz(e28), lz(r3)) : e28;
    }, []);
    return a2 && a2.length > 0 ? a2 : r2 && r2.props && r2.props.data && r2.props.data.length > 0 ? r2.props.data : e27 && e27.length && Ql(o2) && Ql(i2) ? e27.slice(o2, i2 + 1) : [];
  };
  var bz = function(e27, t2, r2, n2) {
    var o2 = e27.graphicalItems, i2 = e27.tooltipAxis, a2 = yz(t2, e27);
    return r2 < 0 || !o2 || !o2.length || r2 >= a2.length ? null : o2.reduce(function(e28, t3) {
      if (t3.props.hide)
        return e28;
      var o3, l2 = t3.props.data;
      i2.dataKey && !i2.allowDuplicatedCategory ? o3 = nu(void 0 === l2 ? a2 : l2, i2.dataKey, n2) : o3 = l2 && l2[r2] || a2[r2];
      return o3 ? [].concat(lz(e28), [$B(t3, o3)]) : e28;
    }, []);
  };
  var Cz = function(e27, t2, r2, n2) {
    var o2 = n2 || { x: e27.chartX, y: e27.chartY }, i2 = function(e28, t3) {
      return "horizontal" === t3 ? e28.x : "vertical" === t3 ? e28.y : "centric" === t3 ? e28.angle : e28.radius;
    }(o2, r2), a2 = e27.orderedTooltipTicks, l2 = e27.tooltipAxis, u2 = e27.tooltipTicks, s2 = function(e28) {
      var t3, r3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], n3 = arguments.length > 2 ? arguments[2] : void 0, o3 = arguments.length > 3 ? arguments[3] : void 0, i3 = -1, a3 = null !== (t3 = null == r3 ? void 0 : r3.length) && void 0 !== t3 ? t3 : 0;
      if (a3 > 1) {
        if (o3 && "angleAxis" === o3.axisType && Math.abs(Math.abs(o3.range[1] - o3.range[0]) - 360) <= 1e-6)
          for (var l3 = o3.range, u3 = 0; u3 < a3; u3++) {
            var s3 = u3 > 0 ? n3[u3 - 1].coordinate : n3[a3 - 1].coordinate, c3 = n3[u3].coordinate, d3 = u3 >= a3 - 1 ? n3[0].coordinate : n3[u3 + 1].coordinate, f3 = void 0;
            if (Gl(c3 - s3) !== Gl(d3 - c3)) {
              var p2 = [];
              if (Gl(d3 - c3) === Gl(l3[1] - l3[0])) {
                f3 = d3;
                var h2 = c3 + l3[1] - l3[0];
                p2[0] = Math.min(h2, (h2 + s3) / 2), p2[1] = Math.max(h2, (h2 + s3) / 2);
              } else {
                f3 = s3;
                var g2 = d3 + l3[1] - l3[0];
                p2[0] = Math.min(c3, (g2 + c3) / 2), p2[1] = Math.max(c3, (g2 + c3) / 2);
              }
              var v2 = [Math.min(c3, (f3 + c3) / 2), Math.max(c3, (f3 + c3) / 2)];
              if (e28 > v2[0] && e28 <= v2[1] || e28 >= p2[0] && e28 <= p2[1]) {
                i3 = n3[u3].index;
                break;
              }
            } else {
              var m2 = Math.min(s3, d3), y2 = Math.max(s3, d3);
              if (e28 > (m2 + c3) / 2 && e28 <= (y2 + c3) / 2) {
                i3 = n3[u3].index;
                break;
              }
            }
          }
        else
          for (var b2 = 0; b2 < a3; b2++)
            if (0 === b2 && e28 <= (r3[b2].coordinate + r3[b2 + 1].coordinate) / 2 || b2 > 0 && b2 < a3 - 1 && e28 > (r3[b2].coordinate + r3[b2 - 1].coordinate) / 2 && e28 <= (r3[b2].coordinate + r3[b2 + 1].coordinate) / 2 || b2 === a3 - 1 && e28 > (r3[b2].coordinate + r3[b2 - 1].coordinate) / 2) {
              i3 = r3[b2].index;
              break;
            }
      } else
        i3 = 0;
      return i3;
    }(i2, a2, u2, l2);
    if (s2 >= 0 && u2) {
      var c2 = u2[s2] && u2[s2].value, d2 = bz(e27, t2, s2, c2), f2 = function(e28, t3, r3, n3) {
        var o3 = t3.find(function(e29) {
          return e29 && e29.index === r3;
        });
        if (o3) {
          if ("horizontal" === e28)
            return { x: o3.coordinate, y: n3.y };
          if ("vertical" === e28)
            return { x: n3.x, y: o3.coordinate };
          if ("centric" === e28) {
            var i3 = o3.coordinate, a3 = n3.radius;
            return dz(dz(dz({}, n3), JB(n3.cx, n3.cy, a3, i3)), {}, { angle: i3, radius: a3 });
          }
          var l3 = o3.coordinate, u3 = n3.angle;
          return dz(dz(dz({}, n3), JB(n3.cx, n3.cy, l3, u3)), {}, { angle: u3, radius: l3 });
        }
        return hz;
      }(r2, a2, s2, o2);
      return { activeTooltipIndex: s2, activeLabel: c2, activePayload: d2, activeCoordinate: f2 };
    }
    return null;
  };
  var xz = function(e27, t2) {
    var r2 = t2.axes, n2 = t2.graphicalItems, o2 = t2.axisType, i2 = t2.axisIdKey, a2 = t2.stackGroups, l2 = t2.dataStartIndex, u2 = t2.dataEndIndex, s2 = e27.layout, c2 = e27.children, d2 = e27.stackOffset, f2 = OB(s2, o2), p2 = r2.reduce(function(t3, r3) {
      var p3 = r3.props, h2 = p3.type, g2 = p3.dataKey, v2 = p3.allowDataOverflow, m2 = p3.allowDuplicatedCategory, y2 = p3.scale, b2 = p3.ticks, C2 = r3.props[i2], x2 = yz(e27.data, { graphicalItems: n2.filter(function(e28) {
        return e28.props[i2] === C2;
      }), dataStartIndex: l2, dataEndIndex: u2 }), w2 = x2.length;
      if (!t3[C2]) {
        var k2, S2, E2;
        if (g2) {
          if (k2 = kB(x2, g2, h2), "category" === h2 && f2) {
            var T2 = function(e28) {
              if (!tr(e28))
                return false;
              for (var t4 = e28.length, r4 = {}, n3 = 0; n3 < t4; n3++) {
                if (r4[e28[n3]])
                  return true;
                r4[e28[n3]] = true;
              }
              return false;
            }(k2);
            m2 && T2 ? (S2 = k2, k2 = Kj(0, w2)) : m2 || (k2 = HB(r3.props.domain, k2, r3).reduce(function(e28, t4) {
              return e28.indexOf(t4) >= 0 ? e28 : [].concat(lz(e28), [t4]);
            }, []));
          } else if ("category" === h2)
            k2 = m2 ? k2.filter(function(e28) {
              return "" !== e28 && !yu(e28);
            }) : HB(r3.props.domain, k2, r3).reduce(function(e28, t4) {
              return e28.indexOf(t4) >= 0 || "" === t4 || yu(t4) ? e28 : [].concat(lz(e28), [t4]);
            }, []);
          else if ("number" === h2) {
            var R2 = function(e28, t4, r4, n3, o3) {
              var i3 = t4.map(function(t5) {
                return TB(e28, t5, r4, o3, n3);
              }).filter(function(e29) {
                return !yu(e29);
              });
              return i3 && i3.length ? i3.reduce(function(e29, t5) {
                return [Math.min(e29[0], t5[0]), Math.max(e29[1], t5[1])];
              }, [1 / 0, -1 / 0]) : null;
            }(x2, n2.filter(function(e28) {
              return e28.props[i2] === C2 && !e28.props.hide;
            }), g2, o2, s2);
            R2 && (k2 = R2);
          }
          !f2 || "number" !== h2 && "auto" === y2 || (E2 = kB(x2, g2, "category"));
        } else
          k2 = f2 ? Kj(0, w2) : a2 && a2[C2] && a2[C2].hasStack && "number" === h2 ? "expand" === d2 ? [0, 1] : zB(a2[C2].stackGroups, l2, u2) : RB(x2, n2.filter(function(e28) {
            return e28.props[i2] === C2 && !e28.props.hide;
          }), h2, s2, true);
        if ("number" === h2)
          k2 = YI(c2, k2, C2, o2, b2), r3.props.domain && (k2 = VB(r3.props.domain, k2, v2));
        else if ("category" === h2 && r3.props.domain) {
          var O2 = r3.props.domain;
          k2.every(function(e28) {
            return O2.indexOf(e28) >= 0;
          }) && (k2 = O2);
        }
        return dz(dz({}, t3), {}, fz({}, C2, dz(dz({}, r3.props), {}, { axisType: o2, domain: k2, categoricalDomain: E2, duplicateDomain: S2, originalDomain: r3.props.domain, isCategorical: f2, layout: s2 })));
      }
      return t3;
    }, {});
    return p2;
  };
  var wz = function(e27, t2) {
    var r2 = t2.axisType, n2 = void 0 === r2 ? "xAxis" : r2, o2 = t2.AxisComp, i2 = t2.graphicalItems, a2 = t2.stackGroups, l2 = t2.dataStartIndex, u2 = t2.dataEndIndex, s2 = e27.children, c2 = "".concat(n2, "Id"), d2 = uT(s2, o2), f2 = {};
    return d2 && d2.length ? f2 = xz(e27, { axes: d2, graphicalItems: i2, axisType: n2, axisIdKey: c2, stackGroups: a2, dataStartIndex: l2, dataEndIndex: u2 }) : i2 && i2.length && (f2 = function(e28, t3) {
      var r3 = t3.graphicalItems, n3 = t3.Axis, o3 = t3.axisType, i3 = t3.axisIdKey, a3 = t3.stackGroups, l3 = t3.dataStartIndex, u3 = t3.dataEndIndex, s3 = e28.layout, c3 = e28.children, d3 = yz(e28.data, { graphicalItems: r3, dataStartIndex: l3, dataEndIndex: u3 }), f3 = d3.length, p2 = OB(s3, o3), h2 = -1;
      return r3.reduce(function(e29, t4) {
        var g2, v2 = t4.props[i3];
        return e29[v2] ? e29 : (h2++, p2 ? g2 = Kj(0, f3) : a3 && a3[v2] && a3[v2].hasStack ? (g2 = zB(a3[v2].stackGroups, l3, u3), g2 = YI(c3, g2, v2, o3)) : (g2 = VB(n3.defaultProps.domain, RB(d3, r3.filter(function(e30) {
          return e30.props[i3] === v2 && !e30.props.hide;
        }), "number", s3), n3.defaultProps.allowDataOverflow), g2 = YI(c3, g2, v2, o3)), dz(dz({}, e29), {}, fz({}, v2, dz(dz({ axisType: o3 }, n3.defaultProps), {}, { hide: true, orientation: Fo(pz, "".concat(o3, ".").concat(h2 % 2), null), domain: g2, originalDomain: n3.defaultProps.domain, isCategorical: p2, layout: s3 }))));
      }, {});
    }(e27, { Axis: o2, graphicalItems: i2, axisType: n2, axisIdKey: c2, stackGroups: a2, dataStartIndex: l2, dataEndIndex: u2 })), f2;
  };
  var kz = function(e27) {
    var t2 = e27.children, r2 = e27.defaultShowTooltip, n2 = sT(t2, hD.displayName);
    return { chartX: 0, chartY: 0, dataStartIndex: n2 && n2.props && n2.props.startIndex || 0, dataEndIndex: n2 && n2.props && n2.props.endIndex || e27.data && e27.data.length - 1 || 0, activeTooltipIndex: -1, isTooltipActive: !yu(r2) && r2 };
  };
  var Sz = function(e27) {
    return "horizontal" === e27 ? { numericAxisName: "yAxis", cateAxisName: "xAxis" } : "vertical" === e27 ? { numericAxisName: "xAxis", cateAxisName: "yAxis" } : "centric" === e27 ? { numericAxisName: "radiusAxis", cateAxisName: "angleAxis" } : { numericAxisName: "angleAxis", cateAxisName: "radiusAxis" };
  };
  var Ez = function(e27, t2) {
    var r2 = e27.props, n2 = (e27.graphicalItems, e27.xAxisMap), o2 = void 0 === n2 ? {} : n2, i2 = e27.yAxisMap, a2 = void 0 === i2 ? {} : i2, l2 = r2.width, u2 = r2.height, s2 = r2.children, c2 = r2.margin || {}, d2 = sT(s2, hD.displayName), f2 = sT(s2, mu.displayName), p2 = Object.keys(a2).reduce(function(e28, t3) {
      var r3 = a2[t3], n3 = r3.orientation;
      return r3.mirror || r3.hide ? e28 : dz(dz({}, e28), {}, fz({}, n3, e28[n3] + r3.width));
    }, { left: c2.left || 0, right: c2.right || 0 }), h2 = Object.keys(o2).reduce(function(e28, t3) {
      var r3 = o2[t3], n3 = r3.orientation;
      return r3.mirror || r3.hide ? e28 : dz(dz({}, e28), {}, fz({}, n3, Fo(e28, "".concat(n3)) + r3.height));
    }, { top: c2.top || 0, bottom: c2.bottom || 0 }), g2 = dz(dz({}, h2), p2), v2 = g2.bottom;
    return d2 && (g2.bottom += d2.props.height || hD.defaultProps.height), f2 && t2 && (g2 = function(e28, t3, r3, n3) {
      var o3 = r3.children, i3 = r3.width, a3 = r3.margin, l3 = i3 - (a3.left || 0) - (a3.right || 0), u3 = EB({ children: o3, legendWidth: l3 }), s3 = e28;
      if (u3) {
        var c3 = n3 || {}, d3 = u3.align, f3 = u3.verticalAlign, p3 = u3.layout;
        ("vertical" === p3 || "horizontal" === p3 && "center" === f3) && Ql(e28[d3]) && (s3 = CB(CB({}, e28), {}, xB({}, d3, s3[d3] + (c3.width || 0)))), ("horizontal" === p3 || "vertical" === p3 && "center" === d3) && Ql(e28[f3]) && (s3 = CB(CB({}, e28), {}, xB({}, f3, s3[f3] + (c3.height || 0))));
      }
      return s3;
    }(g2, 0, r2, t2)), dz(dz({ brushBottom: v2 }, g2), {}, { width: l2 - g2.left - g2.right, height: u2 - g2.top - g2.bottom });
  };
  var Tz = function(e27) {
    var n2, o2, a2 = e27.chartName, l2 = e27.GraphicalChild, u2 = e27.defaultTooltipEventType, s2 = void 0 === u2 ? "axis" : u2, c2 = e27.validateTooltipEventTypes, d2 = void 0 === c2 ? ["axis"] : c2, h2 = e27.axisComponents, g2 = e27.legendContent, v2 = e27.formatAxisMap, m2 = e27.defaultProps, y2 = function(e28, t2) {
      var r2 = t2.graphicalItems, n3 = t2.stackGroups, o3 = t2.offset, i2 = t2.updateId, a3 = t2.dataStartIndex, l3 = t2.dataEndIndex, u3 = e28.barSize, s3 = e28.layout, c3 = e28.barGap, d3 = e28.barCategoryGap, f2 = e28.maxBarSize, p2 = Sz(s3), g3 = p2.numericAxisName, v3 = p2.cateAxisName, m3 = function(e29) {
        return !(!e29 || !e29.length) && e29.some(function(e30) {
          var t3 = oT(e30 && e30.type);
          return t3 && t3.indexOf("Bar") >= 0;
        });
      }(r2), y3 = m3 && function(e29) {
        var t3 = e29.barSize, r3 = e29.stackGroups, n4 = void 0 === r3 ? {} : r3;
        if (!n4)
          return {};
        for (var o4 = {}, i3 = Object.keys(n4), a4 = 0, l4 = i3.length; a4 < l4; a4++)
          for (var u4 = n4[i3[a4]].stackGroups, s4 = Object.keys(u4), c4 = 0, d4 = s4.length; c4 < d4; c4++) {
            var f3 = u4[s4[c4]], p3 = f3.items, h3 = f3.cateAxisId, g4 = p3.filter(function(e30) {
              return oT(e30.type).indexOf("Bar") >= 0;
            });
            if (g4 && g4.length) {
              var v4 = g4[0].props.barSize, m4 = g4[0].props[h3];
              o4[m4] || (o4[m4] = []), o4[m4].push({ item: g4[0], stackList: g4.slice(1), barSize: yu(v4) ? t3 : v4 });
            }
          }
        return o4;
      }({ barSize: u3, stackGroups: n3 }), b2 = [];
      return r2.forEach(function(r3, u4) {
        var p3 = yz(e28.data, { dataStartIndex: a3, dataEndIndex: l3 }, r3), m4 = r3.props, C3 = m4.dataKey, x2 = m4.maxBarSize, w2 = r3.props["".concat(g3, "Id")], k2 = r3.props["".concat(v3, "Id")], S2 = h2.reduce(function(e29, n4) {
          var o4, i3 = t2["".concat(n4.axisType, "Map")], a4 = r3.props["".concat(n4.axisType, "Id")], l4 = i3 && i3[a4];
          return dz(dz({}, e29), {}, (fz(o4 = {}, n4.axisType, l4), fz(o4, "".concat(n4.axisType, "Ticks"), PB(l4)), o4));
        }, {}), E2 = S2[v3], T2 = S2["".concat(v3, "Ticks")], R2 = n3 && n3[w2] && n3[w2].hasStack && function(e29, t3) {
          var r4 = e29.props.stackId;
          if (Kl(r4)) {
            var n4 = t3[r4];
            if (n4 && n4.items.length) {
              for (var o4 = -1, i3 = 0, a4 = n4.items.length; i3 < a4; i3++)
                if (n4.items[i3] === e29) {
                  o4 = i3;
                  break;
                }
              return o4 >= 0 ? n4.stackedData[o4] : null;
            }
          }
          return null;
        }(r3, n3[w2].stackGroups), O2 = oT(r3.type).indexOf("Bar") >= 0, _2 = WB(E2, T2), P2 = [];
        if (O2) {
          var M2, B2, A2 = yu(x2) ? f2 : x2, N2 = null !== (M2 = null !== (B2 = WB(E2, T2, true)) && void 0 !== B2 ? B2 : A2) && void 0 !== M2 ? M2 : 0;
          P2 = function(e29) {
            var t3 = e29.barGap, r4 = e29.barCategoryGap, n4 = e29.bandSize, o4 = e29.sizeList, i3 = void 0 === o4 ? [] : o4, a4 = e29.maxBarSize, l4 = i3.length;
            if (l4 < 1)
              return null;
            var u5, s4 = eu(t3, n4, 0, true);
            if (i3[0].barSize === +i3[0].barSize) {
              var c4 = false, d4 = n4 / l4, f3 = i3.reduce(function(e30, t4) {
                return e30 + t4.barSize || 0;
              }, 0);
              (f3 += (l4 - 1) * s4) >= n4 && (f3 -= (l4 - 1) * s4, s4 = 0), f3 >= n4 && d4 > 0 && (c4 = true, f3 = l4 * (d4 *= 0.9));
              var p4 = { offset: ((n4 - f3) / 2 >> 0) - s4, size: 0 };
              u5 = i3.reduce(function(e30, t4) {
                var r5 = [].concat(mB(e30), [{ item: t4.item, position: { offset: p4.offset + p4.size + s4, size: c4 ? d4 : t4.barSize } }]);
                return p4 = r5[r5.length - 1].position, t4.stackList && t4.stackList.length && t4.stackList.forEach(function(e31) {
                  r5.push({ item: e31, position: p4 });
                }), r5;
              }, []);
            } else {
              var h3 = eu(r4, n4, 0, true);
              n4 - 2 * h3 - (l4 - 1) * s4 <= 0 && (s4 = 0);
              var g4 = (n4 - 2 * h3 - (l4 - 1) * s4) / l4;
              g4 > 1 && (g4 >>= 0);
              var v4 = a4 === +a4 ? Math.min(g4, a4) : g4;
              u5 = i3.reduce(function(e30, t4, r5) {
                var n5 = [].concat(mB(e30), [{ item: t4.item, position: { offset: h3 + (g4 + s4) * r5 + (g4 - v4) / 2, size: v4 } }]);
                return t4.stackList && t4.stackList.length && t4.stackList.forEach(function(e31) {
                  n5.push({ item: e31, position: n5[n5.length - 1].position });
                }), n5;
              }, []);
            }
            return u5;
          }({ barGap: c3, barCategoryGap: d3, bandSize: N2 !== _2 ? N2 : _2, sizeList: y3[k2], maxBarSize: A2 }), N2 !== _2 && (P2 = P2.map(function(e29) {
            return dz(dz({}, e29), {}, { position: dz(dz({}, e29.position), {}, { offset: e29.position.offset - N2 / 2 }) });
          }));
        }
        var j2, D2, L2, I2 = r3 && r3.type && r3.type.getComposedData;
        I2 && b2.push({ props: dz(dz({}, I2(dz(dz({}, S2), {}, { displayedData: p3, props: e28, dataKey: C3, item: r3, bandSize: _2, barPosition: P2, offset: o3, stackedData: R2, layout: s3, dataStartIndex: a3, dataEndIndex: l3 }))), {}, (j2 = { key: r3.key || "item-".concat(u4) }, fz(j2, g3, S2[g3]), fz(j2, v3, S2[v3]), fz(j2, "animationId", i2), j2)), childIndex: (D2 = r3, L2 = e28.children, lT(L2).indexOf(D2)), item: r3 });
      }), b2;
    }, C2 = function(e28, t2) {
      var r2 = e28.props, n3 = e28.dataStartIndex, o3 = e28.dataEndIndex, i2 = e28.updateId;
      if (!cT({ props: r2 }))
        return null;
      var u3 = r2.children, s3 = r2.layout, c3 = r2.stackOffset, d3 = r2.data, f2 = r2.reverseStackOrder, p2 = Sz(s3), g3 = p2.numericAxisName, m3 = p2.cateAxisName, b2 = uT(u3, l2), C3 = function(e29, t3, r3, n4, o4, i3) {
        if (!e29)
          return null;
        var a3 = (i3 ? t3.reverse() : t3).reduce(function(e30, t4) {
          var o5 = t4.props, i4 = o5.stackId;
          if (o5.hide)
            return e30;
          var a4 = t4.props[r3], l3 = e30[a4] || { hasStack: false, stackGroups: {} };
          if (Kl(i4)) {
            var u4 = l3.stackGroups[i4] || { numericAxisId: r3, cateAxisId: n4, items: [] };
            u4.items.push(t4), l3.hasStack = true, l3.stackGroups[i4] = u4;
          } else
            l3.stackGroups[Jl("_stackId_")] = { numericAxisId: r3, cateAxisId: n4, items: [t4] };
          return CB(CB({}, e30), {}, xB({}, a4, l3));
        }, {});
        return Object.keys(a3).reduce(function(t4, i4) {
          var l3 = a3[i4];
          return l3.hasStack && (l3.stackGroups = Object.keys(l3.stackGroups).reduce(function(t5, i5) {
            var a4 = l3.stackGroups[i5];
            return CB(CB({}, t5), {}, xB({}, i5, { numericAxisId: r3, cateAxisId: n4, items: a4.items, stackedData: jB(e29, a4.items, o4) }));
          }, {})), CB(CB({}, t4), {}, xB({}, i4, l3));
        }, {});
      }(d3, b2, "".concat(g3, "Id"), "".concat(m3, "Id"), c3, f2), x2 = h2.reduce(function(e29, t3) {
        var i3 = "".concat(t3.axisType, "Map");
        return dz(dz({}, e29), {}, fz({}, i3, wz(r2, dz(dz({}, t3), {}, { graphicalItems: b2, stackGroups: t3.axisType === g3 && C3, dataStartIndex: n3, dataEndIndex: o3 }))));
      }, {}), w2 = Ez(dz(dz({}, x2), {}, { props: r2, graphicalItems: b2 }), null == t2 ? void 0 : t2.legendBBox);
      Object.keys(x2).forEach(function(e29) {
        x2[e29] = v2(r2, x2[e29], w2, e29.replace("Map", ""), a2);
      });
      var k2, S2, E2 = x2["".concat(m3, "Map")], T2 = (k2 = tu(E2), { tooltipTicks: S2 = PB(k2, false, true), orderedTooltipTicks: Ew(S2, function(e29) {
        return e29.coordinate;
      }), tooltipAxis: k2, tooltipAxisBandSize: WB(k2, S2) }), R2 = y2(r2, dz(dz({}, x2), {}, { dataStartIndex: n3, dataEndIndex: o3, updateId: i2, graphicalItems: b2, stackGroups: C3, offset: w2 }));
      return dz(dz({ formattedGraphicalItems: R2, graphicalItems: b2, offset: w2, stackGroups: C3 }, T2), x2);
    };
    return o2 = n2 = function(e28) {
      !function(e29, t2) {
        if ("function" != typeof t2 && null !== t2)
          throw new TypeError("Super expression must either be null or a function");
        e29.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e29, writable: true, configurable: true } }), t2 && rz(e29, t2);
      }(c3, import_react.Component);
      var n3, o3, l3, u3 = nz(c3);
      function c3(e29) {
        var t2;
        return function(e30, t3) {
          if (!(e30 instanceof t3))
            throw new TypeError("Cannot call a class as a function");
        }(this, c3), (t2 = u3.call(this, e29)).uniqueChartId = void 0, t2.clipPathId = void 0, t2.legendInstance = void 0, t2.deferId = void 0, t2.container = void 0, t2.clearDeferId = function() {
          !yu(t2.deferId) && mz && mz(t2.deferId), t2.deferId = null;
        }, t2.handleLegendBBoxUpdate = function(e30) {
          if (e30) {
            var r2 = t2.state, n4 = r2.dataStartIndex, o4 = r2.dataEndIndex, i2 = r2.updateId;
            t2.setState(dz({ legendBBox: e30 }, C2({ props: t2.props, dataStartIndex: n4, dataEndIndex: o4, updateId: i2 }, dz(dz({}, t2.state), {}, { legendBBox: e30 }))));
          }
        }, t2.handleReceiveSyncEvent = function(e30, r2, n4) {
          t2.props.syncId === e30 && r2 !== t2.uniqueChartId && (t2.clearDeferId(), t2.deferId = vz && vz(t2.applySyncEvent.bind(iz(t2), n4)));
        }, t2.handleBrushChange = function(e30) {
          var r2 = e30.startIndex, n4 = e30.endIndex;
          if (r2 !== t2.state.dataStartIndex || n4 !== t2.state.dataEndIndex) {
            var o4 = t2.state.updateId;
            t2.setState(function() {
              return dz({ dataStartIndex: r2, dataEndIndex: n4 }, C2({ props: t2.props, dataStartIndex: r2, dataEndIndex: n4, updateId: o4 }, t2.state));
            }), t2.triggerSyncEvent({ dataStartIndex: r2, dataEndIndex: n4 });
          }
        }, t2.handleMouseEnter = function(e30) {
          var r2 = t2.props.onMouseEnter, n4 = t2.getMouseInfo(e30);
          if (n4) {
            var o4 = dz(dz({}, n4), {}, { isTooltipActive: true });
            t2.setState(o4), t2.triggerSyncEvent(o4), Z(r2) && r2(o4, e30);
          }
        }, t2.triggeredAfterMouseMove = function(e30) {
          var r2 = t2.props.onMouseMove, n4 = t2.getMouseInfo(e30), o4 = n4 ? dz(dz({}, n4), {}, { isTooltipActive: true }) : { isTooltipActive: false };
          t2.setState(o4), t2.triggerSyncEvent(o4), Z(r2) && r2(o4, e30);
        }, t2.handleItemMouseEnter = function(e30) {
          t2.setState(function() {
            return { isTooltipActive: true, activeItem: e30, activePayload: e30.tooltipPayload, activeCoordinate: e30.tooltipPosition || { x: e30.cx, y: e30.cy } };
          });
        }, t2.handleItemMouseLeave = function() {
          t2.setState(function() {
            return { isTooltipActive: false };
          });
        }, t2.handleMouseMove = function(e30) {
          e30 && Z(e30.persist) && e30.persist(), t2.triggeredAfterMouseMove(e30);
        }, t2.handleMouseLeave = function(e30) {
          var r2 = t2.props.onMouseLeave, n4 = { isTooltipActive: false };
          t2.setState(n4), t2.triggerSyncEvent(n4), Z(r2) && r2(n4, e30), t2.cancelThrottledTriggerAfterMouseMove();
        }, t2.handleOuterEvent = function(e30) {
          var r2 = function(e31) {
            var t3 = e31 && e31.type;
            return t3 && nT[t3] ? nT[t3] : null;
          }(e30), n4 = Fo(t2.props, "".concat(r2));
          r2 && Z(n4) && n4(/.*touch.*/i.test(r2) ? t2.getMouseInfo(e30.changedTouches[0]) : t2.getMouseInfo(e30), e30);
        }, t2.handleClick = function(e30) {
          var r2 = t2.props.onClick, n4 = t2.getMouseInfo(e30);
          if (n4) {
            var o4 = dz(dz({}, n4), {}, { isTooltipActive: true });
            t2.setState(o4), t2.triggerSyncEvent(o4), Z(r2) && r2(o4, e30);
          }
        }, t2.handleMouseDown = function(e30) {
          var r2 = t2.props.onMouseDown;
          Z(r2) && r2(t2.getMouseInfo(e30), e30);
        }, t2.handleMouseUp = function(e30) {
          var r2 = t2.props.onMouseUp;
          Z(r2) && r2(t2.getMouseInfo(e30), e30);
        }, t2.handleTouchMove = function(e30) {
          null != e30.changedTouches && e30.changedTouches.length > 0 && t2.handleMouseMove(e30.changedTouches[0]);
        }, t2.handleTouchStart = function(e30) {
          null != e30.changedTouches && e30.changedTouches.length > 0 && t2.handleMouseDown(e30.changedTouches[0]);
        }, t2.handleTouchEnd = function(e30) {
          null != e30.changedTouches && e30.changedTouches.length > 0 && t2.handleMouseUp(e30.changedTouches[0]);
        }, t2.verticalCoordinatesGenerator = function(e30) {
          var t3 = e30.xAxis, r2 = e30.width, n4 = e30.height, o4 = e30.offset;
          return _B(wL.getTicks(dz(dz(dz({}, wL.defaultProps), t3), {}, { ticks: PB(t3, true), viewBox: { x: 0, y: 0, width: r2, height: n4 } })), o4.left, o4.left + o4.width);
        }, t2.horizontalCoordinatesGenerator = function(e30) {
          var t3 = e30.yAxis, r2 = e30.width, n4 = e30.height, o4 = e30.offset;
          return _B(wL.getTicks(dz(dz(dz({}, wL.defaultProps), t3), {}, { ticks: PB(t3, true), viewBox: { x: 0, y: 0, width: r2, height: n4 } })), o4.top, o4.top + o4.height);
        }, t2.axesTicksGenerator = function(e30) {
          return PB(e30, true);
        }, t2.renderCursor = function(e30) {
          var n4 = t2.state, o4 = n4.isTooltipActive, l4 = n4.activeCoordinate, u4 = n4.activePayload, s3 = n4.offset, c4 = n4.activeTooltipIndex, d3 = t2.getTooltipEventType();
          if (!e30 || !e30.props.cursor || !o4 || !l4 || "ScatterChart" !== a2 && "axis" !== d3)
            return null;
          var f2, h3 = t2.props.layout, g3 = KA;
          if ("ScatterChart" === a2)
            f2 = l4, g3 = FN;
          else if ("BarChart" === a2)
            f2 = t2.getCursorRectangle(), g3 = uN;
          else if ("radial" === h3) {
            var v3 = t2.getCursorPoints(), m3 = v3.cx, y3 = v3.cy, b2 = v3.radius;
            f2 = { cx: m3, cy: y3, startAngle: v3.startAngle, endAngle: v3.endAngle, innerRadius: b2, outerRadius: b2 }, g3 = jA;
          } else
            f2 = { points: t2.getCursorPoints() }, g3 = KA;
          var C3 = e30.key || "_recharts-cursor", x2 = dz(dz(dz(dz({ stroke: "#ccc", pointerEvents: "none" }, s3), f2), E(e30.props.cursor)), {}, { payload: u4, payloadIndex: c4, key: C3, className: "recharts-tooltip-cursor" });
          return (0, import_react.isValidElement)(e30.props.cursor) ? (0, import_react.cloneElement)(e30.props.cursor, x2) : (0, import_react.createElement)(g3, x2);
        }, t2.renderPolarAxis = function(e30, r2, n4) {
          var o4 = Fo(e30, "type.axisType"), a3 = Fo(t2.state, "".concat(o4, "Map"))[e30.props["".concat(o4, "Id")]];
          return (0, import_react.cloneElement)(e30, dz(dz({}, a3), {}, { className: o4, key: e30.key || "".concat(r2, "-").concat(n4), ticks: PB(a3, true) }));
        }, t2.renderXAxis = function(e30, r2, n4) {
          var o4 = t2.state.xAxisMap[e30.props.xAxisId];
          return t2.renderAxis(o4, e30, r2, n4);
        }, t2.renderYAxis = function(e30, r2, n4) {
          var o4 = t2.state.yAxisMap[e30.props.yAxisId];
          return t2.renderAxis(o4, e30, r2, n4);
        }, t2.renderGrid = function(e30) {
          var r2 = t2.state, n4 = r2.xAxisMap, o4 = r2.yAxisMap, a3 = r2.offset, l4 = t2.props, u4 = l4.width, s3 = l4.height, c4 = tu(n4), d3 = FI(o4, function(e31) {
            return BD(e31.domain, gz);
          }) || tu(o4), f2 = e30.props || {};
          return (0, import_react.cloneElement)(e30, { key: e30.key || "grid", x: Ql(f2.x) ? f2.x : a3.left, y: Ql(f2.y) ? f2.y : a3.top, width: Ql(f2.width) ? f2.width : a3.width, height: Ql(f2.height) ? f2.height : a3.height, xAxis: c4, yAxis: d3, offset: a3, chartWidth: u4, chartHeight: s3, verticalCoordinatesGenerator: f2.verticalCoordinatesGenerator || t2.verticalCoordinatesGenerator, horizontalCoordinatesGenerator: f2.horizontalCoordinatesGenerator || t2.horizontalCoordinatesGenerator });
        }, t2.renderPolarGrid = function(e30) {
          var r2 = e30.props, n4 = r2.radialLines, o4 = r2.polarAngles, a3 = r2.polarRadius, l4 = t2.state, u4 = l4.radiusAxisMap, s3 = l4.angleAxisMap, c4 = tu(u4), d3 = tu(s3), f2 = d3.cx, p2 = d3.cy, h3 = d3.innerRadius, g3 = d3.outerRadius;
          return (0, import_react.cloneElement)(e30, { polarAngles: tr(o4) ? o4 : PB(d3, true).map(function(e31) {
            return e31.coordinate;
          }), polarRadius: tr(a3) ? a3 : PB(c4, true).map(function(e31) {
            return e31.coordinate;
          }), cx: f2, cy: p2, innerRadius: h3, outerRadius: g3, key: e30.key || "polar-grid", radialLines: n4 });
        }, t2.renderLegend = function() {
          var e30 = t2.state.formattedGraphicalItems, r2 = t2.props, n4 = r2.children, o4 = r2.width, a3 = r2.height, l4 = t2.props.margin || {}, u4 = o4 - (l4.left || 0) - (l4.right || 0), s3 = EB({ children: n4, formattedGraphicalItems: e30, legendWidth: u4, legendContent: g2 });
          if (!s3)
            return null;
          var c4 = s3.item, d3 = ez(s3, ["item"]);
          return (0, import_react.cloneElement)(c4, dz(dz({}, d3), {}, { chartWidth: o4, chartHeight: a3, margin: l4, ref: function(e31) {
            t2.legendInstance = e31;
          }, onBBoxUpdate: t2.handleLegendBBoxUpdate }));
        }, t2.renderTooltip = function() {
          var e30 = t2.props.children, r2 = sT(e30, Jw.displayName);
          if (!r2)
            return null;
          var n4 = t2.state, o4 = n4.isTooltipActive, a3 = n4.activeCoordinate, l4 = n4.activePayload, u4 = n4.activeLabel, s3 = n4.offset;
          return (0, import_react.cloneElement)(r2, { viewBox: dz(dz({}, s3), {}, { x: s3.left, y: s3.top }), active: o4, label: u4, payload: o4 ? l4 : [], coordinate: a3 });
        }, t2.renderBrush = function(e30) {
          var r2 = t2.props, n4 = r2.margin, o4 = r2.data, a3 = t2.state, l4 = a3.offset, u4 = a3.dataStartIndex, s3 = a3.dataEndIndex, c4 = a3.updateId;
          return (0, import_react.cloneElement)(e30, { key: e30.key || "_recharts-brush", onChange: MB(t2.handleBrushChange, null, e30.props.onChange), data: o4, x: Ql(e30.props.x) ? e30.props.x : l4.left, y: Ql(e30.props.y) ? e30.props.y : l4.top + l4.height + l4.brushBottom - (n4.bottom || 0), width: Ql(e30.props.width) ? e30.props.width : l4.width, startIndex: u4, endIndex: s3, updateId: "brush-".concat(c4) });
        }, t2.renderReferenceElement = function(e30, r2, n4) {
          if (!e30)
            return null;
          var o4 = iz(t2).clipPathId, a3 = t2.state, l4 = a3.xAxisMap, u4 = a3.yAxisMap, s3 = a3.offset, c4 = e30.props, d3 = c4.xAxisId, f2 = c4.yAxisId;
          return (0, import_react.cloneElement)(e30, { key: e30.key || "".concat(r2, "-").concat(n4), xAxis: l4[d3], yAxis: u4[f2], viewBox: { x: s3.left, y: s3.top, width: s3.width, height: s3.height }, clipPathId: o4 });
        }, t2.renderActivePoints = function(e30) {
          var t3 = e30.item, r2 = e30.activePoint, n4 = e30.basePoint, o4 = e30.childIndex, i2 = e30.isRange, a3 = [], l4 = t3.props.key, u4 = t3.item.props, s3 = u4.activeDot, d3 = dz(dz({ index: o4, dataKey: u4.dataKey, cx: r2.x, cy: r2.y, r: 4, fill: SB(t3.item), strokeWidth: 2, stroke: "#fff", payload: r2.payload, value: r2.value, key: "".concat(l4, "-activePoint-").concat(o4) }, E(s3)), T(s3));
          return a3.push(c3.renderActiveDot(s3, d3)), n4 ? a3.push(c3.renderActiveDot(s3, dz(dz({}, d3), {}, { cx: n4.x, cy: n4.y, key: "".concat(l4, "-basePoint-").concat(o4) }))) : i2 && a3.push(null), a3;
        }, t2.renderGraphicChild = function(e30, r2, n4) {
          var o4 = t2.filterFormatItem(e30, r2, n4);
          if (!o4)
            return null;
          var a3 = t2.getTooltipEventType(), l4 = t2.state, u4 = l4.isTooltipActive, s3 = l4.tooltipAxis, c4 = l4.activeTooltipIndex, d3 = l4.activeLabel, f2 = t2.props.children, p2 = sT(f2, Jw.displayName), h3 = o4.props, g3 = h3.points, v3 = h3.isRange, m3 = h3.baseLine, y3 = o4.item.props, b2 = y3.activeDot, C3 = !y3.hide && u4 && p2 && b2 && c4 >= 0, x2 = {};
          "axis" !== a3 && p2 && "click" === p2.props.trigger ? x2 = { onClick: MB(t2.handleItemMouseEnter, null, e30.props.onCLick) } : "axis" !== a3 && (x2 = { onMouseLeave: MB(t2.handleItemMouseLeave, null, e30.props.onMouseLeave), onMouseEnter: MB(t2.handleItemMouseEnter, null, e30.props.onMouseEnter) });
          var w2 = (0, import_react.cloneElement)(e30, dz(dz({}, o4.props), x2));
          if (C3) {
            var k2, S2;
            if (s3.dataKey && !s3.allowDuplicatedCategory) {
              var E2 = "function" == typeof s3.dataKey ? function(e31) {
                return "function" == typeof s3.dataKey ? s3.dataKey(e31.payload) : null;
              } : "payload.".concat(s3.dataKey.toString());
              k2 = nu(g3, E2, d3), S2 = v3 && m3 && nu(m3, E2, d3);
            } else
              k2 = g3[c4], S2 = v3 && m3 && m3[c4];
            if (!yu(k2))
              return [w2].concat(lz(t2.renderActivePoints({ item: o4, activePoint: k2, basePoint: S2, childIndex: c4, isRange: v3 })));
          }
          return v3 ? [w2, null, null] : [w2, null];
        }, t2.renderCustomized = function(e30, r2, n4) {
          return (0, import_react.cloneElement)(e30, dz(dz({ key: "recharts-customized-".concat(n4) }, t2.props), t2.state));
        }, t2.uniqueChartId = yu(e29.id) ? Jl("recharts") : e29.id, t2.clipPathId = "".concat(t2.uniqueChartId, "-clip"), e29.throttleDelay && (t2.triggeredAfterMouseMove = WI(t2.triggeredAfterMouseMove, e29.throttleDelay)), t2.state = {}, t2;
      }
      return n3 = c3, o3 = [{ key: "componentDidMount", value: function() {
        yu(this.props.syncId) || this.addListener();
      } }, { key: "componentDidUpdate", value: function(e29) {
        yu(e29.syncId) && !yu(this.props.syncId) && this.addListener(), !yu(e29.syncId) && yu(this.props.syncId) && this.removeListener();
      } }, { key: "componentWillUnmount", value: function() {
        this.clearDeferId(), yu(this.props.syncId) || this.removeListener(), this.cancelThrottledTriggerAfterMouseMove();
      } }, { key: "cancelThrottledTriggerAfterMouseMove", value: function() {
        "function" == typeof this.triggeredAfterMouseMove.cancel && this.triggeredAfterMouseMove.cancel();
      } }, { key: "getTooltipEventType", value: function() {
        var e29 = sT(this.props.children, Jw.displayName);
        if (e29 && qI(e29.props.shared)) {
          var t2 = e29.props.shared ? "axis" : "item";
          return d2.indexOf(t2) >= 0 ? t2 : s2;
        }
        return s2;
      } }, { key: "getMouseInfo", value: function(e29) {
        if (!this.container)
          return null;
        var t2 = function(e30) {
          var t3 = e30.ownerDocument.documentElement, r3 = { top: 0, left: 0 };
          return void 0 !== e30.getBoundingClientRect && (r3 = e30.getBoundingClientRect()), { top: r3.top + window.pageYOffset - t3.clientTop, left: r3.left + window.pageXOffset - t3.clientLeft };
        }(this.container), r2 = function(e30, t3) {
          return { chartX: Math.round(e30.pageX - t3.left), chartY: Math.round(e30.pageY - t3.top) };
        }(e29, t2), n4 = this.inRange(r2.chartX, r2.chartY);
        if (!n4)
          return null;
        var o4 = this.state, i2 = o4.xAxisMap, a3 = o4.yAxisMap;
        if ("axis" !== this.getTooltipEventType() && i2 && a3) {
          var l4 = tu(i2).scale, u4 = tu(a3).scale, s3 = l4 && l4.invert ? l4.invert(r2.chartX) : null, c4 = u4 && u4.invert ? u4.invert(r2.chartY) : null;
          return dz(dz({}, r2), {}, { xValue: s3, yValue: c4 });
        }
        var d3 = Cz(this.state, this.props.data, this.props.layout, n4);
        return d3 ? dz(dz({}, r2), d3) : null;
      } }, { key: "getCursorRectangle", value: function() {
        var e29 = this.props.layout, t2 = this.state, r2 = t2.activeCoordinate, n4 = t2.offset, o4 = t2.tooltipAxisBandSize, i2 = o4 / 2;
        return { stroke: "none", fill: "#ccc", x: "horizontal" === e29 ? r2.x - i2 : n4.left + 0.5, y: "horizontal" === e29 ? n4.top + 0.5 : r2.y - i2, width: "horizontal" === e29 ? o4 : n4.width - 1, height: "horizontal" === e29 ? n4.height - 1 : o4 };
      } }, { key: "getCursorPoints", value: function() {
        var e29, t2, r2, n4, o4 = this.props.layout, i2 = this.state, a3 = i2.activeCoordinate, l4 = i2.offset;
        if ("horizontal" === o4)
          r2 = e29 = a3.x, t2 = l4.top, n4 = l4.top + l4.height;
        else if ("vertical" === o4)
          n4 = t2 = a3.y, e29 = l4.left, r2 = l4.left + l4.width;
        else if (!yu(a3.cx) || !yu(a3.cy)) {
          if ("centric" !== o4) {
            var u4 = a3.cx, s3 = a3.cy, c4 = a3.radius, d3 = a3.startAngle, f2 = a3.endAngle;
            return { points: [JB(u4, s3, c4, d3), JB(u4, s3, c4, f2)], cx: u4, cy: s3, radius: c4, startAngle: d3, endAngle: f2 };
          }
          var p2 = a3.cx, h3 = a3.cy, g3 = a3.innerRadius, v3 = a3.outerRadius, m3 = a3.angle, y3 = JB(p2, h3, g3, m3), b2 = JB(p2, h3, v3, m3);
          e29 = y3.x, t2 = y3.y, r2 = b2.x, n4 = b2.y;
        }
        return [{ x: e29, y: t2 }, { x: r2, y: n4 }];
      } }, { key: "inRange", value: function(e29, t2) {
        var r2 = this.props.layout;
        if ("horizontal" === r2 || "vertical" === r2) {
          var n4 = this.state.offset;
          return e29 >= n4.left && e29 <= n4.left + n4.width && t2 >= n4.top && t2 <= n4.top + n4.height ? { x: e29, y: t2 } : null;
        }
        var o4 = this.state, i2 = o4.angleAxisMap, a3 = o4.radiusAxisMap;
        if (i2 && a3) {
          var l4 = tu(i2);
          return nA({ x: e29, y: t2 }, l4);
        }
        return null;
      } }, { key: "parseEventsOfWrapper", value: function() {
        var e29 = this.props.children, t2 = this.getTooltipEventType(), r2 = sT(e29, Jw.displayName), n4 = {};
        return r2 && "axis" === t2 && (n4 = "click" === r2.props.trigger ? { onClick: this.handleClick } : { onMouseEnter: this.handleMouseEnter, onMouseMove: this.handleMouseMove, onMouseLeave: this.handleMouseLeave, onTouchMove: this.handleTouchMove, onTouchStart: this.handleTouchStart, onTouchEnd: this.handleTouchEnd }), dz(dz({}, T(this.props, this.handleOuterEvent)), n4);
      } }, { key: "addListener", value: function() {
        XI.on(QI, this.handleReceiveSyncEvent), XI.setMaxListeners && XI._maxListeners && XI.setMaxListeners(XI._maxListeners + 1);
      } }, { key: "removeListener", value: function() {
        XI.removeListener(QI, this.handleReceiveSyncEvent), XI.setMaxListeners && XI._maxListeners && XI.setMaxListeners(XI._maxListeners - 1);
      } }, { key: "triggerSyncEvent", value: function(e29) {
        var t2 = this.props.syncId;
        yu(t2) || XI.emit(QI, t2, this.uniqueChartId, e29);
      } }, { key: "applySyncEvent", value: function(e29) {
        var t2 = this.props, r2 = t2.layout, n4 = t2.syncMethod, o4 = this.state.updateId, i2 = e29.dataStartIndex, a3 = e29.dataEndIndex;
        if (yu(e29.dataStartIndex) && yu(e29.dataEndIndex))
          if (yu(e29.activeTooltipIndex))
            this.setState(e29);
          else {
            var l4 = e29.chartX, u4 = e29.chartY, s3 = e29.activeTooltipIndex, c4 = this.state, d3 = c4.offset, f2 = c4.tooltipTicks;
            if (!d3)
              return;
            if ("function" == typeof n4)
              s3 = n4(f2, e29);
            else if ("value" === n4) {
              s3 = -1;
              for (var p2 = 0; p2 < f2.length; p2++)
                if (f2[p2].value === e29.activeLabel) {
                  s3 = p2;
                  break;
                }
            }
            var h3 = dz(dz({}, d3), {}, { x: d3.left, y: d3.top }), g3 = Math.min(l4, h3.x + h3.width), v3 = Math.min(u4, h3.y + h3.height), m3 = f2[s3] && f2[s3].value, y3 = bz(this.state, this.props.data, s3), b2 = f2[s3] ? { x: "horizontal" === r2 ? f2[s3].coordinate : g3, y: "horizontal" === r2 ? v3 : f2[s3].coordinate } : hz;
            this.setState(dz(dz({}, e29), {}, { activeLabel: m3, activeCoordinate: b2, activePayload: y3, activeTooltipIndex: s3 }));
          }
        else
          this.setState(dz({ dataStartIndex: i2, dataEndIndex: a3 }, C2({ props: this.props, dataStartIndex: i2, dataEndIndex: a3, updateId: o4 }, this.state)));
      } }, { key: "filterFormatItem", value: function(e29, t2, r2) {
        for (var n4 = this.state.formattedGraphicalItems, o4 = 0, i2 = n4.length; o4 < i2; o4++) {
          var a3 = n4[o4];
          if (a3.item === e29 || a3.props.key === e29.key || t2 === oT(a3.item.type) && r2 === a3.childIndex)
            return a3;
        }
        return null;
      } }, { key: "renderAxis", value: function(e29, r2, n4, o4) {
        var i2 = this.props, a3 = i2.width, l4 = i2.height;
        return import_react.default.createElement(wL, JI({}, e29, { className: "recharts-".concat(e29.axisType, " ").concat(e29.axisType), key: r2.key || "".concat(n4, "-").concat(o4), viewBox: { x: 0, y: 0, width: a3, height: l4 }, ticksGenerator: this.axesTicksGenerator }));
      } }, { key: "renderClipPath", value: function() {
        var e29 = this.clipPathId, r2 = this.state.offset, n4 = r2.left, o4 = r2.top, i2 = r2.height, a3 = r2.width;
        return import_react.default.createElement("defs", null, import_react.default.createElement("clipPath", { id: e29 }, import_react.default.createElement("rect", { x: n4, y: o4, height: i2, width: a3 })));
      } }, { key: "getXScales", value: function() {
        var e29 = this.state.xAxisMap;
        return e29 ? Object.entries(e29).reduce(function(e30, t2) {
          var r2 = ZI(t2, 2), n4 = r2[0], o4 = r2[1];
          return dz(dz({}, e30), {}, fz({}, n4, o4.scale));
        }, {}) : null;
      } }, { key: "getYScales", value: function() {
        var e29 = this.state.yAxisMap;
        return e29 ? Object.entries(e29).reduce(function(e30, t2) {
          var r2 = ZI(t2, 2), n4 = r2[0], o4 = r2[1];
          return dz(dz({}, e30), {}, fz({}, n4, o4.scale));
        }, {}) : null;
      } }, { key: "getXScaleByAxisId", value: function(e29) {
        var t2, r2;
        return null === (t2 = this.state.xAxisMap) || void 0 === t2 || null === (r2 = t2[e29]) || void 0 === r2 ? void 0 : r2.scale;
      } }, { key: "getYScaleByAxisId", value: function(e29) {
        var t2, r2;
        return null === (t2 = this.state.yAxisMap) || void 0 === t2 || null === (r2 = t2[e29]) || void 0 === r2 ? void 0 : r2.scale;
      } }, { key: "getItemByXY", value: function(e29) {
        var t2 = this.state.formattedGraphicalItems;
        if (t2 && t2.length)
          for (var r2 = 0, n4 = t2.length; r2 < n4; r2++) {
            var o4 = t2[r2], i2 = o4.props, a3 = o4.item, l4 = oT(a3.type);
            if ("Bar" === l4) {
              var u4 = (i2.data || []).find(function(t3) {
                return lN(e29, t3);
              });
              if (u4)
                return { graphicalItem: o4, payload: u4 };
            } else if ("RadialBar" === l4) {
              var s3 = (i2.data || []).find(function(t3) {
                return nA(e29, t3);
              });
              if (s3)
                return { graphicalItem: o4, payload: s3 };
            }
          }
        return null;
      } }, { key: "render", value: function() {
        var e29 = this;
        if (!cT(this))
          return null;
        var r2 = this.props, n4 = r2.children, o4 = r2.className, i2 = r2.width, a3 = r2.height, l4 = r2.style, u4 = r2.compact, s3 = ez(r2, ["children", "className", "width", "height", "style", "compact"]), c4 = E(s3), d3 = { CartesianGrid: { handler: this.renderGrid, once: true }, ReferenceArea: { handler: this.renderReferenceElement }, ReferenceLine: { handler: this.renderReferenceElement }, ReferenceDot: { handler: this.renderReferenceElement }, XAxis: { handler: this.renderXAxis }, YAxis: { handler: this.renderYAxis }, Brush: { handler: this.renderBrush, once: true }, Bar: { handler: this.renderGraphicChild }, Line: { handler: this.renderGraphicChild }, Area: { handler: this.renderGraphicChild }, Radar: { handler: this.renderGraphicChild }, RadialBar: { handler: this.renderGraphicChild }, Scatter: { handler: this.renderGraphicChild }, Pie: { handler: this.renderGraphicChild }, Funnel: { handler: this.renderGraphicChild }, Tooltip: { handler: this.renderCursor, once: true }, PolarGrid: { handler: this.renderPolarGrid, once: true }, PolarAngleAxis: { handler: this.renderPolarAxis }, PolarRadiusAxis: { handler: this.renderPolarAxis }, Customized: { handler: this.renderCustomized } };
        if (u4)
          return import_react.default.createElement(P, JI({}, c4, { width: i2, height: a3 }), this.renderClipPath(), hT(n4, d3));
        var f2 = this.parseEventsOfWrapper();
        return import_react.default.createElement("div", JI({ className: b("recharts-wrapper", o4), style: dz({ position: "relative", cursor: "default", width: i2, height: a3 }, l4) }, f2, { ref: function(t2) {
          e29.container = t2;
        } }), import_react.default.createElement(P, JI({}, c4, { width: i2, height: a3 }), this.renderClipPath(), hT(n4, d3)), this.renderLegend(), this.renderTooltip());
      } }], o3 && tz(n3.prototype, o3), l3 && tz(n3, l3), c3;
    }(), n2.displayName = a2, n2.defaultProps = dz({ layout: "horizontal", stackOffset: "none", barCategoryGap: "10%", barGap: 4, margin: { top: 5, right: 5, bottom: 5, left: 5 }, reverseStackOrder: false, syncMethod: "index" }, m2), n2.getDerivedStateFromProps = function(e28, t2) {
      var r2 = e28.data, n3 = e28.children, o3 = e28.width, i2 = e28.height, a3 = e28.layout, l3 = e28.stackOffset, u3 = e28.margin;
      if (yu(t2.updateId)) {
        var s3 = kz(e28);
        return dz(dz(dz({}, s3), {}, { updateId: 0 }, C2(dz(dz({ props: e28 }, s3), {}, { updateId: 0 }), t2)), {}, { prevData: r2, prevWidth: o3, prevHeight: i2, prevLayout: a3, prevStackOffset: l3, prevMargin: u3, prevChildren: n3 });
      }
      if (r2 !== t2.prevData || o3 !== t2.prevWidth || i2 !== t2.prevHeight || a3 !== t2.prevLayout || l3 !== t2.prevStackOffset || !tT(u3, t2.prevMargin)) {
        var c3 = kz(e28), d3 = { chartX: t2.chartX, chartY: t2.chartY, isTooltipActive: t2.isTooltipActive }, f2 = dz(dz({}, Cz(t2, r2, a3)), {}, { updateId: t2.updateId + 1 }), p2 = dz(dz(dz({}, c3), d3), f2);
        return dz(dz(dz({}, p2), C2(dz({ props: e28 }, p2), t2)), {}, { prevData: r2, prevWidth: o3, prevHeight: i2, prevLayout: a3, prevStackOffset: l3, prevMargin: u3, prevChildren: n3 });
      }
      if (!fT(n3, t2.prevChildren)) {
        var h3 = !yu(r2) ? t2.updateId : t2.updateId + 1;
        return dz(dz({ updateId: h3 }, C2(dz(dz({ props: e28 }, t2), {}, { updateId: h3 }), t2)), {}, { prevChildren: n3 });
      }
      return null;
    }, n2.renderActiveDot = function(e28, n3) {
      var o3;
      return o3 = (0, import_react.isValidElement)(e28) ? (0, import_react.cloneElement)(e28, n3) : Z(e28) ? e28(n3) : import_react.default.createElement(MN, n3), import_react.default.createElement(A, { className: "recharts-active-dot", key: n3.key }, o3);
    }, o2;
  };
  var Rz = Tz({ chartName: "LineChart", GraphicalChild: tI, axisComponents: [{ axisType: "xAxis", AxisComp: OI }, { axisType: "yAxis", AxisComp: _I }], formatAxisMap: WD });
  var Oz = Tz({ chartName: "BarChart", GraphicalChild: RI, defaultTooltipEventType: "axis", validateTooltipEventTypes: ["axis", "item"], axisComponents: [{ axisType: "xAxis", AxisComp: OI }, { axisType: "yAxis", AxisComp: _I }], formatAxisMap: WD });
  var _z = Tz({ chartName: "PieChart", GraphicalChild: Uj, validateTooltipEventTypes: ["item"], defaultTooltipEventType: "item", legendContent: "children", axisComponents: [{ axisType: "angleAxis", AxisComp: Cj }, { axisType: "radiusAxis", AxisComp: lj }], formatAxisMap: function(e27, t2, r2, n2, o2) {
    var i2 = e27.width, a2 = e27.height, l2 = e27.startAngle, u2 = e27.endAngle, s2 = eu(e27.cx, i2, i2 / 2), c2 = eu(e27.cy, a2, a2 / 2), d2 = eA(i2, a2, r2), f2 = eu(e27.innerRadius, d2, 0), p2 = eu(e27.outerRadius, d2, 0.8 * d2);
    return Object.keys(t2).reduce(function(e28, r3) {
      var i3, a3 = t2[r3], d3 = a3.domain, h2 = a3.reversed;
      if (yu(a3.range))
        "angleAxis" === n2 ? i3 = [l2, u2] : "radiusAxis" === n2 && (i3 = [f2, p2]), h2 && (i3 = [i3[1], i3[0]]);
      else {
        var g2 = XB(i3 = a3.range, 2);
        l2 = g2[0], u2 = g2[1];
      }
      var v2 = BB(a3, o2), m2 = v2.realScaleType, y2 = v2.scale;
      y2.domain(d3).range(i3), AB(y2);
      var b2 = DB(y2, YB(YB({}, a3), {}, { realScaleType: m2 })), C2 = YB(YB(YB({}, a3), b2), {}, { range: i3, radius: p2, realScaleType: m2, scale: y2, cx: s2, cy: c2, innerRadius: f2, outerRadius: p2, startAngle: l2, endAngle: u2 });
      return YB(YB({}, e28), {}, GB({}, r3, C2));
    }, {});
  }, defaultProps: { layout: "centric", startAngle: 0, endAngle: 360, cx: "50%", cy: "50%", innerRadius: 0, outerRadius: "80%" } });
  var Pz = Tz({ chartName: "AreaChart", GraphicalChild: hI, axisComponents: [{ axisType: "xAxis", AxisComp: OI }, { axisType: "yAxis", AxisComp: _I }], formatAxisMap: WD });
  var Mz = { transparent: { none: { bgColor: "tr-bg-transparent", hoverBgColor: "hover:tr-bg-transparent", textColor: "tr-text-transparent", hoverTextColor: "hover:tr-text-transparent", borderColor: "tr-border-transparent", hoverBorderColor: "hover:tr-border-transparent", ringRolor: "tr-ring-transparent", ringColor: "tr-ring-transparent", hoverRingColor: "hover:tr-ring-transparent", divideColor: "tr-divide-transparent", outlineColor: "tr-outline-transparent", focusRingColor: "focus:tr-ring-transparent" } }, white: { none: { bgColor: "tr-bg-white", hoverBgColor: "hover:tr-bg-white", textColor: "tr-text-white", hoverTextColor: "hover:tr-text-white", borderColor: "tr-border-white", hoverBorderColor: "hover:tr-border-white", ringRolor: "tr-ring-white", ringColor: "tr-ring-white", hoverRingColor: "hover:tr-ring-white", divideColor: "tr-divide-white", outlineColor: "tr-outline-white", focusRingColor: "focus:tr-ring-white" } }, black: { none: { bgColor: "tr-bg-black", hoverBgColor: "hover:tr-bg-black", textColor: "tr-text-black", hoverTextColor: "hover:tr-text-black", borderColor: "tr-border-black", hoverBorderColor: "hover:tr-border-black", ringRolor: "tr-ring-black", ringColor: "tr-ring-black", hoverRingColor: "hover:tr-ring-black", divideColor: "tr-divide-black", outlineColor: "tr-outline-black", focusRingColor: "focus:tr-ring-black" } }, slate: { 50: { bgColor: "tr-bg-slate-50", hoverBgColor: "hover:tr-bg-slate-50", textColor: "tr-text-slate-50", hoverTextColor: "hover:tr-text-slate-50", borderColor: "tr-border-slate-50", hoverBorderColor: "hover:tr-border-slate-50", ringRolor: "tr-ring-slate-50", ringColor: "tr-ring-slate-50", hoverRingColor: "hover:tr-ring-slate-50", divideColor: "tr-divide-slate-50", outlineColor: "tr-outline-slate-50", focusRingColor: "focus:tr-ring-slate-50" }, 100: { bgColor: "tr-bg-slate-100", hoverBgColor: "hover:tr-bg-slate-100", textColor: "tr-text-slate-100", hoverTextColor: "hover:tr-text-slate-100", borderColor: "tr-border-slate-100", hoverBorderColor: "hover:tr-border-slate-100", ringRolor: "tr-ring-slate-100", ringColor: "tr-ring-slate-100", hoverRingColor: "hover:tr-ring-slate-100", divideColor: "tr-divide-slate-100", outlineColor: "tr-outline-slate-100", focusRingColor: "focus:tr-ring-slate-100" }, 200: { bgColor: "tr-bg-slate-200", hoverBgColor: "hover:tr-bg-slate-200", textColor: "tr-text-slate-200", hoverTextColor: "hover:tr-text-slate-200", borderColor: "tr-border-slate-200", hoverBorderColor: "hover:tr-border-slate-200", ringRolor: "tr-ring-slate-200", ringColor: "tr-ring-slate-200", hoverRingColor: "hover:tr-ring-slate-200", divideColor: "tr-divide-slate-200", outlineColor: "tr-outline-slate-200", focusRingColor: "focus:tr-ring-slate-200" }, 300: { bgColor: "tr-bg-slate-300", hoverBgColor: "hover:tr-bg-slate-300", textColor: "tr-text-slate-300", hoverTextColor: "hover:tr-text-slate-300", borderColor: "tr-border-slate-300", hoverBorderColor: "hover:tr-border-slate-300", ringRolor: "tr-ring-slate-300", ringColor: "tr-ring-slate-300", hoverRingColor: "hover:tr-ring-slate-300", divideColor: "tr-divide-slate-300", outlineColor: "tr-outline-slate-300", focusRingColor: "focus:tr-ring-slate-300" }, 400: { bgColor: "tr-bg-slate-400", hoverBgColor: "hover:tr-bg-slate-400", textColor: "tr-text-slate-400", hoverTextColor: "hover:tr-text-slate-400", borderColor: "tr-border-slate-400", hoverBorderColor: "hover:tr-border-slate-400", ringRolor: "tr-ring-slate-400", ringColor: "tr-ring-slate-400", hoverRingColor: "hover:tr-ring-slate-400", divideColor: "tr-divide-slate-400", outlineColor: "tr-outline-slate-400", focusRingColor: "focus:tr-ring-slate-400" }, 500: { bgColor: "tr-bg-slate-500", hoverBgColor: "hover:tr-bg-slate-500", textColor: "tr-text-slate-500", hoverTextColor: "hover:tr-text-slate-500", borderColor: "tr-border-slate-500", hoverBorderColor: "hover:tr-border-slate-500", ringRolor: "tr-ring-slate-500", ringColor: "tr-ring-slate-500", hoverRingColor: "hover:tr-ring-slate-500", divideColor: "tr-divide-slate-500", outlineColor: "tr-outline-slate-500", focusRingColor: "focus:tr-ring-slate-500" }, 600: { bgColor: "tr-bg-slate-600", hoverBgColor: "hover:tr-bg-slate-600", textColor: "tr-text-slate-600", hoverTextColor: "hover:tr-text-slate-600", borderColor: "tr-border-slate-600", hoverBorderColor: "hover:tr-border-slate-600", ringRolor: "tr-ring-slate-600", ringColor: "tr-ring-slate-600", hoverRingColor: "hover:tr-ring-slate-600", divideColor: "tr-divide-slate-600", outlineColor: "tr-outline-slate-600", focusRingColor: "focus:tr-ring-slate-600" }, 700: { bgColor: "tr-bg-slate-700", hoverBgColor: "hover:tr-bg-slate-700", textColor: "tr-text-slate-700", hoverTextColor: "hover:tr-text-slate-700", borderColor: "tr-border-slate-700", hoverBorderColor: "hover:tr-border-slate-700", ringRolor: "tr-ring-slate-700", ringColor: "tr-ring-slate-700", hoverRingColor: "hover:tr-ring-slate-700", divideColor: "tr-divide-slate-700", outlineColor: "tr-outline-slate-700", focusRingColor: "focus:tr-ring-slate-700" }, 800: { bgColor: "tr-bg-slate-800", hoverBgColor: "hover:tr-bg-slate-800", textColor: "tr-text-slate-800", hoverTextColor: "hover:tr-text-slate-800", borderColor: "tr-border-slate-800", hoverBorderColor: "hover:tr-border-slate-800", ringRolor: "tr-ring-slate-800", ringColor: "tr-ring-slate-800", hoverRingColor: "hover:tr-ring-slate-800", divideColor: "tr-divide-slate-800", outlineColor: "tr-outline-slate-800", focusRingColor: "focus:tr-ring-slate-800" }, 900: { bgColor: "tr-bg-slate-900", hoverBgColor: "hover:tr-bg-slate-900", textColor: "tr-text-slate-900", hoverTextColor: "hover:tr-text-slate-900", borderColor: "tr-border-slate-900", hoverBorderColor: "hover:tr-border-slate-900", ringRolor: "tr-ring-slate-900", ringColor: "tr-ring-slate-900", hoverRingColor: "hover:tr-ring-slate-900", divideColor: "tr-divide-slate-900", outlineColor: "tr-outline-slate-900", focusRingColor: "focus:tr-ring-slate-900" } }, gray: { 50: { bgColor: "tr-bg-gray-50", hoverBgColor: "hover:tr-bg-gray-50", textColor: "tr-text-gray-50", hoverTextColor: "hover:tr-text-gray-50", borderColor: "tr-border-gray-50", hoverBorderColor: "hover:tr-border-gray-50", ringRolor: "tr-ring-gray-50", ringColor: "tr-ring-gray-50", hoverRingColor: "hover:tr-ring-gray-50", divideColor: "tr-divide-gray-50", outlineColor: "tr-outline-gray-50", focusRingColor: "focus:tr-ring-gray-50" }, 100: { bgColor: "tr-bg-gray-100", hoverBgColor: "hover:tr-bg-gray-100", textColor: "tr-text-gray-100", hoverTextColor: "hover:tr-text-gray-100", borderColor: "tr-border-gray-100", hoverBorderColor: "hover:tr-border-gray-100", ringRolor: "tr-ring-gray-100", ringColor: "tr-ring-gray-100", hoverRingColor: "hover:tr-ring-gray-100", divideColor: "tr-divide-gray-100", outlineColor: "tr-outline-gray-100", focusRingColor: "focus:tr-ring-gray-100" }, 200: { bgColor: "tr-bg-gray-200", hoverBgColor: "hover:tr-bg-gray-200", textColor: "tr-text-gray-200", hoverTextColor: "hover:tr-text-gray-200", borderColor: "tr-border-gray-200", hoverBorderColor: "hover:tr-border-gray-200", ringRolor: "tr-ring-gray-200", ringColor: "tr-ring-gray-200", hoverRingColor: "hover:tr-ring-gray-200", divideColor: "tr-divide-gray-200", outlineColor: "tr-outline-gray-200", focusRingColor: "focus:tr-ring-gray-200" }, 300: { bgColor: "tr-bg-gray-300", hoverBgColor: "hover:tr-bg-gray-300", textColor: "tr-text-gray-300", hoverTextColor: "hover:tr-text-gray-300", borderColor: "tr-border-gray-300", hoverBorderColor: "hover:tr-border-gray-300", ringRolor: "tr-ring-gray-300", ringColor: "tr-ring-gray-300", hoverRingColor: "hover:tr-ring-gray-300", divideColor: "tr-divide-gray-300", outlineColor: "tr-outline-gray-300", focusRingColor: "focus:tr-ring-gray-300" }, 400: { bgColor: "tr-bg-gray-400", hoverBgColor: "hover:tr-bg-gray-400", textColor: "tr-text-gray-400", hoverTextColor: "hover:tr-text-gray-400", borderColor: "tr-border-gray-400", hoverBorderColor: "hover:tr-border-gray-400", ringRolor: "tr-ring-gray-400", ringColor: "tr-ring-gray-400", hoverRingColor: "hover:tr-ring-gray-400", divideColor: "tr-divide-gray-400", outlineColor: "tr-outline-gray-400", focusRingColor: "focus:tr-ring-gray-400" }, 500: { bgColor: "tr-bg-gray-500", hoverBgColor: "hover:tr-bg-gray-500", textColor: "tr-text-gray-500", hoverTextColor: "hover:tr-text-gray-500", borderColor: "tr-border-gray-500", hoverBorderColor: "hover:tr-border-gray-500", ringRolor: "tr-ring-gray-500", ringColor: "tr-ring-gray-500", hoverRingColor: "hover:tr-ring-gray-500", divideColor: "tr-divide-gray-500", outlineColor: "tr-outline-gray-500", focusRingColor: "focus:tr-ring-gray-500" }, 600: { bgColor: "tr-bg-gray-600", hoverBgColor: "hover:tr-bg-gray-600", textColor: "tr-text-gray-600", hoverTextColor: "hover:tr-text-gray-600", borderColor: "tr-border-gray-600", hoverBorderColor: "hover:tr-border-gray-600", ringRolor: "tr-ring-gray-600", ringColor: "tr-ring-gray-600", hoverRingColor: "hover:tr-ring-gray-600", divideColor: "tr-divide-gray-600", outlineColor: "tr-outline-gray-600", focusRingColor: "focus:tr-ring-gray-600" }, 700: { bgColor: "tr-bg-gray-700", hoverBgColor: "hover:tr-bg-gray-700", textColor: "tr-text-gray-700", hoverTextColor: "hover:tr-text-gray-700", borderColor: "tr-border-gray-700", hoverBorderColor: "hover:tr-border-gray-700", ringRolor: "tr-ring-gray-700", ringColor: "tr-ring-gray-700", hoverRingColor: "hover:tr-ring-gray-700", divideColor: "tr-divide-gray-700", outlineColor: "tr-outline-gray-700", focusRingColor: "focus:tr-ring-gray-700" }, 800: { bgColor: "tr-bg-gray-800", hoverBgColor: "hover:tr-bg-gray-800", textColor: "tr-text-gray-800", hoverTextColor: "hover:tr-text-gray-800", borderColor: "tr-border-gray-800", hoverBorderColor: "hover:tr-border-gray-800", ringRolor: "tr-ring-gray-800", ringColor: "tr-ring-gray-800", hoverRingColor: "hover:tr-ring-gray-800", divideColor: "tr-divide-gray-800", outlineColor: "tr-outline-gray-800", focusRingColor: "focus:tr-ring-gray-800" }, 900: { bgColor: "tr-bg-gray-900", hoverBgColor: "hover:tr-bg-gray-900", textColor: "tr-text-gray-900", hoverTextColor: "hover:tr-text-gray-900", borderColor: "tr-border-gray-900", hoverBorderColor: "hover:tr-border-gray-900", ringRolor: "tr-ring-gray-900", ringColor: "tr-ring-gray-900", hoverRingColor: "hover:tr-ring-gray-900", divideColor: "tr-divide-gray-900", outlineColor: "tr-outline-gray-900", focusRingColor: "focus:tr-ring-gray-900" } }, zinc: { 50: { bgColor: "tr-bg-zinc-50", hoverBgColor: "hover:tr-bg-zinc-50", textColor: "tr-text-zinc-50", hoverTextColor: "hover:tr-text-zinc-50", borderColor: "tr-border-zinc-50", hoverBorderColor: "hover:tr-border-zinc-50", ringRolor: "tr-ring-zinc-50", ringColor: "tr-ring-zinc-50", hoverRingColor: "hover:tr-ring-zinc-50", divideColor: "tr-divide-zinc-50", outlineColor: "tr-outline-zinc-50", focusRingColor: "focus:tr-ring-zinc-50" }, 100: { bgColor: "tr-bg-zinc-100", hoverBgColor: "hover:tr-bg-zinc-100", textColor: "tr-text-zinc-100", hoverTextColor: "hover:tr-text-zinc-100", borderColor: "tr-border-zinc-100", hoverBorderColor: "hover:tr-border-zinc-100", ringRolor: "tr-ring-zinc-100", ringColor: "tr-ring-zinc-100", hoverRingColor: "hover:tr-ring-zinc-100", divideColor: "tr-divide-zinc-100", outlineColor: "tr-outline-zinc-100", focusRingColor: "focus:tr-ring-zinc-100" }, 200: { bgColor: "tr-bg-zinc-200", hoverBgColor: "hover:tr-bg-zinc-200", textColor: "tr-text-zinc-200", hoverTextColor: "hover:tr-text-zinc-200", borderColor: "tr-border-zinc-200", hoverBorderColor: "hover:tr-border-zinc-200", ringRolor: "tr-ring-zinc-200", ringColor: "tr-ring-zinc-200", hoverRingColor: "hover:tr-ring-zinc-200", divideColor: "tr-divide-zinc-200", outlineColor: "tr-outline-zinc-200", focusRingColor: "focus:tr-ring-zinc-200" }, 300: { bgColor: "tr-bg-zinc-300", hoverBgColor: "hover:tr-bg-zinc-300", textColor: "tr-text-zinc-300", hoverTextColor: "hover:tr-text-zinc-300", borderColor: "tr-border-zinc-300", hoverBorderColor: "hover:tr-border-zinc-300", ringRolor: "tr-ring-zinc-300", ringColor: "tr-ring-zinc-300", hoverRingColor: "hover:tr-ring-zinc-300", divideColor: "tr-divide-zinc-300", outlineColor: "tr-outline-zinc-300", focusRingColor: "focus:tr-ring-zinc-300" }, 400: { bgColor: "tr-bg-zinc-400", hoverBgColor: "hover:tr-bg-zinc-400", textColor: "tr-text-zinc-400", hoverTextColor: "hover:tr-text-zinc-400", borderColor: "tr-border-zinc-400", hoverBorderColor: "hover:tr-border-zinc-400", ringRolor: "tr-ring-zinc-400", ringColor: "tr-ring-zinc-400", hoverRingColor: "hover:tr-ring-zinc-400", divideColor: "tr-divide-zinc-400", outlineColor: "tr-outline-zinc-400", focusRingColor: "focus:tr-ring-zinc-400" }, 500: { bgColor: "tr-bg-zinc-500", hoverBgColor: "hover:tr-bg-zinc-500", textColor: "tr-text-zinc-500", hoverTextColor: "hover:tr-text-zinc-500", borderColor: "tr-border-zinc-500", hoverBorderColor: "hover:tr-border-zinc-500", ringRolor: "tr-ring-zinc-500", ringColor: "tr-ring-zinc-500", hoverRingColor: "hover:tr-ring-zinc-500", divideColor: "tr-divide-zinc-500", outlineColor: "tr-outline-zinc-500", focusRingColor: "focus:tr-ring-zinc-500" }, 600: { bgColor: "tr-bg-zinc-600", hoverBgColor: "hover:tr-bg-zinc-600", textColor: "tr-text-zinc-600", hoverTextColor: "hover:tr-text-zinc-600", borderColor: "tr-border-zinc-600", hoverBorderColor: "hover:tr-border-zinc-600", ringRolor: "tr-ring-zinc-600", ringColor: "tr-ring-zinc-600", hoverRingColor: "hover:tr-ring-zinc-600", divideColor: "tr-divide-zinc-600", outlineColor: "tr-outline-zinc-600", focusRingColor: "focus:tr-ring-zinc-600" }, 700: { bgColor: "tr-bg-zinc-700", hoverBgColor: "hover:tr-bg-zinc-700", textColor: "tr-text-zinc-700", hoverTextColor: "hover:tr-text-zinc-700", borderColor: "tr-border-zinc-700", hoverBorderColor: "hover:tr-border-zinc-700", ringRolor: "tr-ring-zinc-700", ringColor: "tr-ring-zinc-700", hoverRingColor: "hover:tr-ring-zinc-700", divideColor: "tr-divide-zinc-700", outlineColor: "tr-outline-zinc-700", focusRingColor: "focus:tr-ring-zinc-700" }, 800: { bgColor: "tr-bg-zinc-800", hoverBgColor: "hover:tr-bg-zinc-800", textColor: "tr-text-zinc-800", hoverTextColor: "hover:tr-text-zinc-800", borderColor: "tr-border-zinc-800", hoverBorderColor: "hover:tr-border-zinc-800", ringRolor: "tr-ring-zinc-800", ringColor: "tr-ring-zinc-800", hoverRingColor: "hover:tr-ring-zinc-800", divideColor: "tr-divide-zinc-800", outlineColor: "tr-outline-zinc-800", focusRingColor: "focus:tr-ring-zinc-800" }, 900: { bgColor: "tr-bg-zinc-900", hoverBgColor: "hover:tr-bg-zinc-900", textColor: "tr-text-zinc-900", hoverTextColor: "hover:tr-text-zinc-900", borderColor: "tr-border-zinc-900", hoverBorderColor: "hover:tr-border-zinc-900", ringRolor: "tr-ring-zinc-900", ringColor: "tr-ring-zinc-900", hoverRingColor: "hover:tr-ring-zinc-900", divideColor: "tr-divide-zinc-900", outlineColor: "tr-outline-zinc-900", focusRingColor: "focus:tr-ring-zinc-900" } }, neutral: { 50: { bgColor: "tr-bg-neutral-50", hoverBgColor: "hover:tr-bg-neutral-50", textColor: "tr-text-neutral-50", hoverTextColor: "hover:tr-text-neutral-50", borderColor: "tr-border-neutral-50", hoverBorderColor: "hover:tr-border-neutral-50", ringRolor: "tr-ring-neutral-50", ringColor: "tr-ring-neutral-50", hoverRingColor: "hover:tr-ring-neutral-50", divideColor: "tr-divide-neutral-50", outlineColor: "tr-outline-neutral-50", focusRingColor: "focus:tr-ring-neutral-50" }, 100: { bgColor: "tr-bg-neutral-100", hoverBgColor: "hover:tr-bg-neutral-100", textColor: "tr-text-neutral-100", hoverTextColor: "hover:tr-text-neutral-100", borderColor: "tr-border-neutral-100", hoverBorderColor: "hover:tr-border-neutral-100", ringRolor: "tr-ring-neutral-100", ringColor: "tr-ring-neutral-100", hoverRingColor: "hover:tr-ring-neutral-100", divideColor: "tr-divide-neutral-100", outlineColor: "tr-outline-neutral-100", focusRingColor: "focus:tr-ring-neutral-100" }, 200: { bgColor: "tr-bg-neutral-200", hoverBgColor: "hover:tr-bg-neutral-200", textColor: "tr-text-neutral-200", hoverTextColor: "hover:tr-text-neutral-200", borderColor: "tr-border-neutral-200", hoverBorderColor: "hover:tr-border-neutral-200", ringRolor: "tr-ring-neutral-200", ringColor: "tr-ring-neutral-200", hoverRingColor: "hover:tr-ring-neutral-200", divideColor: "tr-divide-neutral-200", outlineColor: "tr-outline-neutral-200", focusRingColor: "focus:tr-ring-neutral-200" }, 300: { bgColor: "tr-bg-neutral-300", hoverBgColor: "hover:tr-bg-neutral-300", textColor: "tr-text-neutral-300", hoverTextColor: "hover:tr-text-neutral-300", borderColor: "tr-border-neutral-300", hoverBorderColor: "hover:tr-border-neutral-300", ringRolor: "tr-ring-neutral-300", ringColor: "tr-ring-neutral-300", hoverRingColor: "hover:tr-ring-neutral-300", divideColor: "tr-divide-neutral-300", outlineColor: "tr-outline-neutral-300", focusRingColor: "focus:tr-ring-neutral-300" }, 400: { bgColor: "tr-bg-neutral-400", hoverBgColor: "hover:tr-bg-neutral-400", textColor: "tr-text-neutral-400", hoverTextColor: "hover:tr-text-neutral-400", borderColor: "tr-border-neutral-400", hoverBorderColor: "hover:tr-border-neutral-400", ringRolor: "tr-ring-neutral-400", ringColor: "tr-ring-neutral-400", hoverRingColor: "hover:tr-ring-neutral-400", divideColor: "tr-divide-neutral-400", outlineColor: "tr-outline-neutral-400", focusRingColor: "focus:tr-ring-neutral-400" }, 500: { bgColor: "tr-bg-neutral-500", hoverBgColor: "hover:tr-bg-neutral-500", textColor: "tr-text-neutral-500", hoverTextColor: "hover:tr-text-neutral-500", borderColor: "tr-border-neutral-500", hoverBorderColor: "hover:tr-border-neutral-500", ringRolor: "tr-ring-neutral-500", ringColor: "tr-ring-neutral-500", hoverRingColor: "hover:tr-ring-neutral-500", divideColor: "tr-divide-neutral-500", outlineColor: "tr-outline-neutral-500", focusRingColor: "focus:tr-ring-neutral-500" }, 600: { bgColor: "tr-bg-neutral-600", hoverBgColor: "hover:tr-bg-neutral-600", textColor: "tr-text-neutral-600", hoverTextColor: "hover:tr-text-neutral-600", borderColor: "tr-border-neutral-600", hoverBorderColor: "hover:tr-border-neutral-600", ringRolor: "tr-ring-neutral-600", ringColor: "tr-ring-neutral-600", hoverRingColor: "hover:tr-ring-neutral-600", divideColor: "tr-divide-neutral-600", outlineColor: "tr-outline-neutral-600", focusRingColor: "focus:tr-ring-neutral-600" }, 700: { bgColor: "tr-bg-neutral-700", hoverBgColor: "hover:tr-bg-neutral-700", textColor: "tr-text-neutral-700", hoverTextColor: "hover:tr-text-neutral-700", borderColor: "tr-border-neutral-700", hoverBorderColor: "hover:tr-border-neutral-700", ringRolor: "tr-ring-neutral-700", ringColor: "tr-ring-neutral-700", hoverRingColor: "hover:tr-ring-neutral-700", divideColor: "tr-divide-neutral-700", outlineColor: "tr-outline-neutral-700", focusRingColor: "focus:tr-ring-neutral-700" }, 800: { bgColor: "tr-bg-neutral-800", hoverBgColor: "hover:tr-bg-neutral-800", textColor: "tr-text-neutral-800", hoverTextColor: "hover:tr-text-neutral-800", borderColor: "tr-border-neutral-800", hoverBorderColor: "hover:tr-border-neutral-800", ringRolor: "tr-ring-neutral-800", ringColor: "tr-ring-neutral-800", hoverRingColor: "hover:tr-ring-neutral-800", divideColor: "tr-divide-neutral-800", outlineColor: "tr-outline-neutral-800", focusRingColor: "focus:tr-ring-neutral-800" }, 900: { bgColor: "tr-bg-neutral-900", hoverBgColor: "hover:tr-bg-neutral-900", textColor: "tr-text-neutral-900", hoverTextColor: "hover:tr-text-neutral-900", borderColor: "tr-border-neutral-900", hoverBorderColor: "hover:tr-border-neutral-900", ringRolor: "tr-ring-neutral-900", ringColor: "tr-ring-neutral-900", hoverRingColor: "hover:tr-ring-neutral-900", divideColor: "tr-divide-neutral-900", outlineColor: "tr-outline-neutral-900", focusRingColor: "focus:tr-ring-neutral-900" } }, stone: { 50: { bgColor: "tr-bg-stone-50", hoverBgColor: "hover:tr-bg-stone-50", textColor: "tr-text-stone-50", hoverTextColor: "hover:tr-text-stone-50", borderColor: "tr-border-stone-50", hoverBorderColor: "hover:tr-border-stone-50", ringRolor: "tr-ring-stone-50", ringColor: "tr-ring-stone-50", hoverRingColor: "hover:tr-ring-stone-50", divideColor: "tr-divide-stone-50", outlineColor: "tr-outline-stone-50", focusRingColor: "focus:tr-ring-stone-50" }, 100: { bgColor: "tr-bg-stone-100", hoverBgColor: "hover:tr-bg-stone-100", textColor: "tr-text-stone-100", hoverTextColor: "hover:tr-text-stone-100", borderColor: "tr-border-stone-100", hoverBorderColor: "hover:tr-border-stone-100", ringRolor: "tr-ring-stone-100", ringColor: "tr-ring-stone-100", hoverRingColor: "hover:tr-ring-stone-100", divideColor: "tr-divide-stone-100", outlineColor: "tr-outline-stone-100", focusRingColor: "focus:tr-ring-stone-100" }, 200: { bgColor: "tr-bg-stone-200", hoverBgColor: "hover:tr-bg-stone-200", textColor: "tr-text-stone-200", hoverTextColor: "hover:tr-text-stone-200", borderColor: "tr-border-stone-200", hoverBorderColor: "hover:tr-border-stone-200", ringRolor: "tr-ring-stone-200", ringColor: "tr-ring-stone-200", hoverRingColor: "hover:tr-ring-stone-200", divideColor: "tr-divide-stone-200", outlineColor: "tr-outline-stone-200", focusRingColor: "focus:tr-ring-stone-200" }, 300: { bgColor: "tr-bg-stone-300", hoverBgColor: "hover:tr-bg-stone-300", textColor: "tr-text-stone-300", hoverTextColor: "hover:tr-text-stone-300", borderColor: "tr-border-stone-300", hoverBorderColor: "hover:tr-border-stone-300", ringRolor: "tr-ring-stone-300", ringColor: "tr-ring-stone-300", hoverRingColor: "hover:tr-ring-stone-300", divideColor: "tr-divide-stone-300", outlineColor: "tr-outline-stone-300", focusRingColor: "focus:tr-ring-stone-300" }, 400: { bgColor: "tr-bg-stone-400", hoverBgColor: "hover:tr-bg-stone-400", textColor: "tr-text-stone-400", hoverTextColor: "hover:tr-text-stone-400", borderColor: "tr-border-stone-400", hoverBorderColor: "hover:tr-border-stone-400", ringRolor: "tr-ring-stone-400", ringColor: "tr-ring-stone-400", hoverRingColor: "hover:tr-ring-stone-400", divideColor: "tr-divide-stone-400", outlineColor: "tr-outline-stone-400", focusRingColor: "focus:tr-ring-stone-400" }, 500: { bgColor: "tr-bg-stone-500", hoverBgColor: "hover:tr-bg-stone-500", textColor: "tr-text-stone-500", hoverTextColor: "hover:tr-text-stone-500", borderColor: "tr-border-stone-500", hoverBorderColor: "hover:tr-border-stone-500", ringRolor: "tr-ring-stone-500", ringColor: "tr-ring-stone-500", hoverRingColor: "hover:tr-ring-stone-500", divideColor: "tr-divide-stone-500", outlineColor: "tr-outline-stone-500", focusRingColor: "focus:tr-ring-stone-500" }, 600: { bgColor: "tr-bg-stone-600", hoverBgColor: "hover:tr-bg-stone-600", textColor: "tr-text-stone-600", hoverTextColor: "hover:tr-text-stone-600", borderColor: "tr-border-stone-600", hoverBorderColor: "hover:tr-border-stone-600", ringRolor: "tr-ring-stone-600", ringColor: "tr-ring-stone-600", hoverRingColor: "hover:tr-ring-stone-600", divideColor: "tr-divide-stone-600", outlineColor: "tr-outline-stone-600", focusRingColor: "focus:tr-ring-stone-600" }, 700: { bgColor: "tr-bg-stone-700", hoverBgColor: "hover:tr-bg-stone-700", textColor: "tr-text-stone-700", hoverTextColor: "hover:tr-text-stone-700", borderColor: "tr-border-stone-700", hoverBorderColor: "hover:tr-border-stone-700", ringRolor: "tr-ring-stone-700", ringColor: "tr-ring-stone-700", hoverRingColor: "hover:tr-ring-stone-700", divideColor: "tr-divide-stone-700", outlineColor: "tr-outline-stone-700", focusRingColor: "focus:tr-ring-stone-700" }, 800: { bgColor: "tr-bg-stone-800", hoverBgColor: "hover:tr-bg-stone-800", textColor: "tr-text-stone-800", hoverTextColor: "hover:tr-text-stone-800", borderColor: "tr-border-stone-800", hoverBorderColor: "hover:tr-border-stone-800", ringRolor: "tr-ring-stone-800", ringColor: "tr-ring-stone-800", hoverRingColor: "hover:tr-ring-stone-800", divideColor: "tr-divide-stone-800", outlineColor: "tr-outline-stone-800", focusRingColor: "focus:tr-ring-stone-800" }, 900: { bgColor: "tr-bg-stone-900", hoverBgColor: "hover:tr-bg-stone-900", textColor: "tr-text-stone-900", hoverTextColor: "hover:tr-text-stone-900", borderColor: "tr-border-stone-900", hoverBorderColor: "hover:tr-border-stone-900", ringRolor: "tr-ring-stone-900", ringColor: "tr-ring-stone-900", hoverRingColor: "hover:tr-ring-stone-900", divideColor: "tr-divide-stone-900", outlineColor: "tr-outline-stone-900", focusRingColor: "focus:tr-ring-stone-900" } }, red: { 50: { bgColor: "tr-bg-red-50", hoverBgColor: "hover:tr-bg-red-50", textColor: "tr-text-red-50", hoverTextColor: "hover:tr-text-red-50", borderColor: "tr-border-red-50", hoverBorderColor: "hover:tr-border-red-50", ringRolor: "tr-ring-red-50", ringColor: "tr-ring-red-50", hoverRingColor: "hover:tr-ring-red-50", divideColor: "tr-divide-red-50", outlineColor: "tr-outline-red-50", focusRingColor: "focus:tr-ring-red-50" }, 100: { bgColor: "tr-bg-red-100", hoverBgColor: "hover:tr-bg-red-100", textColor: "tr-text-red-100", hoverTextColor: "hover:tr-text-red-100", borderColor: "tr-border-red-100", hoverBorderColor: "hover:tr-border-red-100", ringRolor: "tr-ring-red-100", ringColor: "tr-ring-red-100", hoverRingColor: "hover:tr-ring-red-100", divideColor: "tr-divide-red-100", outlineColor: "tr-outline-red-100", focusRingColor: "focus:tr-ring-red-100" }, 200: { bgColor: "tr-bg-red-200", hoverBgColor: "hover:tr-bg-red-200", textColor: "tr-text-red-200", hoverTextColor: "hover:tr-text-red-200", borderColor: "tr-border-red-200", hoverBorderColor: "hover:tr-border-red-200", ringRolor: "tr-ring-red-200", ringColor: "tr-ring-red-200", hoverRingColor: "hover:tr-ring-red-200", divideColor: "tr-divide-red-200", outlineColor: "tr-outline-red-200", focusRingColor: "focus:tr-ring-red-200" }, 300: { bgColor: "tr-bg-red-300", hoverBgColor: "hover:tr-bg-red-300", textColor: "tr-text-red-300", hoverTextColor: "hover:tr-text-red-300", borderColor: "tr-border-red-300", hoverBorderColor: "hover:tr-border-red-300", ringRolor: "tr-ring-red-300", ringColor: "tr-ring-red-300", hoverRingColor: "hover:tr-ring-red-300", divideColor: "tr-divide-red-300", outlineColor: "tr-outline-red-300", focusRingColor: "focus:tr-ring-red-300" }, 400: { bgColor: "tr-bg-red-400", hoverBgColor: "hover:tr-bg-red-400", textColor: "tr-text-red-400", hoverTextColor: "hover:tr-text-red-400", borderColor: "tr-border-red-400", hoverBorderColor: "hover:tr-border-red-400", ringRolor: "tr-ring-red-400", ringColor: "tr-ring-red-400", hoverRingColor: "hover:tr-ring-red-400", divideColor: "tr-divide-red-400", outlineColor: "tr-outline-red-400", focusRingColor: "focus:tr-ring-red-400" }, 500: { bgColor: "tr-bg-red-500", hoverBgColor: "hover:tr-bg-red-500", textColor: "tr-text-red-500", hoverTextColor: "hover:tr-text-red-500", borderColor: "tr-border-red-500", hoverBorderColor: "hover:tr-border-red-500", ringRolor: "tr-ring-red-500", ringColor: "tr-ring-red-500", hoverRingColor: "hover:tr-ring-red-500", divideColor: "tr-divide-red-500", outlineColor: "tr-outline-red-500", focusRingColor: "focus:tr-ring-red-500" }, 600: { bgColor: "tr-bg-red-600", hoverBgColor: "hover:tr-bg-red-600", textColor: "tr-text-red-600", hoverTextColor: "hover:tr-text-red-600", borderColor: "tr-border-red-600", hoverBorderColor: "hover:tr-border-red-600", ringRolor: "tr-ring-red-600", ringColor: "tr-ring-red-600", hoverRingColor: "hover:tr-ring-red-600", divideColor: "tr-divide-red-600", outlineColor: "tr-outline-red-600", focusRingColor: "focus:tr-ring-red-600" }, 700: { bgColor: "tr-bg-red-700", hoverBgColor: "hover:tr-bg-red-700", textColor: "tr-text-red-700", hoverTextColor: "hover:tr-text-red-700", borderColor: "tr-border-red-700", hoverBorderColor: "hover:tr-border-red-700", ringRolor: "tr-ring-red-700", ringColor: "tr-ring-red-700", hoverRingColor: "hover:tr-ring-red-700", divideColor: "tr-divide-red-700", outlineColor: "tr-outline-red-700", focusRingColor: "focus:tr-ring-red-700" }, 800: { bgColor: "tr-bg-red-800", hoverBgColor: "hover:tr-bg-red-800", textColor: "tr-text-red-800", hoverTextColor: "hover:tr-text-red-800", borderColor: "tr-border-red-800", hoverBorderColor: "hover:tr-border-red-800", ringRolor: "tr-ring-red-800", ringColor: "tr-ring-red-800", hoverRingColor: "hover:tr-ring-red-800", divideColor: "tr-divide-red-800", outlineColor: "tr-outline-red-800", focusRingColor: "focus:tr-ring-red-800" }, 900: { bgColor: "tr-bg-red-900", hoverBgColor: "hover:tr-bg-red-900", textColor: "tr-text-red-900", hoverTextColor: "hover:tr-text-red-900", borderColor: "tr-border-red-900", hoverBorderColor: "hover:tr-border-red-900", ringRolor: "tr-ring-red-900", ringColor: "tr-ring-red-900", hoverRingColor: "hover:tr-ring-red-900", divideColor: "tr-divide-red-900", outlineColor: "tr-outline-red-900", focusRingColor: "focus:tr-ring-red-900" } }, orange: { 50: { bgColor: "tr-bg-orange-50", hoverBgColor: "hover:tr-bg-orange-50", textColor: "tr-text-orange-50", hoverTextColor: "hover:tr-text-orange-50", borderColor: "tr-border-orange-50", hoverBorderColor: "hover:tr-border-orange-50", ringRolor: "tr-ring-orange-50", ringColor: "tr-ring-orange-50", hoverRingColor: "hover:tr-ring-orange-50", divideColor: "tr-divide-orange-50", outlineColor: "tr-outline-orange-50", focusRingColor: "focus:tr-ring-orange-50" }, 100: { bgColor: "tr-bg-orange-100", hoverBgColor: "hover:tr-bg-orange-100", textColor: "tr-text-orange-100", hoverTextColor: "hover:tr-text-orange-100", borderColor: "tr-border-orange-100", hoverBorderColor: "hover:tr-border-orange-100", ringRolor: "tr-ring-orange-100", ringColor: "tr-ring-orange-100", hoverRingColor: "hover:tr-ring-orange-100", divideColor: "tr-divide-orange-100", outlineColor: "tr-outline-orange-100", focusRingColor: "focus:tr-ring-orange-100" }, 200: { bgColor: "tr-bg-orange-200", hoverBgColor: "hover:tr-bg-orange-200", textColor: "tr-text-orange-200", hoverTextColor: "hover:tr-text-orange-200", borderColor: "tr-border-orange-200", hoverBorderColor: "hover:tr-border-orange-200", ringRolor: "tr-ring-orange-200", ringColor: "tr-ring-orange-200", hoverRingColor: "hover:tr-ring-orange-200", divideColor: "tr-divide-orange-200", outlineColor: "tr-outline-orange-200", focusRingColor: "focus:tr-ring-orange-200" }, 300: { bgColor: "tr-bg-orange-300", hoverBgColor: "hover:tr-bg-orange-300", textColor: "tr-text-orange-300", hoverTextColor: "hover:tr-text-orange-300", borderColor: "tr-border-orange-300", hoverBorderColor: "hover:tr-border-orange-300", ringRolor: "tr-ring-orange-300", ringColor: "tr-ring-orange-300", hoverRingColor: "hover:tr-ring-orange-300", divideColor: "tr-divide-orange-300", outlineColor: "tr-outline-orange-300", focusRingColor: "focus:tr-ring-orange-300" }, 400: { bgColor: "tr-bg-orange-400", hoverBgColor: "hover:tr-bg-orange-400", textColor: "tr-text-orange-400", hoverTextColor: "hover:tr-text-orange-400", borderColor: "tr-border-orange-400", hoverBorderColor: "hover:tr-border-orange-400", ringRolor: "tr-ring-orange-400", ringColor: "tr-ring-orange-400", hoverRingColor: "hover:tr-ring-orange-400", divideColor: "tr-divide-orange-400", outlineColor: "tr-outline-orange-400", focusRingColor: "focus:tr-ring-orange-400" }, 500: { bgColor: "tr-bg-orange-500", hoverBgColor: "hover:tr-bg-orange-500", textColor: "tr-text-orange-500", hoverTextColor: "hover:tr-text-orange-500", borderColor: "tr-border-orange-500", hoverBorderColor: "hover:tr-border-orange-500", ringRolor: "tr-ring-orange-500", ringColor: "tr-ring-orange-500", hoverRingColor: "hover:tr-ring-orange-500", divideColor: "tr-divide-orange-500", outlineColor: "tr-outline-orange-500", focusRingColor: "focus:tr-ring-orange-500" }, 600: { bgColor: "tr-bg-orange-600", hoverBgColor: "hover:tr-bg-orange-600", textColor: "tr-text-orange-600", hoverTextColor: "hover:tr-text-orange-600", borderColor: "tr-border-orange-600", hoverBorderColor: "hover:tr-border-orange-600", ringRolor: "tr-ring-orange-600", ringColor: "tr-ring-orange-600", hoverRingColor: "hover:tr-ring-orange-600", divideColor: "tr-divide-orange-600", outlineColor: "tr-outline-orange-600", focusRingColor: "focus:tr-ring-orange-600" }, 700: { bgColor: "tr-bg-orange-700", hoverBgColor: "hover:tr-bg-orange-700", textColor: "tr-text-orange-700", hoverTextColor: "hover:tr-text-orange-700", borderColor: "tr-border-orange-700", hoverBorderColor: "hover:tr-border-orange-700", ringRolor: "tr-ring-orange-700", ringColor: "tr-ring-orange-700", hoverRingColor: "hover:tr-ring-orange-700", divideColor: "tr-divide-orange-700", outlineColor: "tr-outline-orange-700", focusRingColor: "focus:tr-ring-orange-700" }, 800: { bgColor: "tr-bg-orange-800", hoverBgColor: "hover:tr-bg-orange-800", textColor: "tr-text-orange-800", hoverTextColor: "hover:tr-text-orange-800", borderColor: "tr-border-orange-800", hoverBorderColor: "hover:tr-border-orange-800", ringRolor: "tr-ring-orange-800", ringColor: "tr-ring-orange-800", hoverRingColor: "hover:tr-ring-orange-800", divideColor: "tr-divide-orange-800", outlineColor: "tr-outline-orange-800", focusRingColor: "focus:tr-ring-orange-800" }, 900: { bgColor: "tr-bg-orange-900", hoverBgColor: "hover:tr-bg-orange-900", textColor: "tr-text-orange-900", hoverTextColor: "hover:tr-text-orange-900", borderColor: "tr-border-orange-900", hoverBorderColor: "hover:tr-border-orange-900", ringRolor: "tr-ring-orange-900", ringColor: "tr-ring-orange-900", hoverRingColor: "hover:tr-ring-orange-900", divideColor: "tr-divide-orange-900", outlineColor: "tr-outline-orange-900", focusRingColor: "focus:tr-ring-orange-900" } }, amber: { 50: { bgColor: "tr-bg-amber-50", hoverBgColor: "hover:tr-bg-amber-50", textColor: "tr-text-amber-50", hoverTextColor: "hover:tr-text-amber-50", borderColor: "tr-border-amber-50", hoverBorderColor: "hover:tr-border-amber-50", ringRolor: "tr-ring-amber-50", ringColor: "tr-ring-amber-50", hoverRingColor: "hover:tr-ring-amber-50", divideColor: "tr-divide-amber-50", outlineColor: "tr-outline-amber-50", focusRingColor: "focus:tr-ring-amber-50" }, 100: { bgColor: "tr-bg-amber-100", hoverBgColor: "hover:tr-bg-amber-100", textColor: "tr-text-amber-100", hoverTextColor: "hover:tr-text-amber-100", borderColor: "tr-border-amber-100", hoverBorderColor: "hover:tr-border-amber-100", ringRolor: "tr-ring-amber-100", ringColor: "tr-ring-amber-100", hoverRingColor: "hover:tr-ring-amber-100", divideColor: "tr-divide-amber-100", outlineColor: "tr-outline-amber-100", focusRingColor: "focus:tr-ring-amber-100" }, 200: { bgColor: "tr-bg-amber-200", hoverBgColor: "hover:tr-bg-amber-200", textColor: "tr-text-amber-200", hoverTextColor: "hover:tr-text-amber-200", borderColor: "tr-border-amber-200", hoverBorderColor: "hover:tr-border-amber-200", ringRolor: "tr-ring-amber-200", ringColor: "tr-ring-amber-200", hoverRingColor: "hover:tr-ring-amber-200", divideColor: "tr-divide-amber-200", outlineColor: "tr-outline-amber-200", focusRingColor: "focus:tr-ring-amber-200" }, 300: { bgColor: "tr-bg-amber-300", hoverBgColor: "hover:tr-bg-amber-300", textColor: "tr-text-amber-300", hoverTextColor: "hover:tr-text-amber-300", borderColor: "tr-border-amber-300", hoverBorderColor: "hover:tr-border-amber-300", ringRolor: "tr-ring-amber-300", ringColor: "tr-ring-amber-300", hoverRingColor: "hover:tr-ring-amber-300", divideColor: "tr-divide-amber-300", outlineColor: "tr-outline-amber-300", focusRingColor: "focus:tr-ring-amber-300" }, 400: { bgColor: "tr-bg-amber-400", hoverBgColor: "hover:tr-bg-amber-400", textColor: "tr-text-amber-400", hoverTextColor: "hover:tr-text-amber-400", borderColor: "tr-border-amber-400", hoverBorderColor: "hover:tr-border-amber-400", ringRolor: "tr-ring-amber-400", ringColor: "tr-ring-amber-400", hoverRingColor: "hover:tr-ring-amber-400", divideColor: "tr-divide-amber-400", outlineColor: "tr-outline-amber-400", focusRingColor: "focus:tr-ring-amber-400" }, 500: { bgColor: "tr-bg-amber-500", hoverBgColor: "hover:tr-bg-amber-500", textColor: "tr-text-amber-500", hoverTextColor: "hover:tr-text-amber-500", borderColor: "tr-border-amber-500", hoverBorderColor: "hover:tr-border-amber-500", ringRolor: "tr-ring-amber-500", ringColor: "tr-ring-amber-500", hoverRingColor: "hover:tr-ring-amber-500", divideColor: "tr-divide-amber-500", outlineColor: "tr-outline-amber-500", focusRingColor: "focus:tr-ring-amber-500" }, 600: { bgColor: "tr-bg-amber-600", hoverBgColor: "hover:tr-bg-amber-600", textColor: "tr-text-amber-600", hoverTextColor: "hover:tr-text-amber-600", borderColor: "tr-border-amber-600", hoverBorderColor: "hover:tr-border-amber-600", ringRolor: "tr-ring-amber-600", ringColor: "tr-ring-amber-600", hoverRingColor: "hover:tr-ring-amber-600", divideColor: "tr-divide-amber-600", outlineColor: "tr-outline-amber-600", focusRingColor: "focus:tr-ring-amber-600" }, 700: { bgColor: "tr-bg-amber-700", hoverBgColor: "hover:tr-bg-amber-700", textColor: "tr-text-amber-700", hoverTextColor: "hover:tr-text-amber-700", borderColor: "tr-border-amber-700", hoverBorderColor: "hover:tr-border-amber-700", ringRolor: "tr-ring-amber-700", ringColor: "tr-ring-amber-700", hoverRingColor: "hover:tr-ring-amber-700", divideColor: "tr-divide-amber-700", outlineColor: "tr-outline-amber-700", focusRingColor: "focus:tr-ring-amber-700" }, 800: { bgColor: "tr-bg-amber-800", hoverBgColor: "hover:tr-bg-amber-800", textColor: "tr-text-amber-800", hoverTextColor: "hover:tr-text-amber-800", borderColor: "tr-border-amber-800", hoverBorderColor: "hover:tr-border-amber-800", ringRolor: "tr-ring-amber-800", ringColor: "tr-ring-amber-800", hoverRingColor: "hover:tr-ring-amber-800", divideColor: "tr-divide-amber-800", outlineColor: "tr-outline-amber-800", focusRingColor: "focus:tr-ring-amber-800" }, 900: { bgColor: "tr-bg-amber-900", hoverBgColor: "hover:tr-bg-amber-900", textColor: "tr-text-amber-900", hoverTextColor: "hover:tr-text-amber-900", borderColor: "tr-border-amber-900", hoverBorderColor: "hover:tr-border-amber-900", ringRolor: "tr-ring-amber-900", ringColor: "tr-ring-amber-900", hoverRingColor: "hover:tr-ring-amber-900", divideColor: "tr-divide-amber-900", outlineColor: "tr-outline-amber-900", focusRingColor: "focus:tr-ring-amber-900" } }, yellow: { 50: { bgColor: "tr-bg-yellow-50", hoverBgColor: "hover:tr-bg-yellow-50", textColor: "tr-text-yellow-50", hoverTextColor: "hover:tr-text-yellow-50", borderColor: "tr-border-yellow-50", hoverBorderColor: "hover:tr-border-yellow-50", ringRolor: "tr-ring-yellow-50", ringColor: "tr-ring-yellow-50", hoverRingColor: "hover:tr-ring-yellow-50", divideColor: "tr-divide-yellow-50", outlineColor: "tr-outline-yellow-50", focusRingColor: "focus:tr-ring-yellow-50" }, 100: { bgColor: "tr-bg-yellow-100", hoverBgColor: "hover:tr-bg-yellow-100", textColor: "tr-text-yellow-100", hoverTextColor: "hover:tr-text-yellow-100", borderColor: "tr-border-yellow-100", hoverBorderColor: "hover:tr-border-yellow-100", ringRolor: "tr-ring-yellow-100", ringColor: "tr-ring-yellow-100", hoverRingColor: "hover:tr-ring-yellow-100", divideColor: "tr-divide-yellow-100", outlineColor: "tr-outline-yellow-100", focusRingColor: "focus:tr-ring-yellow-100" }, 200: { bgColor: "tr-bg-yellow-200", hoverBgColor: "hover:tr-bg-yellow-200", textColor: "tr-text-yellow-200", hoverTextColor: "hover:tr-text-yellow-200", borderColor: "tr-border-yellow-200", hoverBorderColor: "hover:tr-border-yellow-200", ringRolor: "tr-ring-yellow-200", ringColor: "tr-ring-yellow-200", hoverRingColor: "hover:tr-ring-yellow-200", divideColor: "tr-divide-yellow-200", outlineColor: "tr-outline-yellow-200", focusRingColor: "focus:tr-ring-yellow-200" }, 300: { bgColor: "tr-bg-yellow-300", hoverBgColor: "hover:tr-bg-yellow-300", textColor: "tr-text-yellow-300", hoverTextColor: "hover:tr-text-yellow-300", borderColor: "tr-border-yellow-300", hoverBorderColor: "hover:tr-border-yellow-300", ringRolor: "tr-ring-yellow-300", ringColor: "tr-ring-yellow-300", hoverRingColor: "hover:tr-ring-yellow-300", divideColor: "tr-divide-yellow-300", outlineColor: "tr-outline-yellow-300", focusRingColor: "focus:tr-ring-yellow-300" }, 400: { bgColor: "tr-bg-yellow-400", hoverBgColor: "hover:tr-bg-yellow-400", textColor: "tr-text-yellow-400", hoverTextColor: "hover:tr-text-yellow-400", borderColor: "tr-border-yellow-400", hoverBorderColor: "hover:tr-border-yellow-400", ringRolor: "tr-ring-yellow-400", ringColor: "tr-ring-yellow-400", hoverRingColor: "hover:tr-ring-yellow-400", divideColor: "tr-divide-yellow-400", outlineColor: "tr-outline-yellow-400", focusRingColor: "focus:tr-ring-yellow-400" }, 500: { bgColor: "tr-bg-yellow-500", hoverBgColor: "hover:tr-bg-yellow-500", textColor: "tr-text-yellow-500", hoverTextColor: "hover:tr-text-yellow-500", borderColor: "tr-border-yellow-500", hoverBorderColor: "hover:tr-border-yellow-500", ringRolor: "tr-ring-yellow-500", ringColor: "tr-ring-yellow-500", hoverRingColor: "hover:tr-ring-yellow-500", divideColor: "tr-divide-yellow-500", outlineColor: "tr-outline-yellow-500", focusRingColor: "focus:tr-ring-yellow-500" }, 600: { bgColor: "tr-bg-yellow-600", hoverBgColor: "hover:tr-bg-yellow-600", textColor: "tr-text-yellow-600", hoverTextColor: "hover:tr-text-yellow-600", borderColor: "tr-border-yellow-600", hoverBorderColor: "hover:tr-border-yellow-600", ringRolor: "tr-ring-yellow-600", ringColor: "tr-ring-yellow-600", hoverRingColor: "hover:tr-ring-yellow-600", divideColor: "tr-divide-yellow-600", outlineColor: "tr-outline-yellow-600", focusRingColor: "focus:tr-ring-yellow-600" }, 700: { bgColor: "tr-bg-yellow-700", hoverBgColor: "hover:tr-bg-yellow-700", textColor: "tr-text-yellow-700", hoverTextColor: "hover:tr-text-yellow-700", borderColor: "tr-border-yellow-700", hoverBorderColor: "hover:tr-border-yellow-700", ringRolor: "tr-ring-yellow-700", ringColor: "tr-ring-yellow-700", hoverRingColor: "hover:tr-ring-yellow-700", divideColor: "tr-divide-yellow-700", outlineColor: "tr-outline-yellow-700", focusRingColor: "focus:tr-ring-yellow-700" }, 800: { bgColor: "tr-bg-yellow-800", hoverBgColor: "hover:tr-bg-yellow-800", textColor: "tr-text-yellow-800", hoverTextColor: "hover:tr-text-yellow-800", borderColor: "tr-border-yellow-800", hoverBorderColor: "hover:tr-border-yellow-800", ringRolor: "tr-ring-yellow-800", ringColor: "tr-ring-yellow-800", hoverRingColor: "hover:tr-ring-yellow-800", divideColor: "tr-divide-yellow-800", outlineColor: "tr-outline-yellow-800", focusRingColor: "focus:tr-ring-yellow-800" }, 900: { bgColor: "tr-bg-yellow-900", hoverBgColor: "hover:tr-bg-yellow-900", textColor: "tr-text-yellow-900", hoverTextColor: "hover:tr-text-yellow-900", borderColor: "tr-border-yellow-900", hoverBorderColor: "hover:tr-border-yellow-900", ringRolor: "tr-ring-yellow-900", ringColor: "tr-ring-yellow-900", hoverRingColor: "hover:tr-ring-yellow-900", divideColor: "tr-divide-yellow-900", outlineColor: "tr-outline-yellow-900", focusRingColor: "focus:tr-ring-yellow-900" } }, lime: { 50: { bgColor: "tr-bg-lime-50", hoverBgColor: "hover:tr-bg-lime-50", textColor: "tr-text-lime-50", hoverTextColor: "hover:tr-text-lime-50", borderColor: "tr-border-lime-50", hoverBorderColor: "hover:tr-border-lime-50", ringRolor: "tr-ring-lime-50", ringColor: "tr-ring-lime-50", hoverRingColor: "hover:tr-ring-lime-50", divideColor: "tr-divide-lime-50", outlineColor: "tr-outline-lime-50", focusRingColor: "focus:tr-ring-lime-50" }, 100: { bgColor: "tr-bg-lime-100", hoverBgColor: "hover:tr-bg-lime-100", textColor: "tr-text-lime-100", hoverTextColor: "hover:tr-text-lime-100", borderColor: "tr-border-lime-100", hoverBorderColor: "hover:tr-border-lime-100", ringRolor: "tr-ring-lime-100", ringColor: "tr-ring-lime-100", hoverRingColor: "hover:tr-ring-lime-100", divideColor: "tr-divide-lime-100", outlineColor: "tr-outline-lime-100", focusRingColor: "focus:tr-ring-lime-100" }, 200: { bgColor: "tr-bg-lime-200", hoverBgColor: "hover:tr-bg-lime-200", textColor: "tr-text-lime-200", hoverTextColor: "hover:tr-text-lime-200", borderColor: "tr-border-lime-200", hoverBorderColor: "hover:tr-border-lime-200", ringRolor: "tr-ring-lime-200", ringColor: "tr-ring-lime-200", hoverRingColor: "hover:tr-ring-lime-200", divideColor: "tr-divide-lime-200", outlineColor: "tr-outline-lime-200", focusRingColor: "focus:tr-ring-lime-200" }, 300: { bgColor: "tr-bg-lime-300", hoverBgColor: "hover:tr-bg-lime-300", textColor: "tr-text-lime-300", hoverTextColor: "hover:tr-text-lime-300", borderColor: "tr-border-lime-300", hoverBorderColor: "hover:tr-border-lime-300", ringRolor: "tr-ring-lime-300", ringColor: "tr-ring-lime-300", hoverRingColor: "hover:tr-ring-lime-300", divideColor: "tr-divide-lime-300", outlineColor: "tr-outline-lime-300", focusRingColor: "focus:tr-ring-lime-300" }, 400: { bgColor: "tr-bg-lime-400", hoverBgColor: "hover:tr-bg-lime-400", textColor: "tr-text-lime-400", hoverTextColor: "hover:tr-text-lime-400", borderColor: "tr-border-lime-400", hoverBorderColor: "hover:tr-border-lime-400", ringRolor: "tr-ring-lime-400", ringColor: "tr-ring-lime-400", hoverRingColor: "hover:tr-ring-lime-400", divideColor: "tr-divide-lime-400", outlineColor: "tr-outline-lime-400", focusRingColor: "focus:tr-ring-lime-400" }, 500: { bgColor: "tr-bg-lime-500", hoverBgColor: "hover:tr-bg-lime-500", textColor: "tr-text-lime-500", hoverTextColor: "hover:tr-text-lime-500", borderColor: "tr-border-lime-500", hoverBorderColor: "hover:tr-border-lime-500", ringRolor: "tr-ring-lime-500", ringColor: "tr-ring-lime-500", hoverRingColor: "hover:tr-ring-lime-500", divideColor: "tr-divide-lime-500", outlineColor: "tr-outline-lime-500", focusRingColor: "focus:tr-ring-lime-500" }, 600: { bgColor: "tr-bg-lime-600", hoverBgColor: "hover:tr-bg-lime-600", textColor: "tr-text-lime-600", hoverTextColor: "hover:tr-text-lime-600", borderColor: "tr-border-lime-600", hoverBorderColor: "hover:tr-border-lime-600", ringRolor: "tr-ring-lime-600", ringColor: "tr-ring-lime-600", hoverRingColor: "hover:tr-ring-lime-600", divideColor: "tr-divide-lime-600", outlineColor: "tr-outline-lime-600", focusRingColor: "focus:tr-ring-lime-600" }, 700: { bgColor: "tr-bg-lime-700", hoverBgColor: "hover:tr-bg-lime-700", textColor: "tr-text-lime-700", hoverTextColor: "hover:tr-text-lime-700", borderColor: "tr-border-lime-700", hoverBorderColor: "hover:tr-border-lime-700", ringRolor: "tr-ring-lime-700", ringColor: "tr-ring-lime-700", hoverRingColor: "hover:tr-ring-lime-700", divideColor: "tr-divide-lime-700", outlineColor: "tr-outline-lime-700", focusRingColor: "focus:tr-ring-lime-700" }, 800: { bgColor: "tr-bg-lime-800", hoverBgColor: "hover:tr-bg-lime-800", textColor: "tr-text-lime-800", hoverTextColor: "hover:tr-text-lime-800", borderColor: "tr-border-lime-800", hoverBorderColor: "hover:tr-border-lime-800", ringRolor: "tr-ring-lime-800", ringColor: "tr-ring-lime-800", hoverRingColor: "hover:tr-ring-lime-800", divideColor: "tr-divide-lime-800", outlineColor: "tr-outline-lime-800", focusRingColor: "focus:tr-ring-lime-800" }, 900: { bgColor: "tr-bg-lime-900", hoverBgColor: "hover:tr-bg-lime-900", textColor: "tr-text-lime-900", hoverTextColor: "hover:tr-text-lime-900", borderColor: "tr-border-lime-900", hoverBorderColor: "hover:tr-border-lime-900", ringRolor: "tr-ring-lime-900", ringColor: "tr-ring-lime-900", hoverRingColor: "hover:tr-ring-lime-900", divideColor: "tr-divide-lime-900", outlineColor: "tr-outline-lime-900", focusRingColor: "focus:tr-ring-lime-900" } }, green: { 50: { bgColor: "tr-bg-green-50", hoverBgColor: "hover:tr-bg-green-50", textColor: "tr-text-green-50", hoverTextColor: "hover:tr-text-green-50", borderColor: "tr-border-green-50", hoverBorderColor: "hover:tr-border-green-50", ringRolor: "tr-ring-green-50", ringColor: "tr-ring-green-50", hoverRingColor: "hover:tr-ring-green-50", divideColor: "tr-divide-green-50", outlineColor: "tr-outline-green-50", focusRingColor: "focus:tr-ring-green-50" }, 100: { bgColor: "tr-bg-green-100", hoverBgColor: "hover:tr-bg-green-100", textColor: "tr-text-green-100", hoverTextColor: "hover:tr-text-green-100", borderColor: "tr-border-green-100", hoverBorderColor: "hover:tr-border-green-100", ringRolor: "tr-ring-green-100", ringColor: "tr-ring-green-100", hoverRingColor: "hover:tr-ring-green-100", divideColor: "tr-divide-green-100", outlineColor: "tr-outline-green-100", focusRingColor: "focus:tr-ring-green-100" }, 200: { bgColor: "tr-bg-green-200", hoverBgColor: "hover:tr-bg-green-200", textColor: "tr-text-green-200", hoverTextColor: "hover:tr-text-green-200", borderColor: "tr-border-green-200", hoverBorderColor: "hover:tr-border-green-200", ringRolor: "tr-ring-green-200", ringColor: "tr-ring-green-200", hoverRingColor: "hover:tr-ring-green-200", divideColor: "tr-divide-green-200", outlineColor: "tr-outline-green-200", focusRingColor: "focus:tr-ring-green-200" }, 300: { bgColor: "tr-bg-green-300", hoverBgColor: "hover:tr-bg-green-300", textColor: "tr-text-green-300", hoverTextColor: "hover:tr-text-green-300", borderColor: "tr-border-green-300", hoverBorderColor: "hover:tr-border-green-300", ringRolor: "tr-ring-green-300", ringColor: "tr-ring-green-300", hoverRingColor: "hover:tr-ring-green-300", divideColor: "tr-divide-green-300", outlineColor: "tr-outline-green-300", focusRingColor: "focus:tr-ring-green-300" }, 400: { bgColor: "tr-bg-green-400", hoverBgColor: "hover:tr-bg-green-400", textColor: "tr-text-green-400", hoverTextColor: "hover:tr-text-green-400", borderColor: "tr-border-green-400", hoverBorderColor: "hover:tr-border-green-400", ringRolor: "tr-ring-green-400", ringColor: "tr-ring-green-400", hoverRingColor: "hover:tr-ring-green-400", divideColor: "tr-divide-green-400", outlineColor: "tr-outline-green-400", focusRingColor: "focus:tr-ring-green-400" }, 500: { bgColor: "tr-bg-green-500", hoverBgColor: "hover:tr-bg-green-500", textColor: "tr-text-green-500", hoverTextColor: "hover:tr-text-green-500", borderColor: "tr-border-green-500", hoverBorderColor: "hover:tr-border-green-500", ringRolor: "tr-ring-green-500", ringColor: "tr-ring-green-500", hoverRingColor: "hover:tr-ring-green-500", divideColor: "tr-divide-green-500", outlineColor: "tr-outline-green-500", focusRingColor: "focus:tr-ring-green-500" }, 600: { bgColor: "tr-bg-green-600", hoverBgColor: "hover:tr-bg-green-600", textColor: "tr-text-green-600", hoverTextColor: "hover:tr-text-green-600", borderColor: "tr-border-green-600", hoverBorderColor: "hover:tr-border-green-600", ringRolor: "tr-ring-green-600", ringColor: "tr-ring-green-600", hoverRingColor: "hover:tr-ring-green-600", divideColor: "tr-divide-green-600", outlineColor: "tr-outline-green-600", focusRingColor: "focus:tr-ring-green-600" }, 700: { bgColor: "tr-bg-green-700", hoverBgColor: "hover:tr-bg-green-700", textColor: "tr-text-green-700", hoverTextColor: "hover:tr-text-green-700", borderColor: "tr-border-green-700", hoverBorderColor: "hover:tr-border-green-700", ringRolor: "tr-ring-green-700", ringColor: "tr-ring-green-700", hoverRingColor: "hover:tr-ring-green-700", divideColor: "tr-divide-green-700", outlineColor: "tr-outline-green-700", focusRingColor: "focus:tr-ring-green-700" }, 800: { bgColor: "tr-bg-green-800", hoverBgColor: "hover:tr-bg-green-800", textColor: "tr-text-green-800", hoverTextColor: "hover:tr-text-green-800", borderColor: "tr-border-green-800", hoverBorderColor: "hover:tr-border-green-800", ringRolor: "tr-ring-green-800", ringColor: "tr-ring-green-800", hoverRingColor: "hover:tr-ring-green-800", divideColor: "tr-divide-green-800", outlineColor: "tr-outline-green-800", focusRingColor: "focus:tr-ring-green-800" }, 900: { bgColor: "tr-bg-green-900", hoverBgColor: "hover:tr-bg-green-900", textColor: "tr-text-green-900", hoverTextColor: "hover:tr-text-green-900", borderColor: "tr-border-green-900", hoverBorderColor: "hover:tr-border-green-900", ringRolor: "tr-ring-green-900", ringColor: "tr-ring-green-900", hoverRingColor: "hover:tr-ring-green-900", divideColor: "tr-divide-green-900", outlineColor: "tr-outline-green-900", focusRingColor: "focus:tr-ring-green-900" } }, emerald: { 50: { bgColor: "tr-bg-emerald-50", hoverBgColor: "hover:tr-bg-emerald-50", textColor: "tr-text-emerald-50", hoverTextColor: "hover:tr-text-emerald-50", borderColor: "tr-border-emerald-50", hoverBorderColor: "hover:tr-border-emerald-50", ringRolor: "tr-ring-emerald-50", ringColor: "tr-ring-emerald-50", hoverRingColor: "hover:tr-ring-emerald-50", divideColor: "tr-divide-emerald-50", outlineColor: "tr-outline-emerald-50", focusRingColor: "focus:tr-ring-emerald-50" }, 100: { bgColor: "tr-bg-emerald-100", hoverBgColor: "hover:tr-bg-emerald-100", textColor: "tr-text-emerald-100", hoverTextColor: "hover:tr-text-emerald-100", borderColor: "tr-border-emerald-100", hoverBorderColor: "hover:tr-border-emerald-100", ringRolor: "tr-ring-emerald-100", ringColor: "tr-ring-emerald-100", hoverRingColor: "hover:tr-ring-emerald-100", divideColor: "tr-divide-emerald-100", outlineColor: "tr-outline-emerald-100", focusRingColor: "focus:tr-ring-emerald-100" }, 200: { bgColor: "tr-bg-emerald-200", hoverBgColor: "hover:tr-bg-emerald-200", textColor: "tr-text-emerald-200", hoverTextColor: "hover:tr-text-emerald-200", borderColor: "tr-border-emerald-200", hoverBorderColor: "hover:tr-border-emerald-200", ringRolor: "tr-ring-emerald-200", ringColor: "tr-ring-emerald-200", hoverRingColor: "hover:tr-ring-emerald-200", divideColor: "tr-divide-emerald-200", outlineColor: "tr-outline-emerald-200", focusRingColor: "focus:tr-ring-emerald-200" }, 300: { bgColor: "tr-bg-emerald-300", hoverBgColor: "hover:tr-bg-emerald-300", textColor: "tr-text-emerald-300", hoverTextColor: "hover:tr-text-emerald-300", borderColor: "tr-border-emerald-300", hoverBorderColor: "hover:tr-border-emerald-300", ringRolor: "tr-ring-emerald-300", ringColor: "tr-ring-emerald-300", hoverRingColor: "hover:tr-ring-emerald-300", divideColor: "tr-divide-emerald-300", outlineColor: "tr-outline-emerald-300", focusRingColor: "focus:tr-ring-emerald-300" }, 400: { bgColor: "tr-bg-emerald-400", hoverBgColor: "hover:tr-bg-emerald-400", textColor: "tr-text-emerald-400", hoverTextColor: "hover:tr-text-emerald-400", borderColor: "tr-border-emerald-400", hoverBorderColor: "hover:tr-border-emerald-400", ringRolor: "tr-ring-emerald-400", ringColor: "tr-ring-emerald-400", hoverRingColor: "hover:tr-ring-emerald-400", divideColor: "tr-divide-emerald-400", outlineColor: "tr-outline-emerald-400", focusRingColor: "focus:tr-ring-emerald-400" }, 500: { bgColor: "tr-bg-emerald-500", hoverBgColor: "hover:tr-bg-emerald-500", textColor: "tr-text-emerald-500", hoverTextColor: "hover:tr-text-emerald-500", borderColor: "tr-border-emerald-500", hoverBorderColor: "hover:tr-border-emerald-500", ringRolor: "tr-ring-emerald-500", ringColor: "tr-ring-emerald-500", hoverRingColor: "hover:tr-ring-emerald-500", divideColor: "tr-divide-emerald-500", outlineColor: "tr-outline-emerald-500", focusRingColor: "focus:tr-ring-emerald-500" }, 600: { bgColor: "tr-bg-emerald-600", hoverBgColor: "hover:tr-bg-emerald-600", textColor: "tr-text-emerald-600", hoverTextColor: "hover:tr-text-emerald-600", borderColor: "tr-border-emerald-600", hoverBorderColor: "hover:tr-border-emerald-600", ringRolor: "tr-ring-emerald-600", ringColor: "tr-ring-emerald-600", hoverRingColor: "hover:tr-ring-emerald-600", divideColor: "tr-divide-emerald-600", outlineColor: "tr-outline-emerald-600", focusRingColor: "focus:tr-ring-emerald-600" }, 700: { bgColor: "tr-bg-emerald-700", hoverBgColor: "hover:tr-bg-emerald-700", textColor: "tr-text-emerald-700", hoverTextColor: "hover:tr-text-emerald-700", borderColor: "tr-border-emerald-700", hoverBorderColor: "hover:tr-border-emerald-700", ringRolor: "tr-ring-emerald-700", ringColor: "tr-ring-emerald-700", hoverRingColor: "hover:tr-ring-emerald-700", divideColor: "tr-divide-emerald-700", outlineColor: "tr-outline-emerald-700", focusRingColor: "focus:tr-ring-emerald-700" }, 800: { bgColor: "tr-bg-emerald-800", hoverBgColor: "hover:tr-bg-emerald-800", textColor: "tr-text-emerald-800", hoverTextColor: "hover:tr-text-emerald-800", borderColor: "tr-border-emerald-800", hoverBorderColor: "hover:tr-border-emerald-800", ringRolor: "tr-ring-emerald-800", ringColor: "tr-ring-emerald-800", hoverRingColor: "hover:tr-ring-emerald-800", divideColor: "tr-divide-emerald-800", outlineColor: "tr-outline-emerald-800", focusRingColor: "focus:tr-ring-emerald-800" }, 900: { bgColor: "tr-bg-emerald-900", hoverBgColor: "hover:tr-bg-emerald-900", textColor: "tr-text-emerald-900", hoverTextColor: "hover:tr-text-emerald-900", borderColor: "tr-border-emerald-900", hoverBorderColor: "hover:tr-border-emerald-900", ringRolor: "tr-ring-emerald-900", ringColor: "tr-ring-emerald-900", hoverRingColor: "hover:tr-ring-emerald-900", divideColor: "tr-divide-emerald-900", outlineColor: "tr-outline-emerald-900", focusRingColor: "focus:tr-ring-emerald-900" } }, teal: { 50: { bgColor: "tr-bg-teal-50", hoverBgColor: "hover:tr-bg-teal-50", textColor: "tr-text-teal-50", hoverTextColor: "hover:tr-text-teal-50", borderColor: "tr-border-teal-50", hoverBorderColor: "hover:tr-border-teal-50", ringRolor: "tr-ring-teal-50", ringColor: "tr-ring-teal-50", hoverRingColor: "hover:tr-ring-teal-50", divideColor: "tr-divide-teal-50", outlineColor: "tr-outline-teal-50", focusRingColor: "focus:tr-ring-teal-50" }, 100: { bgColor: "tr-bg-teal-100", hoverBgColor: "hover:tr-bg-teal-100", textColor: "tr-text-teal-100", hoverTextColor: "hover:tr-text-teal-100", borderColor: "tr-border-teal-100", hoverBorderColor: "hover:tr-border-teal-100", ringRolor: "tr-ring-teal-100", ringColor: "tr-ring-teal-100", hoverRingColor: "hover:tr-ring-teal-100", divideColor: "tr-divide-teal-100", outlineColor: "tr-outline-teal-100", focusRingColor: "focus:tr-ring-teal-100" }, 200: { bgColor: "tr-bg-teal-200", hoverBgColor: "hover:tr-bg-teal-200", textColor: "tr-text-teal-200", hoverTextColor: "hover:tr-text-teal-200", borderColor: "tr-border-teal-200", hoverBorderColor: "hover:tr-border-teal-200", ringRolor: "tr-ring-teal-200", ringColor: "tr-ring-teal-200", hoverRingColor: "hover:tr-ring-teal-200", divideColor: "tr-divide-teal-200", outlineColor: "tr-outline-teal-200", focusRingColor: "focus:tr-ring-teal-200" }, 300: { bgColor: "tr-bg-teal-300", hoverBgColor: "hover:tr-bg-teal-300", textColor: "tr-text-teal-300", hoverTextColor: "hover:tr-text-teal-300", borderColor: "tr-border-teal-300", hoverBorderColor: "hover:tr-border-teal-300", ringRolor: "tr-ring-teal-300", ringColor: "tr-ring-teal-300", hoverRingColor: "hover:tr-ring-teal-300", divideColor: "tr-divide-teal-300", outlineColor: "tr-outline-teal-300", focusRingColor: "focus:tr-ring-teal-300" }, 400: { bgColor: "tr-bg-teal-400", hoverBgColor: "hover:tr-bg-teal-400", textColor: "tr-text-teal-400", hoverTextColor: "hover:tr-text-teal-400", borderColor: "tr-border-teal-400", hoverBorderColor: "hover:tr-border-teal-400", ringRolor: "tr-ring-teal-400", ringColor: "tr-ring-teal-400", hoverRingColor: "hover:tr-ring-teal-400", divideColor: "tr-divide-teal-400", outlineColor: "tr-outline-teal-400", focusRingColor: "focus:tr-ring-teal-400" }, 500: { bgColor: "tr-bg-teal-500", hoverBgColor: "hover:tr-bg-teal-500", textColor: "tr-text-teal-500", hoverTextColor: "hover:tr-text-teal-500", borderColor: "tr-border-teal-500", hoverBorderColor: "hover:tr-border-teal-500", ringRolor: "tr-ring-teal-500", ringColor: "tr-ring-teal-500", hoverRingColor: "hover:tr-ring-teal-500", divideColor: "tr-divide-teal-500", outlineColor: "tr-outline-teal-500", focusRingColor: "focus:tr-ring-teal-500" }, 600: { bgColor: "tr-bg-teal-600", hoverBgColor: "hover:tr-bg-teal-600", textColor: "tr-text-teal-600", hoverTextColor: "hover:tr-text-teal-600", borderColor: "tr-border-teal-600", hoverBorderColor: "hover:tr-border-teal-600", ringRolor: "tr-ring-teal-600", ringColor: "tr-ring-teal-600", hoverRingColor: "hover:tr-ring-teal-600", divideColor: "tr-divide-teal-600", outlineColor: "tr-outline-teal-600", focusRingColor: "focus:tr-ring-teal-600" }, 700: { bgColor: "tr-bg-teal-700", hoverBgColor: "hover:tr-bg-teal-700", textColor: "tr-text-teal-700", hoverTextColor: "hover:tr-text-teal-700", borderColor: "tr-border-teal-700", hoverBorderColor: "hover:tr-border-teal-700", ringRolor: "tr-ring-teal-700", ringColor: "tr-ring-teal-700", hoverRingColor: "hover:tr-ring-teal-700", divideColor: "tr-divide-teal-700", outlineColor: "tr-outline-teal-700", focusRingColor: "focus:tr-ring-teal-700" }, 800: { bgColor: "tr-bg-teal-800", hoverBgColor: "hover:tr-bg-teal-800", textColor: "tr-text-teal-800", hoverTextColor: "hover:tr-text-teal-800", borderColor: "tr-border-teal-800", hoverBorderColor: "hover:tr-border-teal-800", ringRolor: "tr-ring-teal-800", ringColor: "tr-ring-teal-800", hoverRingColor: "hover:tr-ring-teal-800", divideColor: "tr-divide-teal-800", outlineColor: "tr-outline-teal-800", focusRingColor: "focus:tr-ring-teal-800" }, 900: { bgColor: "tr-bg-teal-900", hoverBgColor: "hover:tr-bg-teal-900", textColor: "tr-text-teal-900", hoverTextColor: "hover:tr-text-teal-900", borderColor: "tr-border-teal-900", hoverBorderColor: "hover:tr-border-teal-900", ringRolor: "tr-ring-teal-900", ringColor: "tr-ring-teal-900", hoverRingColor: "hover:tr-ring-teal-900", divideColor: "tr-divide-teal-900", outlineColor: "tr-outline-teal-900", focusRingColor: "focus:tr-ring-teal-900" } }, cyan: { 50: { bgColor: "tr-bg-cyan-50", hoverBgColor: "hover:tr-bg-cyan-50", textColor: "tr-text-cyan-50", hoverTextColor: "hover:tr-text-cyan-50", borderColor: "tr-border-cyan-50", hoverBorderColor: "hover:tr-border-cyan-50", ringRolor: "tr-ring-cyan-50", ringColor: "tr-ring-cyan-50", hoverRingColor: "hover:tr-ring-cyan-50", divideColor: "tr-divide-cyan-50", outlineColor: "tr-outline-cyan-50", focusRingColor: "focus:tr-ring-cyan-50" }, 100: { bgColor: "tr-bg-cyan-100", hoverBgColor: "hover:tr-bg-cyan-100", textColor: "tr-text-cyan-100", hoverTextColor: "hover:tr-text-cyan-100", borderColor: "tr-border-cyan-100", hoverBorderColor: "hover:tr-border-cyan-100", ringRolor: "tr-ring-cyan-100", ringColor: "tr-ring-cyan-100", hoverRingColor: "hover:tr-ring-cyan-100", divideColor: "tr-divide-cyan-100", outlineColor: "tr-outline-cyan-100", focusRingColor: "focus:tr-ring-cyan-100" }, 200: { bgColor: "tr-bg-cyan-200", hoverBgColor: "hover:tr-bg-cyan-200", textColor: "tr-text-cyan-200", hoverTextColor: "hover:tr-text-cyan-200", borderColor: "tr-border-cyan-200", hoverBorderColor: "hover:tr-border-cyan-200", ringRolor: "tr-ring-cyan-200", ringColor: "tr-ring-cyan-200", hoverRingColor: "hover:tr-ring-cyan-200", divideColor: "tr-divide-cyan-200", outlineColor: "tr-outline-cyan-200", focusRingColor: "focus:tr-ring-cyan-200" }, 300: { bgColor: "tr-bg-cyan-300", hoverBgColor: "hover:tr-bg-cyan-300", textColor: "tr-text-cyan-300", hoverTextColor: "hover:tr-text-cyan-300", borderColor: "tr-border-cyan-300", hoverBorderColor: "hover:tr-border-cyan-300", ringRolor: "tr-ring-cyan-300", ringColor: "tr-ring-cyan-300", hoverRingColor: "hover:tr-ring-cyan-300", divideColor: "tr-divide-cyan-300", outlineColor: "tr-outline-cyan-300", focusRingColor: "focus:tr-ring-cyan-300" }, 400: { bgColor: "tr-bg-cyan-400", hoverBgColor: "hover:tr-bg-cyan-400", textColor: "tr-text-cyan-400", hoverTextColor: "hover:tr-text-cyan-400", borderColor: "tr-border-cyan-400", hoverBorderColor: "hover:tr-border-cyan-400", ringRolor: "tr-ring-cyan-400", ringColor: "tr-ring-cyan-400", hoverRingColor: "hover:tr-ring-cyan-400", divideColor: "tr-divide-cyan-400", outlineColor: "tr-outline-cyan-400", focusRingColor: "focus:tr-ring-cyan-400" }, 500: { bgColor: "tr-bg-cyan-500", hoverBgColor: "hover:tr-bg-cyan-500", textColor: "tr-text-cyan-500", hoverTextColor: "hover:tr-text-cyan-500", borderColor: "tr-border-cyan-500", hoverBorderColor: "hover:tr-border-cyan-500", ringRolor: "tr-ring-cyan-500", ringColor: "tr-ring-cyan-500", hoverRingColor: "hover:tr-ring-cyan-500", divideColor: "tr-divide-cyan-500", outlineColor: "tr-outline-cyan-500", focusRingColor: "focus:tr-ring-cyan-500" }, 600: { bgColor: "tr-bg-cyan-600", hoverBgColor: "hover:tr-bg-cyan-600", textColor: "tr-text-cyan-600", hoverTextColor: "hover:tr-text-cyan-600", borderColor: "tr-border-cyan-600", hoverBorderColor: "hover:tr-border-cyan-600", ringRolor: "tr-ring-cyan-600", ringColor: "tr-ring-cyan-600", hoverRingColor: "hover:tr-ring-cyan-600", divideColor: "tr-divide-cyan-600", outlineColor: "tr-outline-cyan-600", focusRingColor: "focus:tr-ring-cyan-600" }, 700: { bgColor: "tr-bg-cyan-700", hoverBgColor: "hover:tr-bg-cyan-700", textColor: "tr-text-cyan-700", hoverTextColor: "hover:tr-text-cyan-700", borderColor: "tr-border-cyan-700", hoverBorderColor: "hover:tr-border-cyan-700", ringRolor: "tr-ring-cyan-700", ringColor: "tr-ring-cyan-700", hoverRingColor: "hover:tr-ring-cyan-700", divideColor: "tr-divide-cyan-700", outlineColor: "tr-outline-cyan-700", focusRingColor: "focus:tr-ring-cyan-700" }, 800: { bgColor: "tr-bg-cyan-800", hoverBgColor: "hover:tr-bg-cyan-800", textColor: "tr-text-cyan-800", hoverTextColor: "hover:tr-text-cyan-800", borderColor: "tr-border-cyan-800", hoverBorderColor: "hover:tr-border-cyan-800", ringRolor: "tr-ring-cyan-800", ringColor: "tr-ring-cyan-800", hoverRingColor: "hover:tr-ring-cyan-800", divideColor: "tr-divide-cyan-800", outlineColor: "tr-outline-cyan-800", focusRingColor: "focus:tr-ring-cyan-800" }, 900: { bgColor: "tr-bg-cyan-900", hoverBgColor: "hover:tr-bg-cyan-900", textColor: "tr-text-cyan-900", hoverTextColor: "hover:tr-text-cyan-900", borderColor: "tr-border-cyan-900", hoverBorderColor: "hover:tr-border-cyan-900", ringRolor: "tr-ring-cyan-900", ringColor: "tr-ring-cyan-900", hoverRingColor: "hover:tr-ring-cyan-900", divideColor: "tr-divide-cyan-900", outlineColor: "tr-outline-cyan-900", focusRingColor: "focus:tr-ring-cyan-900" } }, sky: { 50: { bgColor: "tr-bg-sky-50", hoverBgColor: "hover:tr-bg-sky-50", textColor: "tr-text-sky-50", hoverTextColor: "hover:tr-text-sky-50", borderColor: "tr-border-sky-50", hoverBorderColor: "hover:tr-border-sky-50", ringRolor: "tr-ring-sky-50", ringColor: "tr-ring-sky-50", hoverRingColor: "hover:tr-ring-sky-50", divideColor: "tr-divide-sky-50", outlineColor: "tr-outline-sky-50", focusRingColor: "focus:tr-ring-sky-50" }, 100: { bgColor: "tr-bg-sky-100", hoverBgColor: "hover:tr-bg-sky-100", textColor: "tr-text-sky-100", hoverTextColor: "hover:tr-text-sky-100", borderColor: "tr-border-sky-100", hoverBorderColor: "hover:tr-border-sky-100", ringRolor: "tr-ring-sky-100", ringColor: "tr-ring-sky-100", hoverRingColor: "hover:tr-ring-sky-100", divideColor: "tr-divide-sky-100", outlineColor: "tr-outline-sky-100", focusRingColor: "focus:tr-ring-sky-100" }, 200: { bgColor: "tr-bg-sky-200", hoverBgColor: "hover:tr-bg-sky-200", textColor: "tr-text-sky-200", hoverTextColor: "hover:tr-text-sky-200", borderColor: "tr-border-sky-200", hoverBorderColor: "hover:tr-border-sky-200", ringRolor: "tr-ring-sky-200", ringColor: "tr-ring-sky-200", hoverRingColor: "hover:tr-ring-sky-200", divideColor: "tr-divide-sky-200", outlineColor: "tr-outline-sky-200", focusRingColor: "focus:tr-ring-sky-200" }, 300: { bgColor: "tr-bg-sky-300", hoverBgColor: "hover:tr-bg-sky-300", textColor: "tr-text-sky-300", hoverTextColor: "hover:tr-text-sky-300", borderColor: "tr-border-sky-300", hoverBorderColor: "hover:tr-border-sky-300", ringRolor: "tr-ring-sky-300", ringColor: "tr-ring-sky-300", hoverRingColor: "hover:tr-ring-sky-300", divideColor: "tr-divide-sky-300", outlineColor: "tr-outline-sky-300", focusRingColor: "focus:tr-ring-sky-300" }, 400: { bgColor: "tr-bg-sky-400", hoverBgColor: "hover:tr-bg-sky-400", textColor: "tr-text-sky-400", hoverTextColor: "hover:tr-text-sky-400", borderColor: "tr-border-sky-400", hoverBorderColor: "hover:tr-border-sky-400", ringRolor: "tr-ring-sky-400", ringColor: "tr-ring-sky-400", hoverRingColor: "hover:tr-ring-sky-400", divideColor: "tr-divide-sky-400", outlineColor: "tr-outline-sky-400", focusRingColor: "focus:tr-ring-sky-400" }, 500: { bgColor: "tr-bg-sky-500", hoverBgColor: "hover:tr-bg-sky-500", textColor: "tr-text-sky-500", hoverTextColor: "hover:tr-text-sky-500", borderColor: "tr-border-sky-500", hoverBorderColor: "hover:tr-border-sky-500", ringRolor: "tr-ring-sky-500", ringColor: "tr-ring-sky-500", hoverRingColor: "hover:tr-ring-sky-500", divideColor: "tr-divide-sky-500", outlineColor: "tr-outline-sky-500", focusRingColor: "focus:tr-ring-sky-500" }, 600: { bgColor: "tr-bg-sky-600", hoverBgColor: "hover:tr-bg-sky-600", textColor: "tr-text-sky-600", hoverTextColor: "hover:tr-text-sky-600", borderColor: "tr-border-sky-600", hoverBorderColor: "hover:tr-border-sky-600", ringRolor: "tr-ring-sky-600", ringColor: "tr-ring-sky-600", hoverRingColor: "hover:tr-ring-sky-600", divideColor: "tr-divide-sky-600", outlineColor: "tr-outline-sky-600", focusRingColor: "focus:tr-ring-sky-600" }, 700: { bgColor: "tr-bg-sky-700", hoverBgColor: "hover:tr-bg-sky-700", textColor: "tr-text-sky-700", hoverTextColor: "hover:tr-text-sky-700", borderColor: "tr-border-sky-700", hoverBorderColor: "hover:tr-border-sky-700", ringRolor: "tr-ring-sky-700", ringColor: "tr-ring-sky-700", hoverRingColor: "hover:tr-ring-sky-700", divideColor: "tr-divide-sky-700", outlineColor: "tr-outline-sky-700", focusRingColor: "focus:tr-ring-sky-700" }, 800: { bgColor: "tr-bg-sky-800", hoverBgColor: "hover:tr-bg-sky-800", textColor: "tr-text-sky-800", hoverTextColor: "hover:tr-text-sky-800", borderColor: "tr-border-sky-800", hoverBorderColor: "hover:tr-border-sky-800", ringRolor: "tr-ring-sky-800", ringColor: "tr-ring-sky-800", hoverRingColor: "hover:tr-ring-sky-800", divideColor: "tr-divide-sky-800", outlineColor: "tr-outline-sky-800", focusRingColor: "focus:tr-ring-sky-800" }, 900: { bgColor: "tr-bg-sky-900", hoverBgColor: "hover:tr-bg-sky-900", textColor: "tr-text-sky-900", hoverTextColor: "hover:tr-text-sky-900", borderColor: "tr-border-sky-900", hoverBorderColor: "hover:tr-border-sky-900", ringRolor: "tr-ring-sky-900", ringColor: "tr-ring-sky-900", hoverRingColor: "hover:tr-ring-sky-900", divideColor: "tr-divide-sky-900", outlineColor: "tr-outline-sky-900", focusRingColor: "focus:tr-ring-sky-900" } }, blue: { 50: { bgColor: "tr-bg-blue-50", hoverBgColor: "hover:tr-bg-blue-50", textColor: "tr-text-blue-50", hoverTextColor: "hover:tr-text-blue-50", borderColor: "tr-border-blue-50", hoverBorderColor: "hover:tr-border-blue-50", ringRolor: "tr-ring-blue-50", ringColor: "tr-ring-blue-50", hoverRingColor: "hover:tr-ring-blue-50", divideColor: "tr-divide-blue-50", outlineColor: "tr-outline-blue-50", focusRingColor: "focus:tr-ring-blue-50" }, 100: { bgColor: "tr-bg-blue-100", hoverBgColor: "hover:tr-bg-blue-100", textColor: "tr-text-blue-100", hoverTextColor: "hover:tr-text-blue-100", borderColor: "tr-border-blue-100", hoverBorderColor: "hover:tr-border-blue-100", ringRolor: "tr-ring-blue-100", ringColor: "tr-ring-blue-100", hoverRingColor: "hover:tr-ring-blue-100", divideColor: "tr-divide-blue-100", outlineColor: "tr-outline-blue-100", focusRingColor: "focus:tr-ring-blue-100" }, 200: { bgColor: "tr-bg-blue-200", hoverBgColor: "hover:tr-bg-blue-200", textColor: "tr-text-blue-200", hoverTextColor: "hover:tr-text-blue-200", borderColor: "tr-border-blue-200", hoverBorderColor: "hover:tr-border-blue-200", ringRolor: "tr-ring-blue-200", ringColor: "tr-ring-blue-200", hoverRingColor: "hover:tr-ring-blue-200", divideColor: "tr-divide-blue-200", outlineColor: "tr-outline-blue-200", focusRingColor: "focus:tr-ring-blue-200" }, 300: { bgColor: "tr-bg-blue-300", hoverBgColor: "hover:tr-bg-blue-300", textColor: "tr-text-blue-300", hoverTextColor: "hover:tr-text-blue-300", borderColor: "tr-border-blue-300", hoverBorderColor: "hover:tr-border-blue-300", ringRolor: "tr-ring-blue-300", ringColor: "tr-ring-blue-300", hoverRingColor: "hover:tr-ring-blue-300", divideColor: "tr-divide-blue-300", outlineColor: "tr-outline-blue-300", focusRingColor: "focus:tr-ring-blue-300" }, 400: { bgColor: "tr-bg-blue-400", hoverBgColor: "hover:tr-bg-blue-400", textColor: "tr-text-blue-400", hoverTextColor: "hover:tr-text-blue-400", borderColor: "tr-border-blue-400", hoverBorderColor: "hover:tr-border-blue-400", ringRolor: "tr-ring-blue-400", ringColor: "tr-ring-blue-400", hoverRingColor: "hover:tr-ring-blue-400", divideColor: "tr-divide-blue-400", outlineColor: "tr-outline-blue-400", focusRingColor: "focus:tr-ring-blue-400" }, 500: { bgColor: "tr-bg-blue-500", hoverBgColor: "hover:tr-bg-blue-500", textColor: "tr-text-blue-500", hoverTextColor: "hover:tr-text-blue-500", borderColor: "tr-border-blue-500", hoverBorderColor: "hover:tr-border-blue-500", ringRolor: "tr-ring-blue-500", ringColor: "tr-ring-blue-500", hoverRingColor: "hover:tr-ring-blue-500", divideColor: "tr-divide-blue-500", outlineColor: "tr-outline-blue-500", focusRingColor: "focus:tr-ring-blue-500" }, 600: { bgColor: "tr-bg-blue-600", hoverBgColor: "hover:tr-bg-blue-600", textColor: "tr-text-blue-600", hoverTextColor: "hover:tr-text-blue-600", borderColor: "tr-border-blue-600", hoverBorderColor: "hover:tr-border-blue-600", ringRolor: "tr-ring-blue-600", ringColor: "tr-ring-blue-600", hoverRingColor: "hover:tr-ring-blue-600", divideColor: "tr-divide-blue-600", outlineColor: "tr-outline-blue-600", focusRingColor: "focus:tr-ring-blue-600" }, 700: { bgColor: "tr-bg-blue-700", hoverBgColor: "hover:tr-bg-blue-700", textColor: "tr-text-blue-700", hoverTextColor: "hover:tr-text-blue-700", borderColor: "tr-border-blue-700", hoverBorderColor: "hover:tr-border-blue-700", ringRolor: "tr-ring-blue-700", ringColor: "tr-ring-blue-700", hoverRingColor: "hover:tr-ring-blue-700", divideColor: "tr-divide-blue-700", outlineColor: "tr-outline-blue-700", focusRingColor: "focus:tr-ring-blue-700" }, 800: { bgColor: "tr-bg-blue-800", hoverBgColor: "hover:tr-bg-blue-800", textColor: "tr-text-blue-800", hoverTextColor: "hover:tr-text-blue-800", borderColor: "tr-border-blue-800", hoverBorderColor: "hover:tr-border-blue-800", ringRolor: "tr-ring-blue-800", ringColor: "tr-ring-blue-800", hoverRingColor: "hover:tr-ring-blue-800", divideColor: "tr-divide-blue-800", outlineColor: "tr-outline-blue-800", focusRingColor: "focus:tr-ring-blue-800" }, 900: { bgColor: "tr-bg-blue-900", hoverBgColor: "hover:tr-bg-blue-900", textColor: "tr-text-blue-900", hoverTextColor: "hover:tr-text-blue-900", borderColor: "tr-border-blue-900", hoverBorderColor: "hover:tr-border-blue-900", ringRolor: "tr-ring-blue-900", ringColor: "tr-ring-blue-900", hoverRingColor: "hover:tr-ring-blue-900", divideColor: "tr-divide-blue-900", outlineColor: "tr-outline-blue-900", focusRingColor: "focus:tr-ring-blue-900" } }, indigo: { 50: { bgColor: "tr-bg-indigo-50", hoverBgColor: "hover:tr-bg-indigo-50", textColor: "tr-text-indigo-50", hoverTextColor: "hover:tr-text-indigo-50", borderColor: "tr-border-indigo-50", hoverBorderColor: "hover:tr-border-indigo-50", ringRolor: "tr-ring-indigo-50", ringColor: "tr-ring-indigo-50", hoverRingColor: "hover:tr-ring-indigo-50", divideColor: "tr-divide-indigo-50", outlineColor: "tr-outline-indigo-50", focusRingColor: "focus:tr-ring-indigo-50" }, 100: { bgColor: "tr-bg-indigo-100", hoverBgColor: "hover:tr-bg-indigo-100", textColor: "tr-text-indigo-100", hoverTextColor: "hover:tr-text-indigo-100", borderColor: "tr-border-indigo-100", hoverBorderColor: "hover:tr-border-indigo-100", ringRolor: "tr-ring-indigo-100", ringColor: "tr-ring-indigo-100", hoverRingColor: "hover:tr-ring-indigo-100", divideColor: "tr-divide-indigo-100", outlineColor: "tr-outline-indigo-100", focusRingColor: "focus:tr-ring-indigo-100" }, 200: { bgColor: "tr-bg-indigo-200", hoverBgColor: "hover:tr-bg-indigo-200", textColor: "tr-text-indigo-200", hoverTextColor: "hover:tr-text-indigo-200", borderColor: "tr-border-indigo-200", hoverBorderColor: "hover:tr-border-indigo-200", ringRolor: "tr-ring-indigo-200", ringColor: "tr-ring-indigo-200", hoverRingColor: "hover:tr-ring-indigo-200", divideColor: "tr-divide-indigo-200", outlineColor: "tr-outline-indigo-200", focusRingColor: "focus:tr-ring-indigo-200" }, 300: { bgColor: "tr-bg-indigo-300", hoverBgColor: "hover:tr-bg-indigo-300", textColor: "tr-text-indigo-300", hoverTextColor: "hover:tr-text-indigo-300", borderColor: "tr-border-indigo-300", hoverBorderColor: "hover:tr-border-indigo-300", ringRolor: "tr-ring-indigo-300", ringColor: "tr-ring-indigo-300", hoverRingColor: "hover:tr-ring-indigo-300", divideColor: "tr-divide-indigo-300", outlineColor: "tr-outline-indigo-300", focusRingColor: "focus:tr-ring-indigo-300" }, 400: { bgColor: "tr-bg-indigo-400", hoverBgColor: "hover:tr-bg-indigo-400", textColor: "tr-text-indigo-400", hoverTextColor: "hover:tr-text-indigo-400", borderColor: "tr-border-indigo-400", hoverBorderColor: "hover:tr-border-indigo-400", ringRolor: "tr-ring-indigo-400", ringColor: "tr-ring-indigo-400", hoverRingColor: "hover:tr-ring-indigo-400", divideColor: "tr-divide-indigo-400", outlineColor: "tr-outline-indigo-400", focusRingColor: "focus:tr-ring-indigo-400" }, 500: { bgColor: "tr-bg-indigo-500", hoverBgColor: "hover:tr-bg-indigo-500", textColor: "tr-text-indigo-500", hoverTextColor: "hover:tr-text-indigo-500", borderColor: "tr-border-indigo-500", hoverBorderColor: "hover:tr-border-indigo-500", ringRolor: "tr-ring-indigo-500", ringColor: "tr-ring-indigo-500", hoverRingColor: "hover:tr-ring-indigo-500", divideColor: "tr-divide-indigo-500", outlineColor: "tr-outline-indigo-500", focusRingColor: "focus:tr-ring-indigo-500" }, 600: { bgColor: "tr-bg-indigo-600", hoverBgColor: "hover:tr-bg-indigo-600", textColor: "tr-text-indigo-600", hoverTextColor: "hover:tr-text-indigo-600", borderColor: "tr-border-indigo-600", hoverBorderColor: "hover:tr-border-indigo-600", ringRolor: "tr-ring-indigo-600", ringColor: "tr-ring-indigo-600", hoverRingColor: "hover:tr-ring-indigo-600", divideColor: "tr-divide-indigo-600", outlineColor: "tr-outline-indigo-600", focusRingColor: "focus:tr-ring-indigo-600" }, 700: { bgColor: "tr-bg-indigo-700", hoverBgColor: "hover:tr-bg-indigo-700", textColor: "tr-text-indigo-700", hoverTextColor: "hover:tr-text-indigo-700", borderColor: "tr-border-indigo-700", hoverBorderColor: "hover:tr-border-indigo-700", ringRolor: "tr-ring-indigo-700", ringColor: "tr-ring-indigo-700", hoverRingColor: "hover:tr-ring-indigo-700", divideColor: "tr-divide-indigo-700", outlineColor: "tr-outline-indigo-700", focusRingColor: "focus:tr-ring-indigo-700" }, 800: { bgColor: "tr-bg-indigo-800", hoverBgColor: "hover:tr-bg-indigo-800", textColor: "tr-text-indigo-800", hoverTextColor: "hover:tr-text-indigo-800", borderColor: "tr-border-indigo-800", hoverBorderColor: "hover:tr-border-indigo-800", ringRolor: "tr-ring-indigo-800", ringColor: "tr-ring-indigo-800", hoverRingColor: "hover:tr-ring-indigo-800", divideColor: "tr-divide-indigo-800", outlineColor: "tr-outline-indigo-800", focusRingColor: "focus:tr-ring-indigo-800" }, 900: { bgColor: "tr-bg-indigo-900", hoverBgColor: "hover:tr-bg-indigo-900", textColor: "tr-text-indigo-900", hoverTextColor: "hover:tr-text-indigo-900", borderColor: "tr-border-indigo-900", hoverBorderColor: "hover:tr-border-indigo-900", ringRolor: "tr-ring-indigo-900", ringColor: "tr-ring-indigo-900", hoverRingColor: "hover:tr-ring-indigo-900", divideColor: "tr-divide-indigo-900", outlineColor: "tr-outline-indigo-900", focusRingColor: "focus:tr-ring-indigo-900" } }, violet: { 50: { bgColor: "tr-bg-violet-50", hoverBgColor: "hover:tr-bg-violet-50", textColor: "tr-text-violet-50", hoverTextColor: "hover:tr-text-violet-50", borderColor: "tr-border-violet-50", hoverBorderColor: "hover:tr-border-violet-50", ringRolor: "tr-ring-violet-50", ringColor: "tr-ring-violet-50", hoverRingColor: "hover:tr-ring-violet-50", divideColor: "tr-divide-violet-50", outlineColor: "tr-outline-violet-50", focusRingColor: "focus:tr-ring-violet-50" }, 100: { bgColor: "tr-bg-violet-100", hoverBgColor: "hover:tr-bg-violet-100", textColor: "tr-text-violet-100", hoverTextColor: "hover:tr-text-violet-100", borderColor: "tr-border-violet-100", hoverBorderColor: "hover:tr-border-violet-100", ringRolor: "tr-ring-violet-100", ringColor: "tr-ring-violet-100", hoverRingColor: "hover:tr-ring-violet-100", divideColor: "tr-divide-violet-100", outlineColor: "tr-outline-violet-100", focusRingColor: "focus:tr-ring-violet-100" }, 200: { bgColor: "tr-bg-violet-200", hoverBgColor: "hover:tr-bg-violet-200", textColor: "tr-text-violet-200", hoverTextColor: "hover:tr-text-violet-200", borderColor: "tr-border-violet-200", hoverBorderColor: "hover:tr-border-violet-200", ringRolor: "tr-ring-violet-200", ringColor: "tr-ring-violet-200", hoverRingColor: "hover:tr-ring-violet-200", divideColor: "tr-divide-violet-200", outlineColor: "tr-outline-violet-200", focusRingColor: "focus:tr-ring-violet-200" }, 300: { bgColor: "tr-bg-violet-300", hoverBgColor: "hover:tr-bg-violet-300", textColor: "tr-text-violet-300", hoverTextColor: "hover:tr-text-violet-300", borderColor: "tr-border-violet-300", hoverBorderColor: "hover:tr-border-violet-300", ringRolor: "tr-ring-violet-300", ringColor: "tr-ring-violet-300", hoverRingColor: "hover:tr-ring-violet-300", divideColor: "tr-divide-violet-300", outlineColor: "tr-outline-violet-300", focusRingColor: "focus:tr-ring-violet-300" }, 400: { bgColor: "tr-bg-violet-400", hoverBgColor: "hover:tr-bg-violet-400", textColor: "tr-text-violet-400", hoverTextColor: "hover:tr-text-violet-400", borderColor: "tr-border-violet-400", hoverBorderColor: "hover:tr-border-violet-400", ringRolor: "tr-ring-violet-400", ringColor: "tr-ring-violet-400", hoverRingColor: "hover:tr-ring-violet-400", divideColor: "tr-divide-violet-400", outlineColor: "tr-outline-violet-400", focusRingColor: "focus:tr-ring-violet-400" }, 500: { bgColor: "tr-bg-violet-500", hoverBgColor: "hover:tr-bg-violet-500", textColor: "tr-text-violet-500", hoverTextColor: "hover:tr-text-violet-500", borderColor: "tr-border-violet-500", hoverBorderColor: "hover:tr-border-violet-500", ringRolor: "tr-ring-violet-500", ringColor: "tr-ring-violet-500", hoverRingColor: "hover:tr-ring-violet-500", divideColor: "tr-divide-violet-500", outlineColor: "tr-outline-violet-500", focusRingColor: "focus:tr-ring-violet-500" }, 600: { bgColor: "tr-bg-violet-600", hoverBgColor: "hover:tr-bg-violet-600", textColor: "tr-text-violet-600", hoverTextColor: "hover:tr-text-violet-600", borderColor: "tr-border-violet-600", hoverBorderColor: "hover:tr-border-violet-600", ringRolor: "tr-ring-violet-600", ringColor: "tr-ring-violet-600", hoverRingColor: "hover:tr-ring-violet-600", divideColor: "tr-divide-violet-600", outlineColor: "tr-outline-violet-600", focusRingColor: "focus:tr-ring-violet-600" }, 700: { bgColor: "tr-bg-violet-700", hoverBgColor: "hover:tr-bg-violet-700", textColor: "tr-text-violet-700", hoverTextColor: "hover:tr-text-violet-700", borderColor: "tr-border-violet-700", hoverBorderColor: "hover:tr-border-violet-700", ringRolor: "tr-ring-violet-700", ringColor: "tr-ring-violet-700", hoverRingColor: "hover:tr-ring-violet-700", divideColor: "tr-divide-violet-700", outlineColor: "tr-outline-violet-700", focusRingColor: "focus:tr-ring-violet-700" }, 800: { bgColor: "tr-bg-violet-800", hoverBgColor: "hover:tr-bg-violet-800", textColor: "tr-text-violet-800", hoverTextColor: "hover:tr-text-violet-800", borderColor: "tr-border-violet-800", hoverBorderColor: "hover:tr-border-violet-800", ringRolor: "tr-ring-violet-800", ringColor: "tr-ring-violet-800", hoverRingColor: "hover:tr-ring-violet-800", divideColor: "tr-divide-violet-800", outlineColor: "tr-outline-violet-800", focusRingColor: "focus:tr-ring-violet-800" }, 900: { bgColor: "tr-bg-violet-900", hoverBgColor: "hover:tr-bg-violet-900", textColor: "tr-text-violet-900", hoverTextColor: "hover:tr-text-violet-900", borderColor: "tr-border-violet-900", hoverBorderColor: "hover:tr-border-violet-900", ringRolor: "tr-ring-violet-900", ringColor: "tr-ring-violet-900", hoverRingColor: "hover:tr-ring-violet-900", divideColor: "tr-divide-violet-900", outlineColor: "tr-outline-violet-900", focusRingColor: "focus:tr-ring-violet-900" } }, purple: { 50: { bgColor: "tr-bg-purple-50", hoverBgColor: "hover:tr-bg-purple-50", textColor: "tr-text-purple-50", hoverTextColor: "hover:tr-text-purple-50", borderColor: "tr-border-purple-50", hoverBorderColor: "hover:tr-border-purple-50", ringRolor: "tr-ring-purple-50", ringColor: "tr-ring-purple-50", hoverRingColor: "hover:tr-ring-purple-50", divideColor: "tr-divide-purple-50", outlineColor: "tr-outline-purple-50", focusRingColor: "focus:tr-ring-purple-50" }, 100: { bgColor: "tr-bg-purple-100", hoverBgColor: "hover:tr-bg-purple-100", textColor: "tr-text-purple-100", hoverTextColor: "hover:tr-text-purple-100", borderColor: "tr-border-purple-100", hoverBorderColor: "hover:tr-border-purple-100", ringRolor: "tr-ring-purple-100", ringColor: "tr-ring-purple-100", hoverRingColor: "hover:tr-ring-purple-100", divideColor: "tr-divide-purple-100", outlineColor: "tr-outline-purple-100", focusRingColor: "focus:tr-ring-purple-100" }, 200: { bgColor: "tr-bg-purple-200", hoverBgColor: "hover:tr-bg-purple-200", textColor: "tr-text-purple-200", hoverTextColor: "hover:tr-text-purple-200", borderColor: "tr-border-purple-200", hoverBorderColor: "hover:tr-border-purple-200", ringRolor: "tr-ring-purple-200", ringColor: "tr-ring-purple-200", hoverRingColor: "hover:tr-ring-purple-200", divideColor: "tr-divide-purple-200", outlineColor: "tr-outline-purple-200", focusRingColor: "focus:tr-ring-purple-200" }, 300: { bgColor: "tr-bg-purple-300", hoverBgColor: "hover:tr-bg-purple-300", textColor: "tr-text-purple-300", hoverTextColor: "hover:tr-text-purple-300", borderColor: "tr-border-purple-300", hoverBorderColor: "hover:tr-border-purple-300", ringRolor: "tr-ring-purple-300", ringColor: "tr-ring-purple-300", hoverRingColor: "hover:tr-ring-purple-300", divideColor: "tr-divide-purple-300", outlineColor: "tr-outline-purple-300", focusRingColor: "focus:tr-ring-purple-300" }, 400: { bgColor: "tr-bg-purple-400", hoverBgColor: "hover:tr-bg-purple-400", textColor: "tr-text-purple-400", hoverTextColor: "hover:tr-text-purple-400", borderColor: "tr-border-purple-400", hoverBorderColor: "hover:tr-border-purple-400", ringRolor: "tr-ring-purple-400", ringColor: "tr-ring-purple-400", hoverRingColor: "hover:tr-ring-purple-400", divideColor: "tr-divide-purple-400", outlineColor: "tr-outline-purple-400", focusRingColor: "focus:tr-ring-purple-400" }, 500: { bgColor: "tr-bg-purple-500", hoverBgColor: "hover:tr-bg-purple-500", textColor: "tr-text-purple-500", hoverTextColor: "hover:tr-text-purple-500", borderColor: "tr-border-purple-500", hoverBorderColor: "hover:tr-border-purple-500", ringRolor: "tr-ring-purple-500", ringColor: "tr-ring-purple-500", hoverRingColor: "hover:tr-ring-purple-500", divideColor: "tr-divide-purple-500", outlineColor: "tr-outline-purple-500", focusRingColor: "focus:tr-ring-purple-500" }, 600: { bgColor: "tr-bg-purple-600", hoverBgColor: "hover:tr-bg-purple-600", textColor: "tr-text-purple-600", hoverTextColor: "hover:tr-text-purple-600", borderColor: "tr-border-purple-600", hoverBorderColor: "hover:tr-border-purple-600", ringRolor: "tr-ring-purple-600", ringColor: "tr-ring-purple-600", hoverRingColor: "hover:tr-ring-purple-600", divideColor: "tr-divide-purple-600", outlineColor: "tr-outline-purple-600", focusRingColor: "focus:tr-ring-purple-600" }, 700: { bgColor: "tr-bg-purple-700", hoverBgColor: "hover:tr-bg-purple-700", textColor: "tr-text-purple-700", hoverTextColor: "hover:tr-text-purple-700", borderColor: "tr-border-purple-700", hoverBorderColor: "hover:tr-border-purple-700", ringRolor: "tr-ring-purple-700", ringColor: "tr-ring-purple-700", hoverRingColor: "hover:tr-ring-purple-700", divideColor: "tr-divide-purple-700", outlineColor: "tr-outline-purple-700", focusRingColor: "focus:tr-ring-purple-700" }, 800: { bgColor: "tr-bg-purple-800", hoverBgColor: "hover:tr-bg-purple-800", textColor: "tr-text-purple-800", hoverTextColor: "hover:tr-text-purple-800", borderColor: "tr-border-purple-800", hoverBorderColor: "hover:tr-border-purple-800", ringRolor: "tr-ring-purple-800", ringColor: "tr-ring-purple-800", hoverRingColor: "hover:tr-ring-purple-800", divideColor: "tr-divide-purple-800", outlineColor: "tr-outline-purple-800", focusRingColor: "focus:tr-ring-purple-800" }, 900: { bgColor: "tr-bg-purple-900", hoverBgColor: "hover:tr-bg-purple-900", textColor: "tr-text-purple-900", hoverTextColor: "hover:tr-text-purple-900", borderColor: "tr-border-purple-900", hoverBorderColor: "hover:tr-border-purple-900", ringRolor: "tr-ring-purple-900", ringColor: "tr-ring-purple-900", hoverRingColor: "hover:tr-ring-purple-900", divideColor: "tr-divide-purple-900", outlineColor: "tr-outline-purple-900", focusRingColor: "focus:tr-ring-purple-900" } }, fuchsia: { 50: { bgColor: "tr-bg-fuchsia-50", hoverBgColor: "hover:tr-bg-fuchsia-50", textColor: "tr-text-fuchsia-50", hoverTextColor: "hover:tr-text-fuchsia-50", borderColor: "tr-border-fuchsia-50", hoverBorderColor: "hover:tr-border-fuchsia-50", ringRolor: "tr-ring-fuchsia-50", ringColor: "tr-ring-fuchsia-50", hoverRingColor: "hover:tr-ring-fuchsia-50", divideColor: "tr-divide-fuchsia-50", outlineColor: "tr-outline-fuchsia-50", focusRingColor: "focus:tr-ring-fuchsia-50" }, 100: { bgColor: "tr-bg-fuchsia-100", hoverBgColor: "hover:tr-bg-fuchsia-100", textColor: "tr-text-fuchsia-100", hoverTextColor: "hover:tr-text-fuchsia-100", borderColor: "tr-border-fuchsia-100", hoverBorderColor: "hover:tr-border-fuchsia-100", ringRolor: "tr-ring-fuchsia-100", ringColor: "tr-ring-fuchsia-100", hoverRingColor: "hover:tr-ring-fuchsia-100", divideColor: "tr-divide-fuchsia-100", outlineColor: "tr-outline-fuchsia-100", focusRingColor: "focus:tr-ring-fuchsia-100" }, 200: { bgColor: "tr-bg-fuchsia-200", hoverBgColor: "hover:tr-bg-fuchsia-200", textColor: "tr-text-fuchsia-200", hoverTextColor: "hover:tr-text-fuchsia-200", borderColor: "tr-border-fuchsia-200", hoverBorderColor: "hover:tr-border-fuchsia-200", ringRolor: "tr-ring-fuchsia-200", ringColor: "tr-ring-fuchsia-200", hoverRingColor: "hover:tr-ring-fuchsia-200", divideColor: "tr-divide-fuchsia-200", outlineColor: "tr-outline-fuchsia-200", focusRingColor: "focus:tr-ring-fuchsia-200" }, 300: { bgColor: "tr-bg-fuchsia-300", hoverBgColor: "hover:tr-bg-fuchsia-300", textColor: "tr-text-fuchsia-300", hoverTextColor: "hover:tr-text-fuchsia-300", borderColor: "tr-border-fuchsia-300", hoverBorderColor: "hover:tr-border-fuchsia-300", ringRolor: "tr-ring-fuchsia-300", ringColor: "tr-ring-fuchsia-300", hoverRingColor: "hover:tr-ring-fuchsia-300", divideColor: "tr-divide-fuchsia-300", outlineColor: "tr-outline-fuchsia-300", focusRingColor: "focus:tr-ring-fuchsia-300" }, 400: { bgColor: "tr-bg-fuchsia-400", hoverBgColor: "hover:tr-bg-fuchsia-400", textColor: "tr-text-fuchsia-400", hoverTextColor: "hover:tr-text-fuchsia-400", borderColor: "tr-border-fuchsia-400", hoverBorderColor: "hover:tr-border-fuchsia-400", ringRolor: "tr-ring-fuchsia-400", ringColor: "tr-ring-fuchsia-400", hoverRingColor: "hover:tr-ring-fuchsia-400", divideColor: "tr-divide-fuchsia-400", outlineColor: "tr-outline-fuchsia-400", focusRingColor: "focus:tr-ring-fuchsia-400" }, 500: { bgColor: "tr-bg-fuchsia-500", hoverBgColor: "hover:tr-bg-fuchsia-500", textColor: "tr-text-fuchsia-500", hoverTextColor: "hover:tr-text-fuchsia-500", borderColor: "tr-border-fuchsia-500", hoverBorderColor: "hover:tr-border-fuchsia-500", ringRolor: "tr-ring-fuchsia-500", ringColor: "tr-ring-fuchsia-500", hoverRingColor: "hover:tr-ring-fuchsia-500", divideColor: "tr-divide-fuchsia-500", outlineColor: "tr-outline-fuchsia-500", focusRingColor: "focus:tr-ring-fuchsia-500" }, 600: { bgColor: "tr-bg-fuchsia-600", hoverBgColor: "hover:tr-bg-fuchsia-600", textColor: "tr-text-fuchsia-600", hoverTextColor: "hover:tr-text-fuchsia-600", borderColor: "tr-border-fuchsia-600", hoverBorderColor: "hover:tr-border-fuchsia-600", ringRolor: "tr-ring-fuchsia-600", ringColor: "tr-ring-fuchsia-600", hoverRingColor: "hover:tr-ring-fuchsia-600", divideColor: "tr-divide-fuchsia-600", outlineColor: "tr-outline-fuchsia-600", focusRingColor: "focus:tr-ring-fuchsia-600" }, 700: { bgColor: "tr-bg-fuchsia-700", hoverBgColor: "hover:tr-bg-fuchsia-700", textColor: "tr-text-fuchsia-700", hoverTextColor: "hover:tr-text-fuchsia-700", borderColor: "tr-border-fuchsia-700", hoverBorderColor: "hover:tr-border-fuchsia-700", ringRolor: "tr-ring-fuchsia-700", ringColor: "tr-ring-fuchsia-700", hoverRingColor: "hover:tr-ring-fuchsia-700", divideColor: "tr-divide-fuchsia-700", outlineColor: "tr-outline-fuchsia-700", focusRingColor: "focus:tr-ring-fuchsia-700" }, 800: { bgColor: "tr-bg-fuchsia-800", hoverBgColor: "hover:tr-bg-fuchsia-800", textColor: "tr-text-fuchsia-800", hoverTextColor: "hover:tr-text-fuchsia-800", borderColor: "tr-border-fuchsia-800", hoverBorderColor: "hover:tr-border-fuchsia-800", ringRolor: "tr-ring-fuchsia-800", ringColor: "tr-ring-fuchsia-800", hoverRingColor: "hover:tr-ring-fuchsia-800", divideColor: "tr-divide-fuchsia-800", outlineColor: "tr-outline-fuchsia-800", focusRingColor: "focus:tr-ring-fuchsia-800" }, 900: { bgColor: "tr-bg-fuchsia-900", hoverBgColor: "hover:tr-bg-fuchsia-900", textColor: "tr-text-fuchsia-900", hoverTextColor: "hover:tr-text-fuchsia-900", borderColor: "tr-border-fuchsia-900", hoverBorderColor: "hover:tr-border-fuchsia-900", ringRolor: "tr-ring-fuchsia-900", ringColor: "tr-ring-fuchsia-900", hoverRingColor: "hover:tr-ring-fuchsia-900", divideColor: "tr-divide-fuchsia-900", outlineColor: "tr-outline-fuchsia-900", focusRingColor: "focus:tr-ring-fuchsia-900" } }, pink: { 50: { bgColor: "tr-bg-pink-50", hoverBgColor: "hover:tr-bg-pink-50", textColor: "tr-text-pink-50", hoverTextColor: "hover:tr-text-pink-50", borderColor: "tr-border-pink-50", hoverBorderColor: "hover:tr-border-pink-50", ringRolor: "tr-ring-pink-50", ringColor: "tr-ring-pink-50", hoverRingColor: "hover:tr-ring-pink-50", divideColor: "tr-divide-pink-50", outlineColor: "tr-outline-pink-50", focusRingColor: "focus:tr-ring-pink-50" }, 100: { bgColor: "tr-bg-pink-100", hoverBgColor: "hover:tr-bg-pink-100", textColor: "tr-text-pink-100", hoverTextColor: "hover:tr-text-pink-100", borderColor: "tr-border-pink-100", hoverBorderColor: "hover:tr-border-pink-100", ringRolor: "tr-ring-pink-100", ringColor: "tr-ring-pink-100", hoverRingColor: "hover:tr-ring-pink-100", divideColor: "tr-divide-pink-100", outlineColor: "tr-outline-pink-100", focusRingColor: "focus:tr-ring-pink-100" }, 200: { bgColor: "tr-bg-pink-200", hoverBgColor: "hover:tr-bg-pink-200", textColor: "tr-text-pink-200", hoverTextColor: "hover:tr-text-pink-200", borderColor: "tr-border-pink-200", hoverBorderColor: "hover:tr-border-pink-200", ringRolor: "tr-ring-pink-200", ringColor: "tr-ring-pink-200", hoverRingColor: "hover:tr-ring-pink-200", divideColor: "tr-divide-pink-200", outlineColor: "tr-outline-pink-200", focusRingColor: "focus:tr-ring-pink-200" }, 300: { bgColor: "tr-bg-pink-300", hoverBgColor: "hover:tr-bg-pink-300", textColor: "tr-text-pink-300", hoverTextColor: "hover:tr-text-pink-300", borderColor: "tr-border-pink-300", hoverBorderColor: "hover:tr-border-pink-300", ringRolor: "tr-ring-pink-300", ringColor: "tr-ring-pink-300", hoverRingColor: "hover:tr-ring-pink-300", divideColor: "tr-divide-pink-300", outlineColor: "tr-outline-pink-300", focusRingColor: "focus:tr-ring-pink-300" }, 400: { bgColor: "tr-bg-pink-400", hoverBgColor: "hover:tr-bg-pink-400", textColor: "tr-text-pink-400", hoverTextColor: "hover:tr-text-pink-400", borderColor: "tr-border-pink-400", hoverBorderColor: "hover:tr-border-pink-400", ringRolor: "tr-ring-pink-400", ringColor: "tr-ring-pink-400", hoverRingColor: "hover:tr-ring-pink-400", divideColor: "tr-divide-pink-400", outlineColor: "tr-outline-pink-400", focusRingColor: "focus:tr-ring-pink-400" }, 500: { bgColor: "tr-bg-pink-500", hoverBgColor: "hover:tr-bg-pink-500", textColor: "tr-text-pink-500", hoverTextColor: "hover:tr-text-pink-500", borderColor: "tr-border-pink-500", hoverBorderColor: "hover:tr-border-pink-500", ringRolor: "tr-ring-pink-500", ringColor: "tr-ring-pink-500", hoverRingColor: "hover:tr-ring-pink-500", divideColor: "tr-divide-pink-500", outlineColor: "tr-outline-pink-500", focusRingColor: "focus:tr-ring-pink-500" }, 600: { bgColor: "tr-bg-pink-600", hoverBgColor: "hover:tr-bg-pink-600", textColor: "tr-text-pink-600", hoverTextColor: "hover:tr-text-pink-600", borderColor: "tr-border-pink-600", hoverBorderColor: "hover:tr-border-pink-600", ringRolor: "tr-ring-pink-600", ringColor: "tr-ring-pink-600", hoverRingColor: "hover:tr-ring-pink-600", divideColor: "tr-divide-pink-600", outlineColor: "tr-outline-pink-600", focusRingColor: "focus:tr-ring-pink-600" }, 700: { bgColor: "tr-bg-pink-700", hoverBgColor: "hover:tr-bg-pink-700", textColor: "tr-text-pink-700", hoverTextColor: "hover:tr-text-pink-700", borderColor: "tr-border-pink-700", hoverBorderColor: "hover:tr-border-pink-700", ringRolor: "tr-ring-pink-700", ringColor: "tr-ring-pink-700", hoverRingColor: "hover:tr-ring-pink-700", divideColor: "tr-divide-pink-700", outlineColor: "tr-outline-pink-700", focusRingColor: "focus:tr-ring-pink-700" }, 800: { bgColor: "tr-bg-pink-700", hoverBgColor: "hover:tr-bg-pink-700", textColor: "tr-text-pink-700", hoverTextColor: "hover:tr-text-pink-700", borderColor: "tr-border-pink-700", hoverBorderColor: "hover:tr-border-pink-700", ringRolor: "tr-ring-pink-700", ringColor: "tr-ring-pink-700", hoverRingColor: "hover:tr-ring-pink-700", divideColor: "tr-divide-pink-700", outlineColor: "tr-outline-pink-700", focusRingColor: "focus:tr-ring-pink-700" }, 900: { bgColor: "tr-bg-pink-900", hoverBgColor: "hover:tr-bg-pink-900", textColor: "tr-text-pink-900", hoverTextColor: "hover:tr-text-pink-900", borderColor: "tr-border-pink-900", hoverBorderColor: "hover:tr-border-pink-900", ringRolor: "tr-ring-pink-900", ringColor: "tr-ring-pink-900", hoverRingColor: "hover:tr-ring-pink-900", divideColor: "tr-divide-pink-900", outlineColor: "tr-outline-pink-900", focusRingColor: "focus:tr-ring-pink-900" } }, rose: { 50: { bgColor: "tr-bg-rose-50", hoverBgColor: "hover:tr-bg-rose-50", textColor: "tr-text-rose-50", hoverTextColor: "hover:tr-text-rose-50", borderColor: "tr-border-rose-50", hoverBorderColor: "hover:tr-border-rose-50", ringRolor: "tr-ring-rose-50", ringColor: "tr-ring-rose-50", hoverRingColor: "hover:tr-ring-rose-50", divideColor: "tr-divide-rose-50", outlineColor: "tr-outline-rose-50", focusRingColor: "focus:tr-ring-rose-50" }, 100: { bgColor: "tr-bg-rose-100", hoverBgColor: "hover:tr-bg-rose-100", textColor: "tr-text-rose-100", hoverTextColor: "hover:tr-text-rose-100", borderColor: "tr-border-rose-100", hoverBorderColor: "hover:tr-border-rose-100", ringRolor: "tr-ring-rose-100", ringColor: "tr-ring-rose-100", hoverRingColor: "hover:tr-ring-rose-100", divideColor: "tr-divide-rose-100", outlineColor: "tr-outline-rose-100", focusRingColor: "focus:tr-ring-rose-100" }, 200: { bgColor: "tr-bg-rose-200", hoverBgColor: "hover:tr-bg-rose-200", textColor: "tr-text-rose-200", hoverTextColor: "hover:tr-text-rose-200", borderColor: "tr-border-rose-200", hoverBorderColor: "hover:tr-border-rose-200", ringRolor: "tr-ring-rose-200", ringColor: "tr-ring-rose-200", hoverRingColor: "hover:tr-ring-rose-200", divideColor: "tr-divide-rose-200", outlineColor: "tr-outline-rose-200", focusRingColor: "focus:tr-ring-rose-200" }, 300: { bgColor: "tr-bg-rose-300", hoverBgColor: "hover:tr-bg-rose-300", textColor: "tr-text-rose-300", hoverTextColor: "hover:tr-text-rose-300", borderColor: "tr-border-rose-300", hoverBorderColor: "hover:tr-border-rose-300", ringRolor: "tr-ring-rose-300", ringColor: "tr-ring-rose-300", hoverRingColor: "hover:tr-ring-rose-300", divideColor: "tr-divide-rose-300", outlineColor: "tr-outline-rose-300", focusRingColor: "focus:tr-ring-rose-300" }, 400: { bgColor: "tr-bg-rose-400", hoverBgColor: "hover:tr-bg-rose-400", textColor: "tr-text-rose-400", hoverTextColor: "hover:tr-text-rose-400", borderColor: "tr-border-rose-400", hoverBorderColor: "hover:tr-border-rose-400", ringRolor: "tr-ring-rose-400", ringColor: "tr-ring-rose-400", hoverRingColor: "hover:tr-ring-rose-400", divideColor: "tr-divide-rose-400", outlineColor: "tr-outline-rose-400", focusRingColor: "focus:tr-ring-rose-400" }, 500: { bgColor: "tr-bg-rose-500", hoverBgColor: "hover:tr-bg-rose-500", textColor: "tr-text-rose-500", hoverTextColor: "hover:tr-text-rose-500", borderColor: "tr-border-rose-500", hoverBorderColor: "hover:tr-border-rose-500", ringRolor: "tr-ring-rose-500", ringColor: "tr-ring-rose-500", hoverRingColor: "hover:tr-ring-rose-500", divideColor: "tr-divide-rose-500", outlineColor: "tr-outline-rose-500", focusRingColor: "focus:tr-ring-rose-500" }, 600: { bgColor: "tr-bg-rose-600", hoverBgColor: "hover:tr-bg-rose-600", textColor: "tr-text-rose-600", hoverTextColor: "hover:tr-text-rose-600", borderColor: "tr-border-rose-600", hoverBorderColor: "hover:tr-border-rose-600", ringRolor: "tr-ring-rose-600", ringColor: "tr-ring-rose-600", hoverRingColor: "hover:tr-ring-rose-600", divideColor: "tr-divide-rose-600", outlineColor: "tr-outline-rose-600", focusRingColor: "focus:tr-ring-rose-600" }, 700: { bgColor: "tr-bg-rose-700", hoverBgColor: "hover:tr-bg-rose-700", textColor: "tr-text-rose-700", hoverTextColor: "hover:tr-text-rose-700", borderColor: "tr-border-rose-700", hoverBorderColor: "hover:tr-border-rose-700", ringRolor: "tr-ring-rose-700", ringColor: "tr-ring-rose-700", hoverRingColor: "hover:tr-ring-rose-700", divideColor: "tr-divide-rose-700", outlineColor: "tr-outline-rose-700", focusRingColor: "focus:tr-ring-rose-700" }, 800: { bgColor: "tr-bg-rose-800", hoverBgColor: "hover:tr-bg-rose-800", textColor: "tr-text-rose-800", hoverTextColor: "hover:tr-text-rose-800", borderColor: "tr-border-rose-800", hoverBorderColor: "hover:tr-border-rose-800", ringRolor: "tr-ring-rose-800", ringColor: "tr-ring-rose-800", hoverRingColor: "hover:tr-ring-rose-800", divideColor: "tr-divide-rose-800", outlineColor: "tr-outline-rose-800", focusRingColor: "focus:tr-ring-rose-800" }, 900: { bgColor: "tr-bg-rose-900", hoverBgColor: "hover:tr-bg-rose-900", textColor: "tr-text-rose-900", hoverTextColor: "hover:tr-text-rose-900", borderColor: "tr-border-rose-900", hoverBorderColor: "hover:tr-border-rose-900", ringRolor: "tr-ring-rose-900", ringColor: "tr-ring-rose-900", hoverRingColor: "hover:tr-ring-rose-900", divideColor: "tr-divide-rose-900", outlineColor: "tr-outline-rose-900", focusRingColor: "focus:tr-ring-rose-900" } } };
  var Bz = "text-left";
  var Az = { Increase: "increase", ModerateIncrease: "moderateIncrease", Decrease: "decrease", ModerateDecrease: "moderateDecrease", Unchanged: "unchanged" };
  var Nz = { Slate: "slate", Gray: "gray", Zinc: "zinc", Neutral: "neutral", Stone: "stone", Red: "red", Orange: "orange", Amber: "amber", Yellow: "yellow", Lime: "lime", Green: "green", Emerald: "emerald", Teal: "teal", Cyan: "cyan", Sky: "sky", Blue: "blue", Indigo: "indigo", Violet: "violet", Purple: "purple", Fuchsia: "fuchsia", Pink: "pink", Rose: "rose" };
  var Dz = { Primary: "primary", Secondary: "secondary" };
  var Lz = "left";
  var Iz = "right";
  var zz = "top";
  var Fz = "bottom";
  var Uz = [Nz.Cyan, Nz.Sky, Nz.Blue, Nz.Indigo, Nz.Violet, Nz.Purple, Nz.Fuchsia, Nz.Slate, Nz.Gray, Nz.Zinc, Nz.Neutral, Nz.Stone, Nz.Red, Nz.Orange, Nz.Amber, Nz.Yellow, Nz.Lime, Nz.Green, Nz.Emerald, Nz.Teal, Nz.Pink, Nz.Rose];
  var Vz = "transparent-none";
  var Wz = "white-none";
  var Gz = "gray-200";
  var rF = { [Nz.Slate]: { 500: "#64748b" }, [Nz.Gray]: { 500: "#6b7280" }, [Nz.Zinc]: { 500: "#71717a" }, [Nz.Neutral]: { 500: "#737373" }, [Nz.Stone]: { 500: "#78716c" }, [Nz.Red]: { 500: "#ef4444" }, [Nz.Orange]: { 500: "#f97316" }, [Nz.Amber]: { 500: "#f59e0b" }, [Nz.Yellow]: { 500: "#eab308" }, [Nz.Lime]: { 500: "#84cc16" }, [Nz.Green]: { 500: "#22c55e" }, [Nz.Emerald]: { 500: "#10b981" }, [Nz.Teal]: { 500: "#14b8a6" }, [Nz.Cyan]: { 500: "#06b6d4" }, [Nz.Sky]: { 500: "#0ea5e9" }, [Nz.Blue]: { 500: "#3b82f6" }, [Nz.Indigo]: { 500: "#6366f1" }, [Nz.Violet]: { 500: "#8b5cf6" }, [Nz.Purple]: { 500: "#a855f7" }, [Nz.Fuchsia]: { 500: "#d946ef" }, [Nz.Pink]: { 500: "#ec4899" }, [Nz.Rose]: { 500: "#f43f5e" } };
  var nF = { [Nz.Slate]: { canvasBackground: "slate-50", lightBackground: "slate-100", background: "slate-500", darkBackground: "slate-600", darkestBackground: "slate-800", lightBorder: "slate-200", border: "slate-400", darkBorder: "slate-600", lightRing: "slate-200", ring: "slate-400", lightText: "slate-400", text: "slate-500", darkText: "slate-700", icon: "slate-500" }, [Nz.Gray]: { canvasBackground: "gray-50", lightBackground: "gray-100", background: "gray-500", darkBackground: "gray-600", darkestBackground: "gray-800", lightBorder: "gray-200", border: "gray-400", darkBorder: "gray-600", lightRing: "gray-200", ring: "gray-400", lightText: "gray-400", text: "gray-500", darkText: "gray-700", icon: "gray-500" }, [Nz.Zinc]: { canvasBackground: "zinc-50", lightBackground: "zinc-100", background: "zinc-500", darkBackground: "zinc-600", darkestBackground: "zinc-800", lightBorder: "zinc-200", border: "zinc-400", darkBorder: "zinc-600", lightRing: "zinc-200", ring: "zinc-400", lightText: "zinc-400", text: "zinc-500", darkText: "zinc-700", icon: "zinc-500" }, [Nz.Neutral]: { canvasBackground: "neutral-50", lightBackground: "neutral-100", background: "neutral-500", darkBackground: "neutral-600", darkestBackground: "neutral-800", lightBorder: "neutral-200", border: "neutral-400", darkBorder: "neutral-600", lightRing: "neutral-200", ring: "neutral-400", lightText: "neutral-400", text: "neutral-500", darkText: "neutral-700", icon: "neutral-500" }, [Nz.Stone]: { canvasBackground: "stone-50", lightBackground: "stone-100", background: "stone-500", darkBackground: "stone-600", darkestBackground: "stone-800", lightBorder: "stone-200", border: "stone-400", darkBorder: "stone-600", lightRing: "stone-200", ring: "stone-400", lightText: "stone-400", text: "stone-500", darkText: "stone-700", icon: "stone-500" }, [Nz.Red]: { canvasBackground: "red-50", lightBackground: "red-100", background: "red-500", darkBackground: "red-600", darkestBackground: "red-800", lightBorder: "red-200", border: "red-400", darkBorder: "red-600", lightRing: "red-200", ring: "red-400", lightText: "red-400", text: "red-500", darkText: "red-700", icon: "red-500" }, [Nz.Orange]: { canvasBackground: "orange-50", lightBackground: "orange-100", background: "orange-500", darkBackground: "orange-600", darkestBackground: "orange-800", lightBorder: "orange-200", border: "orange-400", darkBorder: "orange-600", lightRing: "orange-200", ring: "orange-400", lightText: "orange-400", text: "orange-500", darkText: "orange-700", icon: "orange-500" }, [Nz.Amber]: { canvasBackground: "amber-50", lightBackground: "amber-100", background: "amber-500", darkBackground: "amber-600", darkestBackground: "amber-800", lightBorder: "amber-200", border: "amber-400", darkBorder: "amber-600", lightRing: "amber-200", ring: "amber-400", lightText: "amber-400", text: "amber-500", darkText: "amber-700", icon: "amber-500" }, [Nz.Yellow]: { canvasBackground: "yellow-50", lightBackground: "yellow-100", background: "yellow-500", darkBackground: "yellow-600", darkestBackground: "yellow-800", lightBorder: "yellow-200", border: "yellow-400", darkBorder: "yellow-600", lightRing: "yellow-200", ring: "yellow-400", lightText: "yellow-400", text: "yellow-500", darkText: "yellow-700", icon: "yellow-500" }, [Nz.Lime]: { canvasBackground: "lime-50", lightBackground: "lime-100", background: "lime-500", darkBackground: "lime-600", darkestBackground: "lime-800", lightBorder: "lime-200", border: "lime-400", darkBorder: "lime-600", lightRing: "lime-200", ring: "lime-400", lightText: "lime-400", text: "lime-500", darkText: "lime-700", icon: "lime-500" }, [Nz.Green]: { canvasBackground: "green-50", lightBackground: "green-100", background: "green-500", darkBackground: "green-600", darkestBackground: "green-800", lightBorder: "green-200", border: "green-400", darkBorder: "green-600", lightRing: "green-200", ring: "green-400", lightText: "green-400", text: "green-500", darkText: "green-700", icon: "green-500" }, [Nz.Emerald]: { canvasBackground: "emerald-50", lightBackground: "emerald-100", background: "emerald-500", darkBackground: "emerald-600", darkestBackground: "emerald-800", lightBorder: "emerald-200", border: "emerald-400", darkBorder: "emerald-600", lightRing: "emerald-200", ring: "emerald-400", lightText: "emerald-400", text: "emerald-500", darkText: "emerald-700", icon: "emerald-500" }, [Nz.Teal]: { canvasBackground: "teal-50", lightBackground: "teal-100", background: "teal-500", darkBackground: "teal-600", darkestBackground: "teal-800", lightBorder: "teal-200", border: "teal-400", darkBorder: "teal-600", lightRing: "teal-200", ring: "teal-400", lightText: "teal-400", text: "teal-500", darkText: "teal-700", icon: "teal-500" }, [Nz.Cyan]: { canvasBackground: "cyan-50", lightBackground: "cyan-100", background: "cyan-500", darkBackground: "cyan-600", darkestBackground: "cyan-800", lightBorder: "cyan-200", border: "cyan-400", darkBorder: "cyan-600", lightRing: "cyan-200", ring: "cyan-400", lightText: "cyan-400", text: "cyan-500", darkText: "cyan-700", icon: "cyan-500" }, [Nz.Sky]: { canvasBackground: "sky-50", lightBackground: "sky-100", background: "sky-500", darkBackground: "sky-600", darkestBackground: "sky-800", lightBorder: "sky-200", border: "sky-400", darkBorder: "sky-600", lightRing: "sky-200", ring: "sky-400", lightText: "sky-400", text: "sky-500", darkText: "sky-700", icon: "sky-500" }, [Nz.Blue]: { canvasBackground: "blue-50", lightBackground: "blue-100", background: "blue-500", darkBackground: "blue-600", darkestBackground: "blue-800", lightBorder: "blue-200", border: "blue-400", darkBorder: "blue-600", lightRing: "blue-200", ring: "blue-400", lightText: "blue-400", text: "blue-500", darkText: "blue-700", icon: "blue-500" }, [Nz.Indigo]: { canvasBackground: "indigo-50", lightBackground: "indigo-100", background: "indigo-500", darkBackground: "indigo-600", darkestBackground: "indigo-800", lightBorder: "indigo-200", border: "indigo-400", darkBorder: "indigo-600", lightRing: "indigo-200", ring: "indigo-400", lightText: "indigo-400", text: "indigo-500", darkText: "indigo-700", icon: "indigo-500" }, [Nz.Violet]: { canvasBackground: "violet-50", lightBackground: "violet-100", background: "violet-500", darkBackground: "violet-600", darkestBackground: "violet-800", lightBorder: "violet-200", border: "violet-400", darkBorder: "violet-600", lightRing: "violet-200", ring: "violet-400", lightText: "violet-400", text: "violet-500", darkText: "violet-700", icon: "violet-500" }, [Nz.Purple]: { canvasBackground: "purple-50", lightBackground: "purple-100", background: "purple-500", darkBackground: "purple-600", darkestBackground: "purple-800", lightBorder: "purple-200", border: "purple-400", darkBorder: "purple-600", lightRing: "purple-200", ring: "purple-400", lightText: "purple-400", text: "purple-500", darkText: "purple-700", icon: "purple-500" }, [Nz.Fuchsia]: { canvasBackground: "fuchsia-50", lightBackground: "fuchsia-100", background: "fuchsia-500", darkBackground: "fuchsia-600", darkestBackground: "fuchsia-800", lightBorder: "fuchsia-200", border: "fuchsia-400", darkBorder: "fuchsia-600", lightRing: "fuchsia-200", ring: "fuchsia-400", lightText: "fuchsia-400", text: "fuchsia-500", darkText: "fuchsia-700", icon: "fuchsia-500" }, [Nz.Pink]: { canvasBackground: "pink-50", lightBackground: "pink-100", background: "pink-500", darkBackground: "pink-600", darkestBackground: "pink-800", lightBorder: "pink-200", border: "pink-400", darkBorder: "pink-600", lightRing: "pink-200", ring: "pink-400", lightText: "pink-400", text: "pink-500", darkText: "pink-700", icon: "pink-500" }, [Nz.Rose]: { canvasBackground: "rose-50", lightBackground: "rose-100", background: "rose-500", darkBackground: "rose-600", darkestBackground: "rose-800", lightBorder: "rose-200", border: "rose-400", darkBorder: "rose-600", lightRing: "rose-200", ring: "rose-400", lightText: "rose-400", text: "rose-500", darkText: "rose-700", icon: "rose-500" } };
  var oF = (...e27) => e27.filter(Boolean).join(" ");
  var aF = (e27) => {
    const t2 = e27.split("-"), r2 = t2[0], n2 = t2[1];
    return Mz[r2][n2];
  };
  var uF = (e27) => true === e27 ? "tr-truncate" : "";
  var cF = (e27) => ({ "text-left": "tr-text-left", "text-center": "tr-text-center", "text-right": "tr-text-right", "text-justify": "tr-text-justify", "text-start": "tr-text-start", "text-end": "tr-text-end" })[e27] || "";
  var dF = (e27) => ({ "max-w-0": "tr-max-w-0", "max-w-none": "tr-max-w-none", "max-w-xs": "tr-max-w-xs", "max-w-sm": "tr-max-w-sm", "max-w-md": "tr-max-w-md", "max-w-lg": "tr-max-w-lg", "max-w-xl": "tr-max-w-xl", "max-w-2xl": "tr-max-w-2xl", "max-w-3xl": "tr-max-w-3xl", "max-w-4xl": "tr-max-w-4xl", "max-w-5xl": "tr-max-w-5xl", "max-w-6xl": "tr-max-w-6xl", "max-w-7xl": "tr-max-w-7xl", "max-w-full": "tr-max-w-full", "max-w-min": "tr-max-w-min", "max-w-max": "tr-max-w-max", "max-w-fit": "tr-max-w-fit", "max-w-prose": "tr-max-w-prose", "max-w-screen-sm": "tr-max-w-screen-sm", "max-w-screen-lg": "tr-max-w-screen-lg", "max-w-screen-xl": "tr-max-w-screen-xl", "max-w-screen-2xl": "tr-max-w-screen-2xl" })[e27] || "";
  var pF = (e27) => ({ "mt-0": "tr-mt-0", "mt-0.5": "tr-mt-0.5", "mt-1": "tr-mt-1", "mt-1.5": "tr-mt-1.5", "mt-2": "tr-mt-2", "mt-2.5": "tr-mt-2.5", "mt-3": "tr-mt-3", "mt-3.5": "tr-mt-3.5", "mt-4": "tr-mt-4", "mt-5": "tr-mt-5", "mt-6": "tr-mt-6", "mt-7": "tr-mt-7", "mt-8": "tr-mt-8", "mt-9": "tr-mt-9", "mt-10": "tr-mt-10", "mt-11": "tr-mt-11", "mt-12": "tr-mt-12", "mt-14": "tr-mt-14", "mt-16": "tr-mt-16", "mt-20": "tr-mt-20", "mt-24": "tr-mt-24", "mt-28": "tr-mt-28", "mt-32": "tr-mt-32", "mt-36": "tr-mt-36", "mt-40": "tr-mt-40", "mt-44": "tr-mt-44", "mt-48": "tr-mt-48", "mt-52": "tr-mt-52", "mt-56": "tr-mt-56", "mt-60": "tr-mt-60", "mt-64": "tr-mt-64", "mt-72": "tr-mt-72", "mt-80": "tr-mt-80", "mt-96": "tr-mt-96", "-mt-0.5": "-tr-mt-0.5", "-mt-1": "-tr-mt-1", "-mt-1.5": "-tr-mt-1.5", "-mt-2": "-tr-mt-2", "-mt-2.5": "-tr-mt-2.5", "-mt-3": "-tr-mt-3", "-mt-3.5": "-tr-mt-3.5", "-mt-4": "-tr-mt-4", "-mt-5": "-tr-mt-5", "-mt-6": "-tr-mt-6", "-mt-7": "-tr-mt-7", "-mt-8": "-tr-mt-8", "-mt-9": "-tr-mt-9", "-mt-10": "-tr-mt-10", "-mt-11": "-tr-mt-11", "-mt-12": "-tr-mt-12", "-mt-14": "-tr-mt-14", "-mt-16": "-tr-mt-16", "-mt-20": "-tr-mt-20", "-mt-24": "-tr-mt-24", "-mt-28": "-tr-mt-28", "-mt-32": "-tr-mt-32", "-mt-36": "-tr-mt-36", "-mt-40": "-tr-mt-40", "-mt-44": "-tr-mt-44", "-mt-48": "-tr-mt-48", "-mt-52": "-tr-mt-52", "-mt-56": "-tr-mt-56", "-mt-60": "-tr-mt-60", "-mt-64": "-tr-mt-64", "-mt-72": "-tr-mt-72", "-mt-80": "-tr-mt-80", "-mt-96": "-tr-mt-96" })[e27] || "";
  var bF = { left: "tr-rounded-l-lg", top: "tr-rounded-t-lg", right: "tr-rounded-r-lg", bottom: "tr-rounded-b-lg", all: "tr-rounded-lg" };
  var kF = "tr-shadow";
  var TF = { left: "tr-border-l", top: "tr-border-t", right: "tr-border-r", bottom: "tr-border-b", all: "tr-border" };
  var RF = { left: "tr-border-l-2", top: "tr-border-t-2", right: "tr-border-r-2", bottom: "tr-border-b-2", all: "tr-border-2" };
  var OF = { left: "tr-border-l-4", top: "tr-border-t-4", right: "tr-border-r-4", bottom: "tr-border-b-4", all: "tr-border-4" };
  var AF = { height: "tr-h-3", width: "tr-w-3" };
  var NF = { height: "tr-h-4", width: "tr-w-4" };
  var jF = { height: "tr-h-5", width: "tr-w-5" };
  var DF = { height: "tr-h-6", width: "tr-w-6" };
  var LF = { height: "tr-h-7", width: "tr-w-7" };
  var IF = { height: "tr-h-9", width: "tr-w-9" };
  var UF = { paddingLeft: "tr-pl-0.5", paddingTop: "tr-pt-0.5", paddingRight: "tr-pr-0.5", paddingBottom: "tr-pb-0.5", marginLeft: "tr-ml-0.5", marginTop: "tr-mt-0.5", marginRight: "tr-mr-0.5", marginBottom: "tr-mb-0.5", negativeMarginLeft: "-tr-ml-0.5", negativeMarginRight: "-tr-mr-0.5", negativeMarginTop: "-tr-mt-0.5", negativeMarginBottom: "-tr-mb-0.5", left: "tr-left-0.5", right: "tr-right-0.5", top: "tr-top-0.5", bottom: "tr-bottom-0.5", spaceX: "tr-space-x-0.5" };
  var VF = { paddingLeft: "tr-pl-1", paddingTop: "tr-pt-1", paddingRight: "tr-pr-1", paddingBottom: "tr-pb-1", marginLeft: "tr-ml-1", marginTop: "tr-mt-1", marginRight: "tr-mr-1", marginBottom: "tr-mb-1", negativeMarginLeft: "-tr-ml-1", negativeMarginRight: "-tr-mr-1", left: "tr-left-1", right: "tr-right-1", top: "tr-top-1", bottom: "tr-bottom-1", spaceX: "tr-space-x-1" };
  var WF = { paddingLeft: "tr-pl-1.5", paddingTop: "tr-pt-1.5", paddingRight: "tr-pr-1.5", paddingBottom: "tr-pb-1.5", marginLeft: "tr-ml-1.5", marginTop: "tr-mt-1.5", marginRight: "tr-mr-1.5", marginBottom: "tr-mb-1.5", negativeMarginLeft: "-tr-ml-1.5", negativeMarginRight: "-tr-mr-1.5", negativeMarginTop: "-tr-mt-1.5", negativeMarginBottom: "-tr-mb-1.5", left: "tr-left-1.5", right: "tr-right-1.5", top: "tr-top-1.5", bottom: "tr-bottom-1.5", spaceX: "tr-space-x-1.5" };
  var HF = { paddingLeft: "tr-pl-2", paddingTop: "tr-pt-2", paddingRight: "tr-pr-2", paddingBottom: "tr-pb-2", marginLeft: "tr-ml-2", marginTop: "tr-mt-2", marginRight: "tr-mr-2", marginBottom: "tr-mb-2", negativeMarginLeft: "-tr-ml-2", negativeMarginRight: "-tr-mr-2", negativeMarginTop: "-tr-mt-2", negativeMarginBottom: "-tr-mb-2", left: "tr-left-2", right: "tr-right-2", top: "tr-left-2", bottom: "tr-bottom-2", spaceX: "tr-space-x-2" };
  var $F = { paddingLeft: "tr-pl-2.5", paddingTop: "tr-pt-2.5", paddingRight: "tr-pr-2.5", paddingBottom: "tr-pb-2.5", marginLeft: "tr-ml-2.5", marginTop: "tr-mt-2.5", marginRight: "tr-mr-2.5", marginBottom: "tr-mb-2.5", negativeMarginLeft: "-tr-ml-2.5", negativeMarginRight: "-tr-mr-2.5", negativeMarginTop: "-tr-mt-2.5", negativeMarginBottom: "-tr-mb-2.5", left: "tr-left-2.5", right: "tr-right-2.5", top: "tr-top-2.5", bottom: "tr-bottom-2.5", spaceX: "tr-space-x-2.5" };
  var qF = { paddingLeft: "tr-pl-3", paddingTop: "tr-pt-3", paddingRight: "tr-pr-3", paddingBottom: "tr-pb-3", marginLeft: "tr-ml-3", marginTop: "tr-mt-3", marginRight: "tr-mr-3", marginBottom: "tr-mb-3", negativeMarginLeft: "-tr-ml-3", negativeMarginRight: "-tr-mr-3", negativeMarginTop: "-tr-mt-3", negativeMarginBottom: "-tr-mb-3", left: "tr-left-3", right: "tr-right-3", top: "tr-top-3", bottom: "tr-bottom-3", spaceX: "tr-space-x-3" };
  var YF = { paddingLeft: "tr-pl-3.5", paddingTop: "tr-pt-3.5", paddingRight: "tr-pr-3.5", paddingBottom: "tr-pb-3.5", marginLeft: "tr-ml-3.5", marginTop: "tr-mt-3.5", marginRight: "tr-mr-3.5", marginBottom: "tr-mb-3.5", negativeMarginLeft: "-tr-ml-3.5", negativeMarginRight: "-tr-mr-3.5", negativeMarginTop: "-tr-mt-3.5", negativeMarginBottom: "-tr-mb-3.5", left: "tr-left-3.5", right: "tr-right-3.5", top: "tr-top-3.5", bottom: "tr-bottom-3.5", spaceX: "tr-space-x-3.5" };
  var GF = { paddingLeft: "tr-pl-4", paddingTop: "tr-pt-4", paddingRight: "tr-pr-4", paddingBottom: "tr-pb-4", marginLeft: "tr-ml-4", marginTop: "tr-mt-4", marginRight: "tr-mr-4", marginBottom: "tr-mb-4", negativeMarginLeft: "-tr-ml-4", negativeMarginRight: "-tr-mr-4", negativeMarginTop: "-tr-mt-4", negativeMarginBottom: "-tr-mb-4", left: "tr-left-4", right: "tr-right-4", top: "tr-top-4", bottom: "tr-bottom-4", spaceX: "tr-space-x-4" };
  var XF = { paddingLeft: "tr-pl-6", paddingTop: "tr-pt-6", paddingRight: "tr-pr-6", paddingBottom: "tr-pb-6", marginLeft: "tr-ml-6", marginTop: "tr-mt-6", marginRight: "tr-mr-6", marginBottom: "tr-mb-6", negativeMarginLeft: "-tr-ml-6", negativeMarginRight: "-tr-mr-6", negativeMarginTop: "-tr-mt-6", negativeMarginBottom: "-tr-mb-6", left: "tr-left-6", right: "tr-right-6", top: "tr-top-6", bottom: "tr-bottom-6", spaceX: "tr-space-x-6" };
  var QF = "tr-text-xs";
  var KF = "tr-text-sm";
  var ZF = "tr-text-base";
  var JF = "tr-text-lg";
  var eU = "tr-text-xl";
  var nU = "tr-font-medium";
  var iU = (e27) => Object.values(Nz).includes(e27);
  var aU = (e27, t2 = Nz.Blue) => e27 && iU(e27) ? nF[e27] : nF[t2];
  var _U = "top";
  var PU = "bottom";
  var MU = "right";
  var BU = "left";
  var AU = [_U, PU, MU, BU];
  var NU = AU.reduce(function(e27, t2) {
    return e27.concat([t2 + "-start", t2 + "-end"]);
  }, []);
  var jU = [].concat(AU, ["auto"]).reduce(function(e27, t2) {
    return e27.concat([t2, t2 + "-start", t2 + "-end"]);
  }, []);
  var DU = ["beforeRead", "read", "afterRead", "beforeMain", "main", "afterMain", "beforeWrite", "write", "afterWrite"];
  function LU(e27) {
    return e27 ? (e27.nodeName || "").toLowerCase() : null;
  }
  function IU(e27) {
    if (null == e27)
      return window;
    if ("[object Window]" !== e27.toString()) {
      var t2 = e27.ownerDocument;
      return t2 && t2.defaultView || window;
    }
    return e27;
  }
  function zU(e27) {
    return e27 instanceof IU(e27).Element || e27 instanceof Element;
  }
  function FU(e27) {
    return e27 instanceof IU(e27).HTMLElement || e27 instanceof HTMLElement;
  }
  function UU(e27) {
    return "undefined" != typeof ShadowRoot && (e27 instanceof IU(e27).ShadowRoot || e27 instanceof ShadowRoot);
  }
  var VU = { name: "applyStyles", enabled: true, phase: "write", fn: function(e27) {
    var t2 = e27.state;
    Object.keys(t2.elements).forEach(function(e28) {
      var r2 = t2.styles[e28] || {}, n2 = t2.attributes[e28] || {}, o2 = t2.elements[e28];
      FU(o2) && LU(o2) && (Object.assign(o2.style, r2), Object.keys(n2).forEach(function(e29) {
        var t3 = n2[e29];
        false === t3 ? o2.removeAttribute(e29) : o2.setAttribute(e29, true === t3 ? "" : t3);
      }));
    });
  }, effect: function(e27) {
    var t2 = e27.state, r2 = { popper: { position: t2.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
    return Object.assign(t2.elements.popper.style, r2.popper), t2.styles = r2, t2.elements.arrow && Object.assign(t2.elements.arrow.style, r2.arrow), function() {
      Object.keys(t2.elements).forEach(function(e28) {
        var n2 = t2.elements[e28], o2 = t2.attributes[e28] || {}, i2 = Object.keys(t2.styles.hasOwnProperty(e28) ? t2.styles[e28] : r2[e28]).reduce(function(e29, t3) {
          return e29[t3] = "", e29;
        }, {});
        FU(n2) && LU(n2) && (Object.assign(n2.style, i2), Object.keys(o2).forEach(function(e29) {
          n2.removeAttribute(e29);
        }));
      });
    };
  }, requires: ["computeStyles"] };
  function WU(e27) {
    return e27.split("-")[0];
  }
  var HU = Math.max;
  var $U = Math.min;
  var qU = Math.round;
  function YU(e27, t2) {
    void 0 === t2 && (t2 = false);
    var r2 = e27.getBoundingClientRect(), n2 = 1, o2 = 1;
    if (FU(e27) && t2) {
      var i2 = e27.offsetHeight, a2 = e27.offsetWidth;
      a2 > 0 && (n2 = qU(r2.width) / a2 || 1), i2 > 0 && (o2 = qU(r2.height) / i2 || 1);
    }
    return { width: r2.width / n2, height: r2.height / o2, top: r2.top / o2, right: r2.right / n2, bottom: r2.bottom / o2, left: r2.left / n2, x: r2.left / n2, y: r2.top / o2 };
  }
  function GU(e27) {
    var t2 = YU(e27), r2 = e27.offsetWidth, n2 = e27.offsetHeight;
    return Math.abs(t2.width - r2) <= 1 && (r2 = t2.width), Math.abs(t2.height - n2) <= 1 && (n2 = t2.height), { x: e27.offsetLeft, y: e27.offsetTop, width: r2, height: n2 };
  }
  function XU(e27, t2) {
    var r2 = t2.getRootNode && t2.getRootNode();
    if (e27.contains(t2))
      return true;
    if (r2 && UU(r2)) {
      var n2 = t2;
      do {
        if (n2 && e27.isSameNode(n2))
          return true;
        n2 = n2.parentNode || n2.host;
      } while (n2);
    }
    return false;
  }
  function QU(e27) {
    return IU(e27).getComputedStyle(e27);
  }
  function KU(e27) {
    return ["table", "td", "th"].indexOf(LU(e27)) >= 0;
  }
  function ZU(e27) {
    return ((zU(e27) ? e27.ownerDocument : e27.document) || window.document).documentElement;
  }
  function JU(e27) {
    return "html" === LU(e27) ? e27 : e27.assignedSlot || e27.parentNode || (UU(e27) ? e27.host : null) || ZU(e27);
  }
  function eV(e27) {
    return FU(e27) && "fixed" !== QU(e27).position ? e27.offsetParent : null;
  }
  function tV(e27) {
    for (var t2 = IU(e27), r2 = eV(e27); r2 && KU(r2) && "static" === QU(r2).position; )
      r2 = eV(r2);
    return r2 && ("html" === LU(r2) || "body" === LU(r2) && "static" === QU(r2).position) ? t2 : r2 || function(e28) {
      var t3 = -1 !== navigator.userAgent.toLowerCase().indexOf("firefox");
      if (-1 !== navigator.userAgent.indexOf("Trident") && FU(e28) && "fixed" === QU(e28).position)
        return null;
      var r3 = JU(e28);
      for (UU(r3) && (r3 = r3.host); FU(r3) && ["html", "body"].indexOf(LU(r3)) < 0; ) {
        var n2 = QU(r3);
        if ("none" !== n2.transform || "none" !== n2.perspective || "paint" === n2.contain || -1 !== ["transform", "perspective"].indexOf(n2.willChange) || t3 && "filter" === n2.willChange || t3 && n2.filter && "none" !== n2.filter)
          return r3;
        r3 = r3.parentNode;
      }
      return null;
    }(e27) || t2;
  }
  function rV(e27) {
    return ["top", "bottom"].indexOf(e27) >= 0 ? "x" : "y";
  }
  function nV(e27, t2, r2) {
    return HU(e27, $U(t2, r2));
  }
  function oV(e27) {
    return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, e27);
  }
  function iV(e27, t2) {
    return t2.reduce(function(t3, r2) {
      return t3[r2] = e27, t3;
    }, {});
  }
  var aV = { name: "arrow", enabled: true, phase: "main", fn: function(e27) {
    var t2, r2 = e27.state, n2 = e27.name, o2 = e27.options, i2 = r2.elements.arrow, a2 = r2.modifiersData.popperOffsets, l2 = WU(r2.placement), u2 = rV(l2), s2 = [BU, MU].indexOf(l2) >= 0 ? "height" : "width";
    if (i2 && a2) {
      var c2 = function(e28, t3) {
        return oV("number" != typeof (e28 = "function" == typeof e28 ? e28(Object.assign({}, t3.rects, { placement: t3.placement })) : e28) ? e28 : iV(e28, AU));
      }(o2.padding, r2), d2 = GU(i2), f2 = "y" === u2 ? _U : BU, p2 = "y" === u2 ? PU : MU, h2 = r2.rects.reference[s2] + r2.rects.reference[u2] - a2[u2] - r2.rects.popper[s2], g2 = a2[u2] - r2.rects.reference[u2], v2 = tV(i2), m2 = v2 ? "y" === u2 ? v2.clientHeight || 0 : v2.clientWidth || 0 : 0, y2 = h2 / 2 - g2 / 2, b2 = c2[f2], C2 = m2 - d2[s2] - c2[p2], x2 = m2 / 2 - d2[s2] / 2 + y2, w2 = nV(b2, x2, C2), k2 = u2;
      r2.modifiersData[n2] = ((t2 = {})[k2] = w2, t2.centerOffset = w2 - x2, t2);
    }
  }, effect: function(e27) {
    var t2 = e27.state, r2 = e27.options.element, n2 = void 0 === r2 ? "[data-popper-arrow]" : r2;
    null != n2 && ("string" != typeof n2 || (n2 = t2.elements.popper.querySelector(n2))) && (FU(n2) || console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" ")), XU(t2.elements.popper, n2) ? t2.elements.arrow = n2 : console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" ")));
  }, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] };
  function lV(e27) {
    return e27.split("-")[1];
  }
  var uV = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
  function sV(e27) {
    var t2, r2 = e27.popper, n2 = e27.popperRect, o2 = e27.placement, i2 = e27.variation, a2 = e27.offsets, l2 = e27.position, u2 = e27.gpuAcceleration, s2 = e27.adaptive, c2 = e27.roundOffsets, d2 = e27.isFixed, f2 = a2.x, p2 = void 0 === f2 ? 0 : f2, h2 = a2.y, g2 = void 0 === h2 ? 0 : h2, v2 = "function" == typeof c2 ? c2({ x: p2, y: g2 }) : { x: p2, y: g2 };
    p2 = v2.x, g2 = v2.y;
    var m2 = a2.hasOwnProperty("x"), y2 = a2.hasOwnProperty("y"), b2 = BU, C2 = _U, x2 = window;
    if (s2) {
      var w2 = tV(r2), k2 = "clientHeight", S2 = "clientWidth";
      if (w2 === IU(r2) && "static" !== QU(w2 = ZU(r2)).position && "absolute" === l2 && (k2 = "scrollHeight", S2 = "scrollWidth"), w2 = w2, o2 === _U || (o2 === BU || o2 === MU) && "end" === i2)
        C2 = PU, g2 -= (d2 && w2 === x2 && x2.visualViewport ? x2.visualViewport.height : w2[k2]) - n2.height, g2 *= u2 ? 1 : -1;
      if (o2 === BU || (o2 === _U || o2 === PU) && "end" === i2)
        b2 = MU, p2 -= (d2 && w2 === x2 && x2.visualViewport ? x2.visualViewport.width : w2[S2]) - n2.width, p2 *= u2 ? 1 : -1;
    }
    var E2, T2 = Object.assign({ position: l2 }, s2 && uV), R2 = true === c2 ? function(e28) {
      var t3 = e28.x, r3 = e28.y, n3 = window.devicePixelRatio || 1;
      return { x: qU(t3 * n3) / n3 || 0, y: qU(r3 * n3) / n3 || 0 };
    }({ x: p2, y: g2 }) : { x: p2, y: g2 };
    return p2 = R2.x, g2 = R2.y, u2 ? Object.assign({}, T2, ((E2 = {})[C2] = y2 ? "0" : "", E2[b2] = m2 ? "0" : "", E2.transform = (x2.devicePixelRatio || 1) <= 1 ? "translate(" + p2 + "px, " + g2 + "px)" : "translate3d(" + p2 + "px, " + g2 + "px, 0)", E2)) : Object.assign({}, T2, ((t2 = {})[C2] = y2 ? g2 + "px" : "", t2[b2] = m2 ? p2 + "px" : "", t2.transform = "", t2));
  }
  var cV = { name: "computeStyles", enabled: true, phase: "beforeWrite", fn: function(e27) {
    var t2 = e27.state, r2 = e27.options, n2 = r2.gpuAcceleration, o2 = void 0 === n2 || n2, i2 = r2.adaptive, a2 = void 0 === i2 || i2, l2 = r2.roundOffsets, u2 = void 0 === l2 || l2;
    if (true) {
      var s2 = QU(t2.elements.popper).transitionProperty || "";
      a2 && ["transform", "top", "right", "bottom", "left"].some(function(e28) {
        return s2.indexOf(e28) >= 0;
      }) && console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
    }
    var c2 = { placement: WU(t2.placement), variation: lV(t2.placement), popper: t2.elements.popper, popperRect: t2.rects.popper, gpuAcceleration: o2, isFixed: "fixed" === t2.options.strategy };
    null != t2.modifiersData.popperOffsets && (t2.styles.popper = Object.assign({}, t2.styles.popper, sV(Object.assign({}, c2, { offsets: t2.modifiersData.popperOffsets, position: t2.options.strategy, adaptive: a2, roundOffsets: u2 })))), null != t2.modifiersData.arrow && (t2.styles.arrow = Object.assign({}, t2.styles.arrow, sV(Object.assign({}, c2, { offsets: t2.modifiersData.arrow, position: "absolute", adaptive: false, roundOffsets: u2 })))), t2.attributes.popper = Object.assign({}, t2.attributes.popper, { "data-popper-placement": t2.placement });
  }, data: {} };
  var dV = { passive: true };
  var fV = { left: "right", right: "left", bottom: "top", top: "bottom" };
  function pV(e27) {
    return e27.replace(/left|right|bottom|top/g, function(e28) {
      return fV[e28];
    });
  }
  var hV = { start: "end", end: "start" };
  function gV(e27) {
    return e27.replace(/start|end/g, function(e28) {
      return hV[e28];
    });
  }
  function vV(e27) {
    var t2 = IU(e27);
    return { scrollLeft: t2.pageXOffset, scrollTop: t2.pageYOffset };
  }
  function mV(e27) {
    return YU(ZU(e27)).left + vV(e27).scrollLeft;
  }
  function yV(e27) {
    var t2 = QU(e27), r2 = t2.overflow, n2 = t2.overflowX, o2 = t2.overflowY;
    return /auto|scroll|overlay|hidden/.test(r2 + o2 + n2);
  }
  function bV(e27) {
    return ["html", "body", "#document"].indexOf(LU(e27)) >= 0 ? e27.ownerDocument.body : FU(e27) && yV(e27) ? e27 : bV(JU(e27));
  }
  function CV(e27, t2) {
    var r2;
    void 0 === t2 && (t2 = []);
    var n2 = bV(e27), o2 = n2 === (null == (r2 = e27.ownerDocument) ? void 0 : r2.body), i2 = IU(n2), a2 = o2 ? [i2].concat(i2.visualViewport || [], yV(n2) ? n2 : []) : n2, l2 = t2.concat(a2);
    return o2 ? l2 : l2.concat(CV(JU(a2)));
  }
  function xV(e27) {
    return Object.assign({}, e27, { left: e27.x, top: e27.y, right: e27.x + e27.width, bottom: e27.y + e27.height });
  }
  function wV(e27, t2) {
    return "viewport" === t2 ? xV(function(e28) {
      var t3 = IU(e28), r2 = ZU(e28), n2 = t3.visualViewport, o2 = r2.clientWidth, i2 = r2.clientHeight, a2 = 0, l2 = 0;
      return n2 && (o2 = n2.width, i2 = n2.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (a2 = n2.offsetLeft, l2 = n2.offsetTop)), { width: o2, height: i2, x: a2 + mV(e28), y: l2 };
    }(e27)) : zU(t2) ? function(e28) {
      var t3 = YU(e28);
      return t3.top = t3.top + e28.clientTop, t3.left = t3.left + e28.clientLeft, t3.bottom = t3.top + e28.clientHeight, t3.right = t3.left + e28.clientWidth, t3.width = e28.clientWidth, t3.height = e28.clientHeight, t3.x = t3.left, t3.y = t3.top, t3;
    }(t2) : xV(function(e28) {
      var t3, r2 = ZU(e28), n2 = vV(e28), o2 = null == (t3 = e28.ownerDocument) ? void 0 : t3.body, i2 = HU(r2.scrollWidth, r2.clientWidth, o2 ? o2.scrollWidth : 0, o2 ? o2.clientWidth : 0), a2 = HU(r2.scrollHeight, r2.clientHeight, o2 ? o2.scrollHeight : 0, o2 ? o2.clientHeight : 0), l2 = -n2.scrollLeft + mV(e28), u2 = -n2.scrollTop;
      return "rtl" === QU(o2 || r2).direction && (l2 += HU(r2.clientWidth, o2 ? o2.clientWidth : 0) - i2), { width: i2, height: a2, x: l2, y: u2 };
    }(ZU(e27)));
  }
  function kV(e27, t2, r2) {
    var n2 = "clippingParents" === t2 ? function(e28) {
      var t3 = CV(JU(e28)), r3 = ["absolute", "fixed"].indexOf(QU(e28).position) >= 0 && FU(e28) ? tV(e28) : e28;
      return zU(r3) ? t3.filter(function(e29) {
        return zU(e29) && XU(e29, r3) && "body" !== LU(e29);
      }) : [];
    }(e27) : [].concat(t2), o2 = [].concat(n2, [r2]), i2 = o2[0], a2 = o2.reduce(function(t3, r3) {
      var n3 = wV(e27, r3);
      return t3.top = HU(n3.top, t3.top), t3.right = $U(n3.right, t3.right), t3.bottom = $U(n3.bottom, t3.bottom), t3.left = HU(n3.left, t3.left), t3;
    }, wV(e27, i2));
    return a2.width = a2.right - a2.left, a2.height = a2.bottom - a2.top, a2.x = a2.left, a2.y = a2.top, a2;
  }
  function SV(e27) {
    var t2, r2 = e27.reference, n2 = e27.element, o2 = e27.placement, i2 = o2 ? WU(o2) : null, a2 = o2 ? lV(o2) : null, l2 = r2.x + r2.width / 2 - n2.width / 2, u2 = r2.y + r2.height / 2 - n2.height / 2;
    switch (i2) {
      case _U:
        t2 = { x: l2, y: r2.y - n2.height };
        break;
      case PU:
        t2 = { x: l2, y: r2.y + r2.height };
        break;
      case MU:
        t2 = { x: r2.x + r2.width, y: u2 };
        break;
      case BU:
        t2 = { x: r2.x - n2.width, y: u2 };
        break;
      default:
        t2 = { x: r2.x, y: r2.y };
    }
    var s2 = i2 ? rV(i2) : null;
    if (null != s2) {
      var c2 = "y" === s2 ? "height" : "width";
      switch (a2) {
        case "start":
          t2[s2] = t2[s2] - (r2[c2] / 2 - n2[c2] / 2);
          break;
        case "end":
          t2[s2] = t2[s2] + (r2[c2] / 2 - n2[c2] / 2);
      }
    }
    return t2;
  }
  function EV(e27, t2) {
    void 0 === t2 && (t2 = {});
    var r2 = t2, n2 = r2.placement, o2 = void 0 === n2 ? e27.placement : n2, i2 = r2.boundary, a2 = void 0 === i2 ? "clippingParents" : i2, l2 = r2.rootBoundary, u2 = void 0 === l2 ? "viewport" : l2, s2 = r2.elementContext, c2 = void 0 === s2 ? "popper" : s2, d2 = r2.altBoundary, f2 = void 0 !== d2 && d2, p2 = r2.padding, h2 = void 0 === p2 ? 0 : p2, g2 = oV("number" != typeof h2 ? h2 : iV(h2, AU)), v2 = "popper" === c2 ? "reference" : "popper", m2 = e27.rects.popper, y2 = e27.elements[f2 ? v2 : c2], b2 = kV(zU(y2) ? y2 : y2.contextElement || ZU(e27.elements.popper), a2, u2), C2 = YU(e27.elements.reference), x2 = SV({ reference: C2, element: m2, strategy: "absolute", placement: o2 }), w2 = xV(Object.assign({}, m2, x2)), k2 = "popper" === c2 ? w2 : C2, S2 = { top: b2.top - k2.top + g2.top, bottom: k2.bottom - b2.bottom + g2.bottom, left: b2.left - k2.left + g2.left, right: k2.right - b2.right + g2.right }, E2 = e27.modifiersData.offset;
    if ("popper" === c2 && E2) {
      var T2 = E2[o2];
      Object.keys(S2).forEach(function(e28) {
        var t3 = [MU, PU].indexOf(e28) >= 0 ? 1 : -1, r3 = [_U, PU].indexOf(e28) >= 0 ? "y" : "x";
        S2[e28] += T2[r3] * t3;
      });
    }
    return S2;
  }
  function TV(e27, t2) {
    void 0 === t2 && (t2 = {});
    var r2 = t2, n2 = r2.placement, o2 = r2.boundary, i2 = r2.rootBoundary, a2 = r2.padding, l2 = r2.flipVariations, u2 = r2.allowedAutoPlacements, s2 = void 0 === u2 ? jU : u2, c2 = lV(n2), d2 = c2 ? l2 ? NU : NU.filter(function(e28) {
      return lV(e28) === c2;
    }) : AU, f2 = d2.filter(function(e28) {
      return s2.indexOf(e28) >= 0;
    });
    0 === f2.length && (f2 = d2, console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" ")));
    var p2 = f2.reduce(function(t3, r3) {
      return t3[r3] = EV(e27, { placement: r3, boundary: o2, rootBoundary: i2, padding: a2 })[WU(r3)], t3;
    }, {});
    return Object.keys(p2).sort(function(e28, t3) {
      return p2[e28] - p2[t3];
    });
  }
  var RV = { name: "flip", enabled: true, phase: "main", fn: function(e27) {
    var t2 = e27.state, r2 = e27.options, n2 = e27.name;
    if (!t2.modifiersData[n2]._skip) {
      for (var o2 = r2.mainAxis, i2 = void 0 === o2 || o2, a2 = r2.altAxis, l2 = void 0 === a2 || a2, u2 = r2.fallbackPlacements, s2 = r2.padding, c2 = r2.boundary, d2 = r2.rootBoundary, f2 = r2.altBoundary, p2 = r2.flipVariations, h2 = void 0 === p2 || p2, g2 = r2.allowedAutoPlacements, v2 = t2.options.placement, m2 = WU(v2), y2 = u2 || (m2 === v2 || !h2 ? [pV(v2)] : function(e28) {
        if ("auto" === WU(e28))
          return [];
        var t3 = pV(e28);
        return [gV(e28), t3, gV(t3)];
      }(v2)), b2 = [v2].concat(y2).reduce(function(e28, r3) {
        return e28.concat("auto" === WU(r3) ? TV(t2, { placement: r3, boundary: c2, rootBoundary: d2, padding: s2, flipVariations: h2, allowedAutoPlacements: g2 }) : r3);
      }, []), C2 = t2.rects.reference, x2 = t2.rects.popper, w2 = /* @__PURE__ */ new Map(), k2 = true, S2 = b2[0], E2 = 0; E2 < b2.length; E2++) {
        var T2 = b2[E2], R2 = WU(T2), O2 = "start" === lV(T2), _2 = [_U, PU].indexOf(R2) >= 0, P2 = _2 ? "width" : "height", M2 = EV(t2, { placement: T2, boundary: c2, rootBoundary: d2, altBoundary: f2, padding: s2 }), B2 = _2 ? O2 ? MU : BU : O2 ? PU : _U;
        C2[P2] > x2[P2] && (B2 = pV(B2));
        var A2 = pV(B2), N2 = [];
        if (i2 && N2.push(M2[R2] <= 0), l2 && N2.push(M2[B2] <= 0, M2[A2] <= 0), N2.every(function(e28) {
          return e28;
        })) {
          S2 = T2, k2 = false;
          break;
        }
        w2.set(T2, N2);
      }
      if (k2)
        for (var j2 = function(e28) {
          var t3 = b2.find(function(t4) {
            var r3 = w2.get(t4);
            if (r3)
              return r3.slice(0, e28).every(function(e29) {
                return e29;
              });
          });
          if (t3)
            return S2 = t3, "break";
        }, D2 = h2 ? 3 : 1; D2 > 0; D2--) {
          if ("break" === j2(D2))
            break;
        }
      t2.placement !== S2 && (t2.modifiersData[n2]._skip = true, t2.placement = S2, t2.reset = true);
    }
  }, requiresIfExists: ["offset"], data: { _skip: false } };
  function OV(e27, t2, r2) {
    return void 0 === r2 && (r2 = { x: 0, y: 0 }), { top: e27.top - t2.height - r2.y, right: e27.right - t2.width + r2.x, bottom: e27.bottom - t2.height + r2.y, left: e27.left - t2.width - r2.x };
  }
  function _V(e27) {
    return [_U, MU, PU, BU].some(function(t2) {
      return e27[t2] >= 0;
    });
  }
  var PV = { name: "offset", enabled: true, phase: "main", requires: ["popperOffsets"], fn: function(e27) {
    var t2 = e27.state, r2 = e27.options, n2 = e27.name, o2 = r2.offset, i2 = void 0 === o2 ? [0, 0] : o2, a2 = jU.reduce(function(e28, r3) {
      return e28[r3] = function(e29, t3, r4) {
        var n3 = WU(e29), o3 = [BU, _U].indexOf(n3) >= 0 ? -1 : 1, i3 = "function" == typeof r4 ? r4(Object.assign({}, t3, { placement: e29 })) : r4, a3 = i3[0], l3 = i3[1];
        return a3 = a3 || 0, l3 = (l3 || 0) * o3, [BU, MU].indexOf(n3) >= 0 ? { x: l3, y: a3 } : { x: a3, y: l3 };
      }(r3, t2.rects, i2), e28;
    }, {}), l2 = a2[t2.placement], u2 = l2.x, s2 = l2.y;
    null != t2.modifiersData.popperOffsets && (t2.modifiersData.popperOffsets.x += u2, t2.modifiersData.popperOffsets.y += s2), t2.modifiersData[n2] = a2;
  } };
  var MV = { name: "preventOverflow", enabled: true, phase: "main", fn: function(e27) {
    var t2 = e27.state, r2 = e27.options, n2 = e27.name, o2 = r2.mainAxis, i2 = void 0 === o2 || o2, a2 = r2.altAxis, l2 = void 0 !== a2 && a2, u2 = r2.boundary, s2 = r2.rootBoundary, c2 = r2.altBoundary, d2 = r2.padding, f2 = r2.tether, p2 = void 0 === f2 || f2, h2 = r2.tetherOffset, g2 = void 0 === h2 ? 0 : h2, v2 = EV(t2, { boundary: u2, rootBoundary: s2, padding: d2, altBoundary: c2 }), m2 = WU(t2.placement), y2 = lV(t2.placement), b2 = !y2, C2 = rV(m2), x2 = "x" === C2 ? "y" : "x", w2 = t2.modifiersData.popperOffsets, k2 = t2.rects.reference, S2 = t2.rects.popper, E2 = "function" == typeof g2 ? g2(Object.assign({}, t2.rects, { placement: t2.placement })) : g2, T2 = "number" == typeof E2 ? { mainAxis: E2, altAxis: E2 } : Object.assign({ mainAxis: 0, altAxis: 0 }, E2), R2 = t2.modifiersData.offset ? t2.modifiersData.offset[t2.placement] : null, O2 = { x: 0, y: 0 };
    if (w2) {
      if (i2) {
        var _2, P2 = "y" === C2 ? _U : BU, M2 = "y" === C2 ? PU : MU, B2 = "y" === C2 ? "height" : "width", A2 = w2[C2], N2 = A2 + v2[P2], j2 = A2 - v2[M2], D2 = p2 ? -S2[B2] / 2 : 0, L2 = "start" === y2 ? k2[B2] : S2[B2], I2 = "start" === y2 ? -S2[B2] : -k2[B2], z2 = t2.elements.arrow, F2 = p2 && z2 ? GU(z2) : { width: 0, height: 0 }, U2 = t2.modifiersData["arrow#persistent"] ? t2.modifiersData["arrow#persistent"].padding : { top: 0, right: 0, bottom: 0, left: 0 }, V2 = U2[P2], W2 = U2[M2], H2 = nV(0, k2[B2], F2[B2]), $2 = b2 ? k2[B2] / 2 - D2 - H2 - V2 - T2.mainAxis : L2 - H2 - V2 - T2.mainAxis, q2 = b2 ? -k2[B2] / 2 + D2 + H2 + W2 + T2.mainAxis : I2 + H2 + W2 + T2.mainAxis, Y2 = t2.elements.arrow && tV(t2.elements.arrow), G2 = Y2 ? "y" === C2 ? Y2.clientTop || 0 : Y2.clientLeft || 0 : 0, X2 = null != (_2 = null == R2 ? void 0 : R2[C2]) ? _2 : 0, Q2 = A2 + q2 - X2, K2 = nV(p2 ? $U(N2, A2 + $2 - X2 - G2) : N2, A2, p2 ? HU(j2, Q2) : j2);
        w2[C2] = K2, O2[C2] = K2 - A2;
      }
      if (l2) {
        var Z2, J2 = "x" === C2 ? _U : BU, ee2 = "x" === C2 ? PU : MU, te2 = w2[x2], re2 = "y" === x2 ? "height" : "width", ne2 = te2 + v2[J2], oe2 = te2 - v2[ee2], ie2 = -1 !== [_U, BU].indexOf(m2), ae2 = null != (Z2 = null == R2 ? void 0 : R2[x2]) ? Z2 : 0, le2 = ie2 ? ne2 : te2 - k2[re2] - S2[re2] - ae2 + T2.altAxis, ue2 = ie2 ? te2 + k2[re2] + S2[re2] - ae2 - T2.altAxis : oe2, se2 = p2 && ie2 ? function(e28, t3, r3) {
          var n3 = nV(e28, t3, r3);
          return n3 > r3 ? r3 : n3;
        }(le2, te2, ue2) : nV(p2 ? le2 : ne2, te2, p2 ? ue2 : oe2);
        w2[x2] = se2, O2[x2] = se2 - te2;
      }
      t2.modifiersData[n2] = O2;
    }
  }, requiresIfExists: ["offset"] };
  function BV(e27, t2, r2) {
    void 0 === r2 && (r2 = false);
    var n2, o2, i2 = FU(t2), a2 = FU(t2) && function(e28) {
      var t3 = e28.getBoundingClientRect(), r3 = qU(t3.width) / e28.offsetWidth || 1, n3 = qU(t3.height) / e28.offsetHeight || 1;
      return 1 !== r3 || 1 !== n3;
    }(t2), l2 = ZU(t2), u2 = YU(e27, a2), s2 = { scrollLeft: 0, scrollTop: 0 }, c2 = { x: 0, y: 0 };
    return (i2 || !i2 && !r2) && (("body" !== LU(t2) || yV(l2)) && (s2 = (n2 = t2) !== IU(n2) && FU(n2) ? { scrollLeft: (o2 = n2).scrollLeft, scrollTop: o2.scrollTop } : vV(n2)), FU(t2) ? ((c2 = YU(t2, true)).x += t2.clientLeft, c2.y += t2.clientTop) : l2 && (c2.x = mV(l2))), { x: u2.left + s2.scrollLeft - c2.x, y: u2.top + s2.scrollTop - c2.y, width: u2.width, height: u2.height };
  }
  function AV(e27) {
    var t2 = /* @__PURE__ */ new Map(), r2 = /* @__PURE__ */ new Set(), n2 = [];
    function o2(e28) {
      r2.add(e28.name), [].concat(e28.requires || [], e28.requiresIfExists || []).forEach(function(e29) {
        if (!r2.has(e29)) {
          var n3 = t2.get(e29);
          n3 && o2(n3);
        }
      }), n2.push(e28);
    }
    return e27.forEach(function(e28) {
      t2.set(e28.name, e28);
    }), e27.forEach(function(e28) {
      r2.has(e28.name) || o2(e28);
    }), n2;
  }
  function NV(e27) {
    for (var t2 = arguments.length, r2 = new Array(t2 > 1 ? t2 - 1 : 0), n2 = 1; n2 < t2; n2++)
      r2[n2 - 1] = arguments[n2];
    return [].concat(r2).reduce(function(e28, t3) {
      return e28.replace(/%s/, t3);
    }, e27);
  }
  var jV = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
  var DV = ["name", "enabled", "phase", "fn", "effect", "requires", "options"];
  var LV = "Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.";
  var IV = { placement: "bottom", modifiers: [], strategy: "absolute" };
  function zV() {
    for (var e27 = arguments.length, t2 = new Array(e27), r2 = 0; r2 < e27; r2++)
      t2[r2] = arguments[r2];
    return !t2.some(function(e28) {
      return !(e28 && "function" == typeof e28.getBoundingClientRect);
    });
  }
  function FV(e27) {
    void 0 === e27 && (e27 = {});
    var t2 = e27, r2 = t2.defaultModifiers, n2 = void 0 === r2 ? [] : r2, o2 = t2.defaultOptions, i2 = void 0 === o2 ? IV : o2;
    return function(e28, t3, r3) {
      void 0 === r3 && (r3 = i2);
      var o3, a2, l2 = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, IV, i2), modifiersData: {}, elements: { reference: e28, popper: t3 }, attributes: {}, styles: {} }, u2 = [], s2 = false, c2 = { state: l2, setOptions: function(r4) {
        var o4 = "function" == typeof r4 ? r4(l2.options) : r4;
        d2(), l2.options = Object.assign({}, i2, l2.options, o4), l2.scrollParents = { reference: zU(e28) ? CV(e28) : e28.contextElement ? CV(e28.contextElement) : [], popper: CV(t3) };
        var a3, s3, f2, p2 = function(e29) {
          var t4 = AV(e29);
          return DU.reduce(function(e30, r5) {
            return e30.concat(t4.filter(function(e31) {
              return e31.phase === r5;
            }));
          }, []);
        }(function(e29) {
          var t4 = e29.reduce(function(e30, t5) {
            var r5 = e30[t5.name];
            return e30[t5.name] = r5 ? Object.assign({}, r5, t5, { options: Object.assign({}, r5.options, t5.options), data: Object.assign({}, r5.data, t5.data) }) : t5, e30;
          }, {});
          return Object.keys(t4).map(function(e30) {
            return t4[e30];
          });
        }([].concat(n2, l2.options.modifiers)));
        if (l2.orderedModifiers = p2.filter(function(e29) {
          return e29.enabled;
        }), true) {
          if (function(e29) {
            e29.forEach(function(t4) {
              [].concat(Object.keys(t4), DV).filter(function(e30, t5, r5) {
                return r5.indexOf(e30) === t5;
              }).forEach(function(r5) {
                switch (r5) {
                  case "name":
                    "string" != typeof t4.name && console.error(NV(jV, String(t4.name), '"name"', '"string"', '"' + String(t4.name) + '"'));
                    break;
                  case "enabled":
                    "boolean" != typeof t4.enabled && console.error(NV(jV, t4.name, '"enabled"', '"boolean"', '"' + String(t4.enabled) + '"'));
                    break;
                  case "phase":
                    DU.indexOf(t4.phase) < 0 && console.error(NV(jV, t4.name, '"phase"', "either " + DU.join(", "), '"' + String(t4.phase) + '"'));
                    break;
                  case "fn":
                    "function" != typeof t4.fn && console.error(NV(jV, t4.name, '"fn"', '"function"', '"' + String(t4.fn) + '"'));
                    break;
                  case "effect":
                    null != t4.effect && "function" != typeof t4.effect && console.error(NV(jV, t4.name, '"effect"', '"function"', '"' + String(t4.fn) + '"'));
                    break;
                  case "requires":
                    null == t4.requires || Array.isArray(t4.requires) || console.error(NV(jV, t4.name, '"requires"', '"array"', '"' + String(t4.requires) + '"'));
                    break;
                  case "requiresIfExists":
                    Array.isArray(t4.requiresIfExists) || console.error(NV(jV, t4.name, '"requiresIfExists"', '"array"', '"' + String(t4.requiresIfExists) + '"'));
                    break;
                  case "options":
                  case "data":
                    break;
                  default:
                    console.error('PopperJS: an invalid property has been provided to the "' + t4.name + '" modifier, valid properties are ' + DV.map(function(e30) {
                      return '"' + e30 + '"';
                    }).join(", ") + '; but "' + r5 + '" was provided.');
                }
                t4.requires && t4.requires.forEach(function(r6) {
                  null == e29.find(function(e30) {
                    return e30.name === r6;
                  }) && console.error(NV('Popper: modifier "%s" requires "%s", but "%s" modifier is not available', String(t4.name), r6, r6));
                });
              });
            });
          }((a3 = [].concat(p2, l2.options.modifiers), s3 = function(e29) {
            return e29.name;
          }, f2 = /* @__PURE__ */ new Set(), a3.filter(function(e29) {
            var t4 = s3(e29);
            if (!f2.has(t4))
              return f2.add(t4), true;
          }))), "auto" === WU(l2.options.placement))
            l2.orderedModifiers.find(function(e29) {
              return "flip" === e29.name;
            }) || console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
          var h2 = QU(t3);
          [h2.marginTop, h2.marginRight, h2.marginBottom, h2.marginLeft].some(function(e29) {
            return parseFloat(e29);
          }) && console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
        }
        return l2.orderedModifiers.forEach(function(e29) {
          var t4 = e29.name, r5 = e29.options, n3 = void 0 === r5 ? {} : r5, o5 = e29.effect;
          if ("function" == typeof o5) {
            var i3 = o5({ state: l2, name: t4, instance: c2, options: n3 }), a4 = function() {
            };
            u2.push(i3 || a4);
          }
        }), c2.update();
      }, forceUpdate: function() {
        if (!s2) {
          var e29 = l2.elements, t4 = e29.reference, r4 = e29.popper;
          if (zV(t4, r4)) {
            l2.rects = { reference: BV(t4, tV(r4), "fixed" === l2.options.strategy), popper: GU(r4) }, l2.reset = false, l2.placement = l2.options.placement, l2.orderedModifiers.forEach(function(e30) {
              return l2.modifiersData[e30.name] = Object.assign({}, e30.data);
            });
            for (var n3 = 0, o4 = 0; o4 < l2.orderedModifiers.length; o4++) {
              if ((n3 += 1) > 100) {
                console.error("Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.");
                break;
              }
              if (true !== l2.reset) {
                var i3 = l2.orderedModifiers[o4], a3 = i3.fn, u3 = i3.options, d3 = void 0 === u3 ? {} : u3, f2 = i3.name;
                "function" == typeof a3 && (l2 = a3({ state: l2, options: d3, name: f2, instance: c2 }) || l2);
              } else
                l2.reset = false, o4 = -1;
            }
          } else
            console.error(LV);
        }
      }, update: (o3 = function() {
        return new Promise(function(e29) {
          c2.forceUpdate(), e29(l2);
        });
      }, function() {
        return a2 || (a2 = new Promise(function(e29) {
          Promise.resolve().then(function() {
            a2 = void 0, e29(o3());
          });
        })), a2;
      }), destroy: function() {
        d2(), s2 = true;
      } };
      if (!zV(e28, t3))
        return console.error(LV), c2;
      function d2() {
        u2.forEach(function(e29) {
          return e29();
        }), u2 = [];
      }
      return c2.setOptions(r3).then(function(e29) {
        !s2 && r3.onFirstUpdate && r3.onFirstUpdate(e29);
      }), c2;
    };
  }
  var UV = FV({ defaultModifiers: [{ name: "eventListeners", enabled: true, phase: "write", fn: function() {
  }, effect: function(e27) {
    var t2 = e27.state, r2 = e27.instance, n2 = e27.options, o2 = n2.scroll, i2 = void 0 === o2 || o2, a2 = n2.resize, l2 = void 0 === a2 || a2, u2 = IU(t2.elements.popper), s2 = [].concat(t2.scrollParents.reference, t2.scrollParents.popper);
    return i2 && s2.forEach(function(e28) {
      e28.addEventListener("scroll", r2.update, dV);
    }), l2 && u2.addEventListener("resize", r2.update, dV), function() {
      i2 && s2.forEach(function(e28) {
        e28.removeEventListener("scroll", r2.update, dV);
      }), l2 && u2.removeEventListener("resize", r2.update, dV);
    };
  }, data: {} }, { name: "popperOffsets", enabled: true, phase: "read", fn: function(e27) {
    var t2 = e27.state, r2 = e27.name;
    t2.modifiersData[r2] = SV({ reference: t2.rects.reference, element: t2.rects.popper, strategy: "absolute", placement: t2.placement });
  }, data: {} }, cV, VU, PV, RV, MV, aV, { name: "hide", enabled: true, phase: "main", requiresIfExists: ["preventOverflow"], fn: function(e27) {
    var t2 = e27.state, r2 = e27.name, n2 = t2.rects.reference, o2 = t2.rects.popper, i2 = t2.modifiersData.preventOverflow, a2 = EV(t2, { elementContext: "reference" }), l2 = EV(t2, { altBoundary: true }), u2 = OV(a2, n2), s2 = OV(l2, o2, i2), c2 = _V(u2), d2 = _V(s2);
    t2.modifiersData[r2] = { referenceClippingOffsets: u2, popperEscapeOffsets: s2, isReferenceHidden: c2, hasPopperEscaped: d2 }, t2.attributes.popper = Object.assign({}, t2.attributes.popper, { "data-popper-reference-hidden": c2, "data-popper-escaped": d2 });
  } }] });
  var VV = { passive: true, capture: true };
  var WV = function() {
    return document.body;
  };
  function HV(e27, t2, r2) {
    if (Array.isArray(e27)) {
      var n2 = e27[t2];
      return null == n2 ? Array.isArray(r2) ? r2[t2] : r2 : n2;
    }
    return e27;
  }
  function $V(e27, t2) {
    var r2 = {}.toString.call(e27);
    return 0 === r2.indexOf("[object") && r2.indexOf(t2 + "]") > -1;
  }
  function qV(e27, t2) {
    return "function" == typeof e27 ? e27.apply(void 0, t2) : e27;
  }
  function YV(e27, t2) {
    return 0 === t2 ? e27 : function(n2) {
      clearTimeout(r2), r2 = setTimeout(function() {
        e27(n2);
      }, t2);
    };
    var r2;
  }
  function GV(e27) {
    return [].concat(e27);
  }
  function XV(e27, t2) {
    -1 === e27.indexOf(t2) && e27.push(t2);
  }
  function QV(e27) {
    return [].slice.call(e27);
  }
  function KV(e27) {
    return Object.keys(e27).reduce(function(t2, r2) {
      return void 0 !== e27[r2] && (t2[r2] = e27[r2]), t2;
    }, {});
  }
  function ZV() {
    return document.createElement("div");
  }
  function JV(e27) {
    return ["Element", "Fragment"].some(function(t2) {
      return $V(e27, t2);
    });
  }
  function eW(e27) {
    return JV(e27) ? [e27] : function(e28) {
      return $V(e28, "NodeList");
    }(e27) ? QV(e27) : Array.isArray(e27) ? e27 : QV(document.querySelectorAll(e27));
  }
  function tW(e27, t2) {
    e27.forEach(function(e28) {
      e28 && (e28.style.transitionDuration = t2 + "ms");
    });
  }
  function rW(e27, t2) {
    e27.forEach(function(e28) {
      e28 && e28.setAttribute("data-state", t2);
    });
  }
  function nW(e27, t2, r2) {
    var n2 = t2 + "EventListener";
    ["transitionend", "webkitTransitionEnd"].forEach(function(t3) {
      e27[n2](t3, r2);
    });
  }
  function oW(e27, t2) {
    for (var r2 = t2; r2; ) {
      var n2;
      if (e27.contains(r2))
        return true;
      r2 = null == r2.getRootNode || null == (n2 = r2.getRootNode()) ? void 0 : n2.host;
    }
    return false;
  }
  var iW = { isTouch: false };
  var aW = 0;
  function lW() {
    iW.isTouch || (iW.isTouch = true, window.performance && document.addEventListener("mousemove", uW));
  }
  function uW() {
    var e27 = performance.now();
    e27 - aW < 20 && (iW.isTouch = false, document.removeEventListener("mousemove", uW)), aW = e27;
  }
  function sW() {
    var e27, t2 = document.activeElement;
    if ((e27 = t2) && e27._tippy && e27._tippy.reference === e27) {
      var r2 = t2._tippy;
      t2.blur && !r2.state.isVisible && t2.blur();
    }
  }
  var cW;
  var dW = !!("undefined" != typeof window && "undefined" != typeof document) && !!window.msCrypto;
  function fW(e27) {
    return [e27 + "() was called on a" + ("destroy" === e27 ? "n already-" : " ") + "destroyed instance. This is a no-op but", "indicates a potential memory leak."].join(" ");
  }
  function pW(e27) {
    return e27.replace(/[ \t]{2,}/g, " ").replace(/^[ \t]*/gm, "").trim();
  }
  function hW(e27) {
    return pW("\n  %ctippy.js\n\n  %c" + pW(e27) + "\n\n  %c\u{1F477}\u200D This is a development-only message. It will be removed in production.\n  ");
  }
  function gW(e27) {
    return [hW(e27), "color: #00C584; font-size: 1.3em; font-weight: bold;", "line-height: 1.5", "color: #a6a095;"];
  }
  function vW(e27, t2) {
    var r2;
    e27 && !cW.has(t2) && (cW.add(t2), (r2 = console).warn.apply(r2, gW(t2)));
  }
  function mW(e27, t2) {
    var r2;
    e27 && !cW.has(t2) && (cW.add(t2), (r2 = console).error.apply(r2, gW(t2)));
  }
  cW = /* @__PURE__ */ new Set();
  var yW = { animateFill: false, followCursor: false, inlinePositioning: false, sticky: false };
  var bW = Object.assign({ appendTo: WV, aria: { content: "auto", expanded: "auto" }, delay: 0, duration: [300, 250], getReferenceClientRect: null, hideOnClick: true, ignoreAttributes: false, interactive: false, interactiveBorder: 2, interactiveDebounce: 0, moveTransition: "", offset: [0, 10], onAfterUpdate: function() {
  }, onBeforeUpdate: function() {
  }, onCreate: function() {
  }, onDestroy: function() {
  }, onHidden: function() {
  }, onHide: function() {
  }, onMount: function() {
  }, onShow: function() {
  }, onShown: function() {
  }, onTrigger: function() {
  }, onUntrigger: function() {
  }, onClickOutside: function() {
  }, placement: "top", plugins: [], popperOptions: {}, render: null, showOnCreate: false, touch: true, trigger: "mouseenter focus", triggerTarget: null }, yW, { allowHTML: false, animation: "fade", arrow: true, content: "", inertia: false, maxWidth: 350, role: "tooltip", theme: "", zIndex: 9999 });
  var CW = Object.keys(bW);
  function xW(e27) {
    var t2 = (e27.plugins || []).reduce(function(t3, r2) {
      var n2, o2 = r2.name, i2 = r2.defaultValue;
      o2 && (t3[o2] = void 0 !== e27[o2] ? e27[o2] : null != (n2 = bW[o2]) ? n2 : i2);
      return t3;
    }, {});
    return Object.assign({}, e27, t2);
  }
  function wW(e27, t2) {
    var r2 = Object.assign({}, t2, { content: qV(t2.content, [e27]) }, t2.ignoreAttributes ? {} : function(e28, t3) {
      return (t3 ? Object.keys(xW(Object.assign({}, bW, { plugins: t3 }))) : CW).reduce(function(t4, r3) {
        var n2 = (e28.getAttribute("data-tippy-" + r3) || "").trim();
        if (!n2)
          return t4;
        if ("content" === r3)
          t4[r3] = n2;
        else
          try {
            t4[r3] = JSON.parse(n2);
          } catch (e29) {
            t4[r3] = n2;
          }
        return t4;
      }, {});
    }(e27, t2.plugins));
    return r2.aria = Object.assign({}, bW.aria, r2.aria), r2.aria = { expanded: "auto" === r2.aria.expanded ? t2.interactive : r2.aria.expanded, content: "auto" === r2.aria.content ? t2.interactive ? null : "describedby" : r2.aria.content }, r2;
  }
  function kW(e27, t2) {
    void 0 === e27 && (e27 = {}), void 0 === t2 && (t2 = []), Object.keys(e27).forEach(function(e28) {
      var r2 = function(e29, t3) {
        var r3 = Object.assign({}, e29);
        return t3.forEach(function(e30) {
          delete r3[e30];
        }), r3;
      }(bW, Object.keys(yW)), n2 = !function(e29, t3) {
        return {}.hasOwnProperty.call(e29, t3);
      }(r2, e28);
      n2 && (n2 = 0 === t2.filter(function(t3) {
        return t3.name === e28;
      }).length), vW(n2, ["`" + e28 + "`", "is not a valid prop. You may have spelled it incorrectly, or if it's", "a plugin, forgot to pass it in an array as props.plugins.", "\n\n", "All props: https://atomiks.github.io/tippyjs/v6/all-props/\n", "Plugins: https://atomiks.github.io/tippyjs/v6/plugins/"].join(" "));
    });
  }
  function SW(e27, t2) {
    e27.innerHTML = t2;
  }
  function EW(e27) {
    var t2 = ZV();
    return true === e27 ? t2.className = "tippy-arrow" : (t2.className = "tippy-svg-arrow", JV(e27) ? t2.appendChild(e27) : SW(t2, e27)), t2;
  }
  function TW(e27, t2) {
    JV(t2.content) ? (SW(e27, ""), e27.appendChild(t2.content)) : "function" != typeof t2.content && (t2.allowHTML ? SW(e27, t2.content) : e27.textContent = t2.content);
  }
  function RW(e27) {
    var t2 = e27.firstElementChild, r2 = QV(t2.children);
    return { box: t2, content: r2.find(function(e28) {
      return e28.classList.contains("tippy-content");
    }), arrow: r2.find(function(e28) {
      return e28.classList.contains("tippy-arrow") || e28.classList.contains("tippy-svg-arrow");
    }), backdrop: r2.find(function(e28) {
      return e28.classList.contains("tippy-backdrop");
    }) };
  }
  function OW(e27) {
    var t2 = ZV(), r2 = ZV();
    r2.className = "tippy-box", r2.setAttribute("data-state", "hidden"), r2.setAttribute("tabindex", "-1");
    var n2 = ZV();
    function o2(r3, n3) {
      var o3 = RW(t2), i2 = o3.box, a2 = o3.content, l2 = o3.arrow;
      n3.theme ? i2.setAttribute("data-theme", n3.theme) : i2.removeAttribute("data-theme"), "string" == typeof n3.animation ? i2.setAttribute("data-animation", n3.animation) : i2.removeAttribute("data-animation"), n3.inertia ? i2.setAttribute("data-inertia", "") : i2.removeAttribute("data-inertia"), i2.style.maxWidth = "number" == typeof n3.maxWidth ? n3.maxWidth + "px" : n3.maxWidth, n3.role ? i2.setAttribute("role", n3.role) : i2.removeAttribute("role"), r3.content === n3.content && r3.allowHTML === n3.allowHTML || TW(a2, e27.props), n3.arrow ? l2 ? r3.arrow !== n3.arrow && (i2.removeChild(l2), i2.appendChild(EW(n3.arrow))) : i2.appendChild(EW(n3.arrow)) : l2 && i2.removeChild(l2);
    }
    return n2.className = "tippy-content", n2.setAttribute("data-state", "hidden"), TW(n2, e27.props), t2.appendChild(r2), r2.appendChild(n2), o2(e27.props, e27.props), { popper: t2, onUpdate: o2 };
  }
  OW.$$tippy = true;
  var _W = 1;
  var PW = [];
  var MW = [];
  function BW(e27, t2) {
    var r2, n2, o2, i2, a2, l2, u2, s2, c2 = wW(e27, Object.assign({}, bW, xW(KV(t2)))), d2 = false, f2 = false, p2 = false, h2 = false, g2 = [], v2 = YV(Y2, c2.interactiveDebounce), m2 = _W++, y2 = (s2 = c2.plugins).filter(function(e28, t3) {
      return s2.indexOf(e28) === t3;
    }), b2 = { id: m2, reference: e27, popper: ZV(), popperInstance: null, props: c2, state: { isEnabled: true, isVisible: false, isDestroyed: false, isMounted: false, isShown: false }, plugins: y2, clearDelayTimeouts: function() {
      clearTimeout(r2), clearTimeout(n2), cancelAnimationFrame(o2);
    }, setProps: function(t3) {
      vW(b2.state.isDestroyed, fW("setProps"));
      if (b2.state.isDestroyed)
        return;
      A2("onBeforeUpdate", [b2, t3]), $2();
      var r3 = b2.props, n3 = wW(e27, Object.assign({}, r3, KV(t3), { ignoreAttributes: true }));
      b2.props = n3, H2(), r3.interactiveDebounce !== n3.interactiveDebounce && (D2(), v2 = YV(Y2, n3.interactiveDebounce));
      r3.triggerTarget && !n3.triggerTarget ? GV(r3.triggerTarget).forEach(function(e28) {
        e28.removeAttribute("aria-expanded");
      }) : n3.triggerTarget && e27.removeAttribute("aria-expanded");
      j2(), B2(), w2 && w2(r3, n3);
      b2.popperInstance && (K2(), J2().forEach(function(e28) {
        requestAnimationFrame(e28._tippy.popperInstance.forceUpdate);
      }));
      A2("onAfterUpdate", [b2, t3]);
    }, setContent: function(e28) {
      b2.setProps({ content: e28 });
    }, show: function() {
      vW(b2.state.isDestroyed, fW("show"));
      var e28 = b2.state.isVisible, t3 = b2.state.isDestroyed, r3 = !b2.state.isEnabled, n3 = iW.isTouch && !b2.props.touch, o3 = HV(b2.props.duration, 0, bW.duration);
      if (e28 || t3 || r3 || n3)
        return;
      if (O2().hasAttribute("disabled"))
        return;
      if (A2("onShow", [b2], false), false === b2.props.onShow(b2))
        return;
      b2.state.isVisible = true, R2() && (x2.style.visibility = "visible");
      B2(), F2(), b2.state.isMounted || (x2.style.transition = "none");
      if (R2()) {
        var i3 = P2(), a3 = i3.box, u3 = i3.content;
        tW([a3, u3], 0);
      }
      l2 = function() {
        var e29;
        if (b2.state.isVisible && !h2) {
          if (h2 = true, x2.offsetHeight, x2.style.transition = b2.props.moveTransition, R2() && b2.props.animation) {
            var t4 = P2(), r4 = t4.box, n4 = t4.content;
            tW([r4, n4], o3), rW([r4, n4], "visible");
          }
          N2(), j2(), XV(MW, b2), null == (e29 = b2.popperInstance) || e29.forceUpdate(), A2("onMount", [b2]), b2.props.animation && R2() && function(e30, t5) {
            V2(e30, t5);
          }(o3, function() {
            b2.state.isShown = true, A2("onShown", [b2]);
          });
        }
      }, function() {
        var e29, t4 = b2.props.appendTo, r4 = O2();
        e29 = b2.props.interactive && t4 === WV || "parent" === t4 ? r4.parentNode : qV(t4, [r4]);
        e29.contains(x2) || e29.appendChild(x2);
        b2.state.isMounted = true, K2(), vW(b2.props.interactive && t4 === bW.appendTo && r4.nextElementSibling !== x2, ["Interactive tippy element may not be accessible via keyboard", "navigation because it is not directly after the reference element", "in the DOM source order.", "\n\n", "Using a wrapper <div> or <span> tag around the reference element", "solves this by creating a new parentNode context.", "\n\n", "Specifying `appendTo: document.body` silences this warning, but it", "assumes you are using a focus management solution to handle", "keyboard navigation.", "\n\n", "See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity"].join(" "));
      }();
    }, hide: function() {
      vW(b2.state.isDestroyed, fW("hide"));
      var e28 = !b2.state.isVisible, t3 = b2.state.isDestroyed, r3 = !b2.state.isEnabled, n3 = HV(b2.props.duration, 1, bW.duration);
      if (e28 || t3 || r3)
        return;
      if (A2("onHide", [b2], false), false === b2.props.onHide(b2))
        return;
      b2.state.isVisible = false, b2.state.isShown = false, h2 = false, d2 = false, R2() && (x2.style.visibility = "hidden");
      if (D2(), U2(), B2(true), R2()) {
        var o3 = P2(), i3 = o3.box, a3 = o3.content;
        b2.props.animation && (tW([i3, a3], n3), rW([i3, a3], "hidden"));
      }
      N2(), j2(), b2.props.animation ? R2() && function(e29, t4) {
        V2(e29, function() {
          !b2.state.isVisible && x2.parentNode && x2.parentNode.contains(x2) && t4();
        });
      }(n3, b2.unmount) : b2.unmount();
    }, hideWithInteractivity: function(e28) {
      vW(b2.state.isDestroyed, fW("hideWithInteractivity"));
      _2().addEventListener("mousemove", v2), XV(PW, v2), v2(e28);
    }, enable: function() {
      b2.state.isEnabled = true;
    }, disable: function() {
      b2.hide(), b2.state.isEnabled = false;
    }, unmount: function() {
      vW(b2.state.isDestroyed, fW("unmount"));
      b2.state.isVisible && b2.hide();
      if (!b2.state.isMounted)
        return;
      Z2(), J2().forEach(function(e28) {
        e28._tippy.unmount();
      }), x2.parentNode && x2.parentNode.removeChild(x2);
      MW = MW.filter(function(e28) {
        return e28 !== b2;
      }), b2.state.isMounted = false, A2("onHidden", [b2]);
    }, destroy: function() {
      vW(b2.state.isDestroyed, fW("destroy"));
      if (b2.state.isDestroyed)
        return;
      b2.clearDelayTimeouts(), b2.unmount(), $2(), delete e27._tippy, b2.state.isDestroyed = true, A2("onDestroy", [b2]);
    } };
    if (!c2.render)
      return mW(true, "render() function has not been supplied."), b2;
    var C2 = c2.render(b2), x2 = C2.popper, w2 = C2.onUpdate;
    x2.setAttribute("data-tippy-root", ""), x2.id = "tippy-" + b2.id, b2.popper = x2, e27._tippy = b2, x2._tippy = b2;
    var k2 = y2.map(function(e28) {
      return e28.fn(b2);
    }), S2 = e27.hasAttribute("aria-expanded");
    return H2(), j2(), B2(), A2("onCreate", [b2]), c2.showOnCreate && ee2(), x2.addEventListener("mouseenter", function() {
      b2.props.interactive && b2.state.isVisible && b2.clearDelayTimeouts();
    }), x2.addEventListener("mouseleave", function() {
      b2.props.interactive && b2.props.trigger.indexOf("mouseenter") >= 0 && _2().addEventListener("mousemove", v2);
    }), b2;
    function E2() {
      var e28 = b2.props.touch;
      return Array.isArray(e28) ? e28 : [e28, 0];
    }
    function T2() {
      return "hold" === E2()[0];
    }
    function R2() {
      var e28;
      return !(null == (e28 = b2.props.render) || !e28.$$tippy);
    }
    function O2() {
      return u2 || e27;
    }
    function _2() {
      var e28, t3, r3 = O2().parentNode;
      return r3 ? null != (t3 = GV(r3)[0]) && null != (e28 = t3.ownerDocument) && e28.body ? t3.ownerDocument : document : document;
    }
    function P2() {
      return RW(x2);
    }
    function M2(e28) {
      return b2.state.isMounted && !b2.state.isVisible || iW.isTouch || i2 && "focus" === i2.type ? 0 : HV(b2.props.delay, e28 ? 0 : 1, bW.delay);
    }
    function B2(e28) {
      void 0 === e28 && (e28 = false), x2.style.pointerEvents = b2.props.interactive && !e28 ? "" : "none", x2.style.zIndex = "" + b2.props.zIndex;
    }
    function A2(e28, t3, r3) {
      var n3;
      (void 0 === r3 && (r3 = true), k2.forEach(function(r4) {
        r4[e28] && r4[e28].apply(r4, t3);
      }), r3) && (n3 = b2.props)[e28].apply(n3, t3);
    }
    function N2() {
      var t3 = b2.props.aria;
      if (t3.content) {
        var r3 = "aria-" + t3.content, n3 = x2.id;
        GV(b2.props.triggerTarget || e27).forEach(function(e28) {
          var t4 = e28.getAttribute(r3);
          if (b2.state.isVisible)
            e28.setAttribute(r3, t4 ? t4 + " " + n3 : n3);
          else {
            var o3 = t4 && t4.replace(n3, "").trim();
            o3 ? e28.setAttribute(r3, o3) : e28.removeAttribute(r3);
          }
        });
      }
    }
    function j2() {
      !S2 && b2.props.aria.expanded && GV(b2.props.triggerTarget || e27).forEach(function(e28) {
        b2.props.interactive ? e28.setAttribute("aria-expanded", b2.state.isVisible && e28 === O2() ? "true" : "false") : e28.removeAttribute("aria-expanded");
      });
    }
    function D2() {
      _2().removeEventListener("mousemove", v2), PW = PW.filter(function(e28) {
        return e28 !== v2;
      });
    }
    function L2(t3) {
      if (!iW.isTouch || !p2 && "mousedown" !== t3.type) {
        var r3 = t3.composedPath && t3.composedPath()[0] || t3.target;
        if (!b2.props.interactive || !oW(x2, r3)) {
          if (GV(b2.props.triggerTarget || e27).some(function(e28) {
            return oW(e28, r3);
          })) {
            if (iW.isTouch)
              return;
            if (b2.state.isVisible && b2.props.trigger.indexOf("click") >= 0)
              return;
          } else
            A2("onClickOutside", [b2, t3]);
          true === b2.props.hideOnClick && (b2.clearDelayTimeouts(), b2.hide(), f2 = true, setTimeout(function() {
            f2 = false;
          }), b2.state.isMounted || U2());
        }
      }
    }
    function I2() {
      p2 = true;
    }
    function z2() {
      p2 = false;
    }
    function F2() {
      var e28 = _2();
      e28.addEventListener("mousedown", L2, true), e28.addEventListener("touchend", L2, VV), e28.addEventListener("touchstart", z2, VV), e28.addEventListener("touchmove", I2, VV);
    }
    function U2() {
      var e28 = _2();
      e28.removeEventListener("mousedown", L2, true), e28.removeEventListener("touchend", L2, VV), e28.removeEventListener("touchstart", z2, VV), e28.removeEventListener("touchmove", I2, VV);
    }
    function V2(e28, t3) {
      var r3 = P2().box;
      function n3(e29) {
        e29.target === r3 && (nW(r3, "remove", n3), t3());
      }
      if (0 === e28)
        return t3();
      nW(r3, "remove", a2), nW(r3, "add", n3), a2 = n3;
    }
    function W2(t3, r3, n3) {
      void 0 === n3 && (n3 = false), GV(b2.props.triggerTarget || e27).forEach(function(e28) {
        e28.addEventListener(t3, r3, n3), g2.push({ node: e28, eventType: t3, handler: r3, options: n3 });
      });
    }
    function H2() {
      var e28;
      T2() && (W2("touchstart", q2, { passive: true }), W2("touchend", G2, { passive: true })), (e28 = b2.props.trigger, e28.split(/\s+/).filter(Boolean)).forEach(function(e29) {
        if ("manual" !== e29)
          switch (W2(e29, q2), e29) {
            case "mouseenter":
              W2("mouseleave", G2);
              break;
            case "focus":
              W2(dW ? "focusout" : "blur", X2);
              break;
            case "focusin":
              W2("focusout", X2);
          }
      });
    }
    function $2() {
      g2.forEach(function(e28) {
        var t3 = e28.node, r3 = e28.eventType, n3 = e28.handler, o3 = e28.options;
        t3.removeEventListener(r3, n3, o3);
      }), g2 = [];
    }
    function q2(e28) {
      var t3, r3 = false;
      if (b2.state.isEnabled && !Q2(e28) && !f2) {
        var n3 = "focus" === (null == (t3 = i2) ? void 0 : t3.type);
        i2 = e28, u2 = e28.currentTarget, j2(), !b2.state.isVisible && $V(e28, "MouseEvent") && PW.forEach(function(t4) {
          return t4(e28);
        }), "click" === e28.type && (b2.props.trigger.indexOf("mouseenter") < 0 || d2) && false !== b2.props.hideOnClick && b2.state.isVisible ? r3 = true : ee2(e28), "click" === e28.type && (d2 = !r3), r3 && !n3 && te2(e28);
      }
    }
    function Y2(e28) {
      var t3 = e28.target, r3 = O2().contains(t3) || x2.contains(t3);
      if ("mousemove" !== e28.type || !r3) {
        var n3 = J2().concat(x2).map(function(e29) {
          var t4, r4 = null == (t4 = e29._tippy.popperInstance) ? void 0 : t4.state;
          return r4 ? { popperRect: e29.getBoundingClientRect(), popperState: r4, props: c2 } : null;
        }).filter(Boolean);
        (function(e29, t4) {
          var r4 = t4.clientX, n4 = t4.clientY;
          return e29.every(function(e30) {
            var t5 = e30.popperRect, o3 = e30.popperState, i3 = e30.props.interactiveBorder, a3 = o3.placement.split("-")[0], l3 = o3.modifiersData.offset;
            if (!l3)
              return true;
            var u3 = "bottom" === a3 ? l3.top.y : 0, s3 = "top" === a3 ? l3.bottom.y : 0, c3 = "right" === a3 ? l3.left.x : 0, d3 = "left" === a3 ? l3.right.x : 0, f3 = t5.top - n4 + u3 > i3, p3 = n4 - t5.bottom - s3 > i3, h3 = t5.left - r4 + c3 > i3, g3 = r4 - t5.right - d3 > i3;
            return f3 || p3 || h3 || g3;
          });
        })(n3, e28) && (D2(), te2(e28));
      }
    }
    function G2(e28) {
      Q2(e28) || b2.props.trigger.indexOf("click") >= 0 && d2 || (b2.props.interactive ? b2.hideWithInteractivity(e28) : te2(e28));
    }
    function X2(e28) {
      b2.props.trigger.indexOf("focusin") < 0 && e28.target !== O2() || b2.props.interactive && e28.relatedTarget && x2.contains(e28.relatedTarget) || te2(e28);
    }
    function Q2(e28) {
      return !!iW.isTouch && T2() !== e28.type.indexOf("touch") >= 0;
    }
    function K2() {
      Z2();
      var t3 = b2.props, r3 = t3.popperOptions, n3 = t3.placement, o3 = t3.offset, i3 = t3.getReferenceClientRect, a3 = t3.moveTransition, u3 = R2() ? RW(x2).arrow : null, s3 = i3 ? { getBoundingClientRect: i3, contextElement: i3.contextElement || O2() } : e27, c3 = { name: "$$tippy", enabled: true, phase: "beforeWrite", requires: ["computeStyles"], fn: function(e28) {
        var t4 = e28.state;
        if (R2()) {
          var r4 = P2().box;
          ["placement", "reference-hidden", "escaped"].forEach(function(e29) {
            "placement" === e29 ? r4.setAttribute("data-placement", t4.placement) : t4.attributes.popper["data-popper-" + e29] ? r4.setAttribute("data-" + e29, "") : r4.removeAttribute("data-" + e29);
          }), t4.attributes.popper = {};
        }
      } }, d3 = [{ name: "offset", options: { offset: o3 } }, { name: "preventOverflow", options: { padding: { top: 2, bottom: 2, left: 5, right: 5 } } }, { name: "flip", options: { padding: 5 } }, { name: "computeStyles", options: { adaptive: !a3 } }, c3];
      R2() && u3 && d3.push({ name: "arrow", options: { element: u3, padding: 3 } }), d3.push.apply(d3, (null == r3 ? void 0 : r3.modifiers) || []), b2.popperInstance = UV(s3, x2, Object.assign({}, r3, { placement: n3, onFirstUpdate: l2, modifiers: d3 }));
    }
    function Z2() {
      b2.popperInstance && (b2.popperInstance.destroy(), b2.popperInstance = null);
    }
    function J2() {
      return QV(x2.querySelectorAll("[data-tippy-root]"));
    }
    function ee2(e28) {
      b2.clearDelayTimeouts(), e28 && A2("onTrigger", [b2, e28]), F2();
      var t3 = M2(true), n3 = E2(), o3 = n3[0], i3 = n3[1];
      iW.isTouch && "hold" === o3 && i3 && (t3 = i3), t3 ? r2 = setTimeout(function() {
        b2.show();
      }, t3) : b2.show();
    }
    function te2(e28) {
      if (b2.clearDelayTimeouts(), A2("onUntrigger", [b2, e28]), b2.state.isVisible) {
        if (!(b2.props.trigger.indexOf("mouseenter") >= 0 && b2.props.trigger.indexOf("click") >= 0 && ["mouseleave", "mousemove"].indexOf(e28.type) >= 0 && d2)) {
          var t3 = M2(false);
          t3 ? n2 = setTimeout(function() {
            b2.state.isVisible && b2.hide();
          }, t3) : o2 = requestAnimationFrame(function() {
            b2.hide();
          });
        }
      } else
        U2();
    }
  }
  function AW(e27, t2) {
    void 0 === t2 && (t2 = {});
    var r2 = bW.plugins.concat(t2.plugins || []);
    !function(e28) {
      var t3 = !e28, r3 = "[object Object]" === Object.prototype.toString.call(e28) && !e28.addEventListener;
      mW(t3, ["tippy() was passed", "`" + String(e28) + "`", "as its targets (first) argument. Valid types are: String, Element,", "Element[], or NodeList."].join(" ")), mW(r3, ["tippy() was passed a plain object which is not supported as an argument", "for virtual positioning. Use props.getReferenceClientRect instead."].join(" "));
    }(e27), kW(t2, r2), document.addEventListener("touchstart", lW, VV), window.addEventListener("blur", sW);
    var n2 = Object.assign({}, t2, { plugins: r2 }), o2 = eW(e27);
    if (true) {
      var i2 = JV(n2.content), a2 = o2.length > 1;
      vW(i2 && a2, ["tippy() was passed an Element as the `content` prop, but more than", "one tippy instance was created by this invocation. This means the", "content element will only be appended to the last tippy instance.", "\n\n", "Instead, pass the .innerHTML of the element, or use a function that", "returns a cloned version of the element instead.", "\n\n", "1) content: element.innerHTML\n", "2) content: () => element.cloneNode(true)"].join(" "));
    }
    var l2 = o2.reduce(function(e28, t3) {
      var r3 = t3 && BW(t3, n2);
      return r3 && e28.push(r3), e28;
    }, []);
    return JV(e27) ? l2[0] : l2;
  }
  function NW(e27, t2) {
    if (null == e27)
      return {};
    var r2, n2, o2 = {}, i2 = Object.keys(e27);
    for (n2 = 0; n2 < i2.length; n2++)
      r2 = i2[n2], t2.indexOf(r2) >= 0 || (o2[r2] = e27[r2]);
    return o2;
  }
  AW.defaultProps = bW, AW.setDefaultProps = function(e27) {
    kW(e27, []), Object.keys(e27).forEach(function(t2) {
      bW[t2] = e27[t2];
    });
  }, AW.currentInput = iW, Object.assign({}, VU, { effect: function(e27) {
    var t2 = e27.state, r2 = { popper: { position: t2.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
    Object.assign(t2.elements.popper.style, r2.popper), t2.styles = r2, t2.elements.arrow && Object.assign(t2.elements.arrow.style, r2.arrow);
  } }), AW.setDefaultProps({ render: OW });
  var jW = "undefined" != typeof window && "undefined" != typeof document;
  function DW(e27, t2) {
    e27 && ("function" == typeof e27 && e27(t2), {}.hasOwnProperty.call(e27, "current") && (e27.current = t2));
  }
  function LW() {
    return jW && document.createElement("div");
  }
  function IW(e27, t2) {
    if (e27 === t2)
      return true;
    if ("object" == typeof e27 && null != e27 && "object" == typeof t2 && null != t2) {
      if (Object.keys(e27).length !== Object.keys(t2).length)
        return false;
      for (var r2 in e27) {
        if (!t2.hasOwnProperty(r2))
          return false;
        if (!IW(e27[r2], t2[r2]))
          return false;
      }
      return true;
    }
    return false;
  }
  function zW(e27) {
    var t2 = [];
    return e27.forEach(function(e28) {
      t2.find(function(t3) {
        return IW(e28, t3);
      }) || t2.push(e28);
    }), t2;
  }
  var FW = jW ? import_react.useLayoutEffect : import_react.useEffect;
  function UW(e27, t2, r2) {
    r2.split(/\s+/).forEach(function(r3) {
      r3 && e27.classList[t2](r3);
    });
  }
  var VW = { name: "className", defaultValue: "", fn: function(e27) {
    var t2 = e27.popper.firstElementChild, r2 = function() {
      var t3;
      return !!(null == (t3 = e27.props.render) ? void 0 : t3.$$tippy);
    };
    function n2() {
      !e27.props.className || r2() ? UW(t2, "add", e27.props.className) : console.warn(["@tippyjs/react: Cannot use `className` prop in conjunction with", "`render` prop. Place the className on the element you are", "rendering."].join(" "));
    }
    return { onCreate: n2, onBeforeUpdate: function() {
      r2() && UW(t2, "remove", e27.props.className);
    }, onAfterUpdate: n2 };
  } };
  function WW(e27) {
    return function(r2) {
      var n2 = r2.children, o2 = r2.content, a2 = r2.visible, l2 = r2.singleton, c2 = r2.render, d2 = r2.reference, f2 = r2.disabled, p2 = void 0 !== f2 && f2, h2 = r2.ignoreAttributes, g2 = void 0 === h2 || h2;
      r2.__source, r2.__self;
      var v2, m2, y2 = NW(r2, ["children", "content", "visible", "singleton", "render", "reference", "disabled", "ignoreAttributes", "__source", "__self"]), b2 = void 0 !== a2, C2 = void 0 !== l2, x2 = (0, import_react.useState)(false), w2 = x2[0], k2 = x2[1], S2 = (0, import_react.useState)({}), E2 = S2[0], T2 = S2[1], R2 = (0, import_react.useState)(), O2 = R2[0], _2 = R2[1], P2 = (v2 = function() {
        return { container: LW(), renders: 1 };
      }, (m2 = (0, import_react.useRef)()).current || (m2.current = "function" == typeof v2 ? v2() : v2), m2.current), M2 = Object.assign({ ignoreAttributes: g2 }, y2, { content: P2.container });
      b2 && (["trigger", "hideOnClick", "showOnCreate"].forEach(function(e28) {
        void 0 !== M2[e28] && console.warn(["@tippyjs/react: Cannot specify `" + e28 + "` prop in", "controlled mode (`visible` prop)"].join(" "));
      }), M2.trigger = "manual", M2.hideOnClick = false), C2 && (p2 = true);
      var B2 = M2, A2 = M2.plugins || [];
      c2 && (B2 = Object.assign({}, M2, { plugins: C2 && null != l2.data ? [].concat(A2, [{ fn: function() {
        return { onTrigger: function(e28, t2) {
          var r3 = l2.data.children.find(function(e29) {
            return e29.instance.reference === t2.currentTarget;
          });
          e28.state.$$activeSingletonInstance = r3.instance, _2(r3.content);
        } };
      } }]) : A2, render: function() {
        return { popper: P2.container };
      } }));
      var N2 = [d2].concat(n2 ? [n2.type] : []);
      return FW(function() {
        var t2 = d2;
        d2 && d2.hasOwnProperty("current") && (t2 = d2.current);
        var r3 = e27(t2 || P2.ref || LW(), Object.assign({}, B2, { plugins: [VW].concat(M2.plugins || []) }));
        return P2.instance = r3, p2 && r3.disable(), a2 && r3.show(), C2 && l2.hook({ instance: r3, content: o2, props: B2, setSingletonContent: _2 }), k2(true), function() {
          r3.destroy(), null == l2 || l2.cleanup(r3);
        };
      }, N2), FW(function() {
        var e28;
        if (1 !== P2.renders) {
          var t2, r3, n3, i2, u2 = P2.instance;
          u2.setProps((t2 = u2.props, r3 = B2, Object.assign({}, r3, { popperOptions: Object.assign({}, t2.popperOptions, r3.popperOptions, { modifiers: zW([].concat((null == (n3 = t2.popperOptions) ? void 0 : n3.modifiers) || [], (null == (i2 = r3.popperOptions) ? void 0 : i2.modifiers) || [])) }) }))), null == (e28 = u2.popperInstance) || e28.forceUpdate(), p2 ? u2.disable() : u2.enable(), b2 && (a2 ? u2.show() : u2.hide()), C2 && l2.hook({ instance: u2, content: o2, props: B2, setSingletonContent: _2 });
        } else
          P2.renders++;
      }), FW(function() {
        var e28;
        if (c2) {
          var t2 = P2.instance;
          t2.setProps({ popperOptions: Object.assign({}, t2.props.popperOptions, { modifiers: [].concat(((null == (e28 = t2.props.popperOptions) ? void 0 : e28.modifiers) || []).filter(function(e29) {
            return "$$tippyReact" !== e29.name;
          }), [{ name: "$$tippyReact", enabled: true, phase: "beforeWrite", requires: ["computeStyles"], fn: function(e29) {
            var t3, r3 = e29.state, n3 = null == (t3 = r3.modifiersData) ? void 0 : t3.hide;
            E2.placement === r3.placement && E2.referenceHidden === (null == n3 ? void 0 : n3.isReferenceHidden) && E2.escaped === (null == n3 ? void 0 : n3.hasPopperEscaped) || T2({ placement: r3.placement, referenceHidden: null == n3 ? void 0 : n3.isReferenceHidden, escaped: null == n3 ? void 0 : n3.hasPopperEscaped }), r3.attributes.popper = {};
          } }]) }) });
        }
      }, [E2.placement, E2.referenceHidden, E2.escaped].concat(N2)), import_react.default.createElement(import_react.default.Fragment, null, n2 ? (0, import_react.cloneElement)(n2, { ref: function(e28) {
        P2.ref = e28, DW(n2.ref, e28);
      } }) : null, w2 && Rc.exports.createPortal(c2 ? c2(function(e28) {
        var t2 = { "data-placement": e28.placement };
        return e28.referenceHidden && (t2["data-reference-hidden"] = ""), e28.escaped && (t2["data-escaped"] = ""), t2;
      }(E2), O2, P2.instance) : o2, P2.container));
    };
  }
  var HW = function(e27, r2) {
    return (0, import_react.forwardRef)(function(n2, o2) {
      var a2 = n2.children, l2 = NW(n2, ["children"]);
      return import_react.default.createElement(e27, Object.assign({}, r2, l2), a2 ? (0, import_react.cloneElement)(a2, { ref: function(e28) {
        DW(o2, e28), DW(a2.ref, e28);
      } }) : null);
    });
  };
  var $W = HW(WW(AW));
  var qW = { xs: { paddingLeft: HF.paddingLeft, paddingRight: HF.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: QF }, sm: { paddingLeft: $F.paddingLeft, paddingRight: $F.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: KF }, md: { paddingLeft: qF.paddingLeft, paddingRight: qF.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: ZF }, lg: { paddingLeft: YF.paddingLeft, paddingRight: YF.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: JF }, xl: { paddingLeft: GF.paddingLeft, paddingRight: GF.paddingRight, paddingTop: VF.paddingTop, paddingBottom: VF.paddingBottom, fontSize: eU } };
  var YW = { xs: { height: NF.height, width: NF.width }, sm: { height: NF.height, width: NF.width }, md: { height: NF.height, width: NF.width }, lg: { height: jF.height, width: jF.width }, xl: { height: DF.height, width: DF.width } };
  function XW(e27, t2) {
    var r2 = {};
    for (var n2 in e27)
      Object.prototype.hasOwnProperty.call(e27, n2) && t2.indexOf(n2) < 0 && (r2[n2] = e27[n2]);
    if (null != e27 && "function" == typeof Object.getOwnPropertySymbols) {
      var o2 = 0;
      for (n2 = Object.getOwnPropertySymbols(e27); o2 < n2.length; o2++)
        t2.indexOf(n2[o2]) < 0 && Object.prototype.propertyIsEnumerable.call(e27, n2[o2]) && (r2[n2[o2]] = e27[n2[o2]]);
    }
    return r2;
  }
  var aH = { xs: { paddingLeft: HF.paddingLeft, paddingRight: HF.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: QF }, sm: { paddingLeft: $F.paddingLeft, paddingRight: $F.paddingRight, paddingTop: VF.paddingTop, paddingBottom: VF.paddingBottom, fontSize: KF }, md: { paddingLeft: qF.paddingLeft, paddingRight: qF.paddingRight, paddingTop: WF.paddingTop, paddingBottom: WF.paddingBottom, fontSize: ZF }, lg: { paddingLeft: YF.paddingLeft, paddingRight: YF.paddingRight, paddingTop: WF.paddingTop, paddingBottom: WF.paddingBottom, fontSize: JF }, xl: { paddingLeft: YF.paddingLeft, paddingRight: YF.paddingRight, paddingTop: WF.paddingTop, paddingBottom: WF.paddingBottom, fontSize: eU } };
  var lH = { xs: { paddingLeft: HF.paddingLeft, paddingRight: HF.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: QF }, sm: { paddingLeft: $F.paddingLeft, paddingRight: $F.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: KF }, md: { paddingLeft: qF.paddingLeft, paddingRight: qF.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: ZF }, lg: { paddingLeft: YF.paddingLeft, paddingRight: YF.paddingRight, paddingTop: UF.paddingTop, paddingBottom: UF.paddingBottom, fontSize: JF }, xl: { paddingLeft: GF.paddingLeft, paddingRight: GF.paddingRight, paddingTop: VF.paddingTop, paddingBottom: VF.paddingBottom, fontSize: eU } };
  var uH = { xs: { height: NF.height, width: NF.width }, sm: { height: NF.height, width: NF.width }, md: { height: NF.height, width: NF.width }, lg: { height: jF.height, width: jF.width }, xl: { height: DF.height, width: DF.width } };
  var sH = { [Az.Increase]: { bgColor: aF(aU(Nz.Emerald).lightBackground).bgColor, textColor: aF(aU(Nz.Emerald).darkText).textColor }, [Az.ModerateIncrease]: { bgColor: aF(aU(Nz.Emerald).lightBackground).bgColor, textColor: aF(aU(Nz.Emerald).darkText).textColor }, [Az.Decrease]: { bgColor: aF(aU(Nz.Rose).lightBackground).bgColor, textColor: aF(aU(Nz.Rose).darkText).textColor }, [Az.ModerateDecrease]: { bgColor: aF(aU(Nz.Rose).lightBackground).bgColor, textColor: aF(aU(Nz.Rose).darkText).textColor }, [Az.Unchanged]: { bgColor: aF(aU(Nz.Orange).lightBackground).bgColor, textColor: aF(aU(Nz.Orange).darkText).textColor } };
  var cH = { [Az.Increase]: (e27) => {
    var r2 = XW(e27, []);
    return import_react.default.createElement("svg", Object.assign({}, r2, { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: "24", height: "24" }), import_react.default.createElement("path", { fill: "none", d: "M0 0h24v24H0z" }), import_react.default.createElement("path", { fill: "currentColor", d: "M13 7.828V20h-2V7.828l-5.364 5.364-1.414-1.414L12 4l7.778 7.778-1.414 1.414L13 7.828z" }));
  }, [Az.ModerateIncrease]: (e27) => {
    var r2 = XW(e27, []);
    return import_react.default.createElement("svg", Object.assign({}, r2, { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: "24", height: "24" }), import_react.default.createElement("path", { fill: "none", d: "M0 0h24v24H0z" }), import_react.default.createElement("path", { fill: "currentColor", d: "M16.004 9.414l-8.607 8.607-1.414-1.414L14.589 8H7.004V6h11v11h-2V9.414z" }));
  }, [Az.Decrease]: (e27) => {
    var r2 = XW(e27, []);
    return import_react.default.createElement("svg", Object.assign({}, r2, { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: "24", height: "24" }), import_react.default.createElement("path", { fill: "none", d: "M0 0h24v24H0z" }), import_react.default.createElement("path", { fill: "currentColor", d: "M13 16.172l5.364-5.364 1.414 1.414L12 20l-7.778-7.778 1.414-1.414L11 16.172V4h2v12.172z" }));
  }, [Az.ModerateDecrease]: (e27) => {
    var r2 = XW(e27, []);
    return import_react.default.createElement("svg", Object.assign({}, r2, { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: "24", height: "24" }), import_react.default.createElement("path", { fill: "none", d: "M0 0h24v24H0z" }), import_react.default.createElement("path", { fill: "currentColor", d: "M14.59 16.004L5.982 7.397l1.414-1.414 8.607 8.606V7.004h2v11h-11v-2z" }));
  }, [Az.Unchanged]: (e27) => {
    var r2 = XW(e27, []);
    return import_react.default.createElement("svg", Object.assign({}, r2, { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: "24", height: "24" }), import_react.default.createElement("path", { fill: "none", d: "M0 0h24v24H0z" }), import_react.default.createElement("path", { fill: "currentColor", d: "M16.172 11l-5.364-5.364 1.414-1.414L20 12l-7.778 7.778-1.414-1.414L16.172 13H4v-2z" }));
  } };
  var fH = { xs: { paddingLeft: WF.paddingLeft, paddingRight: WF.paddingRight, paddingTop: WF.paddingTop, paddingBottom: WF.paddingBottom }, sm: { paddingLeft: WF.paddingLeft, paddingRight: WF.paddingRight, paddingTop: WF.paddingTop, paddingBottom: WF.paddingBottom }, md: { paddingLeft: HF.paddingLeft, paddingRight: HF.paddingRight, paddingTop: HF.paddingTop, paddingBottom: HF.paddingBottom }, lg: { paddingLeft: HF.paddingLeft, paddingRight: HF.paddingRight, paddingTop: HF.paddingTop, paddingBottom: HF.paddingBottom }, xl: { paddingLeft: $F.paddingLeft, paddingRight: $F.paddingRight, paddingTop: $F.paddingTop, paddingBottom: $F.paddingBottom } };
  var pH = { xs: { height: AF.height, width: AF.width }, sm: { height: jF.height, width: jF.width }, md: { height: jF.height, width: jF.width }, lg: { height: LF.height, width: LF.width }, xl: { height: IF.height, width: IF.width } };
  var hH = { simple: { rounded: "", border: "", ring: "", shadow: "" }, light: { rounded: bF.all, border: "", ring: "", shadow: "" }, shadow: { rounded: bF.all, border: TF.all, ring: "", shadow: kF }, solid: { rounded: bF.all, border: RF.all, ring: "tr-ring-1", shadow: "" }, outlined: { rounded: bF.all, border: TF.all, ring: "tr-ring-2", shadow: "" } };
  var gH = { simple: { [Nz.Slate]: { textColor: aF(aU(Nz.Slate).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Gray]: { textColor: aF(aU(Nz.Gray).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Zinc]: { textColor: aF(aU(Nz.Zinc).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Neutral]: { textColor: aF(aU(Nz.Neutral).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Stone]: { textColor: aF(aU(Nz.Stone).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Red]: { textColor: aF(aU(Nz.Red).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Orange]: { textColor: aF(aU(Nz.Orange).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Amber]: { textColor: aF(aU(Nz.Amber).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Yellow]: { textColor: aF(aU(Nz.Yellow).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Lime]: { textColor: aF(aU(Nz.Lime).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Green]: { textColor: aF(aU(Nz.Green).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Emerald]: { textColor: aF(aU(Nz.Emerald).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Teal]: { textColor: aF(aU(Nz.Teal).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Cyan]: { textColor: aF(aU(Nz.Cyan).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Sky]: { textColor: aF(aU(Nz.Sky).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Blue]: { textColor: aF(aU(Nz.Blue).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Indigo]: { textColor: aF(aU(Nz.Indigo).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Violet]: { textColor: aF(aU(Nz.Violet).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Purple]: { textColor: aF(aU(Nz.Purple).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Fuchsia]: { textColor: aF(aU(Nz.Fuchsia).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Pink]: { textColor: aF(aU(Nz.Pink).text).textColor, bgColor: "", borderColor: "", ringColor: "" }, [Nz.Rose]: { textColor: aF(aU(Nz.Rose).text).textColor, bgColor: "", borderColor: "", ringColor: "" } }, light: { [Nz.Slate]: { textColor: aF(aU(Nz.Slate).text).textColor, bgColor: aF(aU(Nz.Slate).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Gray]: { textColor: aF(aU(Nz.Gray).text).textColor, bgColor: aF(aU(Nz.Gray).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Zinc]: { textColor: aF(aU(Nz.Zinc).text).textColor, bgColor: aF(aU(Nz.Zinc).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Neutral]: { textColor: aF(aU(Nz.Neutral).text).textColor, bgColor: aF(aU(Nz.Neutral).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Stone]: { textColor: aF(aU(Nz.Stone).text).textColor, bgColor: aF(aU(Nz.Stone).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Red]: { textColor: aF(aU(Nz.Red).text).textColor, bgColor: aF(aU(Nz.Red).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Orange]: { textColor: aF(aU(Nz.Orange).text).textColor, bgColor: aF(aU(Nz.Orange).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Amber]: { textColor: aF(aU(Nz.Amber).text).textColor, bgColor: aF(aU(Nz.Amber).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Yellow]: { textColor: aF(aU(Nz.Yellow).text).textColor, bgColor: aF(aU(Nz.Yellow).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Lime]: { textColor: aF(aU(Nz.Lime).text).textColor, bgColor: aF(aU(Nz.Lime).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Green]: { textColor: aF(aU(Nz.Green).text).textColor, bgColor: aF(aU(Nz.Green).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Emerald]: { textColor: aF(aU(Nz.Emerald).text).textColor, bgColor: aF(aU(Nz.Emerald).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Teal]: { textColor: aF(aU(Nz.Teal).text).textColor, bgColor: aF(aU(Nz.Teal).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Cyan]: { textColor: aF(aU(Nz.Cyan).text).textColor, bgColor: aF(aU(Nz.Cyan).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Sky]: { textColor: aF(aU(Nz.Sky).text).textColor, bgColor: aF(aU(Nz.Sky).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Blue]: { textColor: aF(aU(Nz.Blue).text).textColor, bgColor: aF(aU(Nz.Blue).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Indigo]: { textColor: aF(aU(Nz.Indigo).text).textColor, bgColor: aF(aU(Nz.Indigo).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Violet]: { textColor: aF(aU(Nz.Violet).text).textColor, bgColor: aF(aU(Nz.Violet).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Purple]: { textColor: aF(aU(Nz.Purple).text).textColor, bgColor: aF(aU(Nz.Purple).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Fuchsia]: { textColor: aF(aU(Nz.Fuchsia).text).textColor, bgColor: aF(aU(Nz.Fuchsia).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Pink]: { textColor: aF(aU(Nz.Pink).text).textColor, bgColor: aF(aU(Nz.Pink).lightBackground).bgColor, borderColor: "", ringColor: "" }, [Nz.Rose]: { textColor: aF(aU(Nz.Rose).text).textColor, bgColor: aF(aU(Nz.Rose).lightBackground).bgColor, borderColor: "", ringColor: "" } }, shadow: { [Nz.Slate]: { textColor: aF(aU(Nz.Slate).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Gray]: { textColor: aF(aU(Nz.Gray).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Zinc]: { textColor: aF(aU(Nz.Zinc).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Neutral]: { textColor: aF(aU(Nz.Neutral).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Stone]: { textColor: aF(aU(Nz.Stone).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Red]: { textColor: aF(aU(Nz.Red).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Orange]: { textColor: aF(aU(Nz.Orange).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Amber]: { textColor: aF(aU(Nz.Amber).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Yellow]: { textColor: aF(aU(Nz.Yellow).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Lime]: { textColor: aF(aU(Nz.Lime).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Green]: { textColor: aF(aU(Nz.Green).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Emerald]: { textColor: aF(aU(Nz.Emerald).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Teal]: { textColor: aF(aU(Nz.Teal).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Cyan]: { textColor: aF(aU(Nz.Cyan).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Sky]: { textColor: aF(aU(Nz.Sky).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Blue]: { textColor: aF(aU(Nz.Blue).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Indigo]: { textColor: aF(aU(Nz.Indigo).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Violet]: { textColor: aF(aU(Nz.Violet).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Purple]: { textColor: aF(aU(Nz.Purple).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Fuchsia]: { textColor: aF(aU(Nz.Fuchsia).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Pink]: { textColor: aF(aU(Nz.Pink).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" }, [Nz.Rose]: { textColor: aF(aU(Nz.Rose).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(Gz).borderColor, ringColor: "" } }, solid: { [Nz.Slate]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Slate).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Gray]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Gray).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Zinc]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Zinc).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Neutral]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Neutral).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Stone]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Stone).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Red]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Red).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Orange]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Orange).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Amber]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Amber).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Yellow]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Yellow).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Lime]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Lime).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Green]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Green).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Emerald]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Emerald).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Teal]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Teal).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Cyan]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Cyan).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Sky]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Sky).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Blue]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Blue).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Indigo]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Indigo).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Violet]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Violet).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Purple]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Purple).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Fuchsia]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Fuchsia).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Pink]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Pink).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor }, [Nz.Rose]: { textColor: aF(Wz).textColor, bgColor: aF(aU(Nz.Rose).background).bgColor, borderColor: aF(Wz).borderColor, ringColor: aF(Gz).ringColor } }, outlined: { [Nz.Slate]: { textColor: aF(aU(Nz.Slate).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Slate).border).borderColor, ringColor: aF(aU(Nz.Slate).lightRing).ringColor }, [Nz.Gray]: { textColor: aF(aU(Nz.Gray).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Gray).border).borderColor, ringColor: aF(aU(Nz.Gray).lightRing).ringColor }, [Nz.Zinc]: { textColor: aF(aU(Nz.Zinc).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Zinc).border).borderColor, ringColor: aF(aU(Nz.Zinc).lightRing).ringColor }, [Nz.Neutral]: { textColor: aF(aU(Nz.Neutral).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Neutral).border).borderColor, ringColor: aF(aU(Nz.Neutral).lightRing).ringColor }, [Nz.Stone]: { textColor: aF(aU(Nz.Stone).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Stone).border).borderColor, ringColor: aF(aU(Nz.Stone).lightRing).ringColor }, [Nz.Red]: { textColor: aF(aU(Nz.Red).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Red).border).borderColor, ringColor: aF(aU(Nz.Red).lightRing).ringColor }, [Nz.Orange]: { textColor: aF(aU(Nz.Orange).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Orange).border).borderColor, ringColor: aF(aU(Nz.Orange).lightRing).ringColor }, [Nz.Amber]: { textColor: aF(aU(Nz.Amber).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Amber).border).borderColor, ringColor: aF(aU(Nz.Amber).lightRing).ringColor }, [Nz.Yellow]: { textColor: aF(aU(Nz.Yellow).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Yellow).border).borderColor, ringColor: aF(aU(Nz.Yellow).lightRing).ringColor }, [Nz.Lime]: { textColor: aF(aU(Nz.Lime).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Lime).border).borderColor, ringColor: aF(aU(Nz.Lime).lightRing).ringColor }, [Nz.Green]: { textColor: aF(aU(Nz.Green).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Green).border).borderColor, ringColor: aF(aU(Nz.Green).lightRing).ringColor }, [Nz.Emerald]: { textColor: aF(aU(Nz.Emerald).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Emerald).border).borderColor, ringColor: aF(aU(Nz.Emerald).lightRing).ringColor }, [Nz.Teal]: { textColor: aF(aU(Nz.Teal).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Teal).border).borderColor, ringColor: aF(aU(Nz.Teal).lightRing).ringColor }, [Nz.Cyan]: { textColor: aF(aU(Nz.Cyan).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Cyan).border).borderColor, ringColor: aF(aU(Nz.Cyan).lightRing).ringColor }, [Nz.Sky]: { textColor: aF(aU(Nz.Sky).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Sky).border).borderColor, ringColor: aF(aU(Nz.Sky).lightRing).ringColor }, [Nz.Blue]: { textColor: aF(aU(Nz.Blue).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Blue).border).borderColor, ringColor: aF(aU(Nz.Blue).lightRing).ringColor }, [Nz.Indigo]: { textColor: aF(aU(Nz.Indigo).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Indigo).border).borderColor, ringColor: aF(aU(Nz.Indigo).lightRing).ringColor }, [Nz.Violet]: { textColor: aF(aU(Nz.Violet).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Violet).border).borderColor, ringColor: aF(aU(Nz.Violet).lightRing).ringColor }, [Nz.Purple]: { textColor: aF(aU(Nz.Purple).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Purple).border).borderColor, ringColor: aF(aU(Nz.Purple).lightRing).ringColor }, [Nz.Fuchsia]: { textColor: aF(aU(Nz.Fuchsia).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Fuchsia).border).borderColor, ringColor: aF(aU(Nz.Fuchsia).lightRing).ringColor }, [Nz.Pink]: { textColor: aF(aU(Nz.Pink).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Pink).border).borderColor, ringColor: aF(aU(Nz.Pink).lightRing).ringColor }, [Nz.Rose]: { textColor: aF(aU(Nz.Rose).text).textColor, bgColor: aF(Wz).bgColor, borderColor: aF(aU(Nz.Rose).border).borderColor, ringColor: aF(aU(Nz.Rose).lightRing).ringColor } } };
  var BH = ({ maxWidth: e27 = "max-w-none", spaceY: r2 = "", textAlignment: n2 = Bz, truncate: o2 = false, marginTop: i2 = "mt-0", children: a2 }) => {
    return import_react.default.createElement("div", { className: oF("tr-w-full", dF(e27), r2 ? (l2 = r2, { "space-y-0": "tr-space-y-0", "space-y-0.5": "tr-space-y-0.5", "space-y-1": "tr-space-y-1", "space-y-1.5": "tr-space-y-1.5", "space-y-2": "tr-space-y-2", "space-y-2.5": "tr-space-y-2.5", "space-y-3": "tr-space-y-3", "space-y-3.5": "tr-space-y-3.5", "space-y-4": "tr-space-y-4", "space-y-5": "tr-space-y-5", "space-y-6": "tr-space-y-6", "space-y-7": "tr-space-y-7", "space-y-8": "tr-space-y-8", "space-y-9": "tr-space-y-9", "space-y-10": "tr-space-y-10", "space-y-11": "tr-space-y-11", "space-y-12": "tr-space-y-12", "space-y-14": "tr-space-y-14", "space-y-16": "tr-space-y-16", "space-y-20": "tr-space-y-20", "space-y-24": "tr-space-y-24", "space-y-28": "tr-space-y-28", "space-y-32": "tr-space-y-32", "space-y-36": "tr-space-y-36", "space-y-40": "tr-space-y-40", "space-y-44": "tr-space-y-44", "space-y-48": "tr-space-y-48", "space-y-52": "tr-space-y-52", "space-y-56": "tr-space-y-56", "space-y-60": "tr-space-y-60", "space-y-64": "tr-space-y-64", "space-y-72": "tr-space-y-72", "space-y-80": "tr-space-y-80", "space-y-96": "tr-space-y-96", "-space-y-0.5": "-tr-space-y-0.5", "-space-y-1": "-tr-space-y-1", "-space-y-1.5": "-tr-space-y-1.5", "-space-y-2": "-tr-space-y-2", "-space-y-2.5": "-tr-space-y-2.5", "-space-y-3": "-tr-space-y-3", "-space-y-3.5": "-tr-space-y-3.5", "-space-y-4": "-tr-space-y-4", "-space-y-5": "-tr-space-y-5", "-space-y-6": "-tr-space-y-6", "-space-y-7": "-tr-space-y-7", "-space-y-8": "-tr-space-y-8", "-space-y-9": "-tr-space-y-9", "-space-y-10": "-tr-space-y-10", "-space-y-11": "-tr-space-y-11", "-space-y-12": "-tr-space-y-12", "-space-y-14": "-tr-space-y-14", "-space-y-16": "-tr-space-y-16", "-space-y-20": "-tr-space-y-20", "-space-y-24": "-tr-space-y-24", "-space-y-28": "-tr-space-y-28", "-space-y-32": "-tr-space-y-32", "-space-y-36": "-tr-space-y-36", "-space-y-40": "-tr-space-y-40", "-space-y-44": "-tr-space-y-44", "-space-y-48": "-tr-space-y-48", "-space-y-52": "-tr-space-y-52", "-space-y-56": "-tr-space-y-56", "-space-y-60": "-tr-space-y-60", "-space-y-64": "-tr-space-y-64", "-space-y-72": "-tr-space-y-72", "-space-y-80": "-tr-space-y-80", "-space-y-96": "-tr-space-y-96" }[l2] || "") : r2, cF(n2), uF(o2), o2 ? "tr-whitespace-nowrap" : "", pF(i2)) }, a2);
    var l2;
  };
  var AH = (e27) => {
    if (!e27)
      return "";
    switch (e27) {
      case Lz:
        return OF.left;
      case zz:
        return OF.top;
      case Iz:
        return OF.right;
      case Fz:
        return OF.bottom;
      default:
        return "";
    }
  };
  var NH = ({ hFull: e27 = false, maxWidth: r2 = "max-w-none", shadow: n2 = true, decoration: o2 = "", decorationColor: i2 = Nz.Blue, marginTop: a2 = "mt-0", children: l2 }) => {
    return import_react.default.createElement("div", { className: oF("tremor-base tr-relative tr-w-full tr-mx-auto tr-text-left tr-ring-1", pF(a2), (u2 = e27, true === u2 ? "tr-h-full" : ""), dF(r2), aF(Wz).bgColor, n2 ? kF : "", aF(aU(i2).border).borderColor, aF(Gz).ringColor, AH(o2), XF.paddingLeft, XF.paddingRight, XF.paddingTop, XF.paddingBottom, bF.all) }, l2);
    var u2;
  };
  var n$ = false;
  var o$ = true ? ps.oneOfType([ps.number, ps.shape({ enter: ps.number, exit: ps.number, appear: ps.number }).isRequired]) : null;
  ps.oneOfType([ps.string, ps.shape({ enter: ps.string, exit: ps.string, active: ps.string }), ps.shape({ enter: ps.string, enterDone: ps.string, enterActive: ps.string, exit: ps.string, exitDone: ps.string, exitActive: ps.string })]);
  var i$ = import_react.default.createContext(null);
  var a$ = function(e27) {
    var r2, n2;
    function o2(t2, r3) {
      var n3;
      n3 = e27.call(this, t2, r3) || this;
      var o3, i3 = r3 && !r3.isMounting ? t2.enter : t2.appear;
      return n3.appearStatus = null, t2.in ? i3 ? (o3 = "exited", n3.appearStatus = "entering") : o3 = "entered" : o3 = t2.unmountOnExit || t2.mountOnEnter ? "unmounted" : "exited", n3.state = { status: o3 }, n3.nextCallback = null, n3;
    }
    n2 = e27, (r2 = o2).prototype = Object.create(n2.prototype), r2.prototype.constructor = r2, r2.__proto__ = n2, o2.getDerivedStateFromProps = function(e28, t2) {
      return e28.in && "unmounted" === t2.status ? { status: "exited" } : null;
    };
    var i2 = o2.prototype;
    return i2.componentDidMount = function() {
      this.updateStatus(true, this.appearStatus);
    }, i2.componentDidUpdate = function(e28) {
      var t2 = null;
      if (e28 !== this.props) {
        var r3 = this.state.status;
        this.props.in ? "entering" !== r3 && "entered" !== r3 && (t2 = "entering") : "entering" !== r3 && "entered" !== r3 || (t2 = "exiting");
      }
      this.updateStatus(false, t2);
    }, i2.componentWillUnmount = function() {
      this.cancelNextCallback();
    }, i2.getTimeouts = function() {
      var e28, t2, r3, n3 = this.props.timeout;
      return e28 = t2 = r3 = n3, null != n3 && "number" != typeof n3 && (e28 = n3.exit, t2 = n3.enter, r3 = void 0 !== n3.appear ? n3.appear : t2), { exit: e28, enter: t2, appear: r3 };
    }, i2.updateStatus = function(e28, t2) {
      if (void 0 === e28 && (e28 = false), null !== t2)
        if (this.cancelNextCallback(), "entering" === t2) {
          if (this.props.unmountOnExit || this.props.mountOnEnter) {
            var r3 = this.props.nodeRef ? this.props.nodeRef.current : kx.findDOMNode(this);
            r3 && function(e29) {
              e29.scrollTop;
            }(r3);
          }
          this.performEnter(e28);
        } else
          this.performExit();
      else
        this.props.unmountOnExit && "exited" === this.state.status && this.setState({ status: "unmounted" });
    }, i2.performEnter = function(e28) {
      var t2 = this, r3 = this.props.enter, n3 = this.context ? this.context.isMounting : e28, o3 = this.props.nodeRef ? [n3] : [kx.findDOMNode(this), n3], i3 = o3[0], a2 = o3[1], l2 = this.getTimeouts(), u2 = n3 ? l2.appear : l2.enter;
      !e28 && !r3 || n$ ? this.safeSetState({ status: "entered" }, function() {
        t2.props.onEntered(i3);
      }) : (this.props.onEnter(i3, a2), this.safeSetState({ status: "entering" }, function() {
        t2.props.onEntering(i3, a2), t2.onTransitionEnd(u2, function() {
          t2.safeSetState({ status: "entered" }, function() {
            t2.props.onEntered(i3, a2);
          });
        });
      }));
    }, i2.performExit = function() {
      var e28 = this, t2 = this.props.exit, r3 = this.getTimeouts(), n3 = this.props.nodeRef ? void 0 : kx.findDOMNode(this);
      t2 && !n$ ? (this.props.onExit(n3), this.safeSetState({ status: "exiting" }, function() {
        e28.props.onExiting(n3), e28.onTransitionEnd(r3.exit, function() {
          e28.safeSetState({ status: "exited" }, function() {
            e28.props.onExited(n3);
          });
        });
      })) : this.safeSetState({ status: "exited" }, function() {
        e28.props.onExited(n3);
      });
    }, i2.cancelNextCallback = function() {
      null !== this.nextCallback && (this.nextCallback.cancel(), this.nextCallback = null);
    }, i2.safeSetState = function(e28, t2) {
      t2 = this.setNextCallback(t2), this.setState(e28, t2);
    }, i2.setNextCallback = function(e28) {
      var t2 = this, r3 = true;
      return this.nextCallback = function(n3) {
        r3 && (r3 = false, t2.nextCallback = null, e28(n3));
      }, this.nextCallback.cancel = function() {
        r3 = false;
      }, this.nextCallback;
    }, i2.onTransitionEnd = function(e28, t2) {
      this.setNextCallback(t2);
      var r3 = this.props.nodeRef ? this.props.nodeRef.current : kx.findDOMNode(this), n3 = null == e28 && !this.props.addEndListener;
      if (r3 && !n3) {
        if (this.props.addEndListener) {
          var o3 = this.props.nodeRef ? [this.nextCallback] : [r3, this.nextCallback], i3 = o3[0], a2 = o3[1];
          this.props.addEndListener(i3, a2);
        }
        null != e28 && setTimeout(this.nextCallback, e28);
      } else
        setTimeout(this.nextCallback, 0);
    }, i2.render = function() {
      var e28 = this.state.status;
      if ("unmounted" === e28)
        return null;
      var r3 = this.props, n3 = r3.children;
      r3.in, r3.mountOnEnter, r3.unmountOnExit, r3.appear, r3.enter, r3.exit, r3.timeout, r3.addEndListener, r3.onEnter, r3.onEntering, r3.onEntered, r3.onExit, r3.onExiting, r3.onExited, r3.nodeRef;
      var o3 = function(e29, t2) {
        if (null == e29)
          return {};
        var r4, n4, o4 = {}, i3 = Object.keys(e29);
        for (n4 = 0; n4 < i3.length; n4++)
          r4 = i3[n4], t2.indexOf(r4) >= 0 || (o4[r4] = e29[r4]);
        return o4;
      }(r3, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
      return import_react.default.createElement(i$.Provider, { value: null }, "function" == typeof n3 ? n3(e28, o3) : import_react.default.cloneElement(import_react.default.Children.only(n3), o3));
    }, o2;
  }(import_react.default.Component);
  function l$() {
  }
  a$.contextType = i$, a$.propTypes = true ? { nodeRef: ps.shape({ current: "undefined" == typeof Element ? ps.any : function(e27, t2, r2, n2, o2, i2) {
    var a2 = e27[t2];
    return ps.instanceOf(a2 && "ownerDocument" in a2 ? a2.ownerDocument.defaultView.Element : Element)(e27, t2, r2, n2, o2, i2);
  } }), children: ps.oneOfType([ps.func.isRequired, ps.element.isRequired]).isRequired, in: ps.bool, mountOnEnter: ps.bool, unmountOnExit: ps.bool, appear: ps.bool, enter: ps.bool, exit: ps.bool, timeout: function(e27) {
    var t2 = o$;
    e27.addEndListener || (t2 = t2.isRequired);
    for (var r2 = arguments.length, n2 = new Array(r2 > 1 ? r2 - 1 : 0), o2 = 1; o2 < r2; o2++)
      n2[o2 - 1] = arguments[o2];
    return t2.apply(void 0, [e27].concat(n2));
  }, addEndListener: ps.func, onEnter: ps.func, onEntering: ps.func, onEntered: ps.func, onExit: ps.func, onExiting: ps.func, onExited: ps.func } : {}, a$.defaultProps = { in: false, mountOnEnter: false, unmountOnExit: false, appear: false, enter: true, exit: true, onEnter: l$, onEntering: l$, onEntered: l$, onExit: l$, onExiting: l$, onExited: l$ }, a$.UNMOUNTED = "unmounted", a$.EXITED = "exited", a$.ENTERING = "entering", a$.ENTERED = "entered", a$.EXITING = "exiting";
  var s$ = { xs: { paddingLeft: $F.paddingLeft, paddingRight: $F.paddingRight, paddingTop: WF.paddingTop, paddingBottom: WF.paddingBottom, fontSize: QF }, sm: { paddingLeft: GF.paddingLeft, paddingRight: GF.paddingRight, paddingTop: HF.paddingTop, paddingBottom: HF.paddingBottom, fontSize: KF }, md: { paddingLeft: GF.paddingLeft, paddingRight: GF.paddingRight, paddingTop: HF.paddingTop, paddingBottom: HF.paddingBottom, fontSize: ZF }, lg: { paddingLeft: GF.paddingLeft, paddingRight: GF.paddingRight, paddingTop: $F.paddingTop, paddingBottom: $F.paddingBottom, fontSize: JF }, xl: { paddingLeft: GF.paddingLeft, paddingRight: GF.paddingRight, paddingTop: qF.paddingTop, paddingBottom: qF.paddingBottom, fontSize: eU } };
  var c$ = { xs: { height: NF.height, width: NF.width }, sm: { height: jF.height, width: jF.width }, md: { height: jF.height, width: jF.width }, lg: { height: DF.height, width: DF.width }, xl: { height: DF.height, width: DF.width } };
  var d$ = { [Nz.Slate]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Slate].background).bgColor, hoverBgColor: aF(nF[Nz.Slate].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Slate].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Slate].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Slate].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Slate].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Slate].border).borderColor, hoverBorderColor: aF(nF[Nz.Slate].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Slate].ring).focusRingColor } }, [Nz.Gray]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Gray].background).bgColor, hoverBgColor: aF(nF[Nz.Gray].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Gray].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Gray].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Gray].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Gray].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Gray].border).borderColor, hoverBorderColor: aF(nF[Nz.Gray].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Gray].ring).focusRingColor } }, [Nz.Zinc]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Zinc].background).bgColor, hoverBgColor: aF(nF[Nz.Zinc].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Zinc].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Zinc].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Zinc].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Zinc].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Zinc].border).borderColor, hoverBorderColor: aF(nF[Nz.Zinc].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Zinc].ring).focusRingColor } }, [Nz.Neutral]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Neutral].background).bgColor, hoverBgColor: aF(nF[Nz.Neutral].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Neutral].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Neutral].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Neutral].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Neutral].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Neutral].border).borderColor, hoverBorderColor: aF(nF[Nz.Neutral].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Neutral].ring).focusRingColor } }, [Nz.Stone]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Stone].background).bgColor, hoverBgColor: aF(nF[Nz.Stone].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Stone].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Stone].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Stone].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Stone].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Stone].border).borderColor, hoverBorderColor: aF(nF[Nz.Stone].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Stone].ring).focusRingColor } }, [Nz.Red]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Red].background).bgColor, hoverBgColor: aF(nF[Nz.Red].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Red].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Red].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Red].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Red].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Red].border).borderColor, hoverBorderColor: aF(nF[Nz.Red].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Red].ring).focusRingColor } }, [Nz.Orange]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Orange].background).bgColor, hoverBgColor: aF(nF[Nz.Orange].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Orange].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Orange].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Orange].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Orange].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Orange].border).borderColor, hoverBorderColor: aF(nF[Nz.Orange].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Orange].ring).focusRingColor } }, [Nz.Amber]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Amber].background).bgColor, hoverBgColor: aF(nF[Nz.Amber].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Amber].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Amber].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Amber].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Amber].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Amber].border).borderColor, hoverBorderColor: aF(nF[Nz.Amber].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Amber].ring).focusRingColor } }, [Nz.Yellow]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Yellow].background).bgColor, hoverBgColor: aF(nF[Nz.Yellow].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Yellow].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Yellow].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Yellow].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Yellow].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Yellow].border).borderColor, hoverBorderColor: aF(nF[Nz.Yellow].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Yellow].ring).focusRingColor } }, [Nz.Lime]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Lime].background).bgColor, hoverBgColor: aF(nF[Nz.Lime].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Lime].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Lime].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Lime].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Lime].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Lime].border).borderColor, hoverBorderColor: aF(nF[Nz.Lime].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Lime].ring).focusRingColor } }, [Nz.Green]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Green].background).bgColor, hoverBgColor: aF(nF[Nz.Green].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Green].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Green].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Green].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Green].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Green].border).borderColor, hoverBorderColor: aF(nF[Nz.Green].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Green].ring).focusRingColor } }, [Nz.Emerald]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Emerald].background).bgColor, hoverBgColor: aF(nF[Nz.Emerald].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Emerald].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Emerald].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Emerald].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Emerald].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Emerald].border).borderColor, hoverBorderColor: aF(nF[Nz.Emerald].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Emerald].ring).focusRingColor } }, [Nz.Teal]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Teal].background).bgColor, hoverBgColor: aF(nF[Nz.Teal].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Teal].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Teal].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Teal].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Teal].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Teal].border).borderColor, hoverBorderColor: aF(nF[Nz.Teal].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Teal].ring).focusRingColor } }, [Nz.Cyan]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Cyan].background).bgColor, hoverBgColor: aF(nF[Nz.Cyan].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Cyan].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Cyan].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Cyan].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Cyan].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Cyan].border).borderColor, hoverBorderColor: aF(nF[Nz.Cyan].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Cyan].ring).focusRingColor } }, [Nz.Sky]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Sky].background).bgColor, hoverBgColor: aF(nF[Nz.Sky].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Sky].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Sky].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Sky].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Sky].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Sky].border).borderColor, hoverBorderColor: aF(nF[Nz.Sky].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Sky].ring).focusRingColor } }, [Nz.Blue]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Blue].background).bgColor, hoverBgColor: aF(nF[Nz.Blue].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Blue].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Blue].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Blue].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Blue].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Blue].border).borderColor, hoverBorderColor: aF(nF[Nz.Blue].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Blue].ring).focusRingColor } }, [Nz.Indigo]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Indigo].background).bgColor, hoverBgColor: aF(nF[Nz.Indigo].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Indigo].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Blue].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Indigo].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Indigo].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Indigo].border).borderColor, hoverBorderColor: aF(nF[Nz.Indigo].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Blue].ring).focusRingColor } }, [Nz.Violet]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Violet].background).bgColor, hoverBgColor: aF(nF[Nz.Violet].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Violet].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Violet].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Violet].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Violet].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Violet].border).borderColor, hoverBorderColor: aF(nF[Nz.Violet].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Violet].ring).focusRingColor } }, [Nz.Purple]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Purple].background).bgColor, hoverBgColor: aF(nF[Nz.Purple].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Purple].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Purple].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Purple].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Purple].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Purple].border).borderColor, hoverBorderColor: aF(nF[Nz.Purple].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Purple].ring).focusRingColor } }, [Nz.Fuchsia]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Fuchsia].background).bgColor, hoverBgColor: aF(nF[Nz.Fuchsia].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Fuchsia].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Fuchsia].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Fuchsia].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Fuchsia].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Fuchsia].border).borderColor, hoverBorderColor: aF(nF[Nz.Fuchsia].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Fuchsia].ring).focusRingColor } }, [Nz.Pink]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Pink].background).bgColor, hoverBgColor: aF(nF[Nz.Pink].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Pink].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Pink].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Pink].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Pink].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Pink].border).borderColor, hoverBorderColor: aF(nF[Nz.Pink].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Pink].ring).focusRingColor } }, [Nz.Rose]: { [Dz.Primary]: { textColor: aF(Wz).textColor, bgColor: aF(nF[Nz.Rose].background).bgColor, hoverBgColor: aF(nF[Nz.Rose].darkBackground).hoverBgColor, borderColor: aF(Vz).borderColor, hoverBorderColor: aF(nF[Nz.Rose].darkBackground).hoverBorderColor, focusRingColor: aF(nF[Nz.Rose].ring).focusRingColor }, [Dz.Secondary]: { textColor: aF(nF[Nz.Rose].text).textColor, bgColor: aF(Vz).bgColor, hoverBgColor: aF(nF[Nz.Rose].lightBackground).hoverBgColor, borderColor: aF(nF[Nz.Rose].border).borderColor, hoverBorderColor: aF(nF[Nz.Rose].darkBorder).borderColor, focusRingColor: aF(nF[Nz.Rose].ring).focusRingColor } } };
  var g$ = { xs: { height: NF.height, width: NF.width }, sm: { height: jF.height, width: jF.width }, md: { height: jF.height, width: jF.width }, lg: { height: DF.height, width: DF.width }, xl: { height: DF.height, width: DF.width } };
  function j$(e27) {
    return function() {
      var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r2 = t2.width ? String(t2.width) : e27.defaultWidth, n2 = e27.formats[r2] || e27.formats[e27.defaultWidth];
      return n2;
    };
  }
  var D$ = { date: j$({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: j$({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: j$({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
  function z$(e27) {
    return function(t2, r2) {
      var n2, o2 = r2 || {};
      if ("formatting" === (o2.context ? String(o2.context) : "standalone") && e27.formattingValues) {
        var i2 = e27.defaultFormattingWidth || e27.defaultWidth, a2 = o2.width ? String(o2.width) : i2;
        n2 = e27.formattingValues[a2] || e27.formattingValues[i2];
      } else {
        var l2 = e27.defaultWidth, u2 = o2.width ? String(o2.width) : e27.defaultWidth;
        n2 = e27.values[u2] || e27.values[l2];
      }
      return n2[e27.argumentCallback ? e27.argumentCallback(t2) : t2];
    };
  }
  var F$ = { ordinalNumber: function(e27, t2) {
    var r2 = Number(e27), n2 = r2 % 100;
    if (n2 > 20 || n2 < 10)
      switch (n2 % 10) {
        case 1:
          return r2 + "st";
        case 2:
          return r2 + "nd";
        case 3:
          return r2 + "rd";
      }
    return r2 + "th";
  }, era: z$({ values: { narrow: ["B", "A"], abbreviated: ["BC", "AD"], wide: ["Before Christ", "Anno Domini"] }, defaultWidth: "wide" }), quarter: z$({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"] }, defaultWidth: "wide", argumentCallback: function(e27) {
    return e27 - 1;
  } }), month: z$({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] }, defaultWidth: "wide" }), day: z$({ values: { narrow: ["S", "M", "T", "W", "T", "F", "S"], short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, defaultWidth: "wide" }), dayPeriod: z$({ values: { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" } }, defaultFormattingWidth: "wide" }) };
  function V$(e27) {
    return function(t2) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n2 = r2.width, o2 = n2 && e27.matchPatterns[n2] || e27.matchPatterns[e27.defaultMatchWidth], i2 = t2.match(o2);
      if (!i2)
        return null;
      var a2, l2 = i2[0], u2 = n2 && e27.parsePatterns[n2] || e27.parsePatterns[e27.defaultParseWidth], s2 = Array.isArray(u2) ? H$(u2, function(e28) {
        return e28.test(l2);
      }) : W$(u2, function(e28) {
        return e28.test(l2);
      });
      a2 = e27.valueCallback ? e27.valueCallback(s2) : s2, a2 = r2.valueCallback ? r2.valueCallback(a2) : a2;
      var c2 = t2.slice(l2.length);
      return { value: a2, rest: c2 };
    };
  }
  function W$(e27, t2) {
    for (var r2 in e27)
      if (e27.hasOwnProperty(r2) && t2(e27[r2]))
        return r2;
  }
  function H$(e27, t2) {
    for (var r2 = 0; r2 < e27.length; r2++)
      if (t2(e27[r2]))
        return r2;
  }
  var $$;
  var q$ = { ordinalNumber: ($$ = { matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: function(e27) {
    return parseInt(e27, 10);
  } }, function(e27) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r2 = e27.match($$.matchPattern);
    if (!r2)
      return null;
    var n2 = r2[0], o2 = e27.match($$.parsePattern);
    if (!o2)
      return null;
    var i2 = $$.valueCallback ? $$.valueCallback(o2[0]) : o2[0];
    i2 = t2.valueCallback ? t2.valueCallback(i2) : i2;
    var a2 = e27.slice(n2.length);
    return { value: i2, rest: a2 };
  }), era: V$({ matchPatterns: { narrow: /^(b|a)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(before christ|before common era|anno domini|common era)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b/i, /^(a|c)/i] }, defaultParseWidth: "any" }), quarter: V$({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](th|st|nd|rd)? quarter/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: function(e27) {
    return e27 + 1;
  } }), month: V$({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i, wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: V$({ matchPatterns: { narrow: /^[smtwf]/i, short: /^(su|mo|tu|we|th|fr|sa)/i, abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i, wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: V$({ matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } }, defaultParseWidth: "any" }) };
  var ZY = ({ color: e27 = Nz.Gray, truncate: r2 = false, marginTop: n2 = "mt-0", children: o2 }) => import_react.default.createElement("p", { className: oF("text-elem tremor-base", r2 ? "tr-whitespace-nowrap" : "tr-shrink-0", uF(r2), pF(n2), aF(aU(e27).darkText).textColor, JF, nU) }, o2);
  var rG = { [Az.Increase]: { bgColor: aF(nF[Nz.Emerald].background).bgColor }, [Az.ModerateIncrease]: { bgColor: aF(nF[Nz.Emerald].background).bgColor }, [Az.Decrease]: { bgColor: aF(nF[Nz.Rose].background).bgColor }, [Az.ModerateDecrease]: { bgColor: aF(nF[Nz.Rose].background).bgColor }, [Az.Unchanged]: { bgColor: aF(nF[Nz.Orange].background).bgColor } };

  // src/client/App.tsx
  var import_react_error_boundary = __toESM(require_react_error_boundary_umd());

  // src/client/components/Loader.tsx
  var import_react2 = __toESM(require_react());
  var LoadingIcon = () => /* @__PURE__ */ import_react2.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "currentColor", className: "w-6 h-6 rotating" }, /* @__PURE__ */ import_react2.default.createElement("path", { fillRule: "evenodd", d: "M4.755 10.059a7.5 7.5 0 0112.548-3.364l1.903 1.903h-3.183a.75.75 0 100 1.5h4.992a.75.75 0 00.75-.75V4.356a.75.75 0 00-1.5 0v3.18l-1.9-1.9A9 9 0 003.306 9.67a.75.75 0 101.45.388zm15.408 3.352a.75.75 0 00-.919.53 7.5 7.5 0 01-12.548 3.364l-1.902-1.903h3.183a.75.75 0 000-1.5H2.984a.75.75 0 00-.75.75v4.992a.75.75 0 001.5 0v-3.18l1.9 1.9a9 9 0 0015.059-4.035.75.75 0 00-.53-.918z", clipRule: "evenodd" }));
  var Loader = ({ enabled }) => /* @__PURE__ */ import_react2.default.createElement("div", { id: "loader", className: enabled ? "loading" : "" }, "loading data", /* @__PURE__ */ import_react2.default.createElement(LoadingIcon, null));

  // src/client/pages/IndexPage.tsx
  var import_react3 = __toESM(require_react());
  var IndexPage = () => /* @__PURE__ */ import_react3.default.createElement(BH, null, /* @__PURE__ */ import_react3.default.createElement(ZY, null, "Index Page"));

  // src/client/components/ErrorHandler.tsx
  var import_react5 = __toESM(require_react());
  var ErrorHandler = ({ error, resetErrorBoundary }) => /* @__PURE__ */ import_react5.default.createElement(NH, null, /* @__PURE__ */ import_react5.default.createElement(ZY, null, /* @__PURE__ */ import_react5.default.createElement("b", null, "A problem occurred:"), " ", error.message));

  // src/client/App.tsx
  var App = () => /* @__PURE__ */ import_react7.default.createElement(NH, null, /* @__PURE__ */ import_react7.default.createElement(import_react_error_boundary.ErrorBoundary, { FallbackComponent: ErrorHandler }, /* @__PURE__ */ import_react7.default.createElement(ZY, null, "Boilerplate Project new edit"), /* @__PURE__ */ import_react7.default.createElement(import_react7.Suspense, { fallback: /* @__PURE__ */ import_react7.default.createElement(Loader, { enabled: true }) }, /* @__PURE__ */ import_react7.default.createElement(IndexPage, null))));

  // src/client/index.tsx
  import_react_dom.default.render(/* @__PURE__ */ import_react9.default.createElement(App, null), document.getElementById("root"));
})();
